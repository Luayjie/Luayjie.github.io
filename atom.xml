<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>风筝上的猫</title>
  
  
  <link href="https://lukme.top/atom.xml" rel="self"/>
  
  <link href="https://lukme.top/"/>
  <updated>2024-10-15T11:37:58.849Z</updated>
  <id>https://lukme.top/</id>
  
  <author>
    <name>Luay🥝</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>搭建个人云盘</title>
    <link href="https://lukme.top/posts/aca79867.html"/>
    <id>https://lukme.top/posts/aca79867.html</id>
    <published>2024-10-15T11:30:07.000Z</published>
    <updated>2024-10-15T11:37:58.849Z</updated>
    
    <content type="html"><![CDATA[<h2 id="系统介绍">系统介绍</h2><p>ownCloud是一个基于云计算的开源文件共享和协作平台，它允许用户在多个设备上同步、共享和协作文件。</p><p><strong>主要特点</strong></p><ul><li>用户可以将ownCloud私有云盘与其他设备同步，随时随地访问和管理文件。</li><li>支持跨平台访问，包括Windows、Mac、Android、iOS、Linux等。</li><li>提供公共链接分享功能，可以设置密码和过期日期，确保文件分享的安全性。</li><li>团队成员可以在同一个ownCloud私有云盘中共享和协作文件，提高团队效率。</li><li>支持实时协作，如同时编辑文档、创建演示文稿等。</li><li>ownCloud可以作为一个备份解决方案，将用户的重要数据备份到私有云盘中。</li><li>提供版本控制功能，可以恢复之前的文件版本，防止数据丢失。</li><li>ownCloud可以与多种应用程序集成，如OnlyOffice、Microsoft 365、Collabora Online等，满足用户的个性化需求。</li><li>支持HTTPS和SSL加密，确保数据在传输过程中的安全性。</li><li>提供多因素认证、文件生命周期管理等安全功能。</li></ul><p><strong>使用场景</strong></p><ul><li>用于个人文件同步、备份和分享。跨平台访问，方便在不同设备之间切换。</li><li>用于团队协作、文件共享和版本控制。提高团队效率，降低IT成本。</li><li>用于学生作业提交、教师资源共享等。提供安全、可靠的文件存储和分享环境</li></ul><p><strong>技术架构</strong></p><p>ownCloud采用三层架构，将存储、后端和前端组件分离，通过安全、明确的API进行通信。这种架构使得ownCloud具有高可扩展性和灵活性。</p><p>如需了解更多信息，可以访问其官方网站或查阅相关的技术文档。</p><blockquote><p>官方网站</p><p><a href="https://owncloud.com/">https://owncloud.com/</a></p></blockquote><blockquote><p>Docker镜像</p><p><a href="https://hub.docker.com/_/owncloud">https://hub.docker.com/_/owncloud</a></p></blockquote><blockquote><p>GitHub地址</p><p><a href="https://github.com/owncloud/core">https://github.com/owncloud/core</a></p></blockquote><h2 id="安装教程">安装教程</h2><p>Docker部署操作步骤：安装Docker、拉取镜像、启动容器。本篇基于Centos7系统操作安装</p><h3 id="安装docker">安装docker</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1.添加官方docker源</span></span><br><span class="line">[root@docker01 ~]# vim /etc/yum.repos.d/docker-ce.repo </span><br><span class="line">[docker-ce-stable]</span><br><span class="line">name=Docker CE Stable - <span class="variable">$basearch</span></span><br><span class="line">baseurl=https://download.docker.com/linux/centos/<span class="variable">$releasever</span>/<span class="variable">$basearch</span>/stable</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=https://download.docker.com/linux/centos/gpg</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.替换华为源（docker官方众所周原因不能访问以及下载慢，这里使用华为镜像源）</span></span><br><span class="line"><span class="built_in">sudo</span> sed -i <span class="string">&#x27;s+download.docker.com+mirrors.huaweicloud.com/docker-ce+&#x27;</span> /etc/yum.repos.d/docker-ce.repo</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.安装docker</span></span><br><span class="line">[root@docker01 ~]# yum install -y docker-ce docker-ce-cli containerd.io</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#4.更改镜像加速（如果失效，也可往上找其他加速地址）</span></span><br><span class="line">[root@docker01 ~]# <span class="built_in">tee</span> /etc/docker/daemon.json &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;dns&quot;</span>: [<span class="string">&quot;8.8.8.8&quot;</span>, <span class="string">&quot;8.8.4.4&quot;</span>],</span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;https://docker.m.daocloud.io&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://dockerproxy.com&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://docker.mirrors.ustc.edu.cn&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://docker.nju.edu.cn&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://registry.docker-cn.com&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://docker.mirrors.ustc.edu.cn&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://hub-mirror.c.163.com&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://mirror.baidubce.com&quot;</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">[root@docker01 ~]# systemctl daemon-reload</span><br><span class="line">[root@docker01 ~]# systemctl restart docker</span><br></pre></td></tr></table></figure><h3 id="拉取镜像">拉取镜像</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 拉取数据库镜像</span></span><br><span class="line">[root@docker01 ~]# docker pull mysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拉取owncloud镜像</span></span><br><span class="line">[root@docker01 ~]# docker pull owncloud</span><br></pre></td></tr></table></figure><h3 id="启动容器">启动容器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.创建mysql服务（这里的数据库密码也是你访问云盘的密码）</span></span><br><span class="line">[root@docker01 ~]# docker run --name db --<span class="built_in">env</span> MYSQL_ROOT_PASSWORD=luay123 -d --restart=always mysql</span><br><span class="line"></span><br><span class="line">-name  db         给容器起个名字，可自定义</span><br><span class="line">--restart=always  docker每次重启都会启动这个容器</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.创建一个软件目录，方便管理owncloud的数据，包括但不限于你上传的图片，文件等</span></span><br><span class="line">[root@docker01 ~]# <span class="built_in">mkdir</span> /app/owncloud/ -p</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 创建owncloud服务</span></span><br><span class="line"><span class="comment"># --link mydb:mydb表示连接的另外一个容器mydb</span></span><br><span class="line">[root@docker01 ~]# docker run --name mycloud -p 8081:80 --<span class="built_in">link</span> mydb:mydb -d -v /app/owncloud/:/var/www/html --restart=always owncloud</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.查看运行状态  （是否都是up状态，不要有端口冲突）</span></span><br><span class="line">[root@web01 ~]# docker ps -a </span><br><span class="line">CONTAINER ID   IMAGE         CREATED          STATUS          PORTS                                   NAMES</span><br><span class="line">273ee893d887   owncloud    6 seconds ago    Up 4 seconds    0.0.0.0:8081-&gt;80/tcp, :::8081-&gt;80/tcp   mycloud</span><br><span class="line">a614a95ec067   mysql       33 minutes ago   Up 33 minutes   3306/tcp, 33060/tcp                     mydb</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.浏览器访问   你的ip:8081   例如我的ip是10.0.0.7     那就访问10.0.0.7:8081    </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#创建管理员账号</span></span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241015190649471.png" alt="image-20241015190649471"></p><p><strong>使用创建的管理员账号登录</strong></p><p><img src="https://cos.lukme.top/Pic/image-20241015191024034.png" alt="image-20241015191024034"></p><p><img src="https://cos.lukme.top/Pic/image-20241015191332027.png" alt="image-20241015191332027"></p><h3 id="管理文件">管理文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">还记得我们创建的数据文件目录吗？  看看我们上传的图片是不是就在这😎</span><br><span class="line"></span><br><span class="line">[root@web01 ~]# ll /app/owncloud/data/admin/files/</span><br><span class="line">-rw-r--r-- 1 33 tape  529735 May  6 14:09 8CE7E8A4D305671B267848D4E720CAE3.jpg</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">如何搭建一个属于自己的云盘呢，这里带你使用docker来搭建属于自己的云盘吧。</summary>
    
    
    
    <category term="爱调研" scheme="https://lukme.top/categories/%E7%88%B1%E8%B0%83%E7%A0%94/"/>
    
    
    <category term="个人云盘" scheme="https://lukme.top/tags/%E4%B8%AA%E4%BA%BA%E4%BA%91%E7%9B%98/"/>
    
  </entry>
  
  <entry>
    <title>zabbix微信告警</title>
    <link href="https://lukme.top/posts/96fcc157.html"/>
    <id>https://lukme.top/posts/96fcc157.html</id>
    <published>2024-10-06T13:55:29.000Z</published>
    <updated>2024-10-06T14:17:32.936Z</updated>
    
    <content type="html"><![CDATA[<p>官方文档：<a href="https://developer.work.weixin.qq.com/document/path/99110">https://developer.work.weixin.qq.com/document/path/99110</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">在终端某个群组添加机器人之后，创建者可以在机器人详情页看到该机器人特有的webhookurl。开发者可以按以下说明向这个地址发起HTTP POST 请求，即可实现给该群组发送消息</span><br><span class="line"><span class="comment">#假设webhook是   https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=693a91f6-7xxx-4bc4-97a0-0ec2sifa5aaa</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#使用curl命令发消息</span></span><br><span class="line">curl <span class="string">&#x27;https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=693axxx6-7aoc-4bc4-97a0-0ec2sifa5aaa&#x27;</span> \</span><br><span class="line">   -H <span class="string">&#x27;Content-Type: application/json&#x27;</span> \</span><br><span class="line">   -d <span class="string">&#x27;</span></span><br><span class="line"><span class="string">   &#123;</span></span><br><span class="line"><span class="string">    &quot;msgtype&quot;: &quot;text&quot;,</span></span><br><span class="line"><span class="string">    &quot;text&quot;: &#123;</span></span><br><span class="line"><span class="string">        &quot;content&quot;: &quot;hello world&quot;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">   &#125;&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>文本类型</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;msgtype&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;content&quot;</span><span class="punctuation">:</span> <span class="string">&quot;广州今日天气：29度，大部分多云，降雨概率：60%&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;mentioned_list&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">&quot;wangqing&quot;</span><span class="punctuation">,</span><span class="string">&quot;@all&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;mentioned_mobile_list&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">&quot;13800001111&quot;</span><span class="punctuation">,</span><span class="string">&quot;@all&quot;</span><span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>是否必填</th><th>说明</th></tr></thead><tbody><tr><td>msgtype</td><td>是</td><td>消息类型，此时固定为text</td></tr><tr><td>content</td><td>是</td><td>文本内容，最长不超过2048个字节，必须是utf8编码</td></tr><tr><td>mentioned_list</td><td>否</td><td>userid的列表，提醒群中的指定成员(@某个成员)，@all表示提醒所有人，如果开发者获取不到userid，可以使用mentioned_mobile_list</td></tr><tr><td>mentioned_mobile_list</td><td>否</td><td>手机号列表，提醒手机号对应的群成员(@某个成员)，@all表示提醒所有人</td></tr></tbody></table><h3 id="使用python调用接口">使用python调用接口</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.安装python环境</span></span><br><span class="line">[root@zabbix5-server alertscripts]# yum install -y python36-devel</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.安装Python的requests模块</span></span><br><span class="line">[root@zabbix5-server alertscripts]# pip3 install requests -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.编写python脚本</span></span><br><span class="line">[root@web01 ~]# vim wechat.py</span><br><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"><span class="comment">#-*- coding: utf-8 -*-</span></span><br><span class="line">import requests</span><br><span class="line">import json</span><br><span class="line">import sys</span><br><span class="line">import os</span><br><span class="line">headers = &#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json;charset=utf-8&#x27;</span>&#125;</span><br><span class="line">api_url = <span class="string">&quot;webhook地址&quot;</span></span><br><span class="line">def msg(text):</span><br><span class="line">json_text= &#123;</span><br><span class="line"><span class="string">&quot;msgtype&quot;</span>: <span class="string">&quot;text&quot;</span>,</span><br><span class="line"><span class="string">&quot;text&quot;</span>: &#123;</span><br><span class="line"><span class="string">&quot;content&quot;</span>: text</span><br><span class="line">&#125;,</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print</span>(requests.post(api_url,json.dumps(json_text),headers=headers).content)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">text = sys.argv[1]</span><br><span class="line">msg(text)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.将脚本放在/usr/lib/zabbix/alertscripts</span></span><br><span class="line">[root@zabbix5-server ~]# vim /usr/lib/zabbix/alertscripts/wechat.py</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.授权执行权限</span></span><br><span class="line">[root@zabbix5-server ~]# <span class="built_in">chmod</span> +x /usr/lib/zabbix/alertscripts/wechat.py</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>添加报警媒介</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#web端配置</span></span><br><span class="line">管理&gt;报警媒介类型&gt;创建媒体类型</span><br><span class="line"></span><br><span class="line">脚本参数：&#123;ALERT.MESSAGE&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/QQ_1722843581583.png" alt="QQ_1722843581583"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722843667085.png" alt="QQ_1722843667085"></p><p><strong>添加动作</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1722843783104.png" alt="QQ_1722843783104"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722843908351.png" alt="QQ_1722843908351"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722844043228.png" alt="QQ_1722844043228"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722844217316.png" alt="QQ_1722844217316"></p><p><strong>添加收件人</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1722844455876.png" alt="QQ_1722844455876"></p><h3 id="使用shell脚本调用接口">使用shell脚本调用接口</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.编写shell脚本在指定目录下</span></span><br><span class="line">[root@zabbix5-server alertscripts]# vim /usr/lib/zabbix/alertscripts/wechat.sh</span><br><span class="line">[root@zabbix5-server alertscripts]# <span class="built_in">cat</span> wechat.sh</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">web_hook=<span class="string">&quot;https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=96462ac7-122d-4f51-946e-694a4c11d2ed&quot;</span></span><br><span class="line">headers=<span class="string">&quot;Content-Type: application/json&quot;</span></span><br><span class="line">json_file=<span class="string">&quot;/usr/lib/zabbix/alertscripts/msg.json&quot;</span></span><br><span class="line">/bin/cat &gt; <span class="variable">$&#123;json_file&#125;</span> &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">&quot;msgtype&quot;: &quot;text&quot;,</span></span><br><span class="line"><span class="string">&quot;text&quot;: &#123;</span></span><br><span class="line"><span class="string">&quot;content&quot;: &quot;$1&quot;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">/usr/bin/curl <span class="string">&quot;<span class="variable">$&#123;web_hook&#125;</span>&quot;</span> \</span><br><span class="line">-H <span class="string">&quot;<span class="variable">$&#123;headers&#125;</span>&quot;</span> \</span><br><span class="line">-d <span class="string">&quot;<span class="subst">$(cat $&#123;json_file&#125;)</span>&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#2.创建一个json文件</span></span><br><span class="line">[root@zabbix5 ~]#vim /usr/lib/zabbix/alertscripts/msg.json</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;msgtype&quot;</span>: <span class="string">&quot;text&quot;</span>,</span><br><span class="line"><span class="string">&quot;text&quot;</span>: &#123;</span><br><span class="line"><span class="string">&quot;content&quot;</span>: <span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.授权执行权限</span></span><br><span class="line"><span class="built_in">chmod</span> +x /usr/lib/zabbix/alertscripts/wechat.sh</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.更改属主属组（zabbix启动用户是zabbix，不改则没有权限调用）</span></span><br><span class="line"><span class="built_in">chown</span> zabbix.zabbix /usr/lib/zabbix/alertscripts/wechat.sh</span><br><span class="line"><span class="built_in">chown</span> zabbix.zabbix /usr/lib/zabbix/alertscripts/msg.json</span><br></pre></td></tr></table></figure><p><strong>web界面添加报警类型</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">管理&gt;报警媒介类型&gt;创建媒介类型</span><br><span class="line"></span><br><span class="line">脚本参数：&#123;ALERT.MESSAGE&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/QQ_1722845658579.png" alt="QQ_1722845658579"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722845826346.png" alt="QQ_1722845826346"></p><p><strong>添加动作</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">配置&gt;动作&gt;创建动作</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/QQ_1722845872056.png" alt="QQ_1722845872056"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722846012723.png" alt="QQ_1722846012723"></p><p><strong>添加保存</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1722846086534.png" alt="QQ_1722846086534"></p><p><strong>添加接收人</strong></p><p><code>添加完记得点更新</code></p><p><img src="https://cos.lukme.top/Pic/QQ_1722846168458.png" alt="QQ_1722846168458"></p>]]></content>
    
    
    <summary type="html">教你实现zabbix监控机器，微信机器人告警通知</summary>
    
    
    
    <category term="监控" scheme="https://lukme.top/categories/%E7%9B%91%E6%8E%A7/"/>
    
    <category term="zabbix" scheme="https://lukme.top/categories/%E7%9B%91%E6%8E%A7/zabbix/"/>
    
    
    <category term="zabbix" scheme="https://lukme.top/tags/zabbix/"/>
    
  </entry>
  
  <entry>
    <title>filebeat模块化分析日志</title>
    <link href="https://lukme.top/posts/907ae385.html"/>
    <id>https://lukme.top/posts/907ae385.html</id>
    <published>2024-10-04T17:19:53.000Z</published>
    <updated>2024-10-04T17:22:33.062Z</updated>
    
    <content type="html"><![CDATA[<h2 id="filebeat采集docker日志">filebeat采集docker日志</h2><p><strong>1.运行一个nginx的docker容器</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:2 ~]# docker run --name nginx -d -p 88:80 nginx:alpine</span><br><span class="line"></span><br><span class="line"><span class="comment">#注：docker的安装不再赘述</span></span><br></pre></td></tr></table></figure><p><strong>2.访问测试</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:2 ~]# curl 10.0.0.211:88</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看是否返回nginx界面，注意端口是否有冲突</span></span><br></pre></td></tr></table></figure><p><strong>3.编写filebeat实例</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:0 ~]# <span class="built_in">cat</span> /etc/filebeat/08-docker-log.yaml </span><br><span class="line">filebeat.inputs:</span><br><span class="line">- <span class="built_in">type</span>: docker</span><br><span class="line">  tags: <span class="string">&#x27;docker&#x27;</span></span><br><span class="line">  <span class="comment">#下面写容器的id号，写*代表收集所有容器日志</span></span><br><span class="line">  containers.ids:   </span><br><span class="line">  - <span class="string">&quot;*&quot;</span></span><br><span class="line">output.elasticsearch:</span><br><span class="line">  hosts: [<span class="string">&quot;http://10.0.0.211:9200&quot;</span>,<span class="string">&quot;http://10.0.0.212:9200&quot;</span>,<span class="string">&quot;http://10.0.0.213:9200&quot;</span>]</span><br><span class="line">  indices:</span><br><span class="line">    - index: <span class="string">&quot;filebeat-docker-%&#123;+yyyy.MM.dd&#125;&quot;</span></span><br><span class="line">      when.contains:</span><br><span class="line">        tags: <span class="string">&quot;docker&quot;</span></span><br><span class="line"></span><br><span class="line">setup.ilm.enabled: <span class="literal">false</span></span><br><span class="line">setup.template.name: <span class="string">&quot;filebeat&quot;</span></span><br><span class="line">setup.template.pattern: <span class="string">&quot;filebeat*&quot;</span></span><br><span class="line">setup.template.overwrite: <span class="literal">false</span></span><br><span class="line">setup.template.settings:</span><br><span class="line">  index.number_of_shards: 5</span><br><span class="line">  index.number_of_replicas: 0</span><br><span class="line">  </span><br><span class="line"><span class="comment">#启动filebeat实例</span></span><br><span class="line">[root@elk01:2 ~]# filebeat -e -c /etc/filebeat/08-docker-log.yaml</span><br></pre></td></tr></table></figure><p><strong>3.访问nginx使之产生日志</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:2 ~]# curl 10.0.0.211:88</span><br><span class="line"><span class="comment">#docker已经映射本地88端口</span></span><br></pre></td></tr></table></figure><h2 id="filebeat模块">filebeat模块</h2><p>模块是filebeat内置的一些中间件日志监控方案，比如常见的nginx，tomcat，mysql，zookeeper等日志监控。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">filebeat内置模块在 /etc/filebeat/modules.d/下。</span><br><span class="line">被禁用的模块后缀带.disabled</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看模块列表</span></span><br><span class="line">[root@elk01:2 ~]#  filebeat modules list</span><br></pre></td></tr></table></figure><p><strong>启禁用模块</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:2 ~]# filebeat modules <span class="built_in">enable</span> nginx tomcat</span><br><span class="line"></span><br><span class="line">[root@elk01:2 ~]# filebeat modules <span class="built_in">disable</span> tomcat</span><br></pre></td></tr></table></figure><h2 id="模块分析nginx访问日志">模块分析nginx访问日志</h2><h3 id="前提准备">前提准备</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1.防止索引冲突，删除所有索引和索引模式</span><br><span class="line">2.还原nginx日志格式（如果之前你做过nginx输出格式为json格式的话就将nginx配置文件还原为原格式）</span><br><span class="line">3.检查nginx是否启用，配置文件是否OK（nginx -t），启用nginx模块（filebeat modules <span class="built_in">enable</span> nginx）</span><br><span class="line">4.如果你的nginx日志文件不在默认的目录则修改实例nginx文件，如果默认目录则跳过</span><br><span class="line">[root@elk01:2 ~]#  vim /etc/filebeat/modules.d/nginx.yml </span><br><span class="line">···#修改你的日志文件目录</span><br><span class="line">var.paths: [<span class="string">&quot;/yourpath/nginx/access.log*&quot;</span>]</span><br><span class="line">···</span><br></pre></td></tr></table></figure><h3 id="编写filebeat的配置文件">编写filebeat的配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:0 ~]# <span class="built_in">cat</span> /etc/filebeat/10-nginx-modules.yaml </span><br><span class="line"><span class="comment"># 配置filebeat的启用模块</span></span><br><span class="line">filebeat.config.modules:</span><br><span class="line">  <span class="comment"># 默认会去找filebeat安装目录下的&quot;modules.d&quot;所有以&quot;.yml&quot;结尾的文件</span></span><br><span class="line">  path: <span class="variable">$&#123;path.config&#125;</span>/modules.d/*.yml</span><br><span class="line">  <span class="comment"># 是否支持热加载</span></span><br><span class="line">  reload.enabled: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">output.elasticsearch:</span><br><span class="line">  hosts: [<span class="string">&quot;http://10.0.0.211:9200&quot;</span>,<span class="string">&quot;http://10.0.0.212:9200&quot;</span>,<span class="string">&quot;http://10.0.0.213:9200&quot;</span>] </span><br><span class="line">  index: <span class="string">&quot;filebeat-nginx-%&#123;+yyyy.MM.dd&#125;&quot;</span></span><br><span class="line"></span><br><span class="line">setup.ilm.enabled: <span class="literal">false</span></span><br><span class="line">setup.template.name: <span class="string">&quot;filebeat-nginx&quot;</span></span><br><span class="line">setup.template.pattern: <span class="string">&quot;filebeat-nginx*&quot;</span></span><br><span class="line">setup.template.overwrite: <span class="literal">false</span></span><br><span class="line">setup.template.settings:</span><br><span class="line">  index.number_of_shards: 5</span><br><span class="line">  index.number_of_replicas: 0</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动filebeat实例</span></span><br><span class="line">[root@elk01:1 ~]# filebeat -e -c /etc/filebeat/10-nginx-modules.yaml</span><br></pre></td></tr></table></figure><p><img src="C:/Users/Dell/AppData/Roaming/Typora/typora-user-images/image-20241004102923489.png" alt="image-20241004102923489"></p><blockquote><p>日后便可以在  菜单栏–&gt;Discover里查询分析nginx日志  如下图</p></blockquote><p><img src="C:/Users/Dell/AppData/Roaming/Typora/typora-user-images/image-20241004103225591.png" alt="image-20241004103225591"></p><h3 id="统计网站日PV量">统计网站日PV量</h3><blockquote><p>可以理解为  一个页面就是一条PV，filebeat是按行统计，nginx的每个访问记录都为一行，以计数方式统计为日PV</p><p>点击保存即可保存可视化库</p></blockquote><p><img src="C:/Users/Dell/AppData/Roaming/Typora/typora-user-images/image-20241004103908465.png" alt="image-20241004103908465"></p><h3 id="统计网站日UV">统计网站日UV</h3><blockquote><p>这个统计不太准确，获取的ip是日志里每行第一个的ip，这个ip其实是负载均衡的ip，如果想要获取每个用户真实ip，nginx配置文件需要设置获取用户真实ip才算是日UV量，保存uv库</p></blockquote><p><img src="C:/Users/Dell/AppData/Roaming/Typora/typora-user-images/image-20241004111335927.png" alt="image-20241004111335927"></p><h3 id="统计带宽">统计带宽</h3><p><img src="C:/Users/Dell/AppData/Roaming/Typora/typora-user-images/image-20241004112012078.png" alt="image-20241004112012078"></p><p><img src="C:/Users/Dell/AppData/Roaming/Typora/typora-user-images/image-20241004112552478.png" alt="image-20241004112552478"></p><h3 id="统计设备类型">统计设备类型</h3><p><img src="C:/Users/Dell/AppData/Roaming/Typora/typora-user-images/image-20241004112842696.png" alt="image-20241004112842696"></p><h3 id="统计设备操作系统">统计设备操作系统</h3><p><img src="C:/Users/Dell/AppData/Roaming/Typora/typora-user-images/image-20241004120352348.png" alt="image-20241004120352348"></p><h3 id="全球流量统计">全球流量统计</h3><p><img src="C:/Users/Dell/AppData/Roaming/Typora/typora-user-images/image-20241004115735265.png" alt="image-20241004115735265"></p><p><img src="C:/Users/Dell/AppData/Roaming/Typora/typora-user-images/global-traffic.gif" alt="recording"></p><h3 id="创建仪表板">创建仪表板</h3><blockquote><p>菜单栏–&gt;Dashboard   新建仪表板，数据从前面保存的库中添加</p><p>刷新可显示在线实时数据</p></blockquote><p><img src="C:/Users/Dell/AppData/Roaming/Typora/typora-user-images/image-20241004121524063.png" alt="image-20241004121524063"></p><h2 id="filebeat的多行处理">filebeat的多行处理</h2><blockquote><p>filestream文件流也是采集文件的，log的替代</p></blockquote><p><a href="https://www.elastic.co/guide/en/beats/filebeat/7.17/multiline-examples.html">官网</a></p><p><strong>multiline的count类型</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:0 ~]# <span class="built_in">cat</span> /etc/filebeat/11-filestream_multiline.yaml </span><br><span class="line">filebeat.inputs:</span><br><span class="line">- <span class="built_in">type</span>: filestream</span><br><span class="line">  paths:</span><br><span class="line">    - /tmp/student.info</span><br><span class="line">  parsers:</span><br><span class="line">  - multiline:</span><br><span class="line">      <span class="built_in">type</span>: count</span><br><span class="line">      count_lines: 4</span><br><span class="line">output.console:</span><br><span class="line">  pretty: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#注释</span></span><br><span class="line">      <span class="comment"># type指定类型，有效值为: pattern和count</span></span><br><span class="line">      <span class="comment">#  pattern:      基于正则匹配事件。</span></span><br><span class="line">      <span class="comment">#  count:         将几行数据作为一个事件</span></span><br><span class="line">      <span class="comment">#count_lines:  将指定的行数合并为一个事件</span></span><br><span class="line">      </span><br><span class="line"><span class="comment">#提示 ：count类型这种，需要被收集的信息格式是有规律的</span></span><br><span class="line">例如：   count: 2  （数据都是4行4行的或N行N行的）</span><br><span class="line">[root@elk01:0 ~]# <span class="built_in">cat</span> /tmp/student.info </span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;name&quot;</span>: <span class="string">&quot;张三&quot;</span>,</span><br><span class="line">  <span class="string">&quot;hobby&quot;</span>: [<span class="string">&quot;学习&quot;</span>,<span class="string">&quot;跑步&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;name&quot;</span>: <span class="string">&quot;李四&quot;</span>,</span><br><span class="line">  <span class="string">&quot;hobby&quot;</span>: [<span class="string">&quot;学习&quot;</span>,<span class="string">&quot;看书&quot;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"> [root@elk01:0 ~]# filebeat -e -c /etc/filebeat/11-filestream_multiline-.yaml</span><br><span class="line"> &#125;,</span><br><span class="line">  <span class="string">&quot;log&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;offset&quot;</span>: 384,</span><br><span class="line">    <span class="string">&quot;file&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;path&quot;</span>: <span class="string">&quot;/tmp/student.info&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;flags&quot;</span>: [</span><br><span class="line">      <span class="string">&quot;multiline&quot;</span></span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;message&quot;</span>: <span class="string">&quot;&#123;\n  \&quot;name\&quot;: \&quot;张三\&quot;,\n  \&quot;hobby\&quot;: [\&quot;学习\&quot;,\&quot;跑步\&quot;]\n&#125;&quot;</span>,</span><br><span class="line">  <span class="string">&quot;input&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;filestream&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#将多行数据采集为一行，但必须是有规律的，采集的是上面文件每4行为一组数据</span></span><br></pre></td></tr></table></figure><p><strong>multiline的pattern类型</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:0 ~]# <span class="built_in">cat</span> /etc/filebeat/12-filestream_multiline_pattern.yaml </span><br><span class="line">filebeat.inputs:</span><br><span class="line">- <span class="built_in">type</span>: filestream</span><br><span class="line">  paths:</span><br><span class="line">    - /tmp/student.info</span><br><span class="line">  parsers:</span><br><span class="line">  - multiline:</span><br><span class="line">      <span class="built_in">type</span>: pattern</span><br><span class="line">      pattern: <span class="string">&#x27;^\&#123;&#x27;</span></span><br><span class="line">      negate: <span class="literal">true</span></span><br><span class="line">      match: after</span><br><span class="line">output.console:</span><br><span class="line">  pretty: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#注释</span></span><br><span class="line">pattern： <span class="string">&#x27;^\&#123;&#x27;</span> 匹配以&#123;开头的</span><br><span class="line">negate: 匹配规则</span><br><span class="line">match: 匹配规则   见下图</span><br></pre></td></tr></table></figure><p><img src="C:/Users/Dell/AppData/Roaming/Typora/typora-user-images/image-20241004212526358.png" alt="image-20241004212526358"></p><h2 id="filebeat采集tomcat日志">filebeat采集tomcat日志</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">1.部署tomcat</span><br><span class="line">[root@elk01:0 app]# wget https://dlcdn.apache.org/tomcat/tomcat-10/v10.1.30/bin/apache-tomcat-10.1.30.tar.gz</span><br><span class="line"></span><br><span class="line">2.解压安装tomcat(提前创建安装目录)</span><br><span class="line">[root@elk01:0 app]# tar xf apache-tomcat-10.1.30.tar.gz -C /app</span><br><span class="line">[root@elk01:0 app]# <span class="built_in">ln</span> -s /app/apache-tomcat-10.1.30/ /app/tomcat</span><br><span class="line"></span><br><span class="line">3.配置tomato的jdk环境，使用elasticsearch的jdk即可，查看java版本</span><br><span class="line">[root@elk01:0 app]#  /usr/share/elasticsearch/jdk/bin/java --version</span><br><span class="line">openjdk 22.0.1 2024-04-16</span><br><span class="line">OpenJDK Runtime Environment (build 22.0.1+8-16)</span><br><span class="line">OpenJDK 64-Bit Server VM (build 22.0.1+8-16, mixed mode, sharing)</span><br><span class="line"></span><br><span class="line"><span class="comment">#配置环境变量</span></span><br><span class="line">[root@elk01:0 app]# <span class="built_in">cat</span> /etc/profile.d/jdk.sh</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/share/elasticsearch/jdk</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin</span><br><span class="line"></span><br><span class="line"><span class="comment">#重新加载环境变量</span></span><br><span class="line">[root@elk01:0 app]# <span class="built_in">source</span> /etc/profile.d/jdk.sh </span><br><span class="line">[root@elk01:0 app]# java --version</span><br><span class="line">openjdk 22.0.1 2024-04-16</span><br><span class="line">OpenJDK Runtime Environment (build 22.0.1+8-16)</span><br><span class="line">OpenJDK 64-Bit Server VM (build 22.0.1+8-16, mixed mode, sharing)</span><br><span class="line"></span><br><span class="line">4.启动tomcat</span><br><span class="line">[root@elk01:0 app]# /app/tomcat/bin/startup.sh </span><br></pre></td></tr></table></figure><p><strong>编写filebeat实例</strong>   使用tomcat采集日志</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">1.启用tomcat模块</span><br><span class="line">[root@elk01:0 app]# filebeat modules <span class="built_in">enable</span> tomcat</span><br><span class="line"></span><br><span class="line">2.修改tomcat模块里日志路径</span><br><span class="line">[root@elk01:0 app]# vim /etc/filebeat/modules.d/tomcat.yml </span><br><span class="line">···</span><br><span class="line">    <span class="comment">## 默认是udp类型，有效值: udp,tcp,file</span></span><br><span class="line">    <span class="comment"># 当类型为file时，下面定义的路径才会生效</span></span><br><span class="line">    var.input: file</span><br><span class="line">    var.paths:</span><br><span class="line">      - /app/tomcat/logs/localhost_access_log.* </span><br><span class="line">···</span><br><span class="line"></span><br><span class="line">3.编写filebeat实例</span><br><span class="line">[root@elk01:0 app]# <span class="built_in">cat</span> /etc/filebeat/13.modules_tomcat.yaml </span><br><span class="line">filebeat.config.modules:</span><br><span class="line">  path: <span class="variable">$&#123;path.config&#125;</span>/modules.d/*.yml</span><br><span class="line">  reload.enabled: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">output:</span><br><span class="line">  elasticsearch:</span><br><span class="line">    hosts: </span><br><span class="line">    - <span class="string">&quot;http://10.0.0.211:9200&quot;</span></span><br><span class="line">    - <span class="string">&quot;http://10.0.0.212:9200&quot;</span></span><br><span class="line">    - <span class="string">&quot;http://10.0.0.213:9200&quot;</span></span><br><span class="line">    index: <span class="string">&quot;modules-tomcat-%&#123;+yyyy.MM.dd&#125;&quot;</span></span><br><span class="line"></span><br><span class="line">setup.ilm.enabled: <span class="literal">false</span></span><br><span class="line">setup.template.name: <span class="string">&quot;modules-tomcat&quot;</span></span><br><span class="line">setup.template.pattern: <span class="string">&quot;modules-tomcat*&quot;</span></span><br><span class="line">setup.template.overwrite: <span class="literal">false</span></span><br><span class="line">setup.template.settings:</span><br><span class="line">  index.number_of_shards: 3</span><br><span class="line">  index.number_of_replicas: 0</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动实例</span></span><br><span class="line">[root@elk01:0 ~]# filebeat -e -c /etc/filebeat/13.modules_tomcat.yaml </span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本篇讲述了使用filebeat的内置nginx模块来分析nginx日志，并统计出图</summary>
    
    
    
    <category term="ELK日志收集" scheme="https://lukme.top/categories/ELK%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86/"/>
    
    
    <category term="ELK" scheme="https://lukme.top/tags/ELK/"/>
    
  </entry>
  
  <entry>
    <title>filebeat多实例</title>
    <link href="https://lukme.top/posts/29cf1fa5.html"/>
    <id>https://lukme.top/posts/29cf1fa5.html</id>
    <published>2024-10-04T17:16:01.000Z</published>
    <updated>2024-10-04T17:22:33.057Z</updated>
    
    <content type="html"><![CDATA[<h2 id="指定ES的分片和副本数量">指定ES的分片和副本数量</h2><p><strong>ES索引名称的创建规范</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.名称最好见名知意，最好和你实际写入的业务有关;</span><br><span class="line">2.名称不要以<span class="string">&quot;.&quot;</span>开头，以<span class="string">&quot;.&quot;</span>开头多索引我们称之为<span class="string">&quot;隐藏索引&quot;</span>;</span><br><span class="line">3.一般隐藏索引都是组件去创建，建议不要人为创建，默认kibana就隐藏了以<span class="string">&quot;.&quot;</span>开头的索引</span><br><span class="line">4.字符支持小写字母，数字及连字符(-)，和内置一些变量比如<span class="string">&quot;%&#123;...&#125;&quot;</span>;</span><br><span class="line">5.不要出现特殊字符;</span><br></pre></td></tr></table></figure><p><strong>1.通过ES的API操作副本和分片</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">curl -X PUT <span class="string">&#x27;http://10.0.0.211:9200/school&#x27;</span> \</span><br><span class="line">-H <span class="string">&#x27;Content-Type: application/json&#x27;</span> \</span><br><span class="line">-d <span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">  &quot;settings&quot;: &#123;</span></span><br><span class="line"><span class="string">      &quot;number_of_shards&quot;: 5,</span></span><br><span class="line"><span class="string">      &quot;number_of_replicas&quot;: 0</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#创建索引school，主分片5，副本0</span></span><br></pre></td></tr></table></figure><p><strong>2.通过索引模板操作副本和分片</strong></p><blockquote><p>索引模板：创建索引时，会自动匹配是否有对应的索引模板，若匹配则根据索引模板创建。</p></blockquote><p>​    <strong>2.1创建索引模板</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">curl -X PUT <span class="string">&#x27;http://10.0.0.211:9200/_index_template/linux-school&#x27;</span> \</span><br><span class="line">-H <span class="string">&#x27;Content-Type: application/json&#x27;</span> \</span><br><span class="line">-d <span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">  &quot;template&quot;: &#123;</span></span><br><span class="line"><span class="string">    &quot;settings&quot;: &#123;</span></span><br><span class="line"><span class="string">      &quot;number_of_replicas&quot;: 0,</span></span><br><span class="line"><span class="string">      &quot;number_of_shards&quot;: 5</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;,</span></span><br><span class="line"><span class="string">  &quot;index_patterns&quot;: [</span></span><br><span class="line"><span class="string">    &quot;linux-school*&quot;</span></span><br><span class="line"><span class="string">  ]</span></span><br><span class="line"><span class="string">&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#注释：index_patterns，这里是用于匹配索引的，凡是索引是linux-school的都会关联此模板</span></span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241002233116968.png" alt="image-20241002233116968"></p><p><strong>验证模板</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:2 ~]# curl -X PUT <span class="string">&#x27;http://10.0.0.211:9200/linux-school-01&#x27;</span></span><br><span class="line">&#123;<span class="string">&quot;acknowledged&quot;</span>:<span class="literal">true</span>,<span class="string">&quot;shards_acknowledged&quot;</span>:<span class="literal">true</span>,<span class="string">&quot;index&quot;</span>:<span class="string">&quot;linux-school-01&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#重新加载索引管理，发现创建的索引关联了模板，创建了5个分片</span></span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241002233631403.png" alt="image-20241002233631403"></p><p>2.2图形化创建索引模板</p><p><img src="https://cos.lukme.top/Pic/index.gif" alt="recording"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">验证索引模板：</span><br><span class="line">[root@elk01:2 ~]# curl -X PUT <span class="string">&#x27;http://10.0.0.211:9200/student01&#x27;</span></span><br><span class="line">&#123;<span class="string">&quot;acknowledged&quot;</span>:<span class="literal">true</span>,<span class="string">&quot;shards_acknowledged&quot;</span>:<span class="literal">true</span>,<span class="string">&quot;index&quot;</span>:<span class="string">&quot;student01&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">索引管理里查看新创建的student-01索引是否是  3分片，0副本 自然是OK的</span><br></pre></td></tr></table></figure><p><strong>3.通过filebeat组件操作副本和分片</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:2 ~]# <span class="built_in">cat</span> /etc/filebeat/06-nginx-es.yaml </span><br><span class="line">filebeat.inputs:</span><br><span class="line">- <span class="built_in">type</span>: <span class="built_in">log</span></span><br><span class="line">  json:</span><br><span class="line">    keys_under_root: <span class="literal">true</span></span><br><span class="line">    add_error_key: <span class="literal">true</span></span><br><span class="line">    overwirte_keys: <span class="literal">true</span></span><br><span class="line">  paths:</span><br><span class="line">    - /var/log/nginx/access.log* </span><br><span class="line"></span><br><span class="line">output.elasticsearch:</span><br><span class="line">  hosts: [<span class="string">&quot;http://10.0.0.211:9200&quot;</span>,<span class="string">&quot;http://10.0.0.212:9200&quot;</span>,<span class="string">&quot;http://10.0.0.213:9200&quot;</span>] </span><br><span class="line">  <span class="comment"># 自定义索引名称  ,前提是关闭索引的生命周期  </span></span><br><span class="line">  index: <span class="string">&quot;test-filebeat-%&#123;+yyyy.MM.dd&#125;&quot;</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">#关闭索引生命周期</span></span><br><span class="line">setup.ilm.enabled: <span class="literal">false</span></span><br><span class="line"><span class="comment">#定义索引模板的名称</span></span><br><span class="line">setup.template.name: <span class="string">&quot;test-filebeat&quot;</span></span><br><span class="line"><span class="comment">#定义模板的匹配模式</span></span><br><span class="line">setup.template.pattern: <span class="string">&quot;test-filebeat*&quot;</span></span><br><span class="line"><span class="comment">#若索引模式模板存在，是否覆盖  </span></span><br><span class="line">setup.template.overwrite: <span class="literal">false</span></span><br><span class="line"><span class="comment">#定义索引模板设置</span></span><br><span class="line">setup.template.settings:</span><br><span class="line">  index.number_of_shards: 5</span><br><span class="line">  index.number_of_replicas: 0</span><br><span class="line">  </span><br><span class="line"><span class="comment">#如下索引管理里便创建了一个名为test-filebeat的索引和test-filebeat的模板</span></span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241003002143618.png" alt="image-20241003002143618"></p><blockquote><p>提示：基于filebeat配置的ES集群的索引及分片，副本信息，本质上创建时会自动转换为ES的http请求进行创建索引。</p></blockquote><h2 id="多个intput写到不同索引">多个intput写到不同索引</h2><blockquote><p>需求：多个inputs写入到ES集群里的不同索引里</p></blockquote><p><strong>1.编写配置文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:1 ~]# <span class="built_in">cat</span> /etc/filebeat/07-nginx-es.yaml </span><br><span class="line">filebeat.inputs:</span><br><span class="line">- <span class="built_in">type</span>: <span class="built_in">log</span></span><br><span class="line">  <span class="comment">#给事件打标签为file</span></span><br><span class="line">  tags: <span class="string">&quot;file&quot;</span></span><br><span class="line">  paths:</span><br><span class="line">  - /tmp/test.log </span><br><span class="line">  </span><br><span class="line">- <span class="built_in">type</span>: tcp</span><br><span class="line">  tags: <span class="string">&quot;tcp&quot;</span></span><br><span class="line">  host: <span class="string">&quot;0.0.0.0:9000&quot;</span></span><br><span class="line">  </span><br><span class="line">- <span class="built_in">type</span>: <span class="built_in">log</span></span><br><span class="line">  tags: <span class="string">&quot;nginx&quot;</span></span><br><span class="line">  json:</span><br><span class="line">    keys_under_root: <span class="literal">true</span></span><br><span class="line">    add_error_key: <span class="literal">true</span></span><br><span class="line">    overwirte_keys: <span class="literal">true</span></span><br><span class="line">  paths:</span><br><span class="line">    - /var/log/nginx/access.log* </span><br><span class="line"></span><br><span class="line">output.elasticsearch:</span><br><span class="line">  hosts: [<span class="string">&quot;http://10.0.0.211:9200&quot;</span>,<span class="string">&quot;http://10.0.0.212:9200&quot;</span>,<span class="string">&quot;http://10.0.0.213:9200&quot;</span>]</span><br><span class="line">  <span class="comment">#index: &quot;student-%&#123;+yyyy.MM.dd&#125;&quot;</span></span><br><span class="line">  <span class="comment">#多个索引模式</span></span><br><span class="line">  indices:</span><br><span class="line">    - index: <span class="string">&quot;study-file-%&#123;+yyyy.MM.dd&#125;&quot;</span></span><br><span class="line">      when.contains:</span><br><span class="line">        tags: <span class="string">&quot;file&quot;</span></span><br><span class="line">    - index: <span class="string">&quot;study-tcp-%&#123;+yyyy.MM.dd&#125;&quot;</span></span><br><span class="line">      when.contains:</span><br><span class="line">        tags: <span class="string">&quot;tcp&quot;</span></span><br><span class="line">    - index: <span class="string">&quot;study-nginx-%&#123;+yyyy.MM.dd&#125;&quot;</span></span><br><span class="line">      when.contains:</span><br><span class="line">        tags: <span class="string">&quot;nginx&quot;</span></span><br><span class="line"></span><br><span class="line">setup.ilm.enabled: <span class="literal">false</span></span><br><span class="line">setup.template.name: <span class="string">&quot;study&quot;</span></span><br><span class="line">setup.template.pattern: <span class="string">&quot;study*&quot;</span></span><br><span class="line">setup.template.overwrite: <span class="literal">false</span></span><br><span class="line">setup.template.settings:</span><br><span class="line">  index.number_of_shards: 8</span><br><span class="line">  index.number_of_replicas: 0</span><br><span class="line"></span><br><span class="line"><span class="comment">#给每个事件打上专属标签，索引里根据标签判断写入哪里</span></span><br></pre></td></tr></table></figure><p><strong>2.启动filebeat实例</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:0 ~]# filebeat -e -c /etc/filebeat/07-nginx-es.yaml </span><br></pre></td></tr></table></figure><p><strong>3.测试tcp数据</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:0 ~]# <span class="built_in">echo</span> <span class="string">&quot;999&quot;</span> | nc 10.0.0.211 9000</span><br><span class="line">[root@elk01:0 ~]# <span class="built_in">echo</span> <span class="string">&quot;666&quot;</span> | nc 10.0.0.211 9000</span><br><span class="line">[root@elk01:0 ~]# <span class="built_in">echo</span> <span class="string">&quot;000&quot;</span> | nc 10.0.0.211 9000</span><br></pre></td></tr></table></figure><p><strong>4.测试nginx</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:0 ~]# <span class="keyword">while</span> <span class="literal">true</span>; <span class="keyword">do</span> curl 10.0.0.211;<span class="built_in">sleep</span> 0.5;<span class="keyword">done</span></span><br></pre></td></tr></table></figure><p><strong>5.测试本地文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:0 ~]# <span class="built_in">echo</span> ‘hello world<span class="string">&#x27; &gt;/tmp/test.log</span></span><br></pre></td></tr></table></figure><p><strong>6.kibana基于Discover分析数据</strong></p><p>​    6.1查看索引是否都创建完成</p><p><img src="https://cos.lukme.top/Pic/image-20241003114353521.png" alt="image-20241003114353521"></p><p>6.2创建索引模式为     study*</p><p>6.3 进入Discover，选择相应字段，查看分析数据</p><p><img src="https://cos.lukme.top/Pic/image-20241003114810243.png" alt="image-20241003114810243"></p><h2 id="控制多个input源的是否启用">控制多个input源的是否启用</h2><blockquote><p>使用enabled，控制inputs多个源是否启用，true / false</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">filebeat.inputs:</span><br><span class="line">- <span class="built_in">type</span>: <span class="built_in">log</span></span><br><span class="line">  <span class="comment"># 配置该代码块是否执行，默认值为true，若不想要加载，则设置为false即可</span></span><br><span class="line">  enabled: <span class="literal">false</span></span><br><span class="line">  tags: <span class="string">&quot;nginx&quot;</span></span><br><span class="line">  json:</span><br><span class="line">    keys_under_root: <span class="literal">true</span></span><br><span class="line">    add_error_key: <span class="literal">true</span></span><br><span class="line">    overwirte_keys: <span class="literal">true</span></span><br><span class="line">  paths:</span><br><span class="line">    - /var/log/nginx/access.log*</span><br></pre></td></tr></table></figure><h2 id="filebeat-多实例">filebeat 多实例</h2><p><strong>1.启动第一个实例</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:0 ~]# <span class="built_in">cat</span> /etc/filebeat/02-tcp-console.yaml </span><br><span class="line">filebeat.inputs:</span><br><span class="line">- <span class="built_in">type</span>: tcp</span><br><span class="line">  host: <span class="string">&quot;0.0.0.0:9000&quot;</span></span><br><span class="line"></span><br><span class="line">output.console:</span><br><span class="line">  pretty: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">[root@elk01:1 ~]# filebeat -e -c /etc/filebeat/02-tcp-console.yaml </span><br></pre></td></tr></table></figure><p><strong>2.启动第二个实例</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:2 ~]# <span class="built_in">cat</span> /etc/filebeat/04-nginx-console.yaml </span><br><span class="line">filebeat.inputs:</span><br><span class="line">- <span class="built_in">type</span>: <span class="built_in">log</span></span><br><span class="line">  json:</span><br><span class="line">    keys_under_root: <span class="literal">true</span></span><br><span class="line">    add_error_key: <span class="literal">true</span></span><br><span class="line">    overwirte_keys: <span class="literal">true</span></span><br><span class="line">  paths:</span><br><span class="line">    - /var/log/nginx/access.log* </span><br><span class="line"></span><br><span class="line">output.console:</span><br><span class="line">  pretty: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">[root@elk01:1 ~]# filebeat -e -c /etc/filebeat/04-nginx-console.yaml</span><br><span class="line">2024-10-03T12:15:44.735+0800    INFO    instance/beat.go:698    Home path: [/usr/share/filebeat] Config path: [/etc/filebeat] Data path: [/var/lib/filebeat] Logs path: [/var/log/filebeat] Hostfs Path: [/]</span><br><span class="line">2024-10-03T12:15:44.737+0800    ERROR   instance/beat.go:1027   Exiting: <span class="string">&#x27;data path already locked by another beat&#x27;</span>. Please make sure that multiple beats are not sharing the same data path (path.data).</span><br><span class="line">Exiting: data path already locked by another beat. Please make sure that multiple beats are not sharing the same data path (path.data).</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动第二个的实例时候提示，数据目录已经被其他的实例锁定了，查看/var/lib/filebeat/目录里存在一个锁文件</span></span><br><span class="line"><span class="comment">#不能共用数据目录，当退出这个实例，这个锁文件也会消失</span></span><br><span class="line">[root@elk01:1 ~]# ll /var/lib/filebeat/</span><br><span class="line">-rw------- 1 root root    0 Oct  3 12:15 filebeat.lock</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动第二个实例，需要指定数据目录</span></span><br><span class="line">[root@elk01:2 ~]# filebeat -e -c /etc/filebeat/04-nginx-console.yaml --path.data /tmp/nginx-filebeat</span><br></pre></td></tr></table></figure><p><strong>总结</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">总结:</span><br><span class="line">- 1.同一个节点可以启动多个filebeat实例，但需要指定不同的数据目录;</span><br><span class="line">- 2.如果filebeat采集多个数据源有两种常见的解决方案，要么配置多个input，要么使用多实例;</span><br><span class="line"></span><br><span class="line">如果所有配置都放在同一个filebeat优缺点:</span><br><span class="line">优点:</span><br><span class="line">部署方便，启动一个实例即可。</span><br><span class="line">缺点:</span><br><span class="line">-1.当多个input中有任意一个需要修改时，在重启期间，其他的input都会受到影响。</span><br><span class="line">-2.当配置多事，多个input配置比较繁琐;</span><br><span class="line"></span><br><span class="line">如果所有配置都使用不同filebeat，多实例优缺点:</span><br><span class="line">优点:</span><br><span class="line">- 1.实现了配置文件和程序的解耦，说白了，就是一个实例挂掉，不会影响到其他实例;</span><br><span class="line">- 2.配置简单</span><br><span class="line">缺点:</span><br><span class="line">- 1.部署不方便，要同时部署多个filebeat，且数据目录需要单独指定维护;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本篇通过filebeat写入不同索引和使用不同数据目录实现多实例</summary>
    
    
    
    <category term="ELK日志收集" scheme="https://lukme.top/categories/ELK%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86/"/>
    
    
    <category term="ELK" scheme="https://lukme.top/tags/ELK/"/>
    
  </entry>
  
  <entry>
    <title>EFK架构部署</title>
    <link href="https://lukme.top/posts/fab536ab.html"/>
    <id>https://lukme.top/posts/fab536ab.html</id>
    <published>2024-10-04T17:14:30.000Z</published>
    <updated>2024-10-04T17:22:33.063Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>说明：全篇elastic是基于Ubuntu系统安装的，与Centos差别不是太大，下载软件连接可去官网下载</p></blockquote><h2 id="ElasitcStack概述">ElasitcStack概述</h2><h3 id="1-什么是ElasticStack？">1.什么是ElasticStack？</h3><p>所谓的ElasticStack别名为elk stack。</p><p>ELK指的是三个技术栈:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">- ElasticSearch，简称： es</span><br><span class="line">数据库，应用场景为数据的快速检索。但凡和搜索框相关的，都会用ES进行数据的查询。</span><br><span class="line"></span><br><span class="line">- Logstash:</span><br><span class="line">采集数据，日志聚合，处理数据，将数据写入到ES存储库。</span><br><span class="line"></span><br><span class="line">- Kibana:</span><br><span class="line">用于出图展示数据。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">由于Logstash比较重量级，采集日志时启动较慢，使用JRuby语言研发，启动时需要先启动虚拟机。因此官方开发了beats组件，beats组件是一系列beat的集合，比如filebeat就是一个常用的beat组件，多用于文本日志采集。</span><br></pre></td></tr></table></figure><h3 id="2-常用的架构">2.常用的架构</h3><p>EFK:<br>- ElasticSearch<br>- Filebeat:<br>采集数据写入ES集群。<br>- Kibana</p><p>ELFK:<br>- ElasticSearch<br>- Filebeat:<br>- Logstash<br>- Kibana</p><p>ELKF+KAFKA:<br>- zookeeper<br>- kafka</p><h2 id="ElasticSearch">ElasticSearch</h2><h3 id="1-什么是ElasticSearch">1.什么是ElasticSearch</h3><p>Elasticsearch 是一个分布式、RESTful 风格的搜索和数据分析引擎，能够解决不断涌现出的各种用例。作为 Elastic Stack 的核心，Elasticsearch 会集中存储您的数据，让您飞快完成搜索，微调相关性，进行强大的分析，并轻松缩放规模。ES的核心作用就是存储数据和快速进行模糊查询。</p><h3 id="2-安装部署ES">2.安装部署ES</h3><p><strong>单点部署ES</strong>   一般用于测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">`本机ip：10.0.0.211`</span><br><span class="line">1.下载ES</span><br><span class="line">[root@elk01 ~]# wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.17.23-amd64.deb</span><br><span class="line"></span><br><span class="line">2.安装ES</span><br><span class="line">[root@elk01 ~]# dpkg -i elasticsearch-7.17.23-amd64.deb</span><br><span class="line"></span><br><span class="line">3.修改配置文件</span><br><span class="line">[root@elk01 ~]# vim /etc/elasticsearch/elasticsearch.yml </span><br><span class="line">cluster.name: elk</span><br><span class="line">path.data: /var/lib/elasticsearch</span><br><span class="line">path.logs: /var/log/elasticsearch</span><br><span class="line">network.host: 0.0.0.0</span><br><span class="line">http.port: 9200</span><br><span class="line">transport.port: 9300</span><br><span class="line">discovery.type: single-node</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">`相关参数说明:`</span><br><span class="line">cluster.name: <span class="comment">#指定ES集群的名称</span></span><br><span class="line">path.data: <span class="comment">#指定数据目录</span></span><br><span class="line">path.logs: <span class="comment">#指定日志目录</span></span><br><span class="line">network.host: <span class="comment">#指定宿主机的监听IP。</span></span><br><span class="line">http.port: 9200<span class="comment">#对外提供http|https接口的端口。</span></span><br><span class="line">transport.port: 9300<span class="comment">#集群内部数据传输的端口，会优先启动该端口选举master后在启动9200端口。</span></span><br><span class="line">discovery.type: <span class="comment">#指定ES集群的类型，single-node表示的是单点。</span></span><br><span class="line"></span><br><span class="line">4.启动ES并设置开机自启</span><br><span class="line">[root@elk01 ~]# systemctl <span class="built_in">enable</span> --now elasticsearch</span><br><span class="line"></span><br><span class="line">5.检查监听的端口号</span><br><span class="line">[root@elk01 ~]# ss -lntup |egrep <span class="string">&#x27;9[23]00&#x27;</span></span><br><span class="line">tcp6       0      0 :::9200        :::*       LISTEN      6431/java</span><br><span class="line">tcp6       0      0 :::9300        :::*       LISTEN      6431/java</span><br><span class="line"></span><br><span class="line">6.测试访问</span><br><span class="line">[root@elk01:0 ~]# curl 10.0.0.211:9200</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;name&quot;</span> : <span class="string">&quot;elk01&quot;</span>,</span><br><span class="line">  <span class="string">&quot;cluster_name&quot;</span> : <span class="string">&quot;elk&quot;</span>,</span><br><span class="line">  <span class="string">&quot;cluster_uuid&quot;</span> : <span class="string">&quot;vV46E9vqRK-MxDs6I-3ceg&quot;</span>,</span><br><span class="line">  <span class="string">&quot;version&quot;</span> : &#123;</span><br><span class="line">    <span class="string">&quot;number&quot;</span> : <span class="string">&quot;7.17.23&quot;</span>,</span><br><span class="line">    <span class="string">&quot;build_flavor&quot;</span> : <span class="string">&quot;default&quot;</span>,</span><br><span class="line">    <span class="string">&quot;build_type&quot;</span> : <span class="string">&quot;deb&quot;</span>,</span><br><span class="line">    <span class="string">&quot;build_hash&quot;</span> : <span class="string">&quot;61d76462eecaf09ada684d1b5d319b5ff6865a83&quot;</span>,</span><br><span class="line">    <span class="string">&quot;build_date&quot;</span> : <span class="string">&quot;2024-07-25T14:37:42.448799567Z&quot;</span>,</span><br><span class="line">    <span class="string">&quot;build_snapshot&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">    <span class="string">&quot;lucene_version&quot;</span> : <span class="string">&quot;8.11.3&quot;</span>,</span><br><span class="line">    <span class="string">&quot;minimum_wire_compatibility_version&quot;</span> : <span class="string">&quot;6.8.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;minimum_index_compatibility_version&quot;</span> : <span class="string">&quot;6.0.0-beta1&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;tagline&quot;</span> : <span class="string">&quot;You Know, for Search&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看集群节点</span></span><br><span class="line">[root@elk01:0 ~]# curl 10.0.0.211:9200/_cat/nodes</span><br><span class="line">10.0.0.211 19 91 11 0.10 0.23 0.11 cdfhilmrstw * elk01</span><br><span class="line"></span><br><span class="line"><span class="comment">#显示表头信息    *代表master节点</span></span><br><span class="line">[root@elk01:0 ~]# curl 10.0.0.211:9200/_cat/nodes?v</span><br><span class="line">ip         heap.percent ram.percent cpu load_1m load_5m load_15m node.role   master name</span><br><span class="line">10.0.0.211           20          91   0    0.06    0.21     0.11 cdfhilmrstw *      elk01</span><br></pre></td></tr></table></figure><p><strong>如何卸载ES？</strong></p><pre><code>1.停止ES服务[root@elk91 ~]# systemctl disable --now elasticsearch.service 2.删除数据[root@elk91 ~]# \rm -rf  /var/&#123;lib,log&#125;/elasticsearch/ /tmp/*  /etc/elasticsearch3.删除软件[root@elk91 ~]# sudo yum remove elasticsearch[root@elk91 ~]# sudo rpm -e elasticsearch</code></pre><h3 id="3-部署ES集群">3.部署ES集群</h3><table><thead><tr><th>主机名</th><th>WanIP</th><th>LanIP</th></tr></thead><tbody><tr><td>elk01</td><td>10.0.0.211</td><td>172.16.1.211</td></tr><tr><td>elk02</td><td>10.0.0.222</td><td>172.16.1.222</td></tr><tr><td>elk03</td><td>10.0.0.233</td><td>172.16.1.233</td></tr></tbody></table><p><strong>1.所有节点安装ElasticSearch</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1.下载ES</span><br><span class="line">[root@elk01 ~]# wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.17.23-amd64.deb</span><br><span class="line">[root@elk01 ~]# <span class="keyword">for</span> i <span class="keyword">in</span> 212 213;<span class="keyword">do</span> scp elasticsearch-7.17.23-x86_64.rpm root@172.16.1.<span class="variable">$i</span>:/root ;<span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">2.安装ES</span><br><span class="line">[root@elk01 ~]#dpkg -i elasticsearch-7.17.23-amd64.deb</span><br></pre></td></tr></table></figure><p><strong>2.修改配置文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01 ~]# vim /etc/elasticsearch/elasticsearch.yml </span><br><span class="line">cluster.name: elk</span><br><span class="line">path.data: /var/lib/elasticsearch</span><br><span class="line">path.logs: /var/log/elasticsearch</span><br><span class="line">network.host: 0.0.0.0</span><br><span class="line">http.port: 9200</span><br><span class="line">transport.port: 9300</span><br><span class="line">discovery.seed_hosts: [<span class="string">&quot;10.0.0.211&quot;</span>, <span class="string">&quot;10.0.0.212&quot;</span>,<span class="string">&quot;10.0.0.213&quot;</span>]</span><br><span class="line">cluster.initial_master_nodes: [<span class="string">&quot;10.0.0.211&quot;</span>, <span class="string">&quot;10.0.0.212&quot;</span>,<span class="string">&quot;10.0.0.213&quot;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">`相关参数说明:`</span><br><span class="line">discovery.seed_hosts:<span class="comment">#当前ES集群的主机列表。</span></span><br><span class="line">cluster.initial_master_nodes:<span class="comment">#集群启动时首次参与master选举的节点列表。</span></span><br></pre></td></tr></table></figure><p><strong>3.将配置文件拷贝到其他节点</strong></p><pre><code>[root@elk01 ~]# scp /etc/elasticsearch/elasticsearch.yml root@172.16.1.212:/etc/elasticsearch/[root@elk01 ~]# scp /etc/elasticsearch/elasticsearch.yml root@172.16.1.213:/etc/elasticsearch/</code></pre><p>**4.启动ES集群 **</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01 ~]# systemctl <span class="built_in">enable</span> --now elasticsearch.service </span><br><span class="line">[root@elk02 ~]# systemctl <span class="built_in">enable</span> --now elasticsearch.service </span><br><span class="line">[root@elk03 ~]# systemctl <span class="built_in">enable</span> --now elasticsearch.service </span><br></pre></td></tr></table></figure><p><strong>5.查看端口是否监听集群</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01 ~]# ss -lntup |egrep <span class="string">&#x27;9[23]00&#x27;</span></span><br><span class="line">tcp6       0      0 :::9200        :::*       LISTEN      6431/java</span><br><span class="line">tcp6       0      0 :::9300        :::*       LISTEN      6431/java</span><br></pre></td></tr></table></figure><p><strong>6.查看集群节点信息</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:0 ~]# curl 10.0.0.213:9200/_cat/nodes</span><br><span class="line">10.0.0.212  9 94  8 0.46 0.49 0.31 cdfhilmrstw - elk02</span><br><span class="line">10.0.0.211 25 95 21 0.56 0.47 0.25 cdfhilmrstw * elk01</span><br><span class="line">10.0.0.213 28 90 25 1.21 0.78 0.43 cdfhilmrstw - elk03</span><br><span class="line"></span><br><span class="line"><span class="comment">#elk02是主节点</span></span><br><span class="line"><span class="comment">#查看name和uuid</span></span><br><span class="line">[root@elk01 ~]# curl -s 10.0.0.211:9200|egrep <span class="string">&#x27;_name|_uuid&#x27;</span></span><br><span class="line">  <span class="string">&quot;cluster_name&quot;</span> : <span class="string">&quot;my-elk&quot;</span>,</span><br><span class="line">  <span class="string">&quot;cluster_uuid&quot;</span> : <span class="string">&quot;pI91AngOTf2G4LYIUzd9FA&quot;</span></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"><span class="comment">#查看所有节点？</span></span><br><span class="line">[root@elk01 ~]# <span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> 211 213`;<span class="keyword">do</span> curl -s 10.0.0.<span class="variable">$i</span>:9200|egrep <span class="string">&#x27;_name|_uuid&#x27;</span>;<span class="keyword">done</span></span><br><span class="line">  <span class="string">&quot;cluster_name&quot;</span> : <span class="string">&quot;my-elk&quot;</span>,</span><br><span class="line">  <span class="string">&quot;cluster_uuid&quot;</span> : <span class="string">&quot;pI91AngOTf2G4LYIUzd9FA&quot;</span>,</span><br><span class="line">  <span class="string">&quot;cluster_name&quot;</span> : <span class="string">&quot;my-elk&quot;</span>,</span><br><span class="line">  <span class="string">&quot;cluster_uuid&quot;</span> : <span class="string">&quot;pI91AngOTf2G4LYIUzd9FA&quot;</span>,</span><br><span class="line">  <span class="string">&quot;cluster_name&quot;</span> : <span class="string">&quot;my-elk&quot;</span>,</span><br><span class="line">  <span class="string">&quot;cluster_uuid&quot;</span> : <span class="string">&quot;pI91AngOTf2G4LYIUzd9FA&quot;</span>,</span><br></pre></td></tr></table></figure><p><strong>7.ES集群写入和读取数据</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#写入数据  （test是索引，自定义）</span></span><br><span class="line">curl -X POST -H <span class="string">&quot;Content-Type:application/json&quot;</span> 10.0.0.211:9200/test/_doc -d <span class="string">&#x27;&#123;&quot;name&quot;:&quot;zhang3&quot;,&quot;age&quot;:&quot;18&quot;&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#读取数据（jq需要安装，格式化输出，212/213也能读取到数据，因为是es集群）</span></span><br><span class="line">[root@elk01 ~]# curl -s 10.0.0.211:9200/test/_search | jq .hits</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;total&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;value&quot;</span>: 1,</span><br><span class="line">    <span class="string">&quot;relation&quot;</span>: <span class="string">&quot;eq&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;max_score&quot;</span>: 1,</span><br><span class="line">  <span class="string">&quot;hits&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;_index&quot;</span>: <span class="string">&quot;test&quot;</span>,</span><br><span class="line">      <span class="string">&quot;_type&quot;</span>: <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">      <span class="string">&quot;_id&quot;</span>: <span class="string">&quot;ppKQ0ZEB6pCPlAoKbzPE&quot;</span>,</span><br><span class="line">      <span class="string">&quot;_score&quot;</span>: 1,</span><br><span class="line">      <span class="string">&quot;_source&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;name&quot;</span>: <span class="string">&quot;zhang3&quot;</span>,</span><br><span class="line">        <span class="string">&quot;age&quot;</span>: <span class="string">&quot;18&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="kibana读取数据">kibana读取数据</h2><h3 id="1-kibana概述">1.kibana概述</h3><p>使用 Kibana 针对大规模数据快速运行数据分析，以实现可观测性、安全和搜索。对来自任何来源的任何数据进行全面透彻的分析，从威胁情报到搜索分析，从日志到应用程序监测，不一而足。说白了，kibana就是从ES查询数据并展示数据。</p><h3 id="2-部署kibana">2.部署kibana</h3><p><strong>1.下载 &amp; 安装kibana</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01 ~]# wget https://artifacts.elastic.co/downloads/kibana/kibana-7.17.23-amd64.deb</span><br><span class="line"></span><br><span class="line">[root@elk01 ~]# dpkg -i kibana-7.17.23-amd64.deb </span><br></pre></td></tr></table></figure><p><strong>2.修改配置文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@elk91 ~]# vim /etc/kibana/kibana.yml </span><br><span class="line">server.port: 5601</span><br><span class="line">server.host: <span class="string">&quot;0.0.0.0&quot;</span></span><br><span class="line">server.name: <span class="string">&quot;kibana&quot;</span></span><br><span class="line">elasticsearch.hosts: [<span class="string">&quot;http://10.0.0.211:9200&quot;</span>,<span class="string">&quot;http://10.0.0.212:9200&quot;</span>,<span class="string">&quot;http://10.0.0.213:9200&quot;</span>]</span><br><span class="line">i18n.locale: <span class="string">&quot;zh-CN&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-启动kibana">3.启动kibana</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01 ~]# systemctl <span class="built_in">enable</span> --now kibana</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看端口是否启动</span></span><br><span class="line">[root@elk01 ~]# ss  -lntup|grep 5601</span><br><span class="line">tcp        0      0 0.0.0.0:5601      0.0.0.0:*     LISTEN      9696/node  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#浏览器访问</span></span><br><span class="line">10.0.0.211:5601</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/QQ_1725800433992.png" alt="QQ_1725800433992"></p><p><strong>索引管理就有我们之前创建的数据</strong></p><p><img src="https://cos.lukme.top/Pic/image-20241002121943290.png" alt="image-20241002121943290"></p><p><strong>如何查询那个数据呢？</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1725800690692.png" alt="QQ_1725800690692"></p><p><img src="https://cos.lukme.top/Pic/QQ_1725800736873.png" alt="QQ_1725800736873"></p><p><img src="https://cos.lukme.top/Pic/QQ_1725800780918.png" alt="QQ_1725800780918"></p><h3 id="4-kibana查询ES数据">4.kibana查询ES数据</h3><p><strong>1.准备测试数据</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">curl -X POST -H <span class="string">&quot;Content-Type:application/json&quot;</span> 10.0.0.211:9200/_bulk -d <span class="string">&#x27;</span></span><br><span class="line"><span class="string">&#123; &quot;index&quot; : &#123; &quot;_index&quot; : &quot;student1&quot;&#125; &#125;</span></span><br><span class="line"><span class="string">&#123;&quot;name&quot;:&quot;李四&quot;,&quot;hobby&quot;:[&quot;学习&quot;,&quot;玩手机&quot;,&quot;看美女&quot;]&#125;</span></span><br><span class="line"><span class="string">&#123; &quot;index&quot; : &#123; &quot;_index&quot; : &quot;student2&quot;&#125; &#125;</span></span><br><span class="line"><span class="string">&#123;&quot;name&quot;:&quot;张三&quot;,&quot;hobby&quot;:[&quot;大长腿&quot;,&quot;学习&quot;]&#125;</span></span><br><span class="line"><span class="string">&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#终端输出如下即OK</span></span><br><span class="line">&#123;<span class="string">&quot;took&quot;</span>:780,<span class="string">&quot;errors&quot;</span>:<span class="literal">false</span>,<span class="string">&quot;items&quot;</span>:[&#123;<span class="string">&quot;index&quot;</span>:&#123;<span class="string">&quot;_index&quot;</span>:<span class="string">&quot;student&quot;</span>,<span class="string">&quot;_type&quot;</span>:<span class="string">&quot;_doc&quot;</span>,<span class="string">&quot;_id&quot;</span>:<span class="string">&quot;YWacOJIBCijr5nh3GosC&quot;</span>,<span class="string">&quot;_version&quot;</span>:1,<span class="string">&quot;result&quot;</span>:<span class="string">&quot;created&quot;</span>,<span class="string">&quot;_shards&quot;</span>:&#123;<span class="string">&quot;total&quot;</span>:2,<span class="string">&quot;successful&quot;</span>:2,<span class="string">&quot;failed&quot;</span>:0&#125;,<span class="string">&quot;_seq_no&quot;</span>:0,<span class="string">&quot;_primary_term&quot;</span>:1,<span class="string">&quot;status&quot;</span>:201&#125;&#125;,&#123;<span class="string">&quot;index&quot;</span>:&#123;<span class="string">&quot;_index&quot;</span>:<span class="string">&quot;student&quot;</span>,<span class="string">&quot;_type&quot;</span>:<span class="string">&quot;_doc&quot;</span>,<span class="string">&quot;_id&quot;</span>:<span class="string">&quot;YmacOJIBCijr5nh3GosC&quot;</span>,<span class="string">&quot;_version&quot;</span>:1,<span class="string">&quot;result&quot;</span>:<span class="string">&quot;created&quot;</span>,<span class="string">&quot;_shards&quot;</span>:&#123;<span class="string">&quot;total&quot;</span>:2,<span class="string">&quot;successful&quot;</span>:2,<span class="string">&quot;failed&quot;</span>:0&#125;,<span class="string">&quot;_seq_no&quot;</span>:1,<span class="string">&quot;_primary_term&quot;</span>:1,<span class="string">&quot;status&quot;</span>:201&#125;&#125;]&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#api调取方法--官方文档：https://www.elastic.co/guide/en/elasticsearch/reference/7.17/docs-bulk.html</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#浏览器再次访问  kibana  ，发现索引管理会多出来一个我们创建的student索引</span></span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241002122102175.png" alt="image-20241002122102175"></p><p><strong>2.创建索引模式</strong></p><p>kibana的索引模式用于匹配ES集群的一个或多个索引。     student*</p><p><img src="https://cos.lukme.top/Pic/image-20241002122146329.png" alt="image-20241002122146329"></p><p><strong>3.kibana查询数据</strong></p><p><img src="https://cos.lukme.top/Pic/image-20241002122628647.png" alt="image-20241002122628647"></p><p><strong>以字段查询</strong></p><p><img src="https://cos.lukme.top/Pic/image-20241002122712583.png" alt="image-20241002122712583"></p><p><img src="https://cos.lukme.top/Pic/image-20241002122754986.png" alt="image-20241002122754986"></p><p><strong>使用json格式查询</strong></p><p><img src="https://cos.lukme.top/Pic/image-20241002122306868.png" alt="image-20241002122306868"></p><p><strong>其它方式查询集群颜色</strong></p><p>1.通过es-head组件查询（一个插件）</p><p>2.基于官方的API查询</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:1 ~]# curl -s 10.0.0.211:9200/_cat/indices?v</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241002122830955.png" alt="image-20241002122830955"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:1 ~]# curl -s 10.0.0.211:9200/_cat/indices|awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span></span><br><span class="line">green</span><br><span class="line">green</span><br><span class="line">green</span><br><span class="line">green</span><br><span class="line">green</span><br></pre></td></tr></table></figure><h2 id="Filebeat采集数据">Filebeat采集数据</h2><p><strong>filebeat</strong><br>无论您是从安全设备、云、容器、主机还是 OT 进行数据收集，Filebeat 都将为您提供一种轻量型方法，用于转发和汇总日志与文件，让简单的事情不再繁杂。说白了，filebeat的核心就是采集日志并将日志发送到我们期望的目的端。本质核心就是input(数据从哪来)和output(数据到哪去)。</p><p><strong>==filebeat默认是按行读取数据==</strong></p><p><img src="https://cos.lukme.top/Pic/elkmassage.png" alt="elkmassage"></p><h3 id="部署filebeat">部署filebeat</h3><p><a href="https://www.elastic.co/guide/en/beats/filebeat/7.17/configuring-howto-filebeat.html">Filebeat Reference 官方文档</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.下载filebeat包</span><br><span class="line">[root@elk01 ~]# wget https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-7.17.23-amd64.deb</span><br><span class="line"></span><br><span class="line">2.安装filebeat </span><br><span class="line">[root@elk01 ~]# dpkg -i filebeat-7.17.23-amd64.deb </span><br></pre></td></tr></table></figure><h3 id="采集数据终端到终端">采集数据终端到终端</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#写法见官方，直接复制使用  (在 inputs 和 Output 里选择相应的方式)</span></span><br><span class="line"><span class="string">&#x27;https://www.elastic.co/guide/en/beats/filebeat/7.17/configuring-howto-filebeat.html&#x27;</span></span><br><span class="line">1.编写filebeat的配置文件      （inputs&gt;Stdin  标准输入    output&gt;Console  终端输出）</span><br><span class="line">[root@elk01 ~]# <span class="built_in">cat</span> /etc/filebeat/01-stdin-stdout.yaml </span><br><span class="line"><span class="comment"># 数据从标准输入来</span></span><br><span class="line">filebeat.inputs:</span><br><span class="line">- <span class="built_in">type</span>: stdin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据到终点</span></span><br><span class="line">output.console:</span><br><span class="line">  pretty: <span class="literal">true</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">#2.启动filebeat实例</span></span><br><span class="line">相关参数说 ：</span><br><span class="line">-c &lt;config&gt;:</span><br><span class="line">指定的是配置文件 </span><br><span class="line">-e :</span><br><span class="line">开启调试模式，将日志输出到终端。</span><br><span class="line"></span><br><span class="line">[root@elk01:1 ~]# filebeat -e -c /etc/filebeat/01-stdin-stdout.yaml </span><br><span class="line"><span class="comment">#终端我输入的</span></span><br><span class="line">66666666666666666666666666666666</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出内容：很明显，数据被封装到了一个&quot;message&quot;字段中。</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;@timestamp&quot;</span>: <span class="string">&quot;2024-09-28T13:23:12.146Z&quot;</span>,</span><br><span class="line">  <span class="string">&quot;@metadata&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;beat&quot;</span>: <span class="string">&quot;filebeat&quot;</span>,</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">    <span class="string">&quot;version&quot;</span>: <span class="string">&quot;7.17.23&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;input&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;stdin&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;ecs&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;version&quot;</span>: <span class="string">&quot;1.12.0&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;host&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;elk01&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;agent&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;filebeat&quot;</span>,</span><br><span class="line">    <span class="string">&quot;version&quot;</span>: <span class="string">&quot;7.17.23&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hostname&quot;</span>: <span class="string">&quot;elk01&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ephemeral_id&quot;</span>: <span class="string">&quot;13686d12-e255-4c48-a609-dcc4b8331c44&quot;</span>,</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="string">&quot;9e9b0f4e-cbe0-4e5b-bab2-501e50f67620&quot;</span>,</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;elk01&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;log&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;offset&quot;</span>: 0,</span><br><span class="line">    <span class="string">&quot;file&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;path&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;message&quot;</span>: <span class="string">&quot;66666666666666666666666666666666&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">2024-09-28T21:23:13.147+0800    ERROR   file/states.go:125      State <span class="keyword">for</span>  should have been dropped, but couldn<span class="string">&#x27;t as state is not finished.</span></span><br></pre></td></tr></table></figure><h3 id="filebeat监听tcp端口">filebeat监听tcp端口</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1。编写filebeat配置文件       （inputs&gt;tcp   指定tcp端口）</span></span><br><span class="line">[root@elk01 ~]# <span class="built_in">cat</span> /etc/filebeat/02-tcp-console.yaml </span><br><span class="line"><span class="comment"># 数据从监听的指定tcp端口来</span></span><br><span class="line">filebeat.inputs:</span><br><span class="line">- <span class="built_in">type</span>: tcp</span><br><span class="line">  host: <span class="string">&quot;0.0.0.0:9000&quot;</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">#数据到终点</span></span><br><span class="line">output.console:</span><br><span class="line">  pretty: <span class="literal">true</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">#2.启动filebeat实例</span></span><br><span class="line">[root@elk01:1 ~]# filebeat -e -c /etc/filebeat/02-tcp-console.yaml </span><br><span class="line"></span><br><span class="line"><span class="comment">#3.发送测试数据</span></span><br><span class="line">[root@elk03:0 ~]# <span class="built_in">echo</span> <span class="string">&quot;hello world&quot;</span> | nc 10.0.0.211 9000</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#4.观察filebeat是否采集到数据</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;@timestamp&quot;</span>: <span class="string">&quot;2024-09-28T13:33:01.962Z&quot;</span>,</span><br><span class="line">  <span class="string">&quot;@metadata&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;beat&quot;</span>: <span class="string">&quot;filebeat&quot;</span>,</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">    <span class="string">&quot;version&quot;</span>: <span class="string">&quot;7.17.23&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;input&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;tcp&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;ecs&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;version&quot;</span>: <span class="string">&quot;1.12.0&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;host&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;elk01&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;agent&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;elk01&quot;</span>,</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;filebeat&quot;</span>,</span><br><span class="line">    <span class="string">&quot;version&quot;</span>: <span class="string">&quot;7.17.23&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hostname&quot;</span>: <span class="string">&quot;elk01&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ephemeral_id&quot;</span>: <span class="string">&quot;a43721b4-8160-4985-9f6f-67c0178affa7&quot;</span>,</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="string">&quot;9e9b0f4e-cbe0-4e5b-bab2-501e50f67620&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;message&quot;</span>: <span class="string">&quot;hello world&quot;</span>,</span><br><span class="line">  <span class="string">&quot;log&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;source&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;address&quot;</span>: <span class="string">&quot;10.0.0.213:47174&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="采集本地文件输出数据到终端">采集本地文件输出数据到终端</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">1.编写filebeat配置文件    （inputs&gt;<span class="built_in">log</span>）</span><br><span class="line">[root@elk01 ~]# <span class="built_in">cat</span> /etc/filebeat/03-log-console.yaml</span><br><span class="line"><span class="comment"># 数据从监听的指定文件来</span></span><br><span class="line">filebeat.inputs:</span><br><span class="line">- <span class="built_in">type</span>: <span class="built_in">log</span></span><br><span class="line">  paths:</span><br><span class="line">    - /tmp/test.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据到终点</span></span><br><span class="line">output.console:</span><br><span class="line">  pretty: <span class="literal">true</span></span><br><span class="line">  </span><br><span class="line">2.启动filebeat实例</span><br><span class="line">[root@elk01:1 ~]# filebeat -e -c /etc/filebeat/03-log-console.yaml</span><br><span class="line"></span><br><span class="line">3.写入测试数据(另开一个终端写入)</span><br><span class="line">[root@elk01:0 ~]# <span class="built_in">echo</span> <span class="string">&#x27;999&#x27;</span> &gt; /tmp/test.log</span><br><span class="line"></span><br><span class="line">4.观察终端输出</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;@timestamp&quot;</span>: <span class="string">&quot;2024-09-28T13:48:53.645Z&quot;</span>,</span><br><span class="line">  <span class="string">&quot;@metadata&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;beat&quot;</span>: <span class="string">&quot;filebeat&quot;</span>,</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">    <span class="string">&quot;version&quot;</span>: <span class="string">&quot;7.17.23&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;log&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;offset&quot;</span>: 0,           <span class="comment">#注意这个字段</span></span><br><span class="line">    <span class="string">&quot;file&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;path&quot;</span>: <span class="string">&quot;/tmp/test.log&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;message&quot;</span>: <span class="string">&quot;hello world&quot;</span>,</span><br><span class="line">  <span class="string">&quot;input&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;log&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;agent&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="string">&quot;9e9b0f4e-cbe0-4e5b-bab2-501e50f67620&quot;</span>,</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;elk01&quot;</span>,</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;filebeat&quot;</span>,</span><br><span class="line">    <span class="string">&quot;version&quot;</span>: <span class="string">&quot;7.17.23&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hostname&quot;</span>: <span class="string">&quot;elk01&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ephemeral_id&quot;</span>: <span class="string">&quot;10485e22-a3e8-40f0-bbb9-c194f9541bf4&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;ecs&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;version&quot;</span>: <span class="string">&quot;1.12.0&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;host&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;elk01&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5.验证filebeat采集数据是按行读取    (注意offset 字段变化)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#再次写入数据观察采集情况</span></span><br><span class="line">[root@elk01:0 ~]# <span class="built_in">echo</span> <span class="string">&#x27;hello world&#x27;</span> &gt;&gt; /tmp/test.log</span><br><span class="line"></span><br><span class="line"><span class="comment">#观察offset（偏移量）</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;@timestamp&quot;</span>: <span class="string">&quot;2024-09-28T13:54:03.721Z&quot;</span>,</span><br><span class="line">  <span class="string">&quot;@metadata&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;beat&quot;</span>: <span class="string">&quot;filebeat&quot;</span>,</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">    <span class="string">&quot;version&quot;</span>: <span class="string">&quot;7.17.23&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;log&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;offset&quot;</span>: 4,    <span class="comment">#为啥是四个偏移量？</span></span><br><span class="line">    <span class="string">&quot;file&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;path&quot;</span>: <span class="string">&quot;/tmp/test.log&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;message&quot;</span>: <span class="string">&quot;999hello world&quot;</span>,</span><br><span class="line">  <span class="string">&quot;input&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;log&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;agent&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;hostname&quot;</span>: <span class="string">&quot;elk01&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ephemeral_id&quot;</span>: <span class="string">&quot;10485e22-a3e8-40f0-bbb9-c194f9541bf4&quot;</span>,</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="string">&quot;9e9b0f4e-cbe0-4e5b-bab2-501e50f67620&quot;</span>,</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;elk01&quot;</span>,</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;filebeat&quot;</span>,</span><br><span class="line">    <span class="string">&quot;version&quot;</span>: <span class="string">&quot;7.17.23&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;ecs&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;version&quot;</span>: <span class="string">&quot;1.12.0&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;host&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;elk01&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#因为上次999三个之后有个特殊字符--换行符，所以offset之前采集的偏移量是4个</span></span><br></pre></td></tr></table></figure><p><strong>如何验证filebeat是按行采集数据的？</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:0 ~]# <span class="built_in">echo</span> -n <span class="string">&#x27;ABCD&#x27;</span> &gt;&gt; /tmp/test.log      -n 不换行</span><br><span class="line"></span><br><span class="line">观察终端是否有采集数据,很明显没有采集</span><br></pre></td></tr></table></figure><p><strong>6.重启filebeat实例</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">停止filebeat   Ctrl+c</span><br><span class="line">再次执行实例    filebeat -e -c /etc/filebeat/03-log-console.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment">#此时我们发现filebeat并不会采集数据，因为filebeat已经采集过了，</span></span><br><span class="line"><span class="comment">#filebeat是如何知道有没有采集过数据？往上翻看加载信息如下图</span></span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241002105509955.png" alt="image-20241002105509955"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Finished loading transaction <span class="built_in">log</span> file <span class="keyword">for</span> <span class="string">&#x27;/var/lib/filebeat/registry/filebeat&#x27;</span>. Active transaction <span class="built_in">id</span>=63</span><br><span class="line"></span><br><span class="line">这个表示的是，在采集数据之前先加载<span class="string">&#x27;/var/lib/filebeat/registry/filebeat&#x27;</span>下的事务日志log.json，里面记录了已经采集过的信息，那么我们前去查看下，</span><br><span class="line"></span><br><span class="line">这里我们查看下最后一条数据</span><br><span class="line">[root@elk01:1 ~]# <span class="built_in">tail</span> -1 /var/lib/filebeat/registry/filebeat/log.json </span><br><span class="line">&#123;<span class="string">&quot;k&quot;</span>:<span class="string">&quot;filebeat::logs::native::788078-64768&quot;</span>,<span class="string">&quot;v&quot;</span>:&#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;native::788078-64768&quot;</span>,<span class="string">&quot;offset&quot;</span>:24,<span class="string">&quot;timestamp&quot;</span>:[2061673550511,1727837342],<span class="string">&quot;ttl&quot;</span>:-1,<span class="string">&quot;prev_id&quot;</span>:<span class="string">&quot;&quot;</span>,<span class="string">&quot;source&quot;</span>:<span class="string">&quot;/tmp/test.log&quot;</span>,<span class="string">&quot;type&quot;</span>:<span class="string">&quot;log&quot;</span>,<span class="string">&quot;FileStateOS&quot;</span>:&#123;<span class="string">&quot;inode&quot;</span>:788078,<span class="string">&quot;device&quot;</span>:64768&#125;,<span class="string">&quot;identifier_name&quot;</span>:<span class="string">&quot;native&quot;</span>&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#数据有个offset字段，这里记录的是上一次采集过的偏移量，那么我们就来查看下这个日志的偏移量是不是24</span></span><br><span class="line">[root@elk01:1 ~]# <span class="built_in">cat</span> /tmp/test.log </span><br><span class="line">999</span><br><span class="line">hello world</span><br><span class="line">ABCD666</span><br><span class="line"></span><br><span class="line"><span class="comment">#其中每个换行之后都有一个换行符占一个偏移量，所以总过是24，那么这个事务日志记录的是没有错的。当我们删除这个事务日志log.json时候，重新执行filebeat实例，便会重新采集数据</span></span><br></pre></td></tr></table></figure><p><strong>7.自定义采集</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#根据步骤6中重新filebeat实例所述，我们自定义采集便可以根据设置偏移量来达到自定义采集数据</span></span><br><span class="line"><span class="comment">#修改事务日志文件如下，只修改偏移量，需求是只采集ABCD666及以后的数据</span></span><br><span class="line">[root@elk01:1 ~]# <span class="built_in">cat</span> /tmp/test.log </span><br><span class="line">999</span><br><span class="line">hello world</span><br><span class="line">ABCD666  <span class="comment">#将offset设置为16，记得数换行符</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@elk01:1 ~]# vim /var/lib/filebeat/registry/filebeat/log.json </span><br><span class="line">&#123;<span class="string">&quot;op&quot;</span>:<span class="string">&quot;set&quot;</span>,<span class="string">&quot;id&quot;</span>:65&#125;</span><br><span class="line">&#123;<span class="string">&quot;k&quot;</span>:<span class="string">&quot;filebeat::logs::native::788078-64768&quot;</span>,<span class="string">&quot;v&quot;</span>:&#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;native::788078-64768&quot;</span>,<span class="string">&quot;offset&quot;</span>:16,<span class="string">&quot;timestamp&quot;</span>:[2061673550511,1727837342],<span class="string">&quot;ttl&quot;</span>:-1,<span class="string">&quot;prev_id&quot;</span>:<span class="string">&quot;&quot;</span>,<span class="string">&quot;source&quot;</span>:<span class="string">&quot;/tmp/test.log&quot;</span>,<span class="string">&quot;type&quot;</span>:<span class="string">&quot;log&quot;</span>,<span class="string">&quot;FileStateOS&quot;</span>:&#123;<span class="string">&quot;inode&quot;</span>:788078,<span class="string">&quot;device&quot;</span>:64768&#125;,<span class="string">&quot;identifier_name&quot;</span>:<span class="string">&quot;native&quot;</span>&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#重新执行实例</span></span><br><span class="line">[root@elk01:0 ~]# filebeat -e -c /etc/filebeat/03-log-console.yaml </span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;@timestamp&quot;</span>: <span class="string">&quot;2024-10-02T03:12:45.360Z&quot;</span>,</span><br><span class="line">  <span class="string">&quot;@metadata&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;beat&quot;</span>: <span class="string">&quot;filebeat&quot;</span>,</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">    <span class="string">&quot;version&quot;</span>: <span class="string">&quot;7.17.23&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;agent&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;version&quot;</span>: <span class="string">&quot;7.17.23&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hostname&quot;</span>: <span class="string">&quot;elk01&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ephemeral_id&quot;</span>: <span class="string">&quot;c8d05474-6175-4dd1-93e8-933cb7760b92&quot;</span>,</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="string">&quot;9e9b0f4e-cbe0-4e5b-bab2-501e50f67620&quot;</span>,</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;elk01&quot;</span>,</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;filebeat&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;log&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;offset&quot;</span>: 16,</span><br><span class="line">    <span class="string">&quot;file&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;path&quot;</span>: <span class="string">&quot;/tmp/test.log&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;message&quot;</span>: <span class="string">&quot;ABCD666&quot;</span>,</span><br><span class="line">  <span class="string">&quot;input&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;log&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;ecs&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;version&quot;</span>: <span class="string">&quot;1.12.0&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;host&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;elk01&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="案例">案例</h2><h3 id="采集nginx日志案例">采集nginx日志案例</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">1.安装nginx   （可以先尝试跳过2步骤，看看不修改配置文件的输出，和修改之后的区别）</span><br><span class="line">[root@elk01:1 ~]# apt -y install nginx</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2.将nginx采集的数据以json格式展示，修改nginx的配置文件（格式化展示，方便分析数据，访问ip，状态码等）</span><br><span class="line">[root@elk01:1 ~]# vim /etc/nginx/nginx.conf </span><br><span class="line"><span class="comment">#http模块里添加如下，注释官方的   access_log /var/log/nginx/access.log</span></span><br><span class="line">···</span><br><span class="line">  log_format nginx_json <span class="string">&#x27;&#123;&quot;timestamp&quot;:&quot;$time_iso8601&quot;,&#x27;</span></span><br><span class="line">       <span class="string">&#x27;&quot;vhost&quot;:&quot;$server_addr&quot;,&#x27;</span></span><br><span class="line">       <span class="string">&#x27;&quot;clientip&quot;:&quot;$remote_addr&quot;,&#x27;</span></span><br><span class="line">       <span class="string">&#x27;&quot;SendBytes&quot;:$body_bytes_sent,&#x27;</span></span><br><span class="line">       <span class="string">&#x27;&quot;responsetime&quot;:$request_time,&#x27;</span></span><br><span class="line">       <span class="string">&#x27;&quot;upstreamtime&quot;:&quot;$upstream_response_time&quot;,&#x27;</span></span><br><span class="line">       <span class="string">&#x27;&quot;upstreamhost&quot;:&quot;$upstream_addr&quot;,&#x27;</span></span><br><span class="line">       <span class="string">&#x27;&quot;http_host&quot;:&quot;$host&quot;,&#x27;</span></span><br><span class="line">       <span class="string">&#x27;&quot;uri&quot;:&quot;$uri&quot;,&#x27;</span></span><br><span class="line">       <span class="string">&#x27;&quot;domain&quot;:&quot;$host&quot;,&#x27;</span></span><br><span class="line">       <span class="string">&#x27;&quot;xff&quot;:&quot;$http_x_forwarded_for&quot;,&#x27;</span></span><br><span class="line">       <span class="string">&#x27;&quot;referer&quot;:&quot;$http_referer&quot;,&#x27;</span></span><br><span class="line">       <span class="string">&#x27;&quot;tcp_xff&quot;:&quot;$proxy_protocol_addr&quot;,&#x27;</span></span><br><span class="line">       <span class="string">&#x27;&quot;http_user_agent&quot;:&quot;$http_user_agent&quot;,&#x27;</span></span><br><span class="line">       <span class="string">&#x27;&quot;status&quot;:&quot;$status&quot;&#125;&#x27;</span>;</span><br><span class="line"> access_log /var/log/nginx/access.log nginx_json;</span><br><span class="line"><span class="comment">#2.1 检查nginx语法是否有问题</span></span><br><span class="line">[root@elk01:1 ~]# nginx -t </span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line"><span class="comment">#2.2 重新nginx</span></span><br><span class="line">[root@elk01:1 ~]# systemctl restart nginx</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3.编写filebeat配置文件    （inputs&gt;<span class="built_in">log</span>）</span><br><span class="line">[root@elk01:1 ~]# <span class="built_in">cat</span> /etc/filebeat/04-nginx-es.yaml </span><br><span class="line">filebeat.inputs:</span><br><span class="line">- <span class="built_in">type</span>: <span class="built_in">log</span></span><br><span class="line">  json:</span><br><span class="line">    <span class="comment">#当json.keys_under_root的值为true时，会自动解析json格式，并将字段放在顶级字段中</span></span><br><span class="line">    keys_under_root: <span class="literal">true</span></span><br><span class="line">    <span class="comment">#当json格式解析错误时，可以将错误信息写入到event事件(指的是filebeat采集的每一条数据)中。</span></span><br><span class="line">    add_error_key: <span class="literal">true</span></span><br><span class="line">    <span class="comment">#如果采集的字段和filebeat自己的字段冲突，则覆盖数据</span></span><br><span class="line">    overwirte_kes: <span class="literal">true</span></span><br><span class="line">  paths:</span><br><span class="line">    - /var/log/nginx/access.log* </span><br><span class="line"></span><br><span class="line">output.console:</span><br><span class="line">  pretty: <span class="literal">true</span></span><br><span class="line">  </span><br><span class="line">2.启动filebeat实例</span><br><span class="line">[root@elk01:1 ~]# filebeat -e -c /etc/filebeat/03-log-console.yaml</span><br><span class="line">3.另开一个终端测试</span><br><span class="line">[root@elk01:1 ~]# curl 10.0.0.211</span><br><span class="line"><span class="comment">#查看filebeat收集日志</span></span><br><span class="line">1.这是未配置  json.keys_under_root: <span class="literal">true</span>  的展示</span><br><span class="line">  <span class="string">&quot;message&quot;</span>: <span class="string">&quot;&#123;\&quot;timestamp\&quot;:\&quot;2024-10-02T11:40:24+08:00\&quot;,\&quot;vhost\&quot;:\&quot;10.0.0.211\&quot;,\&quot;clientip\&quot;:\&quot;10.0.0.211\&quot;,\&quot;SendBytes\&quot;:612,\&quot;responsetime\&quot;:0.000,\&quot;upstreamtime\&quot;:\&quot;-\&quot;,\&quot;upstreamhost\&quot;:\&quot;-\&quot;,\&quot;http_host\&quot;:\&quot;10.0.0.211\&quot;,\&quot;uri\&quot;:\&quot;/index.nginx-debian.html\&quot;,\&quot;domain\&quot;:\&quot;10.0.0.211\&quot;,\&quot;xff\&quot;:\&quot;-\&quot;,\&quot;referer\&quot;:\&quot;-\&quot;,\&quot;tcp_xff\&quot;:\&quot;-\&quot;,\&quot;http_user_agent\&quot;:\&quot;curl/7.81.0\&quot;,\&quot;status\&quot;:\&quot;200\&quot;&#125;&quot;</span>,</span><br><span class="line">  </span><br><span class="line">2.这是配置json.keys_under_root: <span class="literal">true</span>的展示  （ip，状态码，时间戳都以顶级字段展示了，更加方便读取分析数据）</span><br><span class="line">  <span class="string">&quot;json&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;clientip&quot;</span>: <span class="string">&quot;10.0.0.211&quot;</span>,</span><br><span class="line">    <span class="string">&quot;domain&quot;</span>: <span class="string">&quot;10.0.0.211&quot;</span>,</span><br><span class="line">    <span class="string">&quot;timestamp&quot;</span>: <span class="string">&quot;2024-10-02T11:55:24+08:00&quot;</span>,</span><br><span class="line">    <span class="string">&quot;referer&quot;</span>: <span class="string">&quot;-&quot;</span>,</span><br><span class="line">    <span class="string">&quot;vhost&quot;</span>: <span class="string">&quot;10.0.0.211&quot;</span>,</span><br><span class="line">    <span class="string">&quot;http_host&quot;</span>: <span class="string">&quot;10.0.0.211&quot;</span>,</span><br><span class="line">    <span class="string">&quot;tcp_xff&quot;</span>: <span class="string">&quot;-&quot;</span>,</span><br><span class="line">    <span class="string">&quot;xff&quot;</span>: <span class="string">&quot;-&quot;</span>,</span><br><span class="line">    <span class="string">&quot;uri&quot;</span>: <span class="string">&quot;/index.nginx-debian.html&quot;</span>,</span><br><span class="line">    <span class="string">&quot;http_user_agent&quot;</span>: <span class="string">&quot;curl/7.81.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;responsetime&quot;</span>: 0,</span><br><span class="line">    <span class="string">&quot;upstreamhost&quot;</span>: <span class="string">&quot;-&quot;</span>,</span><br><span class="line">    <span class="string">&quot;SendBytes&quot;</span>: 612,</span><br><span class="line">    <span class="string">&quot;upstreamtime&quot;</span>: <span class="string">&quot;-&quot;</span>,</span><br><span class="line">    <span class="string">&quot;status&quot;</span>: <span class="string">&quot;200&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ES架构采集nginx日志并分析">ES架构采集nginx日志并分析</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1.编写filebeat吸入ES集群配置文件   （选择output&gt;Elasticsearch复制官方案例修改）</span></span><br><span class="line">[root@elk01:1 ~]# <span class="built_in">cat</span> /etc/filebeat/05-nginx-es.yaml </span><br><span class="line">filebeat.inputs:</span><br><span class="line">- <span class="built_in">type</span>: <span class="built_in">log</span></span><br><span class="line">  json:</span><br><span class="line">    keys_under_root: <span class="literal">true</span></span><br><span class="line">    add_error_key: <span class="literal">true</span></span><br><span class="line">    overwirte_kes: <span class="literal">true</span></span><br><span class="line">  paths:</span><br><span class="line">    - /var/log/nginx/access.log* </span><br><span class="line"></span><br><span class="line">output.elasticsearch:</span><br><span class="line">  hosts: [<span class="string">&quot;http://10.0.0.211:9200&quot;</span>,<span class="string">&quot;http://10.0.0.212:9200&quot;</span>,<span class="string">&quot;http://10.0.0.213:9200&quot;</span>] </span><br><span class="line">  </span><br><span class="line"><span class="comment">#2.启动filebeat实例</span></span><br><span class="line">[root@elk01:1 ~]# filebeat -e -c /etc/filebeat/05-nginx-es.yaml </span><br><span class="line"></span><br><span class="line"><span class="comment">#3.访问nginx服务</span></span><br><span class="line">[root@elk01:1 ~]# <span class="keyword">while</span> <span class="literal">true</span>;<span class="keyword">do</span> curl 10.0.0.211; <span class="built_in">sleep</span> 1 ;<span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>浏览器访问：10.0.0.211:5601</p><p><img src="https://cos.lukme.top/Pic/image-20241002155103512.png" alt="image-20241002155103512"></p><p><strong>创建索引</strong></p><p><img src="https://cos.lukme.top/Pic/image-20241002160236505.png" alt="image-20241002160236505"></p><p><strong>进入菜单栏选择Discover</strong></p><p><strong>查看数据（支持多条件查询）</strong></p><p><img src="https://cos.lukme.top/Pic/image-20241002160129138.png" alt="image-20241002160129138"></p><p><img src="https://cos.lukme.top/Pic/image-20241002161758175.png" alt="image-20241002161758175"></p><h2 id="ES的常见术语-分片">ES的常见术语-分片</h2><p><img src="https://cos.lukme.top/Pic/image-20241002160849403.png" alt="image-20241002160849403"></p><p><strong>index</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- index: 索引</span><br><span class="line">索引是一个逻辑的存储单元，一般用于标识不同的业务类型，因此索引的名称大家可以自定义。</span><br><span class="line">用户基于索引进行数据的读写。</span><br></pre></td></tr></table></figure><p><strong>shard</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- shard: 分片</span><br><span class="line">一个索引最少有一个分片，数据存储在分片中。</span><br><span class="line">当索引的分片数量大于1时，ES集群自动将分片分散地存储在不同的数据节点，而是实现了数据的分布式存储。</span><br></pre></td></tr></table></figure><blockquote><p>​    一个 分片 是一个底层的 工作单元 ，它仅保存了全部数据中的一部分。 在分片内部机制中，我们将详细介绍分片是如何工作的，而现在我们只需知道一个分片是一个 Lucene 的实例，以及它本身就是一个完整的搜索引擎。 我们的文档被存储和索引到分片内，但是应用程序是直接与索引而不是与分片进行交互。<br>​     Elasticsearch 是利用分片将数据分发到集群内各处的。分片是数据的容器，文档保存在分片内，分片又被分配到集群内的各个节点里。 当你的集群规模扩大或者缩小时， Elasticsearch 会自动的在各节点中迁移分片，使得数据仍然均匀分布在集群里。</p><p>​    一个分片可以是 主 分片或者 副本 分片。 索引内任意一个文档都归属于一个主分片，所以主分片的数目决定着索引能够保存的最大数据量。</p></blockquote><p><strong>replica</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">- replica: 副本</span><br><span class="line">每个分片有0个或多个副本，若副本数量大于0时，则可以实现对主分片的备份。为了方便理解将其分片主分片(primary shard)和副本分片(replica shard)。</span><br><span class="line">主分片(primary shard)和副本分片(replica shard)不能在同一台节点。</span><br><span class="line">主分片负责数据的读写，而副本分片只负责数据的读取和同步。</span><br><span class="line">当主分片和副本分片较多时，默认的写入策略为： <span class="string">&quot;(主分片数量 + 副本分片数量) / 2 + 1&quot;</span>，说白了，就是半数以上写入机制。</span><br><span class="line"></span><br><span class="line">比如1个主分片，和1个副本分片总共2个分片的数据相同，其写入策略为： (1 + 1) / 2 + 1，结果为：2，表示主分片和副本分片都必须写入成功则判定成功。</span><br></pre></td></tr></table></figure><blockquote><p>​    一个副本分片只是一个主分片的拷贝。副本分片作为硬件故障时保护数据不丢失的冗余备份，并为搜索和返回文档等读操作提供服务。<br>副本分片的主要目的就是为了故障转移，如果持有主分片的节点挂掉了，一个副本分片就会晋升为主分片的角色。在索引写入时，副本分片做着与主分片相同的工作。新文档首先被索引进主分片然后再同步到其它所有的副本分片。</p><p>​    增加副本数并不会增加索引容量，在索引建立的时候就已经确定了主分片数，但是副本分片数可以随时修改</p></blockquote><p>通俗理解</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">分片数（number_of_shards）就是主分片个数</span><br><span class="line">副本数（number_of_replicas） 可以理解成主分片的拷贝个数</span><br><span class="line">如果主分片数是5，则每个副本都有5个分片</span><br><span class="line">因此ES集群总的分片数 = 分片数 * (副本数 + 1)</span><br></pre></td></tr></table></figure><p><strong>副本数分配算法：</strong></p><blockquote><p>副本数 &lt;= ES集群的服务器个数 - 1</p></blockquote><p>副本除了提升查询效率，主要目的为了容灾，数据冗余存储，保证数据安全，因此，副本数应跟据ES集群中的数据库数量（N-1）进行配置，如果ES集群中有3台服务器，则副本数设置为2，减 1 因为主分片本身也算一份。副本数设置为2，数据实际上有3份，分散到3台服务器中。</p><blockquote><p>预估要存入ES总数据量 * (副本数+1) &lt;= ES集群的总内存 / 2</p></blockquote><p>存入ES搜索引擎 的数据可以预估，比如预估存入的数据有 100G，则实际上会占用的内存为 100G * (副本数+1) 加 1 因为计入了主分片，数量里超限了也可以存入，只要磁盘够大，但是计算时就可能用到了磁盘，磁盘的IO性能会让整个ES集群性能大副下降。</p><p>ES集群的总内存只取了一半，因为考虚 ES 的 java. 程序本身占用的内存，数据聚合运算消耗的内存，如果实际项目中大量复杂运算，占用的内存需要更多。</p><p><strong>分片数分配算法：</strong></p><blockquote><p>分片数 * (副本数 + 1) &lt;= ES集群的总CPU核心个数</p></blockquote><p>分片内的检索运算聚合需要 CPU， 为了充分发挥多核CPU的性能，且又避免CPU频繁调度，因此，ES集群内总的分片数应小于等于总的CPU核心个数。</p><p><strong>document</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">- document: 文档</span><br><span class="line">ES本身就是一个文档型数据库，和mangoDB类似。</span><br><span class="line">每个文件的数据分为两个部分： 元数据和源数据。</span><br><span class="line"></span><br><span class="line">1.元数据(metadata):</span><br><span class="line">用于描述源数据的数据。</span><br><span class="line">常见的字段如下:</span><br><span class="line">_index:</span><br><span class="line">表示文档隶属于哪个索引。</span><br><span class="line">_id:</span><br><span class="line">表示文档的唯一标识。</span><br><span class="line">_source:</span><br><span class="line">代表用户实际存储的数据。</span><br><span class="line"></span><br><span class="line">2.源数据(<span class="built_in">source</span> data):</span><br><span class="line">用户实际写入的数据。</span><br><span class="line"></span><br><span class="line">- allocation(分配):</span><br><span class="line">  指的是将索引的不同分片和副本分配到整个ES集群的过程，这个分配过程由ES集群自己实现。</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本篇讲述了基于EFK架构的日志收集部署及简单日志分析</summary>
    
    
    
    <category term="ELK日志收集" scheme="https://lukme.top/categories/ELK%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86/"/>
    
    
    <category term="ELK" scheme="https://lukme.top/tags/ELK/"/>
    
  </entry>
  
  <entry>
    <title>03-k8sPOD资源</title>
    <link href="https://lukme.top/posts/df6c32c8.html"/>
    <id>https://lukme.top/posts/df6c32c8.html</id>
    <published>2024-10-04T14:14:29.000Z</published>
    <updated>2024-10-06T14:17:32.938Z</updated>
    
    <content type="html"><![CDATA[<h2 id="k8s资源清单描述">k8s资源清单描述</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">ApiVersion:</span><br><span class="line">资源的版本，官方对每个资源规定了不同的版本，我们需要根据资源的版本进行书写。</span><br><span class="line">一般情况下，资源的版本很少变动，除非在升级过程中，随着功能的增强，版本可能也会微调。</span><br><span class="line"></span><br><span class="line">kind:</span><br><span class="line">资源的类型，K8S集群中一切皆资源。</span><br><span class="line"></span><br><span class="line">metadata:</span><br><span class="line">资源的元数据信息，包括但不限于： </span><br><span class="line">- 资源的名称;(常用)</span><br><span class="line">- 资源所属的名称空间;(常用)</span><br><span class="line">- 资源的标签;(常用)</span><br><span class="line">- 资源的注解;(早期版本常用)</span><br><span class="line">- 资源的创建时间;</span><br><span class="line">- ...</span><br><span class="line"></span><br><span class="line">spec:</span><br><span class="line">定义了用户对Pod的期望状态。用户可以做如下操作:</span><br><span class="line">- 指定节点调度;</span><br><span class="line">- 指定调度的亲和性或反亲和性;</span><br><span class="line">- 资源的数据是否进行持久化;</span><br><span class="line">- 资源的配置文件是否需要修改;</span><br><span class="line">- 资源的容器使用具体的镜像;</span><br><span class="line">- 资源的限制</span><br><span class="line">- 资源的认证信息</span><br><span class="line">- 资源的安全信息</span><br><span class="line">- ...</span><br><span class="line"></span><br><span class="line">status:</span><br><span class="line">资源实际的状态，比如调度到哪个worker节点，实际分配的IP地址，运行周期，重启次数等。</span><br><span class="line">该资源一般不需要人为定义，而是有K8S集群自身维护。</span><br></pre></td></tr></table></figure><h2 id="pod资源及资源清单">pod资源及资源清单</h2><p><strong>1.POD资源</strong></p><p><strong>kubernetes资源对象操作</strong></p><table><thead><tr><th>资源对象</th><th>增</th><th>删</th><th>改</th><th>查</th></tr></thead><tbody><tr><td>node</td><td></td><td>kubectl delete node</td><td></td><td>kubectl get nodes</td></tr><tr><td>namespace</td><td>kubectl create ns [资源名]</td><td>kubectl delete ns [资源名]</td><td>kubectl edit ns [资源名]</td><td>kubectl get ns</td></tr><tr><td>pod</td><td></td><td>kubectl delete pod [资源名]</td><td>kubectl edit pod[资源名]</td><td>kubectl get pod</td></tr></tbody></table><p><strong>查看集群节点状态</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# kubectl get nodes</span><br><span class="line">NAME     STATUS   ROLES    AGE     VERSION</span><br><span class="line">master   Ready    master   4d13h   v1.19.3</span><br><span class="line">node01   Ready    &lt;none&gt;   4d13h   v1.19.3</span><br><span class="line">node02   Ready    &lt;none&gt;   4d13h   v1.19.3</span><br><span class="line">node03   Ready    &lt;none&gt;   4d13h   v1.19.3</span><br></pre></td></tr></table></figure><p><strong>查看名称空间</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# kubectl get ns</span><br><span class="line">NAME              STATUS   AGE</span><br><span class="line">default           Active   4d13h</span><br><span class="line">kube-flannel      Active   4d12h</span><br><span class="line">kube-node-lease   Active   4d13h</span><br><span class="line">kube-public       Active   4d13h</span><br><span class="line">kube-system       Active   4d13h</span><br><span class="line">luay              Active   4h17m</span><br></pre></td></tr></table></figure><p><strong>查看pod  (默认default名称空间)</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# kubectl get pod</span><br><span class="line">NAME                     READY   STATUS    RESTARTS   AGE</span><br><span class="line">nginx-565785f75c-tpjmj   1/1     Running   0          6h8m</span><br><span class="line">nginx-pod                1/1     Running   0          5h43m</span><br></pre></td></tr></table></figure><p><strong>查看pod  (指定名称空间)</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# kubectl get pods -n luay</span><br><span class="line">NAME          READY   STATUS    RESTARTS   AGE</span><br><span class="line">busybox-pod   2/2     Running   0          3m30s</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@master ~]# kubectl get pod -n luay -o wide</span><br><span class="line">NAME          READY   STATUS    RESTARTS   AGE     IP         NODE     NOMINATED NODE   READINESS GATES</span><br><span class="line">busybox-pod   2/2     Running   0          4m14s   10.2.2.6   node03   &lt;none&gt;           &lt;none&gt;</span><br><span class="line"></span><br><span class="line">-n 指定命名空间</span><br><span class="line">-o 指定输出方式</span><br><span class="line">json：输出json格式</span><br><span class="line">yaml：输出yaml格式</span><br><span class="line">wide：输出详细信息</span><br></pre></td></tr></table></figure><p><strong>2.pod的资源清单</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[root@master01 ~]# vim nginx.yaml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-pod</span><br><span class="line">  namespace: default</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - image: nginx:alpine</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    name: nginx-containers</span><br><span class="line"></span><br><span class="line">`注释`</span><br><span class="line">apiVersion: v1       <span class="comment"># K8S资源接口</span></span><br><span class="line">kind: Pod            <span class="comment"># 资源类型</span></span><br><span class="line">metadata:            <span class="comment">#资源的元数据</span></span><br><span class="line">  name: nginx-pod    <span class="comment"># POD名字</span></span><br><span class="line">  namespace: default <span class="comment"># 指定资源启动在哪个名称空间，默认default</span></span><br><span class="line">spec:                <span class="comment">#容器相关信息</span></span><br><span class="line">  containers:        <span class="comment">#容器信息</span></span><br><span class="line">  - image: nginx:alpine           <span class="comment">#指定容器镜像</span></span><br><span class="line">    imagePullPolicy: IfNotPresent <span class="comment">#指定镜像拉取规则</span></span><br><span class="line">    name: nginx-containers        <span class="comment">#容器名字</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Always：总是拉取镜像，不管当前机器上是否有该镜像都拉取 nginx:latest</span><br><span class="line">Never：从不拉取镜像，需要提前docker pull</span><br><span class="line">IfNotPresent：如果镜像不存在，则拉取</span><br></pre></td></tr></table></figure><h2 id="pod报错及可能原因">pod报错及可能原因</h2><pre><code>1.ImagePullBackOff  问题原因:  镜像拉取失败。  可能原因：  1.可能是网络问题导致，检查Pod所在节点是否能够正常访问网络;  2.镜像名称写错，也可能会导致这个错误;  3.镜像是私有仓库，镜像无权限拉取;  2.ContainerCreating问题分析:容器正在创建阶段，等待容器创建，该过程包含拉取镜像的时间。3.Pending问题分析:任务已经被K8S集群接受，但是未调度到指定节点。可能原因:1.当前集群不正常工作，请检查集群状态，比如CNI组件未安装;2.指定的调度的节点不存在时也会出现这样的问题;3.端口冲突，无法完成调度;4.所有节点都被打上污点，且pod没有配置污点容忍也会导致该状态;4.CrashLoopBackOff问题分析:处于该状态，说明Pod内至少有一个容器正在重启。可能原因:1.可能是容器的守护进程运行命令结束导致的;5.Completed问题分析:容器正常退出，容器没有被强制中断。6.Running问题分析:至少有一个容器处于正常运行状态。7.Init:1/2 问题分析:当前的Pod处于初始化容器阶段，目前已经完成一个初始化容器，正在进行第二个容器初始化。8.PodInitializing问题分析:Pod正处于初始化阶段。9.ErrImageNeverPull 问题分析:将镜像下载策略设置为Never，且本地也没有缓存镜像，因此启动容器失败。10.OutOfcpu问题分析:一般情况下是由于CPU资源不足导致的。11.OutOfmemory问题分析:一般情况下是由于内存不足无法分配导致的。12.NodePorts问题分析:当前的worker节点的端口可能存在冲突。13.RunContainerError问题分析:运行容器时出错，可以通过kubectl describe pods &lt;POD_NAME&gt;查看详细的信息。14.ErrImagePull问题分析:拉取镜像是失败。可能原因:1.镜像名称写错了;2.没有访问权限;15.Terminating问题分析:Pod的容器正在删除，此过程可能需要等待一段时间，一般情况下不会超过30s。16.CreateContainerConfigError问题分析:运行容器出错，一般情下，是配置出错。17.ContainerStatusUnknown问题分析:容器重启策略为Nerver，且我们测试时将工作节点的容器直接删除啦。无法获取</code></pre><h2 id="资源清单编写案例">资源清单编写案例</h2><p><strong>基于一个pod部署wordpress</strong></p><p><strong>1.编写资源清单</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[root@master kubernetes]# <span class="built_in">cat</span> wordpress.yaml </span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: wordpress-pod</span><br><span class="line">spec:</span><br><span class="line"> <span class="comment"># 使用宿主机网络名称空间</span></span><br><span class="line">  hostNetwork: <span class="literal">true</span></span><br><span class="line">  containers:</span><br><span class="line">  - name: db</span><br><span class="line">    image: mysql:8.0</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    <span class="built_in">env</span>:</span><br><span class="line">    - name: MYSQL_ALLOW_EMPTY_PASSWORD</span><br><span class="line">      value: <span class="string">&quot;yes&quot;</span></span><br><span class="line">    - name: MYSQL_DATABASE</span><br><span class="line">      value: wp</span><br><span class="line">    - name: MYSQL_USER</span><br><span class="line">      value: wp_usre</span><br><span class="line">    - name: MYSQL_PASSWORD</span><br><span class="line">      value: <span class="string">&#x27;123&#x27;</span></span><br><span class="line">  - name: wp</span><br><span class="line">    image: wordpress:latest</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    <span class="built_in">env</span>:</span><br><span class="line">    - name: WORDPRESS_DB_HOST</span><br><span class="line">      value: <span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line">    - name: WORDPRESS_DB_NAME</span><br><span class="line">      value: wp</span><br><span class="line">    - name: WORDPRESS_DB_USER</span><br><span class="line">      value: wp_usre</span><br><span class="line">    - name: WORDPRESS_DB_PASSWORD</span><br><span class="line">      value: <span class="string">&#x27;123&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>2.根据资源清单创建pod</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@master kubernetes]# kubectl apply -f wordpress.yaml</span><br><span class="line"></span><br><span class="line">`因为使用的宿主机网络名称空间，需保证80端口不被占用`</span><br></pre></td></tr></table></figure><p><strong>3.查看pod节点信息</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@master kubernetes]# kubectl get pod -o wide</span><br><span class="line">NAME                     READY   STATUS    RESTARTS   AGE   IP           NODE    </span><br><span class="line">nginx-565785f75c-tpjmj   1/1     Running   0          8h    10.2.2.2     node03  </span><br><span class="line">nginx-pod                1/1     Running   0          8h    10.2.2.3     node03  </span><br><span class="line">wordpress-pod            2/2     Running   0          36m   10.0.0.203   node03  </span><br><span class="line"></span><br><span class="line"><span class="comment">#创建节点node03   ip 10.0.0.203</span></span><br><span class="line">浏览器访问10.0.0.203</span><br></pre></td></tr></table></figure><p><strong>基于一个pod起wordpress，做持久化</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">[root@master kubernetes]# <span class="built_in">cat</span> wordpress.yaml </span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: wordpress-pod</span><br><span class="line">  namespace: default</span><br><span class="line">  labels:</span><br><span class="line">    app: mysql</span><br><span class="line">    run: mysql</span><br><span class="line">spec:</span><br><span class="line"><span class="comment">#如果使用下面ports，这个可以不使用宿主机网络</span></span><br><span class="line">  hostNetwork: <span class="literal">true</span></span><br><span class="line">  volumes:</span><br><span class="line">  - name: mysql-data</span><br><span class="line">    hostPath:</span><br><span class="line">      path: /data/mysql</span><br><span class="line">  containers:</span><br><span class="line">  - name: db</span><br><span class="line">    image: mysql:8.0</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    <span class="built_in">env</span>:</span><br><span class="line">    - name: MYSQL_ALLOW_EMPTY_PASSWORD</span><br><span class="line">      value: <span class="string">&quot;yes&quot;</span></span><br><span class="line">    - name: MYSQL_DATABASE</span><br><span class="line">      value: wp</span><br><span class="line">    - name: MYSQL_USER</span><br><span class="line">      value: wp_usre</span><br><span class="line">    - name: MYSQL_PASSWORD</span><br><span class="line">      value: <span class="string">&#x27;123&#x27;</span></span><br><span class="line">    volumeMounts:</span><br><span class="line">    - name: mysql-data</span><br><span class="line">      mountPath: /var/lib/mysql</span><br><span class="line">      </span><br><span class="line">  - name: wp</span><br><span class="line">    image: wordpress:latest</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    <span class="comment">#相当于暴露端口，直接使用节点的宿主机ip访问即可·</span></span><br><span class="line">    ports:</span><br><span class="line">    - containerPort: 80</span><br><span class="line">      hostPort: 80</span><br><span class="line">    <span class="built_in">env</span>:</span><br><span class="line">    - name: WORDPRESS_DB_HOST</span><br><span class="line">      value: <span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line">    - name: WORDPRESS_DB_NAME</span><br><span class="line">      value: wp</span><br><span class="line">    - name: WORDPRESS_DB_USER</span><br><span class="line">      value: wp_usre</span><br><span class="line">    - name: WORDPRESS_DB_PASSWORD</span><br><span class="line">      value: <span class="string">&#x27;123&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="连接pod">连接pod</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 连接到POD</span></span><br><span class="line">[root@master01 kubernetes]# kubectl <span class="built_in">exec</span> -it nginx-pod -- /bin/sh</span><br><span class="line"></span><br><span class="line"><span class="comment">## 当一个POD中有多个容器时，使用-c指定容器名，连接到指定的容器</span></span><br><span class="line">[root@master01 kubernetes]# kubectl <span class="built_in">exec</span> -it nginx-busybox -c busybox-container -- /bin/sh</span><br></pre></td></tr></table></figure><h2 id="pod的网络共享">pod的网络共享</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.POD内的容器使用Container模式共享根容器的网络</span><br><span class="line">2.容器看到的网络设备信息和根容器完全相同</span><br><span class="line">3.POD内的多个容器可以使用localhost进行网络通讯</span><br><span class="line">4.POD内的多个容器不能绑定相同的端口</span><br><span class="line">5.POD的生命周期和根容器一样，如果根容器退出了，POD就退出了</span><br></pre></td></tr></table></figure><h2 id="pod的文件共享">pod的文件共享</h2><p><img src="C:/Users/Dell/AppData/Roaming/Typora/typora-user-images/image-20241002101149735.png" alt="image-20241002101149735"></p><h3 id="挂载方式hostPath">挂载方式hostPath</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">[root@master01 kubernetes]# <span class="built_in">cat</span> mysql.yaml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: mysql57-pod</span><br><span class="line">  namespace: default</span><br><span class="line">  labels:</span><br><span class="line">    app: mysql</span><br><span class="line">    run: mysql</span><br><span class="line">spec:</span><br><span class="line">  volumes:</span><br><span class="line">  - name: mysql-data</span><br><span class="line">  <span class="comment">#宿主机挂载的目录</span></span><br><span class="line">    hostPath:</span><br><span class="line">      path: /data/mysql</span><br><span class="line">  containers:</span><br><span class="line">  - name: mysql57-container</span><br><span class="line">    image: mysql:5.7</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">  <span class="built_in">env</span>:</span><br><span class="line">  - name: MYSQL_ROOT_PASSWORD</span><br><span class="line">    value: <span class="string">&#x27;123&#x27;</span></span><br><span class="line">  - name: MYSQL_DATABASE</span><br><span class="line">    value: <span class="string">&#x27;wordpress&#x27;</span></span><br><span class="line">  - name: MYSQL_USER</span><br><span class="line">    value: <span class="string">&#x27;wp_user&#x27;</span></span><br><span class="line">  - name: MYSQL_PASSWORD</span><br><span class="line">    value: <span class="string">&#x27;123&#x27;</span></span><br><span class="line">  <span class="comment">#传递命令指定字符集</span></span><br><span class="line">  args:</span><br><span class="line">  - --character-set-server=utf8mb4</span><br><span class="line">  - --collation-server=utf8mb4_unicode_ci</span><br><span class="line">  volumeMounts:</span><br><span class="line">  <span class="comment">#name要和上面挂载目录的name一致，mountPath是容器内的要挂载的目录</span></span><br><span class="line">  - name: mysql-data</span><br><span class="line">    mountPath: /var/lib/mysql</span><br></pre></td></tr></table></figure><h3 id="hostPath的type类型">hostPath的type类型</h3><blockquote><p>hostPath:<br>path: string<br>type : string</p><p>type 为空时为默认类型</p><p><code>官方：https://kubernetes.io/docs/concepts/storage/volumes/#hostpath</code></p></blockquote><table><thead><tr><th>type类型</th><th>说明</th></tr></thead><tbody><tr><td>“”</td><td>为空时   默认</td></tr><tr><td>DirectoryOrCreate</td><td>目录必须存在，权限必须是755</td></tr><tr><td>Directory</td><td>目录必须存在</td></tr><tr><td>FileOrCreate</td><td>文件必须存在，权限必须是644</td></tr><tr><td>File</td><td>文件必须存在</td></tr><tr><td>Socket</td><td>挂载socket文件</td></tr><tr><td>CharDevice</td><td>挂载字符设备文件（键盘，终端…）</td></tr><tr><td>BlockDevice</td><td>挂载快设备文件（磁盘，U盘，移动硬盘…）</td></tr></tbody></table><h3 id="挂载方式emptyDir">挂载方式emptyDir</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 将pod内容器目录映射到宿主机上的一个临时目录中，如果POD结束，目录也会被删除</span></span><br><span class="line">[root@master01 kubernetes]# <span class="built_in">cat</span> mysql.yaml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: mysql57-pod</span><br><span class="line">  namespace: default</span><br><span class="line">  labels:</span><br><span class="line">    app: mysql</span><br><span class="line">    run: mysql</span><br><span class="line">spec:</span><br><span class="line">  volumes:</span><br><span class="line">  - name: mysql-data</span><br><span class="line">    hostPath:</span><br><span class="line">      path: /data/mysql</span><br><span class="line">  - name: empty-data</span><br><span class="line">    emptyDir: &#123;&#125;</span><br><span class="line">  containers:</span><br><span class="line">  - name: mysql57-container</span><br><span class="line">    image: mysql:5.7</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">  <span class="built_in">env</span>:</span><br><span class="line">  - name: MYSQL_ROOT_PASSWORD</span><br><span class="line">    value: <span class="string">&#x27;123&#x27;</span></span><br><span class="line">  - name: MYSQL_DATABASE</span><br><span class="line">    value: <span class="string">&#x27;wordpress&#x27;</span></span><br><span class="line">  - name: MYSQL_USER</span><br><span class="line">    value: <span class="string">&#x27;wp_user&#x27;</span></span><br><span class="line">  - name: MYSQL_PASSWORD</span><br><span class="line">    value: <span class="string">&#x27;123&#x27;</span></span><br><span class="line">  args:</span><br><span class="line">  - --character-set-server=utf8mb4</span><br><span class="line">  - --collation-server=utf8mb4_unicode_ci</span><br><span class="line">  volumeMounts:</span><br><span class="line">  - name: empty-data</span><br><span class="line">    mountPath: /var/lib/mysql</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">## 将一个POD内的两个容器共享目录</span></span><br><span class="line">[root@master01 kubernetes]# <span class="built_in">cat</span> busybox.yaml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-busybox</span><br><span class="line">  namespace: default</span><br><span class="line">spec:</span><br><span class="line">  volumes:</span><br><span class="line">  - name: empty-data</span><br><span class="line">    emptyDir: &#123;&#125;</span><br><span class="line">  containers:</span><br><span class="line">  - name: nginx-container</span><br><span class="line">    image: nginx:alpine</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    volumeMounts:</span><br><span class="line">    - name: empty-data</span><br><span class="line">      mountPath: /usr/share/nginx/html</span><br><span class="line">  - name: c7-container</span><br><span class="line">    image: centos:7</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    <span class="built_in">command</span>: [<span class="string">&quot;/bin/sh&quot;</span>,<span class="string">&quot;-c&quot;</span>,<span class="string">&quot;tail -f /etc/hosts&quot;</span>]</span><br><span class="line">    volumeMounts:</span><br><span class="line">    - name: empty-data</span><br><span class="line">      mountPath: /opt/ html</span><br></pre></td></tr></table></figure><h2 id="标签的使用及设置">标签的使用及设置</h2><h3 id="node节点打标签">node节点打标签</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">kubectl get [资源] -n 名称空间 --show-labels</span><br><span class="line"><span class="comment">## 查看node标签</span></span><br><span class="line">[root@master01 ~]# kubectl get nodes --show-labels</span><br><span class="line"></span><br><span class="line"><span class="comment">#给node打标签</span></span><br><span class="line">[root@master01 ~]# kubectl label node node01 MEM=16g</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看node角色标签role</span></span><br><span class="line">[root@master kubernetes]# kubectl get nodes </span><br><span class="line">NAME     STATUS   ROLES    AGE     VERSION</span><br><span class="line">master   Ready    master   5d15h   v1.19.3</span><br><span class="line">node01   Ready    None     5d15h   v1.19.3</span><br><span class="line">node02   Ready    None     5d15h   v1.19.3</span><br><span class="line">node03   Ready    None     5d15h   v1.19.3</span><br><span class="line"></span><br><span class="line"><span class="comment">#给node角色标签role</span></span><br><span class="line">[root@master kubernetes]# kubectl label node node01 node-role.kubernetes.io/node=</span><br><span class="line">[root@master kubernetes]# kubectl get nodes</span><br><span class="line">NAME     STATUS   ROLES        AGE     VERSION</span><br><span class="line">master   Ready    master       5d15h   v1.19.3</span><br><span class="line">node01   Ready    node         5d15h   v1.19.3</span><br><span class="line">node02   Ready    None         5d15h   v1.19.3</span><br><span class="line">node03   Ready    None         5d15h   v1.19.3</span><br><span class="line"></span><br><span class="line">kubectl label node node01 node-role.kubernetes.io/node=</span><br><span class="line">                   节点名    调用接口             /roles标签名=</span><br><span class="line">                   </span><br><span class="line"><span class="comment">#删除node角色标签role</span></span><br><span class="line">[root@master kubernetes]# kubectl label node node01 node-role.kubernetes.io/node-</span><br></pre></td></tr></table></figure><h3 id="给pod打标签">给pod打标签</h3><p><strong>给pod打标签</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看pod标签</span></span><br><span class="line">[root@master kubernetes]# kubectl get pods --show-labels </span><br><span class="line">NAME                     READY   STATUS    RESTARTS   AGE     LABELS</span><br><span class="line">nginx-565785f75c-tpjmj   1/1     Running   2          33h     app=nginx</span><br><span class="line">nginx-pod                1/1     Running   2          33h     &lt;none&gt;</span><br><span class="line">wordpress-pod            2/2     Running   0          2m11s   &lt;none&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#打标签</span></span><br><span class="line">kubectl label 资源类型 资源名 标签</span><br><span class="line">[root@master kubernetes]# kubectl label pod nginx-pod name=nginx</span><br><span class="line"><span class="string">&#x27;pod/nginx-pod labeled</span></span><br><span class="line"><span class="string">[root@master kubernetes]# kubectl get pods --show-labels </span></span><br><span class="line"><span class="string">NAME                     READY   STATUS    RESTARTS   AGE     LABELS</span></span><br><span class="line"><span class="string">nginx-565785f75c-tpjmj   1/1     Running   2          33h     app=nginx</span></span><br><span class="line"><span class="string">nginx-pod                1/1     Running   2          33h     name=nginx</span></span><br></pre></td></tr></table></figure><p><strong>使用资源清单打标签</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">Kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-pod</span><br><span class="line">  namespace: default</span><br><span class="line">  labels:</span><br><span class="line">    run: nginx</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: nginx-container</span><br><span class="line">    image: nginx:alpine</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br></pre></td></tr></table></figure><p><strong>利用标签，启动pod在指定标签的node上</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@master01 kubernetes]# <span class="built_in">cat</span> nginx-2.yaml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-pod-v2</span><br><span class="line">  namespace: default</span><br><span class="line">  labels:</span><br><span class="line">    run: nginx</span><br><span class="line">spec:</span><br><span class="line"><span class="comment">#这里是选择起在标签是MEM: 16g的node节点上，使用kubectl get nodes --show-labels 查看node标签</span></span><br><span class="line">  nodeSelector:</span><br><span class="line">  MEM: 16g</span><br><span class="line">  containers:</span><br><span class="line">  - name: nginx-container-v2</span><br><span class="line">    image: nginx:alpine</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br></pre></td></tr></table></figure><h3 id="删除pod标签">删除pod标签</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">kubectl label [资源] [资源名] [标签名、标签key]-</span><br><span class="line"><span class="comment">#查看当前pod有的标签</span></span><br><span class="line">[root@master kubernetes]# kubectl get pods --show-labels</span><br><span class="line">NAME                     READY   STATUS    RESTARTS   AGE   LABELS</span><br><span class="line">nginx-565785f75c-tpjmj   1/1     Running   2          35h   app=nginx,pod-template-hash=565785f75c</span><br><span class="line">nginx-pod                1/1     Running   2          34h   name=nginx</span><br><span class="line">wordpress-pod            2/2     Running   0          39m   &lt;none&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#删除pod标签</span></span><br><span class="line">[root@master kubernetes]# kubectl label pod nginx-pod name-</span><br><span class="line">pod/nginx-pod labeled</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看</span></span><br><span class="line">[root@master kubernetes]# kubectl get pods --show-labels</span><br><span class="line">NAME                     READY   STATUS    RESTARTS   AGE   LABELS</span><br><span class="line">nginx-565785f75c-tpjmj   1/1     Running   2          35h   app=nginx,pod-template-hash=565785f75c</span><br><span class="line">nginx-pod                1/1     Running   2          34h   &lt;none&gt;</span><br><span class="line">wordpress-pod            2/2     Running   0          39m   &lt;none&gt;</span><br></pre></td></tr></table></figure><h3 id="根据标签查找pod">根据标签查找pod</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@master kubernetes]# kubectl get pod --show-labels -l app</span><br><span class="line">NAME                     READY   STATUS    RESTARTS   AGE   LABELS</span><br><span class="line">nginx-565785f75c-tpjmj   1/1     Running   2          35h   app=nginx,pod-template-hash=565785f75c</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用  `-l`  查找指定的pod</span></span><br></pre></td></tr></table></figure><h3 id="根据标签删除pod">根据标签删除pod</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@master kubernetes]# kubectl delete pod -l app=nginx</span><br></pre></td></tr></table></figure><h2 id="kubectl用于排错命令">kubectl用于排错命令</h2><h3 id="describe">describe</h3><blockquote><p><code> kubectl describe pod</code></p><p>查看相关 Pod 的详细信息，帮助我们了解 Pod 的状态、配置和运行状况。尤其是Events可以帮助我们做一些故障排查。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# kubectl describe pod busybox-pod -n luay</span><br><span class="line"><span class="comment">#如果查看的pod的名称空间不是默认default，则需要指定 -n</span></span><br><span class="line">···</span><br><span class="line">Events:</span><br><span class="line">  Type    Reason     Age   From               Message</span><br><span class="line">  ----    ------     ----  ----               -------</span><br><span class="line">  Normal  Scheduled  18m   default-scheduler  Successfully assigned luay/busybox-pod to node03</span><br><span class="line">  Normal  Pulled     18m   kubelet            Container image <span class="string">&quot;busybox&quot;</span> already present on machine</span><br><span class="line">  Normal  Created    18m   kubelet            Created container busybox-container</span><br><span class="line">  Normal  Started    18m   kubelet            Started container busybox-container</span><br><span class="line">  Normal  Pulled     18m   kubelet            Container image <span class="string">&quot;nginx:alpine&quot;</span> already present on machine</span><br><span class="line">  Normal  Created    18m   kubelet            Created container nginx-container</span><br><span class="line">  Normal  Started    18m   kubelet            Started container nginx-container</span><br><span class="line">  </span><br><span class="line"><span class="comment">#查看node节点信息</span></span><br><span class="line">[root@master ~]# kubectl describe node master01</span><br></pre></td></tr></table></figure><h3 id="logs">logs</h3><blockquote><p><code> kubectl logs 资源名</code>   可以使用kubectl get pod  查看资源名</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;kubectl logs 资源名称&#x27;</span></span><br><span class="line">[root@master ~]# kubectl logs mysql80 </span><br><span class="line"></span><br><span class="line"><span class="comment">#实时查看日志</span></span><br><span class="line">[root@master ~]# kubectl logs -f mysql80 </span><br><span class="line"></span><br><span class="line"><span class="comment">#基于一个Pod内多个容器查看指的容器的日志   -c  指定容器名</span></span><br><span class="line">[root@master ~]# kubectl logs -f multiple-wordpress -c db</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;multiple-wordpress&#x27;</span> pod名</span><br><span class="line">-c 指定pod里的某一个容器名</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看pod上一个容器的日志（前提是该容器存在，若移除了则看不到）</span></span><br><span class="line"><span class="string">&#x27;这种情况存在于，杀掉了pod里某个容器，又被kubelet重新拉取了另一个新的容器,-p查看上个容器日志&#x27;</span></span><br><span class="line">[root@master ~]#  kubectl logs -f mysql80 -p</span><br><span class="line"><span class="string">&#x27;mysql80&#x27;</span> 容器名   ----待验证</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看5分钟内的日志信息， 默认是查看所有日志，可以自定义指定时间，例如: 5s, 2m, or 3h.</span></span><br><span class="line">[root@master ~]# kubectl logs -f mysql80 --since  5m</span><br></pre></td></tr></table></figure><h3 id="cp">cp</h3><p><strong>将本地的文件拷贝到Pod的容器中</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# kubectl <span class="built_in">cp</span> wordpress.yaml mysql80:/tmp</span><br><span class="line"></span><br><span class="line">如何查看？</span><br><span class="line">[root@master ~]# kubectl <span class="built_in">exec</span> -it mysql80 --<span class="built_in">ls</span> /tmp</span><br><span class="line">类似于docker <span class="built_in">exec</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#如果有多个容器，则需要使用-c指定 </span></span><br><span class="line">kubectl <span class="built_in">cp</span>  wordpress.yaml  -c wp multiple-wordpress:/</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;multiple-wordpress&#x27;</span>   <span class="comment">#pod名   ---待验证</span></span><br><span class="line"><span class="string">&#x27;wp&#x27;</span> <span class="comment">#容器名</span></span><br><span class="line"></span><br><span class="line">如果有多个容器，则需要使用-c指定容器的名称，若不指定，则默认Pod连接第一个容器</span><br></pre></td></tr></table></figure><h3 id="explain">explain</h3><p><strong>查看指定字段的帮助信息</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# kubectl explain pods.</span><br><span class="line">[root@master ~]# kubectl explain pods.metadata</span><br><span class="line">[root@master ~]# kubectl explain pods.metadata.name</span><br><span class="line">[root@master ~]# kubectl explain pods.spec.containers</span><br></pre></td></tr></table></figure><p><strong>常见的资源类型</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;string&gt;：</span><br><span class="line">表示一个字符串。</span><br><span class="line"></span><br><span class="line">&lt;Object&gt;:</span><br><span class="line">表示有下级字段。</span><br><span class="line"></span><br><span class="line"> &lt;[]Object&gt;:</span><br><span class="line">表示数组对象说可以有多个，每个对象的区分使用<span class="string">&quot;-&quot;</span>，同一个对象数组内的相关字段可以相互交换。</span><br><span class="line"></span><br><span class="line">&lt;boolean&gt;:</span><br><span class="line">只有<span class="literal">true</span>和<span class="literal">false</span>两个有效值。</span><br><span class="line"></span><br><span class="line">&lt;<span class="built_in">integer</span>&gt;:</span><br><span class="line">整型，表示的是一个整数。</span><br><span class="line"></span><br><span class="line">-required-</span><br><span class="line">表示该字段必须定义，不定义则会报错。</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">上干货了，k8s的POD资源以及网络共享，文件挂载等在这里都能看到</summary>
    
    
    
    <category term="kubernetes" scheme="https://lukme.top/categories/kubernetes/"/>
    
    
    <category term="kubernetes" scheme="https://lukme.top/tags/kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>02-k8s部署</title>
    <link href="https://lukme.top/posts/24ecfc3b.html"/>
    <id>https://lukme.top/posts/24ecfc3b.html</id>
    <published>2024-10-02T16:49:49.000Z</published>
    <updated>2024-10-06T14:13:40.873Z</updated>
    
    <content type="html"><![CDATA[<h2 id="环境准备">环境准备</h2><table><thead><tr><th>主机名</th><th>WanIP</th><th>LanIP</th><th>角色</th><th>应用</th><th>配置</th></tr></thead><tbody><tr><td>master01</td><td>10.0.0.200</td><td>172.16.1.200</td><td>master</td><td>kubectl、apiserver、 scheduler、controller、 etcd、kubelet、docker、 kube-proxy</td><td>1h2g</td></tr><tr><td>node01</td><td>10.0.0.201</td><td>172.16.1.201</td><td>node</td><td>kubelet、docker、kubeproxy、proxy</td><td>1h2g</td></tr><tr><td>node02</td><td>10.0.0.202</td><td>172.16.1.202</td><td>node</td><td>kubelet、docker、kubeproxy、proxy</td><td>1h2g</td></tr><tr><td>node03</td><td>10.0.0.203</td><td>172.16.1.203</td><td>node</td><td>kubelet、docker、kubeproxy、proxy</td><td>2h4g</td></tr></tbody></table><p><strong>IP规划</strong></p><table><thead><tr><th>三种Service</th><th>IP</th></tr></thead><tbody><tr><td>PodIP</td><td>10.2.0.0</td></tr><tr><td>ClusterIP</td><td>10.1.0.0</td></tr><tr><td>NodeIP</td><td>10.0.0.0</td></tr></tbody></table><h2 id="基础环境优化">基础环境优化</h2><blockquote><p>注意：四个节点都操作</p></blockquote><p><strong>1.配置kubelet配置文件，使用系统自带的Cgroup驱动和禁用swap</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# <span class="built_in">cat</span> &gt;/etc/sysconfig/kubelet &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">KUBELET_CGROUP_ARGS=&quot;--cgroup-driver=systemd&quot;</span></span><br><span class="line"><span class="string">KUBELET_EXTRA_ARGS=&quot;--fail-swap-on=false&quot;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">`注释`</span><br><span class="line"><span class="comment">## 让kubelet使用系统自带的Cgroup驱动</span></span><br><span class="line">KUBELET_CGROUP_ARGS=<span class="string">&quot;--cgroup-driver=systemd&quot;</span></span><br><span class="line"><span class="comment">## 让kubelet禁止使用swap（虚拟内存）</span></span><br><span class="line">KUBELET_EXTRA_ARGS=<span class="string">&quot;--fail-swap-on=false&quot;</span></span><br></pre></td></tr></table></figure><p><strong>2.内核参数调优</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]#  <span class="built_in">cat</span> &gt; /etc/sysctl.d/k8s.conf &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-iptables=1</span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-ip6tables=1</span></span><br><span class="line"><span class="string">net.ipv4.ip_forward=1</span></span><br><span class="line"><span class="string">vm.swappiness=0</span></span><br><span class="line"><span class="string">fs,file-max=52706963</span></span><br><span class="line"><span class="string">fs.nr_open=52706963</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">`注释`</span><br><span class="line"><span class="comment">## 开启iptables功能 ipv6</span></span><br><span class="line">net.bridge.bridge-nf-call-ip6tables=1</span><br><span class="line"><span class="comment">## 开启iptables功能 ipv4</span></span><br><span class="line">net.bridge.bridge-nf-call-iptables=1</span><br><span class="line"><span class="comment">## 开启内核转发</span></span><br><span class="line">net.ipv4.ip_forward=1</span><br><span class="line"><span class="comment">## 内核参数禁用swap</span></span><br><span class="line">vm.swappiness=0</span><br><span class="line"><span class="comment">## 文件描述符文件最大值</span></span><br><span class="line">fs,file-max=52706963</span><br><span class="line"><span class="comment">## 文件描述符开启数量</span></span><br><span class="line">fs.nr_open=52706963</span><br></pre></td></tr></table></figure><p><strong>3.更改docker源</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#添加docekr源</span></span><br><span class="line">[root@master ~]#  <span class="built_in">cat</span> &gt; /etc/yum.repos.d/docker-ce.repo &lt;&lt;<span class="string">&quot;EOF&quot;</span></span><br><span class="line">[docker-ce-stable]</span><br><span class="line">name=Docker CE Stable - <span class="variable">$basearch</span></span><br><span class="line">baseurl=https://download.docker.com/linux/centos/<span class="variable">$releasever</span>/<span class="variable">$basearch</span>/stable</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=https://download.docker.com/linux/centos/gpg</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#替换为华为源</span></span><br><span class="line">[root@master ~]# sed -i <span class="string">&#x27;s+download.docker.com+mirrors.huaweicloud.com/docker-ce+&#x27;</span> /etc/yum.repos.d/docker-ce.repo</span><br></pre></td></tr></table></figure><p><strong>4.安装时间同步服务</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# yum install -y chrony</span><br><span class="line">[root@master ~]# systemctl start chronyd</span><br><span class="line">[root@master ~]# systemctl <span class="built_in">enable</span> chronyd</span><br></pre></td></tr></table></figure><p><strong>5.关闭swap</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#临时关闭swap</span></span><br><span class="line">[root@master ~]#  swapoff -a &amp;&amp; sysctl -w vm.swappiness=0</span><br><span class="line"><span class="comment">#永久关闭</span></span><br><span class="line">[root@master ~]#  sed -i <span class="string">&#x27;/swap/d&#x27;</span> /etc/fstab</span><br><span class="line"><span class="comment">#查看是否关闭</span></span><br><span class="line">[root@master ~]# free -h</span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:           1.9G         95M        1.6G        9.5M        283M        1.7G</span><br><span class="line">Swap:            0B          0B          0B</span><br></pre></td></tr></table></figure><p><strong>6.加载ipvs模块</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# <span class="built_in">cat</span>  &gt; /etc/sysconfig/modules/ipvs.modules &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">#! /bin/bash</span></span><br><span class="line"><span class="string">modprobe -- ip_vs</span></span><br><span class="line"><span class="string">modprobe -- ip_vs_rr</span></span><br><span class="line"><span class="string">modprobe -- ip_vs_wrr</span></span><br><span class="line"><span class="string">modprobe -- ip_vs_sh</span></span><br><span class="line"><span class="string">modprobe -- nf_conntrack_ipv4</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#授权</span></span><br><span class="line">[root@master ~]# <span class="built_in">chmod</span> +x /etc/sysconfig/modules/ipvs.modules</span><br><span class="line"><span class="comment">#source使生效</span></span><br><span class="line">[root@master ~]# <span class="built_in">source</span> /etc/sysconfig/modules/ipvs.modules</span><br><span class="line"><span class="comment">#查看是否生效</span></span><br><span class="line">[root@master ~]# lsmod|grep -e <span class="string">&#x27;ip_vs&#x27;</span> -e <span class="string">&#x27;nf_conntrack_ipv&#x27;</span></span><br><span class="line">nf_conntrack_ipv4      15053  0 </span><br><span class="line">nf_defrag_ipv4         12729  1 nf_conntrack_ipv4</span><br><span class="line">ip_vs_sh               12688  0 </span><br><span class="line">ip_vs_wrr              12697  0 </span><br><span class="line">ip_vs_rr               12600  0 </span><br><span class="line">ip_vs                 145497  6 ip_vs_rr,ip_vs_sh,ip_vs_wrr</span><br><span class="line">nf_conntrack          133095  2 ip_vs,nf_conntrack_ipv4</span><br><span class="line">libcrc32c              12644  3 xfs,ip_vs,nf_conntrack</span><br><span class="line"></span><br><span class="line"><span class="comment">#了解下IPVS  LVS:ipvsadm</span></span><br></pre></td></tr></table></figure><h2 id="安装docker">安装docker</h2><blockquote><p>注意：所有节点执行</p></blockquote><p><strong>1.安装指定版本docekr和容器运行时</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# yum install -y docker-ce-19.03.15 docker-ce-cli-19.03.15 containerd.io</span><br><span class="line"></span><br><span class="line">`容器运行时，Docker、containerd、CRI-O`</span><br></pre></td></tr></table></figure><p><strong>2.启动和开机自启</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# systemctl start docker</span><br><span class="line">[root@master ~]# systemctl <span class="built_in">enable</span> docker</span><br></pre></td></tr></table></figure><p><strong>3.添加docker镜像加速</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# <span class="built_in">cat</span> &gt; /etc/docker/daemon.json &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    &quot;exec-opts&quot;: [&quot;native.cgroupdriver=systemd&quot;],</span></span><br><span class="line"><span class="string">    &quot;registry-mirrors&quot;: [</span></span><br><span class="line"><span class="string">    &quot;https://docker.1panel.live&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://dockercf.jsdelivr.fyi&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://docker-cf.registry.cyou&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://docker.chenby.cn&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://docker.jsdelivr.fyi&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://docker.m.daocloud.io&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://docker.m.daocloud.io&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://docker.mirrors.sjtug.sjtu.edu.cn&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://docker.mirrors.ustc.edu.cn&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://docker.nju.edu.cn&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://dockerproxy.com&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://docker.rainbond.cc&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://docker.registry.cyou&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://dockertest.jsdelivr.fyi&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://hub-mirror.c.163.com&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://hub.rat.dev/&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://mirror.aliyuncs.com&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://mirror.baidubce.com&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://mirror.iscas.ac.cn&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://registry.docker-cn.com&quot;</span></span><br><span class="line"><span class="string">  ]</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">`<span class="string">&quot;exec-opts&quot;</span>: [<span class="string">&quot;native.cgroupdriver=systemd&quot;</span>], `#镜像加速使用系统Cgroup驱动</span><br></pre></td></tr></table></figure><p><strong>4.重启docerk</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# systemctl daemon-reload</span><br><span class="line">[root@master ~]# systemctl restart docker</span><br></pre></td></tr></table></figure><h2 id="安装kubeadm">安装kubeadm</h2><blockquote><p>注意：所有节点执行</p></blockquote><p><strong>1.更换kubernetes的yum源</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">&quot;EOF&quot;</span> &gt; /etc/yum.repos.d/kubernetes.repo</span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=https://mirrors.huaweicloud.com/kubernetes/yum/repos/kubernetes-el7-<span class="variable">$basearch</span></span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">repo_gpgcheck=0</span><br><span class="line">gpgkey=https://mirrors.huaweicloud.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.huaweicloud.com/kubernetes/yum/doc/rpm-package-key.gpg</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p><strong>2.下载指定版本kubernetes</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# yum install kubelet-1.19.3 kubeadm-1.19.3  kubectl-1.19.3  ipvsadm -y</span><br><span class="line"></span><br><span class="line">`kubelet`: node节点容器运行时的控制器 </span><br><span class="line">`kubeadm`: 做k8s集群 kubectl k8s的命令客户端</span><br><span class="line">`ipvsadm`: 加载ipvs模块</span><br></pre></td></tr></table></figure><p><strong>3.启动并加入开机自启</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# systemctl start kubelet</span><br><span class="line">[root@master ~]# systemctl <span class="built_in">enable</span> kubelet</span><br></pre></td></tr></table></figure><h2 id="初始化集群">初始化集群</h2><blockquote><p>:dango:注意：仅master节点执行</p><p>步骤1-3都是master节点执行</p></blockquote><p><strong>1.初始化集群</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# kubeadm init \</span><br><span class="line">--apiserver-advertise-address=10.0.0.200 \</span><br><span class="line">--image-repository registry.aliyuncs.com/google_containers  \</span><br><span class="line">--kubernetes-version=v1.19.3 \</span><br><span class="line">--service-cidr=10.1.0.0/16 \</span><br><span class="line">--pod-network-cidr=10.2.0.0/16 \</span><br><span class="line">--service-dns-domain=cluster.local \</span><br><span class="line">--ignore-preflight-errors=Swap \</span><br><span class="line">--ignore-preflight-errors=NumCPU</span><br><span class="line"></span><br><span class="line">`注释`</span><br><span class="line">`--apiserver-advertise-address=10.0.0.200`  <span class="comment">#当前master主机ip</span></span><br><span class="line">`--service-cidr=10.1.0.0/16` <span class="comment">#规划ClusterIP网段</span></span><br><span class="line">`--pod-network-cidr=10.2.0.0/16` <span class="comment">#规划的podIP</span></span><br><span class="line">`--service-dns-domain=cluster.local` <span class="comment">#使用本地DNS集群，k8会自己装Coredns</span></span><br><span class="line">`--ignore-preflight-errors=Swap`<span class="comment">#忽略Swap报错</span></span><br><span class="line">`--ignore-preflight-errors=NumCPU`<span class="comment">#忽略CPU报错</span></span><br><span class="line"></span><br><span class="line">`ClusterIP`: 用于构建容器化应用的内部通信网络，作为POD的负载均衡</span><br><span class="line"></span><br><span class="line"><span class="comment">###初始化时间比较长，没有报错等待即可</span></span><br></pre></td></tr></table></figure><p><strong>保存token</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">`初始化成功后会输入如下，你的和我的不一样，注意保存,24h后会消失`</span><br><span class="line">Your Kubernetes control-plane has initialized successfully!</span><br><span class="line">To start using your cluster, you need to run the following as a regular user:</span><br><span class="line">`#这个命令也保存，等一下直接复制执行`</span><br><span class="line">  <span class="built_in">mkdir</span> -p <span class="variable">$HOME</span>/.kube</span><br><span class="line">  <span class="built_in">sudo</span> <span class="built_in">cp</span> -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">  <span class="built_in">sudo</span> <span class="built_in">chown</span> $(<span class="built_in">id</span> -u):$(<span class="built_in">id</span> -g) <span class="variable">$HOME</span>/.kube/config</span><br><span class="line"></span><br><span class="line">You should now deploy a pod network to the cluster.</span><br><span class="line">Run <span class="string">&quot;kubectl apply -f [podnetwork].yaml&quot;</span> with one of the options listed at:</span><br><span class="line">  https://kubernetes.io/docs/concepts/cluster-administration/addons/</span><br><span class="line">Then you can <span class="built_in">join</span> any number of worker nodes by running the following on each as root:</span><br><span class="line">kubeadm <span class="built_in">join</span> 10.0.0.200:6443 --token ao4unc.i520imoy7frmmucj \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:77e1fdf379200e1e377304865da17a4f35212955eaf331d2df736c452a2e82f8 </span><br></pre></td></tr></table></figure><blockquote><p>!!!  到这一步前面没报错就可以打快照，万一后面出错方便回滚，建议所有节点都可以打一次，如果报错可以回滚到同一起始点</p></blockquote><blockquote><p>!! 如果时间太久忘记加入令牌的命令，执行命令</p><p><code>kubeadm token create --print-join-command</code></p><p>获取新的join令牌</p></blockquote><p><strong>2.创建配置文件目录</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]#   <span class="built_in">mkdir</span> -p <span class="variable">$HOME</span>/.kube</span><br><span class="line">[root@master ~]#   <span class="built_in">sudo</span> <span class="built_in">cp</span> -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">[root@master ~]#   <span class="built_in">sudo</span> <span class="built_in">chown</span> $(<span class="built_in">id</span> -u):$(<span class="built_in">id</span> -g) <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">`直接复制上面的三条输出`</span><br></pre></td></tr></table></figure><p><strong>3.查看k8s集群节点</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# kubectl get nodes</span><br><span class="line">NAME     STATUS     ROLES    AGE   VERSION</span><br><span class="line">master   NotReady   master   11m   v1.19.3</span><br></pre></td></tr></table></figure><p><strong>4.其他node节点加入集群</strong></p><blockquote><p>注意：这里是3个node节点执行  <code>复制自己的，含有token的命令，不要复制我的</code></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@node01 ~]# kubeadm <span class="built_in">join</span> 10.0.0.200:6443 --token ao4unc.i520imoy7frmmucj \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:77e1fdf379200e1e377304865da17a4f35212955eaf331d2df736c452a2e82f8 </span><br><span class="line">    </span><br><span class="line">[root@node02 ~]# kubeadm <span class="built_in">join</span> 10.0.0.200:6443 --token ao4unc.i520imoy7frmmucj \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:77e1fdf379200e1e377304865da17a4f35212955eaf331d2df736c452a2e82f8 </span><br><span class="line"></span><br><span class="line">[root@node03 ~]# kubeadm <span class="built_in">join</span> 10.0.0.200:6443 --token ao4unc.i520imoy7frmmucj \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:77e1fdf379200e1e377304865da17a4f35212955eaf331d2df736c452a2e82f8 </span><br><span class="line">···</span><br><span class="line">Run <span class="string">&#x27;kubectl get nodes&#x27;</span> on the control-plane to see this node <span class="built_in">join</span> the cluster.</span><br></pre></td></tr></table></figure><p><strong>5.查看k8s集群</strong></p><blockquote><p>去master节点看</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# kubectl get nodes</span><br><span class="line">NAME     STATUS     ROLES    AGE     VERSION</span><br><span class="line">master   NotReady   master   17m     v1.19.3</span><br><span class="line">node01   NotReady   &lt;none&gt;   3m12s   v1.19.3</span><br><span class="line">node02   NotReady   &lt;none&gt;   3m32s   v1.19.3</span><br><span class="line">node03   NotReady   &lt;none&gt;   3m27s   v1.19.3</span><br><span class="line">`看到四个节点NotReady即OK，因为还未配置网络，不能跨主机通信`</span><br></pre></td></tr></table></figure><p><strong>6.设置Kube-proxy使用ipvs模式</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">`k8s默认使用的是iptables防火墙，可以修改成性能更高的ipvs模式，该模式LVS也在使用`</span><br><span class="line">[root@master01 ~]# kubectl edit cm kube-proxy -n kube-system</span><br><span class="line">mode: <span class="string">&quot;&quot;</span> --&gt;  mode: <span class="string">&quot;ipvs&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#搜mode，添上ipvs即可</span></span><br></pre></td></tr></table></figure><p><strong>7.查看指定名称空间中pod相信信息</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# kubectl get pod -n kube-system</span><br><span class="line">NAME                             READY   STATUS    RESTARTS   AGE</span><br><span class="line">coredns-6d56c8448f-spslt         0/1     Pending   0          26m</span><br><span class="line">coredns-6d56c8448f-x5lqj         0/1     Pending   0          26m</span><br><span class="line">etcd-master                      1/1     Running   0          26m</span><br><span class="line">kube-apiserver-master            1/1     Running   0          26m</span><br><span class="line">kube-controller-manager-master   1/1     Running   0          26m</span><br><span class="line">kube-proxy-qmbtd                 1/1     Running   0          26m</span><br><span class="line">kube-proxy-sqnbb                 1/1     Running   0          12m</span><br><span class="line">kube-proxy-t7hcw                 1/1     Running   0          12m</span><br><span class="line">kube-proxy-xzv7f                 1/1     Running   0          12m</span><br><span class="line">kube-scheduler-master            1/1     Running   0          26m</span><br><span class="line"></span><br><span class="line">`状态没异常即可，除Pending和Running之外的状态都是不正常的，检查是否步骤出错`</span><br><span class="line"></span><br><span class="line">`coredns-6d56c8448f-spslt`<span class="comment">#dns服务器</span></span><br><span class="line">`coredns-6d56c8448f-x5lqj`<span class="comment">#dns服务器</span></span><br><span class="line">`etcd-master` <span class="comment">#数据库所有节点的存储</span></span><br><span class="line">`kube-apiserver-master`<span class="comment">#集群的控制中心--&#x27;司令部&#x27;</span></span><br><span class="line">`kube-controller-manager-master` <span class="comment">#维护集群的状态--&#x27;控制器&#x27;</span></span><br><span class="line">`kube-proxy-qmbtd`<span class="comment">#负责将网络流量转发到正确的Pod、端口映射</span></span><br><span class="line">`kube-proxy-sqnbb`</span><br><span class="line">`kube-proxy-t7hcw`</span><br><span class="line">`kube-proxy-xzv7f`</span><br><span class="line">`kube-scheduler-master`<span class="comment">#调度器</span></span><br></pre></td></tr></table></figure><p><strong>8.查看指定名称空间中pod详细信息</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# kubectl get pod -n kube-system -o wide</span><br><span class="line">NAME                             READY   STATUS    RESTARTS   AGE   IP        </span><br><span class="line">coredns-6d56c8448f-spslt         0/1     Pending   0          42m   &lt;none&gt;    </span><br><span class="line">coredns-6d56c8448f-x5lqj         0/1     Pending   0          42m   &lt;none&gt;    </span><br><span class="line">etcd-master                      1/1     Running   0          42m   10.0.0.200</span><br><span class="line">kube-apiserver-master            1/1     Running   0          42m   10.0.0.200</span><br><span class="line">kube-controller-manager-master   1/1     Running   0          42m   10.0.0.200</span><br><span class="line">kube-proxy-qmbtd                 1/1     Running   0          42m   10.0.0.200</span><br><span class="line">kube-proxy-sqnbb                 1/1     Running   0          28m   10.0.0.203</span><br><span class="line">kube-proxy-t7hcw                 1/1     Running   0          28m   10.0.0.201</span><br><span class="line">kube-proxy-xzv7f                 1/1     Running   0          28m   10.0.0.202</span><br><span class="line">kube-scheduler-master            1/1     Running   0          42m   10.0.0.200</span><br><span class="line"></span><br><span class="line">`检查状态是否都是Running，比对下是否步骤有出入`</span><br></pre></td></tr></table></figure><p><strong>9.查看名称空间</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# kubectl get namespace</span><br><span class="line">NAME              STATUS   AGE</span><br><span class="line">default           Active   45m</span><br><span class="line">kube-node-lease   Active   45m</span><br><span class="line">kube-public       Active   45m</span><br><span class="line">kube-system       Active   45m</span><br><span class="line"></span><br><span class="line">`namespace 可以简写为 ns`</span><br><span class="line">[root@master ~]# kubectl get ns</span><br></pre></td></tr></table></figure><p><strong>10.重启kube-proxy</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">`删除所有proxy`</span><br><span class="line">kubectl get pod -n kube-system|grep <span class="string">&#x27;kube-proxy&#x27;</span>|awk <span class="string">&#x27;&#123;print &quot;kubectl delete pod -n kube-system &quot;$1&#125;&#x27;</span>|bash</span><br><span class="line"></span><br><span class="line">`#删除单个proxy`</span><br><span class="line">kubectl delete pod -n kube-system kube-proxy名字 `例如kube-proxy-qmbtd`</span><br><span class="line"></span><br><span class="line">`#因为k8会自动拉起停掉的pod，所以删除即可重启`</span><br></pre></td></tr></table></figure><p><strong>11.再次检查状态</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# kubectl get pod -n kube-system -o wide</span><br><span class="line">NAME                             READY   STATUS    RESTARTS   AGE   IP        </span><br><span class="line">coredns-6d56c8448f-spslt         0/1     Pending   0          52m   &lt;none&gt;    </span><br><span class="line">coredns-6d56c8448f-x5lqj         0/1     Pending   0          52m   &lt;none&gt;    </span><br><span class="line">etcd-master                      1/1     Running   0          52m   10.0.0.200</span><br><span class="line">kube-apiserver-master            1/1     Running   0          52m   10.0.0.200</span><br><span class="line">kube-controller-manager-master   1/1     Running   0          52m   10.0.0.200</span><br><span class="line">kube-proxy-62xz4                 1/1     Running   0          47s   10.0.0.203</span><br><span class="line">kube-proxy-gxz9p                 1/1     Running   0          35s   10.0.0.202</span><br><span class="line">kube-proxy-sfzzf                 1/1     Running   0          37s   10.0.0.201</span><br><span class="line">kube-proxy-vjgc5                 1/1     Running   0          49s   10.0.0.200</span><br><span class="line">kube-scheduler-master            1/1     Running   0          52m   10.0.0.200</span><br><span class="line"></span><br><span class="line">`检查状态是否异常，如有异常，比对之前步骤，也可查看系统日志报错`</span><br></pre></td></tr></table></figure><h2 id="配置flannel">配置flannel</h2><p><strong>1.修改flannel资源清单</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">`kube-flannel.yml`</span><br><span class="line"><span class="comment">#下载链接 https://github.com/flannel-io/flannel/blob/master/Documentation/kube-flannel.yml</span></span><br><span class="line"></span><br><span class="line">[root@master ~]# vim kube-flannel.yml</span><br><span class="line"><span class="comment">#1.将Network网段改为10.2.0.0/16</span></span><br><span class="line">  net-conf.json: |</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;Network&quot;</span>: <span class="string">&quot;10.2.0.0/16&quot;</span>,</span><br><span class="line">      <span class="string">&quot;EnableNFTables&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="string">&quot;Backend&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;Type&quot;</span>: <span class="string">&quot;vxlan&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.将容器绑定网卡eth0   在`- --kube-subnet-mgr`  后面加上`- --iface=eth0` 如下</span></span><br><span class="line">containers:</span><br><span class="line">- args:</span><br><span class="line">- --ip-masq</span><br><span class="line">- --kube-subnet-mgr</span><br><span class="line">- --iface=eth0</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.删除如下三行（意思是，只有标签是app的节点才能下载flannel）</span></span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: flannel</span><br></pre></td></tr></table></figure><p><strong>2.应用flannel资源清单</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 应用flannel资源清单</span></span><br><span class="line">[root@master ~]# kubectl apply -f kube-flannel.yml</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#检查flannel的pod是否成功启动</span></span><br><span class="line">[root@master ~]# kubectl get pod -n kube-flannel</span><br><span class="line">NAME                    READY   STATUS                  RESTARTS   AGE</span><br><span class="line">kube-flannel-ds-g9drp   0/1     Running                 0          6m9s</span><br><span class="line">kube-flannel-ds-rcwkv   1/1     Running                 0          6m9s</span><br><span class="line">kube-flannel-ds-txcn2   1/1     Running                 0          6m9s</span><br><span class="line">kube-flannel-ds-whd7p   1/1     Running                 0          6m9s</span><br><span class="line"></span><br><span class="line"><span class="comment">#检查k8s集群节点状态</span></span><br><span class="line">[root@master ~]# kubectl get nodes</span><br><span class="line">NAME     STATUS   ROLES    AGE   VERSION</span><br><span class="line">master   Ready    master   17m   v1.19.3</span><br><span class="line">node01   Ready    &lt;none&gt;   14m   v1.19.3</span><br><span class="line">node02   Ready    &lt;none&gt;   14m   v1.19.3</span><br><span class="line">node03   Ready    &lt;none&gt;   14m   v1.19.3</span><br><span class="line"></span><br><span class="line"><span class="comment">## 检查coredns是否正常运行</span></span><br><span class="line">[root@master ~]# kubectl get pod -n kube-system</span><br><span class="line">NAME                             READY   STATUS    RESTARTS   AGE</span><br><span class="line">coredns-6d56c8448f-hxpjc         1/1     Running   0          17m</span><br><span class="line">coredns-6d56c8448f-lb5m4         1/1     Running   0          17m</span><br><span class="line">etcd-master                      1/1     Running   0          17m</span><br><span class="line">kube-apiserver-master            1/1     Running   0          17m</span><br><span class="line">kube-controller-manager-master   1/1     Running   0          17m</span><br><span class="line">kube-proxy-46jqn                 1/1     Running   0          12m</span><br><span class="line">kube-proxy-4bnmp                 1/1     Running   0          12m</span><br><span class="line">kube-proxy-5lc7l                 1/1     Running   0          12m</span><br><span class="line">kube-proxy-r8cll                 1/1     Running   0          12m</span><br><span class="line">kube-scheduler-master            1/1     Running   0          17m</span><br></pre></td></tr></table></figure><p><strong>k8s命令补全</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum install -y bash-completion</span><br><span class="line"><span class="built_in">source</span> /usr/share/bash-completion/bash_completion</span><br><span class="line"><span class="built_in">source</span> &lt;(kubectl completion bash)</span><br><span class="line">kubectl completion bash &gt; /etc/bash_completion.d/kubectl</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本文介绍了使用kubeadmin部署k8s集群</summary>
    
    
    
    <category term="kubernetes" scheme="https://lukme.top/categories/kubernetes/"/>
    
    
    <category term="kubernetes" scheme="https://lukme.top/tags/kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>01-k8s介绍</title>
    <link href="https://lukme.top/posts/5b9896c9.html"/>
    <id>https://lukme.top/posts/5b9896c9.html</id>
    <published>2024-10-02T16:34:28.000Z</published>
    <updated>2024-10-06T14:13:36.405Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是容器">什么是容器</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">容器的本质是一种特殊的进程。</span><br></pre></td></tr></table></figure><p><strong>容器的三要素</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Namespace<span class="comment">#做隔离，让进程只能看到Namespace中的世界；</span></span><br><span class="line">Cgroups<span class="comment">#做限制，让这个“世界”围着一个看不见的墙。</span></span><br><span class="line">rootfs<span class="comment">#做文件系统，rootfs 只是一个操作系统所包含的文件、配置和目录，并不包括操作系统内核。</span></span><br><span class="line"></span><br><span class="line">Namespace将集群内部的资源进行隔离划分。在Namespace中，形成逻辑上的不同项目组或用户组。</span><br></pre></td></tr></table></figure><p><strong>rootfs</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">挂载在容器根目录上、用来为容器进程提供隔离后执行环境的文件系统，就是所谓的“容器镜像”。它还有一个更为专业的名字，</span><br><span class="line">叫作：rootfs（根文件系统）。</span><br><span class="line"></span><br><span class="line">容器的rootfs由三部分组成，1：只读层、2：可读写层、3：init层</span><br><span class="line">1.只读层:都以增量的方式分别包含了  操作系统的一部分。</span><br><span class="line"></span><br><span class="line">2.可读写：就是专门用来存放你修改 rootfs 后产生的增量，无论是增、删、改，都发生在这里。而当我们使用完了这个被修改过的容器之后，</span><br><span class="line">还可以使用 docker commit 和 push 指令，保存这个被修改过的可读写层，并上传到 Docker Hub 上，供其他人使用；而与此同时，原先的</span><br><span class="line">只读层里的内容则不会有任何变化。这就是增量 rootfs 的好处。</span><br><span class="line"></span><br><span class="line">3.Init 层：是 Docker 项目单独生成的一个内部层，专门用来存放 /etc/hosts、/etc/resolv.conf 等信息。</span><br></pre></td></tr></table></figure><h2 id="认识kubernetes">认识kubernetes</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Kubernetes 是一个可移植、可扩展的开源平台，用于管理容器化的工作负载和服务，方便进行声明式配置和自动化。可以自动部署</span><br><span class="line">(automating deployments)，伸缩(scaling)和运维容器化应用(operations of application containers)的开源平台。以下</span><br><span class="line">简称k8s</span><br><span class="line">  </span><br><span class="line">k8s参考网站</span><br><span class="line">`k8s官方`: https://kubernetes.io/zh-cn/docs/home/</span><br><span class="line">`阿里云k8s-ACK`：https://www.aliyun.com/product/kubernetes</span><br><span class="line">`亚马逊k8s-EKS`：https://aws.amazon.com/cn/eks/?nc2=h_ql_prod_ct_eks</span><br><span class="line">`使用ansible一键部署k8s`：https://github.com/easzlab/kubeasz</span><br></pre></td></tr></table></figure><h2 id="k8s组件">k8s组件</h2><p><img src="https://cos.lukme.top/Pic/components-of-kubernetes-1726291732343-3.svg" alt="components-of-kubernetes"></p><p><strong>核心组件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.控制平面组件（Control Plane Components）  master节点</span><br><span class="line">2.控制容器运行时（docker）启动指定的容器      node节点</span><br></pre></td></tr></table></figure><p><strong>k8s各个组件功能说明</strong></p><h3 id="1-UI-CLI">(1)UI,CLI</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">统称API用于发送请求给Kubernetes（K8S）集群。</span><br><span class="line"></span><br><span class="line"><span class="comment">## K8S三大接口API二次开发，调用接口</span></span><br><span class="line">CRI：runtime，容器操作接口</span><br><span class="line">CNI：network，网络操作接口</span><br><span class="line">CSI：storage，存储操作接口</span><br></pre></td></tr></table></figure><h3 id="2-Kubernetes-Master">(2)Kubernetes Master</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">用于处理客户端的发来的请求，根据需求调度后端节点运行任务,就是<span class="string">&#x27;老板&#x27;</span>存在。其内部核心组件分为：</span><br><span class="line">1.`API Server`(K8S内置组件) <span class="string">&#x27;秘书&#x27;</span></span><br><span class="line">      提供了资源操作的唯一入口，并提供认证、授权、访问控制、API注册和发现等机制;</span><br><span class="line">      提供API服务的组件，是一个独立的守护进程，是Kubernetes集群的唯一入口（无论是客户端还是内部组件都必须通过它来访</span><br><span class="line">      问);它提供基于https(RESTful风格)和rpc协议(grpc是据说是将来要取代Https的RESTful风格)来提供服务的。它用来处理</span><br><span class="line">      客户端传来的JSON格式的请求数据而非HTML格式哟。它也是K8S集群唯一能操作etcd的组件</span><br><span class="line">     </span><br><span class="line">  2.`Scheduler`（K8S内置组件）  <span class="string">&#x27;人事&#x27;</span></span><br><span class="line">      负责资源的调度，按照预定的调度策略将Pod调度到相应的机器上;</span><br><span class="line">      比如客户端通过API Server提交了一个新增容器的请求，该请求保存在etcd中，etcd通过API Server通知Scheduler，</span><br><span class="line">      Scheduler接收到通知后会在管理的资源中选择一个最佳运行的节点去创建容器;该指令依旧存放在etcd中（Scheduler不能直</span><br><span class="line">      接访问etcd，而是通过API Server间接访问etcd）。</span><br><span class="line">      </span><br><span class="line">   3.`Controller manager`(K8S内置组件)</span><br><span class="line">       负责维护集群的状态，比如故障检测、自动扩展、滚动更新等；</span><br><span class="line">       该组件会watch Api Server组件用于管理K8S集群的组件，确保我们所创建的容器能够按照期望的状态运行的核心组件</span><br><span class="line">       (比如：监控集群的所有容器运行，当某个容器挂掉后它可以迅速在另一个节点启动)，我们甚至可以说</span><br><span class="line">       Controller manager是K8s的大脑。</span><br><span class="line">       </span><br><span class="line">    4.`etcd`(并不是K8S内置组件,由CoreOS研发,被RedHat收购，最终又被IBM公司收购)</span><br><span class="line">      etcd只能被API Server直接访问。是整个集群的核心，负责存储K8S请求数据所有的数据。保存了整个集群的状态；</span><br><span class="line">    etcd基于raft协议使用Golang语言开发的分布式强一致的键值对（key/value）数据库存储系统。存储方式和redis很像，</span><br><span class="line">    但是功能却比redis要强大，因为它支持数据的强一致性，也支持leader选举等各种分布式协同功能。</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">kube-apiserver(apiserver)：#所有Master上的组件工作都要经过apiserver</span><br><span class="line">etcd：                     <span class="comment">#存储所有命令、资源清单、webUI操作及其他组件数据</span></span><br><span class="line">kube-scheduler(scheduler)：#资源计算、资源调度</span><br><span class="line">kube-controller-manager(controller)：#维护集群状态</span><br><span class="line"></span><br><span class="line">`当某个Node意外宕机时，Controller Manager会及时发现并执行自动化修复流程，确保集群始终处于预期的工作状态`</span><br></pre></td></tr></table></figure><h3 id="3-Kubernetes-Node">(3)Kubernetes Node</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">功能上有点类似于Hadoop中的DataNode节点,被Kubernetes调度的，即负责真正干活的节点（运行容器）。其内部核心组件分为：</span><br><span class="line">1.`kubelet`</span><br><span class="line">    负责维护容器的生命周期，同时也负责Volume（CVI）和网络（CNI）的管理;</span><br><span class="line">    该组件也会watch Api Server组件，即实时查看关于当前节点的任务，从而去执行创建或删除容器的任务</span><br><span class="line">    (以Docker为例，创建容器时就会调用docker的API去Image Registry去下载相应的容器并启动)。</span><br><span class="line">2.`Container runtime `</span><br><span class="line">    负责镜像管理以及Pod和容器的真正运行（CRI）；</span><br><span class="line">3.`kube-proxy`   <span class="string">&#x27;监工&#x27;</span></span><br><span class="line">    负责为Service提供cluster内部的服务发现和负载均衡；</span><br><span class="line">    kube-proxy说白了也是API Server的客户端,它实时监视(watch)着API Server上的资源变动(尤其是service资源变动),</span><br><span class="line">    它会把每个service资源变动在相应节点上定义为对外暴露相关规则(iptable或者ipvs)，比如对外暴露外网映射之类的。</span><br><span class="line"></span><br><span class="line">4.Pod   <span class="string">&#x27;Pod是K8S的最小单位&#x27;</span></span><br><span class="line">虽然我们说Kubernetes是容器编排系统,但是不得不说在K8S之上并不会直接运行容器,每个容器在K8S中都被重新封装成pod,说</span><br><span class="line">白了pod就是容器的外壳,但需要注意的是一个pod是可以存在多个容器的。每个pod被K8S当作一个原子单元进行管理;一个pod中</span><br><span class="line">有多个容器，这个pod里面的所有容器只能被调度到一台节点去执行，不能将同一个pod里面的多个容器拆分到不同的Node运行;</span><br><span class="line"></span><br><span class="line">1、Pod是K8S的最小单位</span><br><span class="line">2、Pod的IP地址是随机的，删除Pod会改变IP</span><br><span class="line">3、Pod都有一个根容器（一个pod至少有一个根容器）</span><br><span class="line">4、一个Pod内可以由一个容器或多个容器组成</span><br><span class="line">5、一个Pod内的容器共享根容器的网络、名称空间、和文件系统卷</span><br><span class="line">6、一个Pod内的网络地址由根容器提供</span><br><span class="line"></span><br><span class="line">5.`Fluentd`</span><br><span class="line">    如Fluentd-elasticsearch提供集群日志采集、存储与查询</span><br><span class="line"></span><br><span class="line">6.`Image Registry`</span><br><span class="line">    存放镜像文件的仓库，并不直接被Kubernetes集群管理，即并不算k8s原生组成部分，通常我们会自建私有的镜像仓库，</span><br><span class="line">    比如使用Harbor部署https高可用的镜像仓库</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">kubelet：控制容器运行时（docker）启动指定的容器</span><br><span class="line">容器运行时（Container runtime）：docker</span><br><span class="line">  - containerd</span><br><span class="line">  - CRI-O</span><br><span class="line">  - Docker Engine</span><br><span class="line">  - Mirantis Container Runtime</span><br><span class="line">kube-proxy：POD端口映射，网络相关</span><br></pre></td></tr></table></figure><h3 id="POD运行状态">POD运行状态</h3><table><thead><tr><th>状态</th><th>描述</th></tr></thead><tbody><tr><td>Pending（等待）</td><td>Pod已经被K8S系统接受，但是有一个或多个容器，尚未创建，亦未运行。此阶段包括等待Pod被调度的时间和通过网络下载镜像的时间</td></tr><tr><td>Running（运行）</td><td>Pod已经绑定到某个节点(node)，Pod中所有容器都已被创建，至少有一个容器仍在运行，或者处于启动或重启状态</td></tr><tr><td>Succeeded（成功）</td><td>Pod中所有容器都已成功终止，并且不会再重启</td></tr><tr><td>Failed（失败）</td><td>Pod中所有容器都已成功终止，并且有一个容器是因为失败而终止</td></tr><tr><td>Unknown（未知）</td><td>因为某些原因无法获取Pod状态，这种情况，通常是因为与Pod所在主机通信失败</td></tr></tbody></table><h2 id="k8s网络">k8s网络</h2><blockquote><p>Service也是K8S核心资源之一，Service定义了服务的入口地址，用来将后端的Pod服务暴露给外部的用户 访问。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">kubernetes的网络大致分为以下三类:</span><br><span class="line">  1.节点网络:</span><br><span class="line">      主要是指`Master`和各个`Node`之间进行通信的网络地址段。</span><br><span class="line">　2.pod网络:</span><br><span class="line">　　　　因为每个pod的<span class="string">&#x27;动态IP地址&#x27;</span>，所以每个pod并不知道想要访问的目的pod的IP地址，它们如果想要访问目的pod需要经过一</span><br><span class="line">　　　　个<span class="string">&#x27;service&#x27;</span>层。这个service有对每个pod的打了<span class="string">&#x27;标签&#x27;</span>，当任意一个节点的pod想要访问另外一个pod必须得过</span><br><span class="line">　　　　<span class="string">&#x27;service网络&#x27;</span>，service网络保存着<span class="string">&#x27;标签选择器&#x27;</span>，可以迅速匹配到pod想要范围另一个pod的真实IP地址，当pod拿到</span><br><span class="line">　　　　IP地址后就可以自行进行通信请求了。</span><br><span class="line">  3.service网络:</span><br><span class="line">　　　主要是为pod提供一个<span class="string">&#x27;标签选择器&#x27;</span>的功能，比如帮助一个pod去查询访问另外一个pod的label对应的真实IP地址。而</span><br><span class="line">　　　sevice网络在kubernetes1.11.x版本之前默认使用iptable实现的，在kubernetes 1.11.x版本之后引入了ipvs实现。</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;各个pod之间的通信过程概要&#x27;</span>:</span><br><span class="line">      每个pod都有被动态分配的IP地址，如果想要和另外一个pod进行通信，各个pod需要先和service网络进行通信，最终拿到</span><br><span class="line">      另一个想要访问pod的动态IP地址进行通信。</span><br></pre></td></tr></table></figure><h3 id="Service提供了两种网络资源">Service提供了两种网络资源</h3><p><img src="https://cos.lukme.top/Pic/image-20240916151114679.png" alt="image-20240916151114679"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">NodePort：宿主机端口映射ClusterIP端口对外提供服务</span><br><span class="line"></span><br><span class="line">ClusterIP：POD的负载均衡</span><br><span class="line">问题：POD的IP是随机的，如果一个POD宕机了，K8S会自动拉起一个新的POD，IP变化了如何加入到</span><br><span class="line">ClusterIP这个负载均衡集群中？</span><br><span class="line">解决方案：使用DNS解析POD的IP到一个<span class="string">&quot;字符串上&quot;</span>（标签）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">DNS：</span><br><span class="line">- coreDNS</span><br><span class="line">- bind9</span><br><span class="line">- dnsmsq</span><br></pre></td></tr></table></figure><h2 id="Label标签">Label标签</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">`Label标签`是K8S中非常重要的一个属性，Label标签就像身份证一样，可以用来识别K8S的对象。</span><br><span class="line">传统架构中，不同的服务应用之间通讯，都是通过IP和端口，但是在K8S中很多匹配关系都是通过标签来找。</span><br></pre></td></tr></table></figure><p><strong>Controller资源（控制器资源）</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Controller用来管理Pod。</span></span><br><span class="line"><span class="comment">## Pod控制器的种类有很多：</span></span><br><span class="line">- RC Replication Controller 控制Pod有多个副本</span><br><span class="line">- RS ReplicaSet RC控制器的升级版，可以自动拉起宕机的POD</span><br><span class="line">- Deployment 推荐使用，功能强大，包含了RS控制器，对镜像做版本管理</span><br><span class="line">- DaemonSet 保证所有的Node节点上，有且只有一个Pod运行</span><br><span class="line">- StatefulSet 有状态的应用，为Pod提供唯一标识，它可以保证部署和scale的顺序</span><br></pre></td></tr></table></figure><h2 id="创建一个pod流程">创建一个pod流程</h2><p><img src="https://cos.lukme.top/Pic/create-pod.png" alt="create-pod"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">`第一步：`</span><br><span class="line">    用户通过kubectl等接口提交创建Pod的yaml文件，向Kubernetes系统发起资源请求</span><br><span class="line">`第二步：`</span><br><span class="line">    Api-server接收到用户请求之后，会做出相应的认证，然后检查信息并且将元数据信息存储到etcd中，创建Pod资源初始化，</span><br><span class="line">    这是第一次写etcd动作</span><br><span class="line">`第三步：`</span><br><span class="line">    Scheduler通过list-watch的监听机制，查看要创建Pod资源，APIServer会立即把创建Pod的消息通知Scheduler，</span><br><span class="line">    Scheduler发现Pod的属性中Dest Node为空时（Dest Node=””），便会立即触发调度流程进行调度,而调度流程分为</span><br><span class="line">    以下几个步骤，如下图</span><br></pre></td></tr></table></figure><blockquote><p>‌<strong>kube-controller-manager</strong>‌：虽然不直接参与Pod的创建，但其内部的控制器（如ReplicaSet Controller）负责确保Pod的数量与预期一致，维护集群状态</p></blockquote><p><img src="https://cos.lukme.top/Pic/scheduler.jpeg" alt="scheduler"></p><blockquote><p>​    首先是kube-scheduler调度器用一组规则过滤掉不满足条件的主机，这个过程称为predicate，比如明确指定所需要的资源类型，这样就可以过滤掉不满足条件的主机</p></blockquote><blockquote><p>​    其次，对第一步筛选出的符合要求的主机进行打分，这个过程称为 priority，在此阶段，如果在 predicate过程中没有合适的节点，Pod 会一直处于pending状态，不断重试调度，直到有节点满足条件。</p></blockquote><blockquote><p><strong>选择优先级最高的节点</strong>：选择得分最高的主机，进行binding操作，结果存储到Etcd中</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">第四步：</span><br><span class="line">    kubelet根据调度结果执行Pod创建操作，绑定成功后，会启动容器运行时，container, docker run, scheduler会调用API</span><br><span class="line">    Server的API在etcd中创建一个bound Pod对象，它描述在一个工作节点上绑定运行的所有pod信息；</span><br><span class="line">    运行在每个工作节点上的kubelet也会定期与api-server同步bound Pod的信息，一旦发现在该工作节点上运行的bound Pod对</span><br><span class="line">    象没有更新，则调用Docker API创建并启动pod内的容器.</span><br><span class="line">    </span><br><span class="line">第五步：</span><br><span class="line">  kube-proxy为新创建的pod注册动态DNS到CoreOS，然后给pod的service添加对应的iptables规则，用于服务发现和负载均衡。</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本文简单介绍容器以及k8s组件</summary>
    
    
    
    <category term="kubernetes" scheme="https://lukme.top/categories/kubernetes/"/>
    
    
    <category term="kubernetes" scheme="https://lukme.top/tags/kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>测试</title>
    <link href="https://lukme.top/posts/f007732d.html"/>
    <id>https://lukme.top/posts/f007732d.html</id>
    <published>2024-08-31T07:14:31.000Z</published>
    <updated>2024-10-06T14:12:50.136Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="ecc3b8954083c1c4265f5015a12da6fbb721d2f64e54cb4de0c849c9e0fa5522"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">仅为测试文章</summary>
    
    
    
    
    <category term="markdown" scheme="https://lukme.top/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>zabbix监控php和jvm</title>
    <link href="https://lukme.top/posts/c6bfcf84.html"/>
    <id>https://lukme.top/posts/c6bfcf84.html</id>
    <published>2024-08-28T14:05:23.000Z</published>
    <updated>2024-10-06T14:26:50.820Z</updated>
    
    <content type="html"><![CDATA[<h2 id="监控PHP">监控PHP</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.修改php配置文件</span></span><br><span class="line">[root@web01 ~]# vim /etc/php-fpm.d/www.conf</span><br><span class="line">pm.status_path = /php_status</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.修改nginx配置文件</span></span><br><span class="line">[root@web01 conf.d]# vim webapp.conf</span><br><span class="line">server&#123;</span><br><span class="line">listen 80;</span><br><span class="line">server_name _;</span><br><span class="line">location / &#123;</span><br><span class="line">root /code/webapp;</span><br><span class="line">index index.html;</span><br><span class="line">&#125;</span><br><span class="line">location /status &#123;</span><br><span class="line">stub_status on;</span><br><span class="line">&#125;</span><br><span class="line">location ~ ^/(php_status)$ &#123;</span><br><span class="line">include fastcgi_params;</span><br><span class="line">fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">fastcgi_param SCRIPT_FILENAME</span><br><span class="line">$document_root<span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 3.重启nginx和php</span></span><br><span class="line">[root@web01 conf.d]# systemctl restart nginx php-fpm</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20240807085016358.png" alt="image-20240807085016358"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line">pool: www</span><br><span class="line">process manager: dynamic</span><br><span class="line">start time: 02/Aug/2024:10:44:26 +0800</span><br><span class="line">start since: 44</span><br><span class="line">accepted conn: 1</span><br><span class="line">listen queue: 0</span><br><span class="line">max listen queue: 0</span><br><span class="line">listen queue len: 128</span><br><span class="line">idle processes: 4</span><br><span class="line">active processes: 1</span><br><span class="line">total processes: 5</span><br><span class="line">max active processes: 1</span><br><span class="line">max children reached: 0</span><br><span class="line">slow requests: 0</span><br><span class="line"></span><br><span class="line"><span class="comment">#PHP-FPM状态解释：</span></span><br><span class="line">pool <span class="comment">#fpm池名称,大多数为www</span></span><br><span class="line">process manager <span class="comment">#进程管理方式dynamic或者static</span></span><br><span class="line">start time <span class="comment">#启动日志,如果reload了fpm，时间会更新</span></span><br><span class="line">start since <span class="comment">#运行时间</span></span><br><span class="line">accepted conn <span class="comment">#当前池接受的请求数</span></span><br><span class="line">listen queue <span class="comment">#请求等待队列,如果这个值不为0,那么需要增加FPM的进程数量</span></span><br><span class="line">max listen queue <span class="comment">#请求等待队列最高的数量</span></span><br><span class="line">listen queue len <span class="comment">#socket等待队列长度</span></span><br><span class="line">idle processes <span class="comment">#空闲进程数量</span></span><br><span class="line">active processes <span class="comment">#活跃进程数量</span></span><br><span class="line">total processes <span class="comment">#总进程数量</span></span><br><span class="line">max active processes <span class="comment">#最大的活跃进程数量（FPM启动开始计算）</span></span><br><span class="line">max children reached <span class="comment">#程最大数量限制的次数，如果这个数量不为0，那说明你的最大进程数量过小,可以适当调整。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 监控脚本</span></span><br><span class="line">[root@web01 scripts]# <span class="built_in">cat</span> php_status.sh</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">PHPFPM_COMMAND=<span class="variable">$1</span></span><br><span class="line">PHPFPM_URL=<span class="string">&quot;http://172.16.1.7/php_status&quot;</span></span><br><span class="line"><span class="function"><span class="title">start_since</span></span>()&#123;</span><br><span class="line">/usr/bin/curl -s <span class="string">&quot;<span class="variable">$&#123;PHPFPM_URL&#125;</span>&quot;</span> |awk <span class="string">&#x27;/^start since:/ &#123;print $NF&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">accepted_conn</span></span>()&#123;</span><br><span class="line">/usr/bin/curl -s <span class="string">&quot;<span class="variable">$&#123;PHPFPM_URL&#125;</span>&quot;</span> |awk <span class="string">&#x27;/^accepted conn:/ &#123;print $NF&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">listen_queue</span></span>()&#123;</span><br><span class="line">/usr/bin/curl -s <span class="string">&quot;<span class="variable">$&#123;PHPFPM_URL&#125;</span>&quot;</span> |awk <span class="string">&#x27;/^listen queue:/ &#123;print $NF&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">max_listen_queue</span></span>()&#123;</span><br><span class="line">/usr/bin/curl -s <span class="string">&quot;<span class="variable">$&#123;PHPFPM_URL&#125;</span>&quot;</span> |awk <span class="string">&#x27;/^max listen queue:/ &#123;print $NF&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">listen_queue_len</span></span>()&#123;</span><br><span class="line">/usr/bin/curl -s <span class="string">&quot;<span class="variable">$&#123;PHPFPM_URL&#125;</span>&quot;</span> |awk <span class="string">&#x27;/^listen queue len:/ &#123;print $NF&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">idle_processes</span></span>()&#123;</span><br><span class="line">/usr/bin/curl -s <span class="string">&quot;<span class="variable">$&#123;PHPFPM_URL&#125;</span>&quot;</span> |awk <span class="string">&#x27;/^idle processes:/ &#123;print $NF&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">active_processes</span></span>()&#123;</span><br><span class="line">/usr/bin/curl -s <span class="string">&quot;<span class="variable">$&#123;PHPFPM_URL&#125;</span>&quot;</span> |awk <span class="string">&#x27;/^active processes:/ &#123;print $NF&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">total_processes</span></span>()&#123;</span><br><span class="line">/usr/bin/curl -s <span class="string">&quot;<span class="variable">$&#123;PHPFPM_URL&#125;</span>&quot;</span> |awk <span class="string">&#x27;/^total processes:/ &#123;print $NF&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">max_active_processes</span></span>()&#123;</span><br><span class="line">/usr/bin/curl -s <span class="string">&quot;<span class="variable">$&#123;PHPFPM_URL&#125;</span>&quot;</span> |awk <span class="string">&#x27;/^max active processes:/ &#123;print $NF&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">max_children_reached</span></span>()&#123;</span><br><span class="line">/usr/bin/curl -s <span class="string">&quot;<span class="variable">$&#123;PHPFPM_URL&#125;</span>&quot;</span> |awk <span class="string">&#x27;/^max children reached:/ &#123;print $NF&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">slow_requests</span></span>()&#123;</span><br><span class="line">/usr/bin/curl -s <span class="string">&quot;<span class="variable">$&#123;PHPFPM_URL&#125;</span>&quot;</span> |awk <span class="string">&#x27;/^slow requests:/ &#123;print $NF&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$PHPFPM_COMMAND</span> <span class="keyword">in</span></span><br><span class="line">start_since)</span><br><span class="line">start_since;</span><br><span class="line">;;</span><br><span class="line">accepted_conn)</span><br><span class="line">accepted_conn;</span><br><span class="line">;;</span><br><span class="line">listen_queue)</span><br><span class="line">listen_queue;</span><br><span class="line">;;</span><br><span class="line">max_listen_queue)</span><br><span class="line">max_listen_queue;</span><br><span class="line">;;</span><br><span class="line">listen_queue_len)</span><br><span class="line">listen_queue_len;</span><br><span class="line">;;</span><br><span class="line">idle_processes)</span><br><span class="line">idle_processes;</span><br><span class="line">;;</span><br><span class="line">active_processes)</span><br><span class="line">active_processes;</span><br><span class="line">;;</span><br><span class="line">total_processes)</span><br><span class="line">total_processes;</span><br><span class="line">;;</span><br><span class="line">max_active_processes)</span><br><span class="line">max_active_processes;</span><br><span class="line">;;</span><br><span class="line">max_children_reached)</span><br><span class="line">max_children_reached;</span><br><span class="line">;;</span><br><span class="line">slow_requests)</span><br><span class="line">slow_requests;</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">echo</span> $<span class="string">&quot;USAGE:<span class="variable">$0</span></span></span><br><span class="line"><span class="string">&#123;start_since|accepted_conn|listen_queue|max_listen_queue|listen_queue_len|idle_p</span></span><br><span class="line"><span class="string">rocesses|active_processes|total_processes|max_active_processes|max_children_reac</span></span><br><span class="line"><span class="string">hed&#125;&quot;</span></span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 授权执行权限</span></span><br><span class="line">[root@web01 scripts]# <span class="built_in">chmod</span> +x php_status.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改客户端配置文件</span></span><br><span class="line">[root@web01 zabbix_agentd.d]# vim php_status.conf</span><br><span class="line">UserParameter=php.status[*],/etc/zabbix/zabbix_agentd.d/scripts/php_status.sh <span class="variable">$1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启</span></span><br><span class="line">[root@web01 zabbix_agentd.d]# systemctl restart zabbix-agent</span><br></pre></td></tr></table></figure><h2 id="监控JAVA进程JVM">监控JAVA进程JVM</h2><p>在Zabbix中，JMX监控数据的获取由专门的代理程序来实现,即Zabbix-Java-Gateway来负责数据的采 集，Zabbix-Java-Gateway和JMX的Java程序之间通信获取数据</p><p><strong>JMX在Zabbix中的运行流程</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.Zabbix-Server找Zabbix-Java-Gateway获取Java数据</span><br><span class="line">2.Zabbix-Java-Gateway找Java程序(zabbix-agent)获取数据</span><br><span class="line">3.Java程序返回数据给Zabbix-Java-Gateway</span><br><span class="line">4.Zabbix-Java-Gateway返回数据给Zabbix-Server</span><br><span class="line">5.Zabbix-Server进行数据展示</span><br></pre></td></tr></table></figure><h3 id="安装JAVA-gateway">安装JAVA-gateway</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">https://mirrors.tuna.tsinghua.edu.cn/zabbix/zabbix/5.0/rhel/7/x86_64/</span><br><span class="line"><span class="comment"># 安装</span></span><br><span class="line">[root@web02 ~]# rpm -ivh https://mirrors.tuna.tsinghua.edu.cn/zabbix/zabbix/5.0/rhel/7/x86_64/zabbix-java-gateway-5.0.42-1.el7.x86_64.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动java-gateway</span></span><br><span class="line">[root@web02 ~]# systemctl start zabbix-java-gateway</span><br><span class="line"></span><br><span class="line"><span class="comment">#zabbix服务端</span></span><br><span class="line"><span class="comment"># 修改zabbix_server配置文件</span></span><br><span class="line">[root@zabbix5-server ~]# vim /etc/zabbix/zabbix_server.conf</span><br><span class="line">JavaGateway=172.16.1.8</span><br><span class="line">JavaGatewayPort=10052</span><br><span class="line">StartJavaPollers=5</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启zabbix-server</span></span><br><span class="line">[root@zabbix5-server ~]# systemctl restart zabbix-server</span><br></pre></td></tr></table></figure><h3 id="tomcat开启JMX">tomcat开启JMX</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改tomcat启动脚本</span></span><br><span class="line">[root@web02 ~]# vim /usr/libexec/tomcat/server</span><br><span class="line">CATALINA_OPTS=<span class="string">&quot;<span class="variable">$CATALINA_OPTS</span></span></span><br><span class="line"><span class="string">-Dcom.sun.management.jmxremote</span></span><br><span class="line"><span class="string">-Dcom.sun.management.jmxremote.port=12345</span></span><br><span class="line"><span class="string">-Dcom.sun.management.jmxremote.authenticate=false</span></span><br><span class="line"><span class="string">-Dcom.sun.management.jmxremote.ssl=false</span></span><br><span class="line"><span class="string">-Djava.rmi.server.hostname=172.16.1.8&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 完整脚本</span></span><br><span class="line">[root@web02 ~]# <span class="built_in">cat</span> /usr/libexec/tomcat/server</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">. /usr/libexec/tomcat/preamble</span><br><span class="line"></span><br><span class="line">MAIN_CLASS=org.apache.catalina.startup.Bootstrap</span><br><span class="line"></span><br><span class="line">FLAGS=<span class="string">&quot;<span class="variable">$JAVA_OPTS</span>&quot;</span></span><br><span class="line">OPTIONS=<span class="string">&quot;-Dcatalina.base=<span class="variable">$CATALINA_BASE</span> \</span></span><br><span class="line"><span class="string">-Dcatalina.home=<span class="variable">$CATALINA_HOME</span> \</span></span><br><span class="line"><span class="string">-Djava.endorsed.dirs=<span class="variable">$JAVA_ENDORSED_DIRS</span> \</span></span><br><span class="line"><span class="string">-Djava.io.tmpdir=<span class="variable">$CATALINA_TMPDIR</span> \</span></span><br><span class="line"><span class="string">-Djava.util.logging.config.file=<span class="variable">$&#123;LOGGING_PROPERTIES&#125;</span> \</span></span><br><span class="line"><span class="string">-Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager&quot;</span></span><br><span class="line"></span><br><span class="line">CATALINA_OPTS=<span class="string">&quot;<span class="variable">$CATALINA_OPTS</span></span></span><br><span class="line"><span class="string">-Dcom.sun.management.jmxremote</span></span><br><span class="line"><span class="string">-Dcom.sun.management.jmxremote.port=12345</span></span><br><span class="line"><span class="string">-Dcom.sun.management.jmxremote.authenticate=false</span></span><br><span class="line"><span class="string">-Dcom.sun.management.jmxremote.ssl=false</span></span><br><span class="line"><span class="string">-Djava.rmi.server.hostname=172.16.1.8&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;start&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">  FLAGS=<span class="string">&quot;<span class="variable">$&#123;FLAGS&#125;</span> <span class="variable">$CATALINA_OPTS</span>&quot;</span></span><br><span class="line">  <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$&#123;SECURITY_MANAGER&#125;</span>&quot;</span> = <span class="string">&quot;true&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">    OPTIONS=<span class="string">&quot;<span class="variable">$&#123;OPTIONS&#125;</span> \</span></span><br><span class="line"><span class="string">    -Djava.security.manager \</span></span><br><span class="line"><span class="string">    -Djava.security.policy==<span class="variable">$&#123;CATALINA_BASE&#125;</span>/conf/catalina.policy&quot;</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">  run start</span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;stop&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">  run stop</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启tomcat</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart tomcat</span><br></pre></td></tr></table></figure><p><strong>web界面设置-新建主机</strong></p><p><img src="https://cos.lukme.top/Pic/image-20240807103619686.png" alt="image-20240807103619686"></p><p><strong>链接模板</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">搜jmx选择两个模板--添加</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20240807102022640.png" alt="image-20240807102022640"></p><p><img src="https://cos.lukme.top/Pic/image-20240807104224895.png" alt="image-20240807104224895"></p>]]></content>
    
    
    <summary type="html">带你了解如何监控php和jvm</summary>
    
    
    
    <category term="监控" scheme="https://lukme.top/categories/%E7%9B%91%E6%8E%A7/"/>
    
    <category term="zabbix" scheme="https://lukme.top/categories/%E7%9B%91%E6%8E%A7/zabbix/"/>
    
    
    <category term="zabbix" scheme="https://lukme.top/tags/zabbix/"/>
    
  </entry>
  
  <entry>
    <title>zabbix自动发现</title>
    <link href="https://lukme.top/posts/4b865a3.html"/>
    <id>https://lukme.top/posts/4b865a3.html</id>
    <published>2024-08-27T14:01:39.000Z</published>
    <updated>2024-10-06T14:26:41.593Z</updated>
    
    <content type="html"><![CDATA[<p><strong>主动模式与被动模式区别</strong></p><p>​1.被动模式 (Zabbix-server轮询检测zabbix-agent)</p><p>​2.主动模式 (Zabbix-agent主动上报给Zabbix-server)</p><p><strong>主动模式与被被动模式选择如何选择</strong></p><p>​1.当Queue里有大量延迟的监控项</p><p>​2.当监控主机超过300+, 建议使用主动模式。</p><p><img src="https://cos.lukme.top/Pic/QQ_1723279232118.png" alt="QQ_1723279232118"></p><p><strong>zabbix工作模式</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">agent主动模式（自动注册）</span><br><span class="line">agent启动后自动将主机信息注册到zabbix-server中</span><br><span class="line"></span><br><span class="line">agent被动模式（自动发现）</span><br><span class="line">agent启动后由zabbix-server扫描，将信息保存在zabbix-server中</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="zabbix自动发现">zabbix自动发现</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Zabbix-server开启自动发现功能：</span></span><br><span class="line">[root@zabbix5-server ~]# vim /etc/zabbix/zabbix_server.conf</span><br><span class="line">StartDiscoverers=20</span><br><span class="line"></span><br><span class="line"><span class="comment">#重启客户端</span></span><br><span class="line">systemctl restart zabbix-agent</span><br></pre></td></tr></table></figure><p><strong>创建自动发现规则</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1723276932546.png" alt="QQ_1723276932546"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">测试时候，</span><br><span class="line">更新间隔  10s 是扫描一轮之后经过10s开启下次扫描</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/QQ_1723277097140.png" alt="QQ_1723277097140"></p><p><strong>创建自动发现动作（关联自动发现规则）</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1723277868304.png" alt="QQ_1723277868304"></p><p><img src="https://cos.lukme.top/Pic/QQ_1723277947268.png" alt="QQ_1723277947268"></p><p><img src="https://cos.lukme.top/Pic/QQ_1723278202906.png" alt="QQ_1723278202906"></p><p><img src="https://cos.lukme.top/Pic/QQ_1723278289428.png" alt="QQ_1723278289428"></p><p><img src="https://cos.lukme.top/Pic/QQ_1723278495118.png" alt="QQ_1723278495118"></p><p><strong>自动发现缺陷</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.网络发现速度太慢</span><br><span class="line">2.轮询扫描网段</span><br><span class="line">3.如果网段中存在不通的主机，会出现卡顿并且造成哦后续新增的服务器无法加入节点</span><br><span class="line">4.会导致server性能变缓慢，影响server性能</span><br></pre></td></tr></table></figure><h3 id="自动注册">自动注册</h3><p><strong>修改每台客户端配置文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.修改agent配置文件</span></span><br><span class="line">[root@lb01 ~]# vim /etc/zabbix/zabbix_agentd.conf</span><br><span class="line">Server=172.16.1.71  <span class="comment">#被动模式</span></span><br><span class="line">ServerActive=172.16.1.71  <span class="comment">#主动模式</span></span><br><span class="line">Hostname=web03 <span class="comment">#指定主机名</span></span><br><span class="line"></span><br><span class="line">[root@lb01 ~]# systemctl restart zabbix-agent</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>创建动作</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1723278758673.png" alt="QQ_1723278758673"></p><p><img src="https://cos.lukme.top/Pic/QQ_1723278911425.png" alt="QQ_1723278911425"></p><p><img src="https://cos.lukme.top/Pic/QQ_1723278968991.png" alt="QQ_1723278968991"></p>]]></content>
    
    
    <summary type="html">如何自动添加需要监控的主机？在这里能找到答案</summary>
    
    
    
    <category term="监控" scheme="https://lukme.top/categories/%E7%9B%91%E6%8E%A7/"/>
    
    <category term="zabbix" scheme="https://lukme.top/categories/%E7%9B%91%E6%8E%A7/zabbix/"/>
    
    
    <category term="zabbix" scheme="https://lukme.top/tags/zabbix/"/>
    
  </entry>
  
  <entry>
    <title>小米监控open-falcon</title>
    <link href="https://lukme.top/posts/459a9148.html"/>
    <id>https://lukme.top/posts/459a9148.html</id>
    <published>2024-08-25T12:10:00.000Z</published>
    <updated>2024-08-25T12:30:10.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-open-falcon基本介绍">1. open-falcon基本介绍</h2><blockquote><p>Open-Falcon作为一款开源的互联网企业级监控系统解决方案，以其高性能、易扩展、灵活配置等特点，在互联网公司和大规模IT基础设施中得到了广泛应用。无论是企业IT运维、开发团队还是DevOps，都可以通过Open-Falcon提升运维效率和故障排除能力</p><h3 id="设计原理">设计原理</h3><p>Open-Falcon的设计原理主要包括以下几个部分：</p><ol><li><strong>模块架构</strong>：<ul><li><strong>数据采集与上报</strong>：通过falcon-agent组件自动发现并采集服务器的各种数据和指标，支持用户主动push和用户自定义插件。</li><li><strong>告警</strong>：Judge组件负责判断采集到的数据是否触发告警规则，并生成告警事件。</li><li><strong>归档与绘图</strong>：Graph组件负责存储监控数据，并提供绘图所需的接口。</li><li><strong>报警策略配置</strong>：用户可以在系统中配置多种报警策略，以满足不同的监控需求。</li></ul></li><li><strong>执行过程</strong>：<ul><li>falcon-agent采集到数据后，通过长连接迅速转发给Transfer组件。</li><li>Transfer组件负责分发数据给Judge和Graph组件，分别用于告警判定和绘图。</li><li>Judge组件根据报警策略判断数据是否触发告警，并将告警事件写入Redis消息队列。</li><li>Alarm组件监听Redis中的消息队列，将告警事件转发给微信、短信或邮件等通知方式。</li></ul></li></ol><h3 id="主要功能">主要功能</h3><ol><li><strong>数据采集</strong>：<ul><li>支持多种数据采集方式，包括Agent采集、API采集、脚本采集等。</li><li>falcon-agent能够高效采集系统指标、应用指标和自定义指标。</li></ul></li><li><strong>数据存储与分析</strong>：<ul><li>支持多种数据存储后端，如Graphite、OpenTSDB、InfluxDB等。</li><li>提供高效的数据存储和压缩算法，确保大规模数据的高效存储。</li></ul></li><li><strong>告警管理</strong>：<ul><li>提供灵活的告警规则配置，支持多种告警触发条件和通知方式。</li><li>内置智能的告警策略引擎，支持自动收敛，避免误报和漏报。</li></ul></li><li><strong>数据可视化</strong>：<ul><li>提供Web管理界面（Dashboard），方便用户查看监控图表和配置告警规则23。</li><li>支持自定义仪表盘和报告，便于数据展示和分享。</li></ul></li><li><strong>可扩展性</strong>：<ul><li>设计为分布式架构，支持高可用性和横向扩展。</li><li>提供丰富的扩展接口，支持自定义数据源和插件。</li></ul></li></ol><h3 id="使用场景">使用场景</h3><p>Open-Falcon可以应用于多种场景，包括：</p><ul><li><strong>企业IT运维</strong>：对数据中心、云服务器、网络设备进行实时监控，及时发现并解决问题。</li><li><strong>开发团队</strong>：监控应用和服务的性能，为持续集成与交付提供决策依据。</li><li><strong>DevOps</strong>：自动化运维流程，通过告警快速定位问题，缩短故障恢复时间。</li></ul><p>监控项目分为CPU、Load、内存、磁盘、IO、网络相关、内核参数、ss 统计输出、端口采集、核心服务的进程存活信息采集、关键业务进程资源消耗、NTP offset采集、DNS解析采集，这些指标，都是open-falcon的agent组件直接支持的。</p></blockquote><h2 id="2-open-falcon与其他监控工具的区别">2. open-falcon与其他监控工具的区别</h2><p><img src="D:%5CTypora%5Cdevops%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4%E5%B7%A5%E5%85%B7%5C10.open-falcon.assets%5CQQ_1722697497676.png" alt="img"></p><h2 id="3-环境部署">3. 环境部署</h2><table><thead><tr><th><strong>主机名</strong></th><th><strong>WanIP</strong></th><th><strong>LanIP</strong></th><th><strong>角色</strong></th><th><strong>应用</strong></th></tr></thead><tbody><tr><td>open-falcon</td><td>10.0.0.200</td><td>172.16.1.200</td><td>open-falcon服务端</td><td>open-falcon-server、MySQL</td></tr><tr><td>open-falcon-agent</td><td>10.0.0.201</td><td>172.16.1.201</td><td>open-falcon的客户端</td><td>open-falcon-agent</td></tr></tbody></table><blockquote><ul><li>CentOs7.9</li><li>2核4G</li><li>内存分配20G</li><li>镜像源：阿里源</li></ul></blockquote><h2 id="4-服务端部署">4. 服务端部署</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 更换阿里源和epel源</span></span><br><span class="line">[root@falcon ~]# <span class="built_in">mv</span> /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</span><br><span class="line">[root@falcon ~]# wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line">--2024-08-03 23:17:34--  http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line">Resolving mirrors.aliyun.com (mirrors.aliyun.com)... 180.178.233.232, 180.178.233.233, 180.178.245.235, ...</span><br><span class="line">Connecting to mirrors.aliyun.com (mirrors.aliyun.com)|180.178.233.232|:80... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 2523 (2.5K) [application/octet-stream]</span><br><span class="line">Saving to: ‘/etc/yum.repos.d/CentOS-Base.repo’</span><br><span class="line"></span><br><span class="line">100%[=============================================================================&gt;] 2,523       --.-K/s   <span class="keyword">in</span> 0.001s  </span><br><span class="line"></span><br><span class="line">2024-08-03 23:17:34 (2.84 MB/s) - ‘/etc/yum.repos.d/CentOS-Base.repo’ saved [2523/2523]</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 下载常用软件</span></span><br><span class="line">[root@falcon ~]# yum install git telnet net-tools tree nmap sysstat lrzsz dos2unix tcpdump ntpdate  wget <span class="comment">## -y</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 配置时间同步</span></span><br><span class="line">[root@falcon ~]# ntpdate cn.pool.ntp.org</span><br><span class="line"> 3 Aug 23:24:22 ntpdate[20532]: adjust time server 119.28.183.184 offset -0.435286 sec</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#开启缓存</span></span><br><span class="line">[root@falcon ~]# sed -i <span class="string">&#x27;s#keepcache=0#keepcache=1#g&#x27;</span> /etc/yum.conf </span><br><span class="line">[root@falcon ~]# grep keepcache /etc/yum.conf</span><br><span class="line">keepcache=1</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#关闭selinux</span></span><br><span class="line">sed -i <span class="string">&#x27;s/SELINUX=enforcing/SELINUX=disabled/g&#x27;</span> /etc/selinux/config</span><br><span class="line">setenforce 0</span><br><span class="line"> </span><br><span class="line"><span class="comment">#关闭防火墙</span></span><br><span class="line">systemctl stop firewalld.service</span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld.service</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 安装 redis</span></span><br><span class="line">[root@falcon ~]# yum install redis -y</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 启动redis</span></span><br><span class="line">[root@falcon ~]# redis-server &amp;</span><br><span class="line">[1] 20863</span><br><span class="line">[root@falcon ~]# 20863:C 03 Aug 23:27:25.244 <span class="comment"># Warning: no config file specified, using the default config. In order to specify a config file use redis-server /path/to/redis.conf</span></span><br><span class="line">20863:M 03 Aug 23:27:25.244 * Increased maximum number of open files to 10032 (it was originally <span class="built_in">set</span> to 1024).</span><br><span class="line">                _._                                                  </span><br><span class="line">           _.-``__ <span class="string">&#x27;&#x27;</span>-._                                             </span><br><span class="line">      _.-``    `.  `_.  <span class="string">&#x27;&#x27;</span>-._           Redis 3.2.12 (00000000/0) 64 bit</span><br><span class="line">  .-`` .-```.  ```\/    _.,_ <span class="string">&#x27;&#x27;</span>-._                                   </span><br><span class="line"> (    <span class="string">&#x27;      ,       .-`  | `,    )     Running in standalone mode</span></span><br><span class="line"><span class="string"> |`-._`-...-` __...-.``-._|&#x27;</span>` _.-<span class="string">&#x27;|     Port: 6379</span></span><br><span class="line"><span class="string"> |    `-._   `._    /     _.-&#x27;</span>    |     PID: 20863</span><br><span class="line">  `-._    `-._  `-./  _.-<span class="string">&#x27;    _.-&#x27;</span>                                   </span><br><span class="line"> |`-._`-._    `-.__.-<span class="string">&#x27;    _.-&#x27;</span>_.-<span class="string">&#x27;|                                  </span></span><br><span class="line"><span class="string"> |    `-._`-._        _.-&#x27;</span>_.-<span class="string">&#x27;    |           http://redis.io        </span></span><br><span class="line"><span class="string">  `-._    `-._`-.__.-&#x27;</span>_.-<span class="string">&#x27;    _.-&#x27;</span>                                   </span><br><span class="line"> |`-._`-._    `-.__.-<span class="string">&#x27;    _.-&#x27;</span>_.-<span class="string">&#x27;|                                  </span></span><br><span class="line"><span class="string"> |    `-._`-._        _.-&#x27;</span>_.-<span class="string">&#x27;    |                                  </span></span><br><span class="line"><span class="string">  `-._    `-._`-.__.-&#x27;</span>_.-<span class="string">&#x27;    _.-&#x27;</span>                                   </span><br><span class="line">      `-._    `-.__.-<span class="string">&#x27;    _.-&#x27;</span>                                       </span><br><span class="line">          `-._        _.-<span class="string">&#x27;                                           </span></span><br><span class="line"><span class="string">              `-.__.-&#x27;</span>                                               </span><br><span class="line"></span><br><span class="line">20863:M 03 Aug 23:27:25.244 <span class="comment"># WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.</span></span><br><span class="line">20863:M 03 Aug 23:27:25.244 <span class="comment"># Server started, Redis version 3.2.12</span></span><br><span class="line">20863:M 03 Aug 23:27:25.244 <span class="comment"># WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add &#x27;vm.overcommit_memory = 1&#x27; to /etc/sysctl.conf and then reboot or run the command &#x27;sysctl vm.overcommit_memory=1&#x27; for this to take effect.</span></span><br><span class="line">20863:M 03 Aug 23:27:25.244 <span class="comment"># WARNING you have Transparent Huge Pages (THP) support enabled in your kernel. This will create latency and memory usage issues with Redis. To fix this issue run the command &#x27;echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled&#x27; as root, and add it to your /etc/rc.local in order to retain the setting after a reboot. Redis must be restarted after THP is disabled.</span></span><br><span class="line">20863:M 03 Aug 23:27:25.244 * The server is now ready to accept connections on port 6379</span><br><span class="line">^C</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 安装mysql并设置开机自启</span></span><br><span class="line"></span><br><span class="line">[root@falcon ~]# wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm</span><br><span class="line">--2024-08-03 23:41:44--  http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm</span><br><span class="line">Resolving repo.mysql.com (repo.mysql.com)... 96.7.105.231, 2600:1417:8400:ab8::1d68, 2600:1417:8400:a87::1d68</span><br><span class="line">Connecting to repo.mysql.com (repo.mysql.com)|96.7.105.231|:80... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 6140 (6.0K) [application/x-redhat-package-manager]</span><br><span class="line">Saving to: ‘mysql-community-release-el7-5.noarch.rpm’</span><br><span class="line"></span><br><span class="line">100%[=============================================================================&gt;] 6,140       --.-K/s   <span class="keyword">in</span> 0s      </span><br><span class="line"></span><br><span class="line">2024-08-03 23:41:44 (783 MB/s) - ‘mysql-community-release-el7-5.noarch.rpm’ saved [6140/6140]</span><br><span class="line"></span><br><span class="line">[root@falcon ~]# ll</span><br><span class="line">total 200</span><br><span class="line">-rw-------. 1 root root   1413 May 13 15:22 anaconda-ks.cfg</span><br><span class="line">-rw-r--r--. 1 root root 188754 Apr 23 11:13 main.sh</span><br><span class="line">-rw-r--r--  1 root root   6140 Nov 12  2015 mysql-community-release-el7-5.noarch.rpm</span><br><span class="line"></span><br><span class="line">[root@falcon ~]# rpm -ivh mysql-community-release-el7-5.noarch.rpm </span><br><span class="line">Preparing...                          <span class="comment">################################# [100%]</span></span><br><span class="line">Updating / installing...</span><br><span class="line">   1:mysql-community-release-el7-5    <span class="comment">################################# [100%]</span></span><br><span class="line">   </span><br><span class="line">[root@falcon ~]# ll /etc/yum.repos.d/</span><br><span class="line">total 44</span><br><span class="line">-rw-r--r--  1 root root 2523 Aug  4  2022 CentOS-Base.repo</span><br><span class="line">-rw-r--r--. 1 root root 1675 May 13 16:46 CentOS-Base.repo.backup</span><br><span class="line">-rw-r--r--. 1 root root 1312 May 13 16:46 CentOS-CR.repo</span><br><span class="line">-rw-r--r--. 1 root root  649 May 13 16:46 CentOS-Debuginfo.repo</span><br><span class="line">-rw-r--r--. 1 root root  292 May 13 16:46 CentOS-fasttrack.repo</span><br><span class="line">-rw-r--r--. 1 root root  629 May 13 16:46 CentOS-Media.repo</span><br><span class="line">-rw-r--r--. 1 root root 1347 May 13 16:46 CentOS-Sources.repo</span><br><span class="line">-rw-r--r--. 1 root root  921 May 13 16:46 epel.repo</span><br><span class="line">-rw-r--r--. 1 root root 1020 May 13 16:46 epel-testing.repo</span><br><span class="line">-rw-r--r--  1 root root 1209 Jan 29  2014 mysql-community.repo</span><br><span class="line">-rw-r--r--  1 root root 1060 Jan 29  2014 mysql-community-source.repo</span><br><span class="line"></span><br><span class="line">[root@falcon ~]# yum install -y mysql-server</span><br><span class="line"></span><br><span class="line">[root@falcon ~]# systemctl start mysqld.service</span><br><span class="line">[root@falcon ~]# systemctl <span class="built_in">enable</span> mysqld.service</span><br><span class="line"></span><br><span class="line">[root@falcon ~]# netstat -lntup</span><br><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    </span><br><span class="line">tcp        0      0 0.0.0.0:6379            0.0.0.0:*               LISTEN      20863/redis-server  </span><br><span class="line">tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      8960/sshd           </span><br><span class="line">tcp        0      0 127.0.0.1:25            0.0.0.0:*               LISTEN      9190/master         </span><br><span class="line">tcp6       0      0 :::3306                 :::*                    LISTEN      22084/mysqld        </span><br><span class="line">tcp6       0      0 :::6379                 :::*                    LISTEN      20863/redis-server  </span><br><span class="line">tcp6       0      0 :::22                   :::*                    LISTEN      8960/sshd           </span><br><span class="line">tcp6       0      0 ::1:25                  :::*                    LISTEN      9190/master </span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 初始化MySQL表结构，给用户设置密码，导入数据库表</span></span><br><span class="line"></span><br><span class="line">[root@falcon ~]# <span class="built_in">cd</span> /tmp/ &amp;&amp; git <span class="built_in">clone</span> https://github.com/open-falcon/falcon-plus.git </span><br><span class="line">Cloning into <span class="string">&#x27;falcon-plus&#x27;</span>...</span><br><span class="line">remote: Enumerating objects: 10196, <span class="keyword">done</span>.</span><br><span class="line">remote: Counting objects: 100% (279/279), <span class="keyword">done</span>.</span><br><span class="line">remote: Compressing objects: 100% (229/229), <span class="keyword">done</span>.</span><br><span class="line">remote: Total 10196 (delta 60), reused 229 (delta 36), pack-reused 9917</span><br><span class="line">Receiving objects: 100% (10196/10196), 16.95 MiB | 2.43 MiB/s, <span class="keyword">done</span>.</span><br><span class="line">Resolving deltas: 100% (5352/5352), <span class="keyword">done</span>.</span><br><span class="line">[root@falcon tmp]# <span class="built_in">cd</span> /tmp/falcon-plus/scripts/mysql/db_schema/</span><br><span class="line">[root@falcon db_schema]# ll</span><br><span class="line">total 24</span><br><span class="line">-rw-r--r-- 1 root root 1952 Aug  4 00:08 1_uic-db-schema.sql</span><br><span class="line">-rw-r--r-- 1 root root 7573 Aug  4 00:08 2_portal-db-schema.sql</span><br><span class="line">-rw-r--r-- 1 root root 3391 Aug  4 00:08 3_dashboard-db-schema.sql</span><br><span class="line">-rw-r--r-- 1 root root 1807 Aug  4 00:08 4_graph-db-schema.sql</span><br><span class="line">-rw-r--r-- 1 root root 2558 Aug  4 00:08 5_alarms-db-schema.sql</span><br><span class="line">[root@falcon db_schema]# mysqladmin -uroot password <span class="string">&quot;password&quot;</span></span><br><span class="line">Warning: Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">[root@falcon db_schema]# mysql -uroot -p</span><br><span class="line">Enter password: </span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection <span class="built_in">id</span> is 9</span><br><span class="line">Server version: 5.6.51 MySQL Community Server (GPL)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2021, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">&#x27;help;&#x27;</span> or <span class="string">&#x27;\h&#x27;</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">&#x27;\c&#x27;</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">+--------------------+</span><br><span class="line">3 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; \q</span><br><span class="line">Bye</span><br><span class="line">[root@falcon db_schema]# mysql -h 127.0.0.1 -u root -p &lt; 1_uic-db-schema.sql</span><br><span class="line">Enter password: </span><br><span class="line">[root@falcon db_schema]# mysql -h 127.0.0.1 -u root -p &lt; 2_portal-db-schema.sql</span><br><span class="line">Enter password: </span><br><span class="line">[root@falcon db_schema]# mysql -h 127.0.0.1 -u root -p &lt; 3_dashboard-db-schema.sql</span><br><span class="line">Enter password: </span><br><span class="line">[root@falcon db_schema]# mysql -h 127.0.0.1 -u root -p &lt; 4_graph-db-schema.sql</span><br><span class="line">Enter password: </span><br><span class="line">[root@falcon db_schema]# mysql -h 127.0.0.1 -u root -p &lt; 5_alarms-db-schema.sql</span><br><span class="line">Enter password: </span><br><span class="line"></span><br><span class="line">[root@falcon db_schema]# mysql -uroot -ppassword</span><br><span class="line">Warning: Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection <span class="built_in">id</span> is 15</span><br><span class="line">Server version: 5.6.51 MySQL Community Server (GPL)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2021, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">&#x27;help;&#x27;</span> or <span class="string">&#x27;\h&#x27;</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">&#x27;\c&#x27;</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| alarms             |</span><br><span class="line">| dashboard          |</span><br><span class="line">| falcon_portal      |</span><br><span class="line">| graph              |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| uic                |</span><br><span class="line">+--------------------+</span><br><span class="line">8 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; \q</span><br><span class="line">Bye</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 安装go语言开发环境，配置好环境变量</span></span><br><span class="line"></span><br><span class="line">[root@falcon db_schema]# yum install golang -y</span><br><span class="line"></span><br><span class="line">[root@falcon db_schema]# [root@falcon db_schema]# go version</span><br><span class="line">go version go1.20.12 linux/amd64</span><br><span class="line"></span><br><span class="line">[root@falcon db_schema]# find / -name go</span><br><span class="line">/usr/bin/go</span><br><span class="line">/usr/lib/golang/src/cmd/go</span><br><span class="line">/usr/lib/golang/src/cmd/vendor/golang.org/x/tools/go</span><br><span class="line">/usr/lib/golang/src/go</span><br><span class="line">/usr/lib/golang/bin/go</span><br><span class="line"></span><br><span class="line">[root@falcon db_schema]# <span class="built_in">export</span> GOROOT=/usr/lib/golang</span><br><span class="line">[root@falcon db_schema]# <span class="built_in">export</span> GOPATH=/home</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 安装open-falcon</span></span><br><span class="line"></span><br><span class="line">[root@falcon profile.d]# <span class="built_in">export</span> FALCON_HOME=/home/work</span><br><span class="line">[root@falcon profile.d]# <span class="built_in">export</span> WORKSPACE=<span class="variable">$FALCON_HOME</span>/open-falcon</span><br><span class="line">[root@falcon profile.d]# <span class="built_in">mkdir</span> -p <span class="variable">$WORKSPACE</span></span><br><span class="line">[root@falcon profile.d]# ll</span><br><span class="line">total 68</span><br><span class="line">-rw-r--r--. 1 root root  771 Oct 31  2018 256term.csh</span><br><span class="line">-rw-r--r--. 1 root root  841 Oct 31  2018 256term.sh</span><br><span class="line">-rw-r--r--. 1 root root  196 Mar 25  2017 colorgrep.csh</span><br><span class="line">-rw-r--r--. 1 root root  201 Mar 25  2017 colorgrep.sh</span><br><span class="line">-rw-r--r--. 1 root root 1741 Oct 30  2018 colorls.csh</span><br><span class="line">-rw-r--r--. 1 root root 1606 Oct 30  2018 colorls.sh</span><br><span class="line">-rw-r--r--. 1 root root   80 Oct 31  2018 csh.local</span><br><span class="line">-rw-r--r--  1 root root   50 Aug  4 00:29 go_env.sh</span><br><span class="line">-rw-r--r--. 1 root root 1706 Oct 31  2018 lang.csh</span><br><span class="line">-rw-r--r--. 1 root root 2703 Oct 31  2018 lang.sh</span><br><span class="line">-rw-r--r--. 1 root root  123 Jul 31  2015 less.csh</span><br><span class="line">-rw-r--r--. 1 root root  121 Jul 31  2015 less.sh</span><br><span class="line">-rw-r--r--. 1 root root   81 Oct 31  2018 sh.local</span><br><span class="line">-rw-r--r--. 1 root root  105 Dec 16  2020 vim.csh</span><br><span class="line">-rw-r--r--. 1 root root  269 Dec 16  2020 vim.sh</span><br><span class="line">-rw-r--r--. 1 root root  164 Jan 28  2014 which2.csh</span><br><span class="line">-rw-r--r--. 1 root root  169 Jan 28  2014 which2.sh</span><br><span class="line">[root@falcon profile.d]# <span class="built_in">cd</span></span><br><span class="line">[root@falcon ~]# ll</span><br><span class="line">total 200</span><br><span class="line">-rw-------. 1 root root   1413 May 13 15:22 anaconda-ks.cfg</span><br><span class="line">-rw-r--r--. 1 root root 188754 Apr 23 11:13 main.sh</span><br><span class="line">-rw-r--r--  1 root root   6140 Nov 12  2015 mysql-community-release-el7-5.noarch.rpm</span><br><span class="line"></span><br><span class="line">[root@falcon ~]# rz</span><br><span class="line">rz waiting to receive.**[root@falcon ~]# ll</span><br><span class="line">total 67276</span><br><span class="line">-rw-------. 1 root root     1413 May 13 15:22 anaconda-ks.cfg</span><br><span class="line">-rw-r--r--. 1 root root   188754 Apr 23 11:13 main.sh</span><br><span class="line">-rw-r--r--  1 root root     6140 Nov 12  2015 mysql-community-release-el7-5.noarch.rpm</span><br><span class="line">-r--r--r--  1 root root 68685265 Jul 31 21:23 open-falcon-v0.3.tar.gz</span><br><span class="line">[root@falcon ~]# tar xf open-falcon-v0.3.tar.gz -C <span class="variable">$WORKSPACE</span></span><br><span class="line">[root@falcon ~]# <span class="built_in">cd</span> <span class="variable">$WORKSPACE</span>/</span><br><span class="line">[root@falcon open-falcon]# ll</span><br><span class="line">total 4272</span><br><span class="line">drwxr-xr-x 7 czm_core czm_core      71 May 30  2019 agent</span><br><span class="line">drwxr-xr-x 5 czm_core czm_core      43 May 30  2019 aggregator</span><br><span class="line">drwxr-xr-x 5 czm_core czm_core      43 May 30  2019 alarm</span><br><span class="line">drwxr-xr-x 6 czm_core czm_core      55 May 30  2019 api</span><br><span class="line">drwxr-xr-x 5 czm_core czm_core      43 May 30  2019 gateway</span><br><span class="line">drwxr-xr-x 6 czm_core czm_core      55 May 30  2019 graph</span><br><span class="line">drwxr-xr-x 5 czm_core czm_core      43 May 30  2019 hbs</span><br><span class="line">drwxr-xr-x 5 czm_core czm_core      43 May 30  2019 judge</span><br><span class="line">drwxr-xr-x 5 czm_core czm_core      43 May 30  2019 nodata</span><br><span class="line">-rwxr-xr-x 1 czm_core czm_core 4370880 May 30  2019 open-falcon</span><br><span class="line">lrwxrwxrwx 1 czm_core czm_core      15 May 30  2019 plugin -&gt; ./agent/plugin/</span><br><span class="line">lrwxrwxrwx 1 czm_core czm_core      15 May 30  2019 public -&gt; ./agent/public/</span><br><span class="line">drwxr-xr-x 5 czm_core czm_core      43 May 30  2019 transfer</span><br><span class="line">[root@falcon open-falcon]# <span class="built_in">cd</span> /home/work</span><br><span class="line">[root@falcon work]# ll</span><br><span class="line">total 0</span><br><span class="line">drwxr-xr-x 12 czm_core czm_core 190 May 30  2019 open-falcon</span><br><span class="line">[root@falcon work]# <span class="built_in">cd</span> open-falcon/</span><br><span class="line">[root@falcon open-falcon]# ll</span><br><span class="line">total 4272</span><br><span class="line">drwxr-xr-x 7 czm_core czm_core      71 May 30  2019 agent</span><br><span class="line">drwxr-xr-x 5 czm_core czm_core      43 May 30  2019 aggregator</span><br><span class="line">drwxr-xr-x 5 czm_core czm_core      43 May 30  2019 alarm</span><br><span class="line">drwxr-xr-x 6 czm_core czm_core      55 May 30  2019 api</span><br><span class="line">drwxr-xr-x 5 czm_core czm_core      43 May 30  2019 gateway</span><br><span class="line">drwxr-xr-x 6 czm_core czm_core      55 May 30  2019 graph</span><br><span class="line">drwxr-xr-x 5 czm_core czm_core      43 May 30  2019 hbs</span><br><span class="line">drwxr-xr-x 5 czm_core czm_core      43 May 30  2019 judge</span><br><span class="line">drwxr-xr-x 5 czm_core czm_core      43 May 30  2019 nodata</span><br><span class="line">-rwxr-xr-x 1 czm_core czm_core 4370880 May 30  2019 open-falcon</span><br><span class="line">lrwxrwxrwx 1 czm_core czm_core      15 May 30  2019 plugin -&gt; ./agent/plugin/</span><br><span class="line">lrwxrwxrwx 1 czm_core czm_core      15 May 30  2019 public -&gt; ./agent/public/</span><br><span class="line">drwxr-xr-x 5 czm_core czm_core      43 May 30  2019 transfer</span><br><span class="line">[root@falcon open-falcon]# <span class="built_in">pwd</span></span><br><span class="line">/home/work/open-falcon</span><br></pre></td></tr></table></figure><p><strong>修改配置文件cfg.json(由于之前设置的root密码为password，底下配置文件要改)</strong></p><table><thead><tr><th>修改的文件</th><th>路径</th></tr></thead><tbody><tr><td>aggregator</td><td>/home/work/open-falcon/aggregator/config/cfg.json</td></tr><tr><td>graph</td><td>/home/work/open-falcon/graph/config/cfg.json</td></tr><tr><td>hbs</td><td>/home/work/open-falcon/hbs/config/cfg.json</td></tr><tr><td>nodata</td><td>/home/work/open-falcon/nodata/config/cfg.json</td></tr><tr><td>api</td><td>/home/work/open-falcon/api/config/cfg.json</td></tr><tr><td>alarm</td><td>/home/work/open-falcon/alarm/config/cfg.json</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 修改aggregator的配置文件</span></span><br><span class="line"></span><br><span class="line">[root@falcon open-falcon]# <span class="built_in">cd</span> aggregator/</span><br><span class="line">[root@falcon aggregator]# ll</span><br><span class="line">total 0</span><br><span class="line">drwxr-xr-x 2 czm_core czm_core 31 May 30  2019 bin</span><br><span class="line">drwxr-xr-x 2 czm_core czm_core 22 May 30  2019 config</span><br><span class="line">drwxr-xr-x 2 czm_core czm_core  6 May 30  2019 logs</span><br><span class="line">[root@falcon aggregator]# <span class="built_in">cd</span> config/</span><br><span class="line">[root@falcon config]# ll</span><br><span class="line">total 4</span><br><span class="line">-rw-r--r-- 1 czm_core czm_core 522 May 30  2019 cfg.json</span><br><span class="line">[root@falcon config]# <span class="built_in">pwd</span></span><br><span class="line">/home/work/open-falcon/aggregator/config</span><br><span class="line">[root@falcon config]# vim cfg.json</span><br></pre></td></tr></table></figure><p><img src="D:%5CTypora%5Cdevops%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4%E5%B7%A5%E5%85%B7%5C10.open-falcon.assets%5CQQ_1722703517483.png" alt="img"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 修改graph的配置文件</span></span><br><span class="line"></span><br><span class="line">[root@falcon open-falcon]# ll</span><br><span class="line">total 4272</span><br><span class="line">drwxr-xr-x 7 czm_core czm_core      71 May 30  2019 agent</span><br><span class="line">drwxr-xr-x 5 czm_core czm_core      43 May 30  2019 aggregator</span><br><span class="line">drwxr-xr-x 5 czm_core czm_core      43 May 30  2019 alarm</span><br><span class="line">drwxr-xr-x 6 czm_core czm_core      55 May 30  2019 api</span><br><span class="line">drwxr-xr-x 5 czm_core czm_core      43 May 30  2019 gateway</span><br><span class="line">drwxr-xr-x 6 czm_core czm_core      55 May 30  2019 graph</span><br><span class="line">drwxr-xr-x 5 czm_core czm_core      43 May 30  2019 hbs</span><br><span class="line">drwxr-xr-x 5 czm_core czm_core      43 May 30  2019 judge</span><br><span class="line">drwxr-xr-x 5 czm_core czm_core      43 May 30  2019 nodata</span><br><span class="line">-rwxr-xr-x 1 czm_core czm_core 4370880 May 30  2019 open-falcon</span><br><span class="line">lrwxrwxrwx 1 czm_core czm_core      15 May 30  2019 plugin -&gt; ./agent/plugin/</span><br><span class="line">lrwxrwxrwx 1 czm_core czm_core      15 May 30  2019 public -&gt; ./agent/public/</span><br><span class="line">drwxr-xr-x 5 czm_core czm_core      43 May 30  2019 transfer</span><br><span class="line">[root@falcon open-falcon]# <span class="built_in">pwd</span></span><br><span class="line">/home/work/open-falcon</span><br><span class="line">[root@falcon open-falcon]# <span class="built_in">cd</span> graph/</span><br><span class="line">[root@falcon graph]# <span class="built_in">cd</span> config</span><br><span class="line">[root@falcon config]# vim cfg.json </span><br></pre></td></tr></table></figure><p><img src="D:%5CTypora%5Cdevops%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4%E5%B7%A5%E5%85%B7%5C10.open-falcon.assets%5CQQ_1722703737785.png" alt="img"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 修改hbs的配置文件</span></span><br><span class="line"></span><br><span class="line">[root@falcon config]# vim /home/work/open-falcon/hbs/config/cfg.json </span><br></pre></td></tr></table></figure><p><img src="D:%5CTypora%5Cdevops%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4%E5%B7%A5%E5%85%B7%5C10.open-falcon.assets%5CQQ_1722703871384.png" alt="img"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 修改nodata的配置文件</span></span><br><span class="line">[root@falcon config]# vim /home/work/open-falcon/nodata/config/cfg.json</span><br></pre></td></tr></table></figure><p><img src="D:%5CTypora%5Cdevops%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4%E5%B7%A5%E5%85%B7%5C10.open-falcon.assets%5CQQ_1722703963223.png" alt="img"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 修改api的配置文件</span></span><br><span class="line">[root@falcon config]# vim /home/work/open-falcon/api/config/cfg.json</span><br></pre></td></tr></table></figure><p><img src="D:%5CTypora%5Cdevops%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4%E5%B7%A5%E5%85%B7%5C10.open-falcon.assets%5CQQ_1722704127654.png" alt="img"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 修改alarm的配置文件</span></span><br><span class="line">[root@falcon config]# vim /home/work/open-falcon/alarm/config/cfg.json</span><br></pre></td></tr></table></figure><p><img src="D:%5CTypora%5Cdevops%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4%E5%B7%A5%E5%85%B7%5C10.open-falcon.assets%5CQQ_1722704273423.png" alt="img"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 启动后端模块，检查启动状态</span></span><br><span class="line"></span><br><span class="line">[root@falcon work]# <span class="built_in">cd</span> /home/work/open-falcon/</span><br><span class="line">[root@falcon open-falcon]# ./open-falcon start</span><br><span class="line">[falcon-graph] 31555</span><br><span class="line">[falcon-hbs] 31567</span><br><span class="line">[falcon-judge] 31578</span><br><span class="line">[falcon-transfer] 31589</span><br><span class="line">[falcon-nodata] 31597</span><br><span class="line">[falcon-aggregator] 31616</span><br><span class="line">[falcon-agent] 31635</span><br><span class="line">[falcon-gateway] 31643</span><br><span class="line">[falcon-api] 31653</span><br><span class="line">[falcon-alarm] 31667</span><br><span class="line"></span><br><span class="line">[root@falcon open-falcon]# ./open-falcon check</span><br><span class="line">        falcon-graph         UP           31555 </span><br><span class="line">          falcon-hbs         UP           31567 </span><br><span class="line">        falcon-judge         UP           31578 </span><br><span class="line">     falcon-transfer         UP           31589 </span><br><span class="line">       falcon-nodata         UP           31597 </span><br><span class="line">   falcon-aggregator         UP           31616 </span><br><span class="line">        falcon-agent         UP           31635 </span><br><span class="line">      falcon-gateway         UP           31643 </span><br><span class="line">          falcon-api         UP           31653 </span><br><span class="line">        falcon-alarm         UP           31667 </span><br><span class="line">        </span><br><span class="line"><span class="comment">#更多的命令行工具用法</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ./open-falcon [start|stop|restart|check|monitor|reload] module</span></span><br><span class="line">./open-falcon start agent</span><br><span class="line"> </span><br><span class="line">./open-falcon check</span><br><span class="line">        falcon-graph         UP           53007</span><br><span class="line">          falcon-hbs         UP           53014</span><br><span class="line">        falcon-judge         UP           53020</span><br><span class="line">     falcon-transfer         UP           53026</span><br><span class="line">       falcon-nodata         UP           53032</span><br><span class="line">   falcon-aggregator         UP           53038</span><br><span class="line">        falcon-agent         UP           53044</span><br><span class="line">      falcon-gateway         UP           53050</span><br><span class="line">          falcon-api         UP           53056</span><br><span class="line">        falcon-alarm         UP           53063</span><br><span class="line"> </span><br><span class="line"><span class="comment">#For debugging , You can check $WorkDir/$moduleName/log/logs/xxx.log      </span></span><br><span class="line"></span><br><span class="line">[root@falcon open-falcon]# netstat -lntup</span><br><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    </span><br><span class="line">tcp        0      0 0.0.0.0:6379            0.0.0.0:*               LISTEN      20863/redis-server  </span><br><span class="line">tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      8960/sshd           </span><br><span class="line">tcp        0      0 127.0.0.1:25            0.0.0.0:*               LISTEN      9190/master         </span><br><span class="line">tcp6       0      0 :::6055                 :::*                    LISTEN      31616/falcon-aggreg </span><br><span class="line">tcp6       0      0 :::6090                 :::*                    LISTEN      31597/falcon-nodata </span><br><span class="line">tcp6       0      0 :::3306                 :::*                    LISTEN      22084/mysqld        </span><br><span class="line">tcp6       0      0 :::6379                 :::*                    LISTEN      20863/redis-server  </span><br><span class="line">tcp6       0      0 :::14444                :::*                    LISTEN      31643/falcon-gatewa </span><br><span class="line">tcp6       0      0 :::6060                 :::*                    LISTEN      31589/falcon-transf </span><br><span class="line">tcp6       0      0 :::6030                 :::*                    LISTEN      31567/falcon-hbs    </span><br><span class="line">tcp6       0      0 :::6031                 :::*                    LISTEN      31567/falcon-hbs    </span><br><span class="line">tcp6       0      0 :::8080                 :::*                    LISTEN      31653/falcon-api    </span><br><span class="line">tcp6       0      0 :::8433                 :::*                    LISTEN      31589/falcon-transf </span><br><span class="line">tcp6       0      0 :::6070                 :::*                    LISTEN      31555/falcon-graph  </span><br><span class="line">tcp6       0      0 :::22                   :::*                    LISTEN      8960/sshd           </span><br><span class="line">tcp6       0      0 :::6071                 :::*                    LISTEN      31555/falcon-graph  </span><br><span class="line">tcp6       0      0 :::9912                 :::*                    LISTEN      31667/falcon-alarm  </span><br><span class="line">tcp6       0      0 ::1:25                  :::*                    LISTEN      9190/master         </span><br><span class="line">tcp6       0      0 :::16060                :::*                    LISTEN      31643/falcon-gatewa </span><br><span class="line">tcp6       0      0 :::4444                 :::*                    LISTEN      31589/falcon-transf </span><br><span class="line">tcp6       0      0 :::6080                 :::*                    LISTEN      31578/falcon-judge  </span><br><span class="line">tcp6       0      0 :::18433                :::*                    LISTEN      31643/falcon-gatewa </span><br><span class="line">tcp6       0      0 :::6081                 :::*                    LISTEN      31578/falcon-judge  </span><br><span class="line">tcp6       0      0 :::1988                 :::*                    LISTEN      31635/falcon-agent  </span><br></pre></td></tr></table></figure><h2 id="5-客户端">5. 客户端</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 创建目录，导入组件代码</span></span><br><span class="line"></span><br><span class="line">[root@open-falcon-agent profile.d]# <span class="built_in">export</span> HOME=/home/work</span><br><span class="line">[root@open-falcon-agent profile.d]# <span class="built_in">export</span> WORKSPACE=<span class="variable">$HOME</span>/open-falcon</span><br><span class="line">[root@open-falcon-agent profile.d]# <span class="built_in">mkdir</span> -p <span class="variable">$WORKSPACE</span></span><br><span class="line">[root@open-falcon-agent profile.d]# <span class="built_in">cd</span> <span class="variable">$WORKSPACE</span></span><br><span class="line">[root@open-falcon-agent open-falcon]# ll</span><br><span class="line">total 0</span><br><span class="line"></span><br><span class="line">[root@open-falcon-agent open-falcon]# rz</span><br><span class="line">rz waiting to receive.**[root@open-falcon-agent open-falcon]# ll</span><br><span class="line">total 1516</span><br><span class="line">-r--r--r-- 1 root root 1550458 Jul 31 21:22 dashboard-master.zip</span><br><span class="line">[root@open-falcon-agent open-falcon]# unzip dashboard-master.zip </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@open-falcon-agent open-falcon]# ll</span><br><span class="line">total 1516</span><br><span class="line">drwxr-xr-x 5 root root     265 Jun 22  2020 dashboard-master</span><br><span class="line">-r--r--r-- 1 root root 1550458 Jul 31 21:22 dashboard-master.zip</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 安装依赖包</span></span><br><span class="line"></span><br><span class="line">yum install -y python-virtualenv</span><br><span class="line">yum install -y python-devel</span><br><span class="line">yum install -y openldap-devel</span><br><span class="line">yum install -y mysql-devel</span><br><span class="line">yum groupinstall <span class="string">&quot;Development tools&quot;</span> -y</span><br><span class="line"></span><br><span class="line">[root@open-falcon-agent dashboard-master]# <span class="built_in">cd</span> <span class="variable">$WORKSPACE</span>/dashboard-master</span><br><span class="line">[root@open-falcon-agent dashboard-master]# ll</span><br><span class="line">total 56</span><br><span class="line">-rw-r--r--  1 root root    97 Jun 22  2020 babel.cfg</span><br><span class="line">-rwxr-xr-x  1 root root  2653 Jun 22  2020 control</span><br><span class="line">-rw-r--r--  1 root root   510 Jun 22  2020 Dockerfile</span><br><span class="line">-rw-r--r--  1 root root   319 Jun 22  2020 entrypoint.sh</span><br><span class="line">-rw-r--r--  1 root root   170 Jun 22  2020 gunicorn.conf</span><br><span class="line">-rw-r--r--  1 root root  1235 Jun 22  2020 i18n.md</span><br><span class="line">-rw-r--r--  1 root root 11358 Jun 22  2020 LICENSE</span><br><span class="line">-rw-r--r--  1 root root   462 Jun 22  2020 NOTICE</span><br><span class="line">-rw-r--r--  1 root root   139 Jun 22  2020 pip_requirements.txt</span><br><span class="line">-rw-r--r--  1 root root  5296 Jun 22  2020 README.md</span><br><span class="line">drwxr-xr-x 10 root root   194 Jun 22  2020 rrd</span><br><span class="line">drwxr-xr-x  2 root root   101 Jun 22  2020 screenshots</span><br><span class="line">drwxr-xr-x  2 root root    65 Jun 22  2020 scripts</span><br><span class="line">-rwxr-xr-x  1 root root   979 Jun 22  2020 wsgi.py</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@open-falcon-agent dashboard-master]# virtualenv ./env</span><br><span class="line">New python executable <span class="keyword">in</span> /home/work/open-falcon/dashboard-master/env/bin/python2</span><br><span class="line">Also creating executable <span class="keyword">in</span> /home/work/open-falcon/dashboard-master/env/bin/python</span><br><span class="line">Installing setuptools, pip, wheel...done.</span><br><span class="line"></span><br><span class="line">[root@open-falcon-agent dashboard-master]# <span class="built_in">source</span> <span class="built_in">env</span>/bin/activate</span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent dashboard-master]# pip install -r pip_requirements.txt -i</span><br><span class="line"></span><br><span class="line">Usage:   </span><br><span class="line">  pip install [options] &lt;requirement specifier&gt; [package-index-options] ...</span><br><span class="line">  pip install [options] -r &lt;requirements file&gt; [package-index-options] ...</span><br><span class="line">  pip install [options] [-e] &lt;vcs project url&gt; ...</span><br><span class="line">  pip install [options] [-e] &lt;<span class="built_in">local</span> project path&gt; ...</span><br><span class="line">  pip install [options] &lt;archive url/path&gt; ...</span><br><span class="line"></span><br><span class="line">-i option requires an argument</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#如果安装了高版本pip，请先卸载pip uninstall pip   再按两次y</span></span><br><span class="line"><span class="comment">#指定源安装包（备注：这步如果安装不成功，请检查pip版本是否为pip-9.0.1） </span></span><br><span class="line">pip install -r pip_requirements.txt -i</span><br><span class="line">这里virtualenv ./env作用是创建一个新的python环境，详见：https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/001432712108300322c61f256c74803b43bfd65c6f8d0d0000</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 切换环境后，pip安装</span></span><br><span class="line"></span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent dashboard-master]# ./env/bin/pip install -r pip_requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple/</span><br><span class="line">Collecting Flask==1.0 (from -r pip_requirements.txt (line 1))</span><br><span class="line">  Downloading https://pypi.tuna.tsinghua.edu.cn/packages/55/b1/4365193655df97227ace49311365cc296e74b60c7f5c63d23cd30175e2f6/Flask-1.0-py2.py3-none-any.whl (97kB)</span><br><span class="line">    100% |████████████████████████████████| 102kB 1.6MB/s </span><br><span class="line">Collecting Flask-Babel==0.9 (from -r pip_requirements.txt (line 2))</span><br><span class="line">  Downloading https://pypi.tuna.tsinghua.edu.cn/packages/24/6b/dd9031c446e05600b740086274a9939799f26401b8b96e124ccf71e6a9b2/Flask-Babel-0.9.tar.gz</span><br><span class="line">Collecting Jinja2&gt;=2.10.1 (from -r pip_requirements.txt (line 3))</span><br><span class="line">  Downloading https://pypi.tuna.tsinghua.edu.cn/packages/7e/c2/1eece8c95ddbc9b1aeb64f5783a9e07a286de42191b7204d67b7496ddf35/Jinja2-2.11.3-py2.py3-none-any.whl (125kB)</span><br><span class="line">    100% |████████████████████████████████| 133kB 4.3MB/s </span><br><span class="line">Collecting Werkzeug==0.15.4 (from -r pip_requirements.txt (line 4))</span><br><span class="line">  Downloading https://pypi.tuna.tsinghua.edu.cn/packages/9f/57/92a497e38161ce40606c27a86759c6b92dd34fcdb33f64171ec559257c02/Werkzeug-0.15.4-py2.py3-none-any.whl (327kB)</span><br><span class="line">    100% |████████████████████████████████| 327kB 3.1MB/s </span><br><span class="line">Collecting gunicorn==19.9.0 (from -r pip_requirements.txt (line 5))</span><br><span class="line">  Downloading https://pypi.tuna.tsinghua.edu.cn/packages/8c/da/b8dd8deb741bff556db53902d4706774c8e1e67265f69528c14c003644e6/gunicorn-19.9.0-py2.py3-none-any.whl (112kB)</span><br><span class="line">    100% |████████████████████████████████| 122kB 4.6MB/s </span><br><span class="line">Collecting python-dateutil==2.2 (from -r pip_requirements.txt (line 6))</span><br><span class="line">  Downloading https://pypi.tuna.tsinghua.edu.cn/packages/75/c5/85d027471fa665f8c8b8eb0b925f9d84b4eee745a257b16de4957de99e81/python-dateutil-2.2.tar.gz (259kB)</span><br><span class="line">    100% |████████████████████████████████| 266kB 5.5MB/s </span><br><span class="line">Collecting requests==2.3.0 (from -r pip_requirements.txt (line 7))</span><br><span class="line">  Downloading https://pypi.tuna.tsinghua.edu.cn/packages/f7/51/7aa1e337862118bee783c0249debd64cb07b8fbdfef154b1e185754b02d5/requests-2.3.0-py2.py3-none-any.whl (452kB)</span><br><span class="line">    100% |████████████████████████████████| 460kB 2.8MB/s </span><br><span class="line">Collecting mysql-python (from -r pip_requirements.txt (line 8))</span><br><span class="line">  Downloading https://pypi.tuna.tsinghua.edu.cn/packages/a5/e9/51b544da85a36a68debe7a7091f068d802fc515a3a202652828c73453cad/MySQL-python-1.2.5.zip (108kB)</span><br><span class="line">    100% |████████████████████████████████| 112kB 9.3MB/s </span><br><span class="line">Collecting python-ldap (from -r pip_requirements.txt (line 9))</span><br><span class="line">  Downloading https://pypi.tuna.tsinghua.edu.cn/packages/9d/e2/deb47064d443344b708ffb5899ea269b201d7c22dcc653ebadcbb44c57d5/python-ldap-3.3.1.tar.gz (379kB)</span><br><span class="line">    100% |████████████████████████████████| 389kB 4.4MB/s </span><br><span class="line">Collecting itsdangerous&gt;=0.24 (from Flask==1.0-&gt;-r pip_requirements.txt (line 1))</span><br><span class="line">  Downloading https://pypi.tuna.tsinghua.edu.cn/packages/76/ae/44b03b253d6fade317f32c24d100b3b35c2239807046a4c953c7b89fa49e/itsdangerous-1.1.0-py2.py3-none-any.whl</span><br><span class="line">Collecting click&gt;=5.1 (from Flask==1.0-&gt;-r pip_requirements.txt (line 1))</span><br><span class="line">  Downloading https://pypi.tuna.tsinghua.edu.cn/packages/d2/3d/fa76db83bf75c4f8d338c2fd15c8d33fdd7ad23a9b5e57eb6c5de26b430e/click-7.1.2-py2.py3-none-any.whl (82kB)</span><br><span class="line">    100% |████████████████████████████████| 92kB 9.6MB/s </span><br><span class="line">Collecting Babel&gt;=1.0 (from Flask-Babel==0.9-&gt;-r pip_requirements.txt (line 2))</span><br><span class="line">  Downloading https://pypi.tuna.tsinghua.edu.cn/packages/aa/96/4ba93c5f40459dc850d25f9ba93f869a623e77aaecc7a9344e19c01942cf/Babel-2.9.1-py2.py3-none-any.whl (8.8MB)</span><br><span class="line">    100% |████████████████████████████████| 8.8MB 138kB/s </span><br><span class="line">Collecting speaklater&gt;=1.2 (from Flask-Babel==0.9-&gt;-r pip_requirements.txt (line 2))</span><br><span class="line">  Downloading https://pypi.tuna.tsinghua.edu.cn/packages/11/92/5ae1effe0ccb8561c034a0111d53c8788660ddb7ed4992f0da1bb5c525e5/speaklater-1.3.tar.gz</span><br><span class="line">Collecting MarkupSafe&gt;=0.23 (from Jinja2&gt;=2.10.1-&gt;-r pip_requirements.txt (line 3))</span><br><span class="line">  Downloading https://pypi.tuna.tsinghua.edu.cn/packages/fb/40/f3adb7cf24a8012813c5edb20329eb22d5d8e2a0ecf73d21d6b85865da11/MarkupSafe-1.1.1-cp27-cp27mu-manylinux1_x86_64.whl</span><br><span class="line">Collecting six (from python-dateutil==2.2-&gt;-r pip_requirements.txt (line 6))</span><br><span class="line">  Downloading https://pypi.tuna.tsinghua.edu.cn/packages/d9/5a/e7c31adbe875f2abbb91bd84cf2dc52d792b5a01506781dbcf25c91daf11/six-1.16.0-py2.py3-none-any.whl</span><br><span class="line">Collecting pyasn1&gt;=0.3.7 (from python-ldap-&gt;-r pip_requirements.txt (line 9))</span><br><span class="line">  Downloading https://pypi.tuna.tsinghua.edu.cn/packages/d1/75/4686d2872bf2fc0b37917cbc8bbf0dd3a5cdb0990799be1b9cbf1e1eb733/pyasn1-0.5.1-py2.py3-none-any.whl (84kB)</span><br><span class="line">    100% |████████████████████████████████| 92kB 9.6MB/s </span><br><span class="line">Collecting pyasn1_modules&gt;=0.1.5 (from python-ldap-&gt;-r pip_requirements.txt (line 9))</span><br><span class="line">  Downloading https://pypi.tuna.tsinghua.edu.cn/packages/cd/8e/bea464350e1b8c6ed0da3a312659cb648804a08af6cacc6435867f74f8bd/pyasn1_modules-0.3.0-py2.py3-none-any.whl (181kB)</span><br><span class="line">    100% |████████████████████████████████| 184kB 4.0MB/s </span><br><span class="line">Collecting pytz&gt;=2015.7 (from Babel&gt;=1.0-&gt;Flask-Babel==0.9-&gt;-r pip_requirements.txt (line 2))</span><br><span class="line">  Downloading https://pypi.tuna.tsinghua.edu.cn/packages/9c/3d/a121f284241f08268b21359bd425f7d4825cffc5ac5cd0e1b3d82ffd2b10/pytz-2024.1-py2.py3-none-any.whl (505kB)</span><br><span class="line">    100% |████████████████████████████████| 512kB 2.5MB/s </span><br><span class="line">Building wheels <span class="keyword">for</span> collected packages: Flask-Babel, python-dateutil, mysql-python, python-ldap, speaklater</span><br><span class="line">  Running setup.py bdist_wheel <span class="keyword">for</span> Flask-Babel ... <span class="keyword">done</span></span><br><span class="line">  Stored <span class="keyword">in</span> directory: /home/work/.cache/pip/wheels/ef/39/53/91220f10958c5110d839b0a9fa7ffaa0adb686067089eda64a</span><br><span class="line">  Running setup.py bdist_wheel <span class="keyword">for</span> python-dateutil ... <span class="keyword">done</span></span><br><span class="line">  Stored <span class="keyword">in</span> directory: /home/work/.cache/pip/wheels/03/2c/f1/9d772ba9eb2d4e0b583817de401202b1158140b8bd115e3f97</span><br><span class="line">  Running setup.py bdist_wheel <span class="keyword">for</span> mysql-python ... <span class="keyword">done</span></span><br><span class="line">  Stored <span class="keyword">in</span> directory: /home/work/.cache/pip/wheels/34/db/d9/39a931d72d59ffb68de9f85fe9ac2f02f47eef3fe142589db4</span><br><span class="line">  Running setup.py bdist_wheel <span class="keyword">for</span> python-ldap ... <span class="keyword">done</span></span><br><span class="line">  Stored <span class="keyword">in</span> directory: /home/work/.cache/pip/wheels/8c/9c/45/c563c2acb81523eae28c9e9a7cf4721b486829199c2278230b</span><br><span class="line">  Running setup.py bdist_wheel <span class="keyword">for</span> speaklater ... <span class="keyword">done</span></span><br><span class="line">  Stored <span class="keyword">in</span> directory: /home/work/.cache/pip/wheels/74/c5/f5/62413af6c8e6dbc120b9d9f8ea93bd179f07d3c993a5e4df22</span><br><span class="line">Successfully built Flask-Babel python-dateutil mysql-python python-ldap speaklater</span><br><span class="line">Installing collected packages: MarkupSafe, Jinja2, itsdangerous, Werkzeug, click, Flask, pytz, Babel, speaklater, Flask-Babel, gunicorn, six, python-dateutil, requests, mysql-python, pyasn1, pyasn1-modules, python-ldap</span><br><span class="line">Successfully installed Babel-2.9.1 Flask-1.0 Flask-Babel-0.9 Jinja2-2.11.3 MarkupSafe-1.1.1 Werkzeug-0.15.4 click-7.1.2 gunicorn-19.9.0 itsdangerous-1.1.0 mysql-python-1.2.5 pyasn1-0.5.1 pyasn1-modules-0.3.0 python-dateutil-2.2 python-ldap-3.3.1 pytz-2024.1 requests-2.3.0 six-1.16.0 speaklater-1.3</span><br><span class="line">You are using pip version 9.0.1, however version 24.2 is available.</span><br><span class="line">You should consider upgrading via the <span class="string">&#x27;pip install --upgrade pip&#x27;</span> <span class="built_in">command</span>.</span><br><span class="line"></span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent dashboard-master]# wget --no-check-certificate https://bootstrap.pypa.io/ez_setup.py</span><br><span class="line">--2024-08-04 01:42:54--  https://bootstrap.pypa.io/ez_setup.py</span><br><span class="line">Resolving bootstrap.pypa.io (bootstrap.pypa.io)... 146.75.112.175, 2a04:4e42:8c::175</span><br><span class="line">Connecting to bootstrap.pypa.io (bootstrap.pypa.io)|146.75.112.175|:443... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 12537 (12K) [text/x-python]</span><br><span class="line">Saving to: ‘ez_setup.py’</span><br><span class="line"></span><br><span class="line">100%[=============================================================================&gt;] 12,537      --.-K/s   <span class="keyword">in</span> 0.03s   </span><br><span class="line"></span><br><span class="line">2024-08-04 01:42:57 (422 KB/s) - ‘ez_setup.py’ saved [12537/12537]</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 先安装ez_setup.py,再安装pip</span></span><br><span class="line"></span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent dashboard-master]# wget --no-check-certificate https://bootstrap.pypa.io/ez_setup.py</span><br><span class="line">--2024-08-04 01:42:54--  https://bootstrap.pypa.io/ez_setup.py</span><br><span class="line">Resolving bootstrap.pypa.io (bootstrap.pypa.io)... 146.75.112.175, 2a04:4e42:8c::175</span><br><span class="line">Connecting to bootstrap.pypa.io (bootstrap.pypa.io)|146.75.112.175|:443... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 12537 (12K) [text/x-python]</span><br><span class="line">Saving to: ‘ez_setup.py’</span><br><span class="line"></span><br><span class="line">100%[=============================================================================&gt;] 12,537      --.-K/s   <span class="keyword">in</span> 0.03s   </span><br><span class="line"></span><br><span class="line">2024-08-04 01:42:57 (422 KB/s) - ‘ez_setup.py’ saved [12537/12537]</span><br><span class="line"></span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent dashboard-master]# python ez_setup.py --insecure</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 下载pip</span></span><br><span class="line"></span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent dashboard-master]# wget https://pypi.python.org/packages/11/b6/abcb525026a4be042b486df43905d6893fb04f05aac21c32c638e939e447/pip-9.0.1.tar.gz#md5=35f01da33009719497f01a4ba69d63c905d6893fb04f05aac21c32c638e939e447/pip-9.0.1.tar.gz</span><br><span class="line"><span class="comment">#md5=35f01da33009719497f01a4ba69d63c9</span></span><br><span class="line">--2024-08-04 01:43:34--  https://pypi.python.org/packages/11/b6/abcb525026a4be042b486df43905d6893fb04f05aac21c32c638e939e447/pip-9.0.1.tar.gz</span><br><span class="line">Resolving pypi.python.org (pypi.python.org)... 151.101.76.223, 2a04:4e42:8c::223</span><br><span class="line">Connecting to pypi.python.org (pypi.python.org)|151.101.76.223|:443... connected.</span><br><span class="line">HTTP request sent, awaiting response... 301 Redirect to Primary Domain</span><br><span class="line">Location: https://pypi.org/packages/11/b6/abcb525026a4be042b486df43905d6893fb04f05aac21c32c638e939e447/pip-9.0.1.tar.gz [following]</span><br><span class="line">--2024-08-04 01:43:34--  https://pypi.org/packages/11/b6/abcb525026a4be042b486df43905d6893fb04f05aac21c32c638e939e447/pip-9.0.1.tar.gz</span><br><span class="line">Resolving pypi.org (pypi.org)... 151.101.0.223, 151.101.64.223, 151.101.192.223, ...</span><br><span class="line">Connecting to pypi.org (pypi.org)|151.101.0.223|:443... connected.</span><br><span class="line">HTTP request sent, awaiting response... 301 Moved Permanently</span><br><span class="line">Location: https://files.pythonhosted.org/packages/11/b6/abcb525026a4be042b486df43905d6893fb04f05aac21c32c638e939e447/pip-9.0.1.tar.gz [following]</span><br><span class="line">--2024-08-04 01:43:35--  https://files.pythonhosted.org/packages/11/b6/abcb525026a4be042b486df43905d6893fb04f05aac21c32c638e939e447/pip-9.0.1.tar.gz</span><br><span class="line">Resolving files.pythonhosted.org (files.pythonhosted.org)... 146.75.112.223, 2a04:4e42:8c::223</span><br><span class="line">Connecting to files.pythonhosted.org (files.pythonhosted.org)|146.75.112.223|:443... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 1197370 (1.1M) [binary/octet-stream]</span><br><span class="line">Saving to: ‘pip-9.0.1.tar.gz’</span><br><span class="line"></span><br><span class="line">100%[=============================================================================&gt;] 1,197,370    836KB/s   <span class="keyword">in</span> 1.4s  </span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 解压并安装</span></span><br><span class="line"></span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent dashboard-master]# tar xf pip-9.0.1.tar.gz </span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent dashboard-master]# <span class="built_in">cd</span> pip-9.0.1</span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent pip-9.0.1]# python setup.py install</span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent pip-9.0.1]# <span class="built_in">cd</span> ..</span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent dashboard-master]# <span class="built_in">which</span> pip</span><br><span class="line">/home/work/open-falcon/dashboard-master/env/bin/pip</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#配置pip环境变量</span></span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent dashboard-master]# vim /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment">#pip path </span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;/home/work/open-falcon/dashboard-master/env/bin/pip/bin:<span class="variable">$PATH</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#使环境变量生效source /etc/profile</span></span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent dashboard-master]# <span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment">#测试是否可用</span></span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent dashboard-master]# pip</span><br><span class="line">Usage:   </span><br><span class="line">  pip &lt;<span class="built_in">command</span>&gt; [options]</span><br><span class="line"></span><br><span class="line">Commands:</span><br><span class="line">  install                     Install packages.</span><br><span class="line">  download                    Download packages.</span><br><span class="line">  uninstall                   Uninstall packages.</span><br><span class="line">  freeze                      Output installed packages <span class="keyword">in</span> requirements format.</span><br><span class="line">  list                        List installed packages.</span><br><span class="line">  show                        Show information about installed packages.</span><br><span class="line">  check                       Verify installed packages have compatible dependencies.</span><br><span class="line">  search                      Search PyPI <span class="keyword">for</span> packages.</span><br><span class="line">  wheel                       Build wheels from your requirements.</span><br><span class="line">  <span class="built_in">hash</span>                        Compute hashes of package archives.</span><br><span class="line">  completion                  A helper <span class="built_in">command</span> used <span class="keyword">for</span> <span class="built_in">command</span> completion.</span><br><span class="line">  <span class="built_in">help</span>                        Show <span class="built_in">help</span> <span class="keyword">for</span> commands.</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看需要安装的软件,并安装</span></span><br><span class="line"></span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent dashboard-master]# <span class="built_in">cat</span> pip_requirements.txt </span><br><span class="line">Flask==1.0</span><br><span class="line">Flask-Babel==0.9</span><br><span class="line">Jinja2&gt;=2.10.1</span><br><span class="line">Werkzeug==0.15.4</span><br><span class="line">gunicorn==19.9.0</span><br><span class="line">python-dateutil==2.2</span><br><span class="line">requests==2.3.0</span><br><span class="line">mysql-python</span><br><span class="line">python-ldap</span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent dashboard-master]# <span class="built_in">cd</span> /home/work/open-falcon/dashboard-master</span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent dashboard-master]# pip install -r pip_requirements.txt</span><br><span class="line">Requirement already satisfied: Flask==1.0 <span class="keyword">in</span> ./env/lib/python2.7/site-packages (from -r pip_requirements.txt (line 1))</span><br><span class="line">Requirement already satisfied: Flask-Babel==0.9 <span class="keyword">in</span> ./env/lib/python2.7/site-packages (from -r pip_requirements.txt (line 2))</span><br><span class="line">Requirement already satisfied: Jinja2&gt;=2.10.1 <span class="keyword">in</span> ./env/lib/python2.7/site-packages (from -r pip_requirements.txt (line 3))</span><br><span class="line">Requirement already satisfied: Werkzeug==0.15.4 <span class="keyword">in</span> ./env/lib/python2.7/site-packages (from -r pip_requirements.txt (line 4))</span><br><span class="line">Requirement already satisfied: gunicorn==19.9.0 <span class="keyword">in</span> ./env/lib/python2.7/site-packages (from -r pip_requirements.txt (line 5))</span><br><span class="line">Requirement already satisfied: python-dateutil==2.2 <span class="keyword">in</span> ./env/lib/python2.7/site-packages (from -r pip_requirements.txt (line 6))</span><br><span class="line">Requirement already satisfied: requests==2.3.0 <span class="keyword">in</span> ./env/lib/python2.7/site-packages (from -r pip_requirements.txt (line 7))</span><br><span class="line">Requirement already satisfied: mysql-python <span class="keyword">in</span> ./env/lib/python2.7/site-packages (from -r pip_requirements.txt (line 8))</span><br><span class="line">Requirement already satisfied: python-ldap <span class="keyword">in</span> ./env/lib/python2.7/site-packages (from -r pip_requirements.txt (line 9))</span><br><span class="line">Requirement already satisfied: itsdangerous&gt;=0.24 <span class="keyword">in</span> ./env/lib/python2.7/site-packages (from Flask==1.0-&gt;-r pip_requirements.txt (line 1))</span><br><span class="line">Requirement already satisfied: click&gt;=5.1 <span class="keyword">in</span> ./env/lib/python2.7/site-packages (from Flask==1.0-&gt;-r pip_requirements.txt (line 1))</span><br><span class="line">Requirement already satisfied: speaklater&gt;=1.2 <span class="keyword">in</span> ./env/lib/python2.7/site-packages (from Flask-Babel==0.9-&gt;-r pip_requirements.txt (line 2))</span><br><span class="line">Requirement already satisfied: Babel&gt;=1.0 <span class="keyword">in</span> ./env/lib/python2.7/site-packages (from Flask-Babel==0.9-&gt;-r pip_requirements.txt (line 2))</span><br><span class="line">Requirement already satisfied: MarkupSafe&gt;=0.23 <span class="keyword">in</span> ./env/lib/python2.7/site-packages (from Jinja2&gt;=2.10.1-&gt;-r pip_requirements.txt (line 3))</span><br><span class="line">Requirement already satisfied: six <span class="keyword">in</span> ./env/lib/python2.7/site-packages (from python-dateutil==2.2-&gt;-r pip_requirements.txt (line 6))</span><br><span class="line">Requirement already satisfied: pyasn1-modules&gt;=0.1.5 <span class="keyword">in</span> ./env/lib/python2.7/site-packages (from python-ldap-&gt;-r pip_requirements.txt (line 9))</span><br><span class="line">Requirement already satisfied: pyasn1&gt;=0.3.7 <span class="keyword">in</span> ./env/lib/python2.7/site-packages (from python-ldap-&gt;-r pip_requirements.txt (line 9))</span><br><span class="line">Requirement already satisfied: pytz&gt;=2015.7 <span class="keyword">in</span> ./env/lib/python2.7/site-packages (from Babel&gt;=1.0-&gt;Flask-Babel==0.9-&gt;-r pip_requirements.txt (line 2))</span><br><span class="line">You are using pip version 9.0.1, however version 24.2 is available.</span><br><span class="line">You should consider upgrading via the <span class="string">&#x27;pip install --upgrade pip&#x27;</span> <span class="built_in">command</span>.</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 先备份，后修改配置文件</span></span><br><span class="line"></span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent dashboard-master]# ll</span><br><span class="line">total 1932</span><br><span class="line">-rw-r--r--  1 root root       97 Jun 22  2020 babel.cfg</span><br><span class="line">-rwxr-xr-x  1 root root     2653 Jun 22  2020 control</span><br><span class="line">-rw-r--r--  1 root root      510 Jun 22  2020 Dockerfile</span><br><span class="line">-rw-r--r--  1 root root      319 Jun 22  2020 entrypoint.sh</span><br><span class="line">drwxr-xr-x  5 root root       82 Aug  4 01:38 <span class="built_in">env</span></span><br><span class="line">-rw-r--r--  1 root root    12537 Jul 29 06:47 ez_setup.py</span><br><span class="line">-rw-r--r--  1 root root      170 Jun 22  2020 gunicorn.conf</span><br><span class="line">-rw-r--r--  1 root root     1235 Jun 22  2020 i18n.md</span><br><span class="line">-rw-r--r--  1 root root    11358 Jun 22  2020 LICENSE</span><br><span class="line">-rw-r--r--  1 root root      462 Jun 22  2020 NOTICE</span><br><span class="line">drwxr-xr-x  7  501 games     217 Aug  4 01:44 pip-9.0.1</span><br><span class="line">-rw-r--r--  1 root root  1197370 Apr 10  2023 pip-9.0.1.tar.gz</span><br><span class="line">-rw-r--r--  1 root root      139 Jun 22  2020 pip_requirements.txt</span><br><span class="line">-rw-r--r--  1 root root     5296 Jun 22  2020 README.md</span><br><span class="line">drwxr-xr-x 10 root root      194 Jun 22  2020 rrd</span><br><span class="line">drwxr-xr-x  2 root root      101 Jun 22  2020 screenshots</span><br><span class="line">drwxr-xr-x  2 root root       65 Jun 22  2020 scripts</span><br><span class="line">-rw-r--r--  1 root root   702770 Aug  4 01:43 setuptools-33.1.1.zip</span><br><span class="line">-rwxr-xr-x  1 root root      979 Jun 22  2020 wsgi.py</span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent dashboard-master]# <span class="built_in">cd</span> rrd/</span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent rrd]# ll</span><br><span class="line">total 16</span><br><span class="line">-rwxr-xr-x  1 root root 2764 Jun 22  2020 config.py</span><br><span class="line">-rw-r--r--  1 root root  737 Jun 22  2020 consts.py</span><br><span class="line">drwxr-xr-x  2 root root   25 Jun 22  2020 corelib</span><br><span class="line">-rw-r--r--  1 root root 1539 Jun 22  2020 __init__.py</span><br><span class="line">drwxr-xr-x  3 root root  156 Jun 22  2020 model</span><br><span class="line">drwxr-xr-x  2 root root   49 Jun 22  2020 service</span><br><span class="line">drwxr-xr-x 13 root root  231 Jun 22  2020 static</span><br><span class="line">-rw-r--r--  1 root root 3911 Jun 22  2020 store.py</span><br><span class="line">drwxr-xr-x  8 root root  157 Jun 22  2020 templates</span><br><span class="line">drwxr-xr-x  4 root root   26 Jun 22  2020 translations</span><br><span class="line">drwxr-xr-x  2 root root  132 Jun 22  2020 utils</span><br><span class="line">drwxr-xr-x  7 root root  124 Jun 22  2020 view</span><br><span class="line"></span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent rrd]# <span class="built_in">cp</span> config.py config.py.bak</span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent rrd]# vim config.py</span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent rrd]# <span class="built_in">cat</span> config.py</span><br><span class="line"><span class="comment">#-*-coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Copyright 2017 Xiaomi, Inc.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></span><br><span class="line"><span class="comment"># you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment"># You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#     http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment"># distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></span><br><span class="line"><span class="comment"># WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment"># See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment"># limitations under the License.</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># app config</span></span><br><span class="line">import os</span><br><span class="line">LOG_LEVEL = os.environ.get(<span class="string">&quot;LOG_LEVEL&quot;</span>,<span class="string">&#x27;DEBUG&#x27;</span>)</span><br><span class="line">SECRET_KEY = os.environ.get(<span class="string">&quot;SECRET_KEY&quot;</span>,<span class="string">&quot;secret-key&quot;</span>)</span><br><span class="line">PERMANENT_SESSION_LIFETIME = os.environ.get(<span class="string">&quot;PERMANENT_SESSION_LIFETIME&quot;</span>,3600 * 24 * 30)</span><br><span class="line">SITE_COOKIE = os.environ.get(<span class="string">&quot;SITE_COOKIE&quot;</span>,<span class="string">&quot;open-falcon-ck&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Falcon+ API</span></span><br><span class="line">API_ADDR = os.environ.get(<span class="string">&quot;API_ADDR&quot;</span>,<span class="string">&quot;http://172.16.1.200:18080/api/v1&quot;</span>)</span><br><span class="line">API_USER = os.environ.get(<span class="string">&quot;API_USER&quot;</span>,<span class="string">&quot;admin&quot;</span>)</span><br><span class="line">API_PASS = os.environ.get(<span class="string">&quot;API_PASS&quot;</span>,<span class="string">&quot;password&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># portal database</span></span><br><span class="line"><span class="comment"># TODO: read from api instead of db</span></span><br><span class="line">PORTAL_DB_HOST = os.environ.get(<span class="string">&quot;PORTAL_DB_HOST&quot;</span>,<span class="string">&quot;172.16.1.200&quot;</span>)</span><br><span class="line">PORTAL_DB_PORT = int(os.environ.get(<span class="string">&quot;PORTAL_DB_PORT&quot;</span>,3306))</span><br><span class="line">PORTAL_DB_USER = os.environ.get(<span class="string">&quot;PORTAL_DB_USER&quot;</span>,<span class="string">&quot;root&quot;</span>)</span><br><span class="line">PORTAL_DB_PASS = os.environ.get(<span class="string">&quot;PORTAL_DB_PASS&quot;</span>,<span class="string">&quot;password&quot;</span>)</span><br><span class="line">PORTAL_DB_NAME = os.environ.get(<span class="string">&quot;PORTAL_DB_NAME&quot;</span>,<span class="string">&quot;falcon_portal&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># alarm database</span></span><br><span class="line"><span class="comment"># TODO: read from api instead of db</span></span><br><span class="line">ALARM_DB_HOST = os.environ.get(<span class="string">&quot;ALARM_DB_HOST&quot;</span>,<span class="string">&quot;172.16.1.200&quot;</span>)</span><br><span class="line">ALARM_DB_PORT = int(os.environ.get(<span class="string">&quot;ALARM_DB_PORT&quot;</span>,3306))</span><br><span class="line">ALARM_DB_USER = os.environ.get(<span class="string">&quot;ALARM_DB_USER&quot;</span>,<span class="string">&quot;root&quot;</span>)</span><br><span class="line">ALARM_DB_PASS = os.environ.get(<span class="string">&quot;ALARM_DB_PASS&quot;</span>,<span class="string">&quot;password&quot;</span>)</span><br><span class="line">ALARM_DB_NAME = os.environ.get(<span class="string">&quot;ALARM_DB_NAME&quot;</span>,<span class="string">&quot;alarms&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># ldap config</span></span><br><span class="line">LDAP_ENABLED = os.environ.get(<span class="string">&quot;LDAP_ENABLED&quot;</span>,False)</span><br><span class="line">LDAP_SERVER = os.environ.get(<span class="string">&quot;LDAP_SERVER&quot;</span>,<span class="string">&quot;ldap.forumsys.com:389&quot;</span>)</span><br><span class="line">LDAP_BASE_DN = os.environ.get(<span class="string">&quot;LDAP_BASE_DN&quot;</span>,<span class="string">&quot;dc=example,dc=com&quot;</span>)</span><br><span class="line">LDAP_BINDDN = os.environ.get(<span class="string">&quot;LDAP_BINDDN&quot;</span>,<span class="string">&quot;cn=manager,dc=example,dc=org&quot;</span>)</span><br><span class="line">LDAP_BIND_PASS = os.environ.get(<span class="string">&quot;LDAP_BIND_PASS&quot;</span>,<span class="string">&quot;password&quot;</span>)</span><br><span class="line">LDAP_SEARCH_FMT = os.environ.get(<span class="string">&quot;LDAP_SEARCH_FMT&quot;</span>,<span class="string">&quot;uid=%s&quot;</span>)</span><br><span class="line">LDAP_ATTRS = [<span class="string">&quot;cn&quot;</span>,<span class="string">&quot;mail&quot;</span>,<span class="string">&quot;telephoneNumber&quot;</span>]</span><br><span class="line">LDAP_TLS_START_TLS = False</span><br><span class="line">LDAP_TLS_CACERTDIR = <span class="string">&quot;&quot;</span></span><br><span class="line">LDAP_TLS_CACERTFILE = <span class="string">&quot;/etc/openldap/certs/ca.crt&quot;</span></span><br><span class="line">LDAP_TLS_CERTFILE = <span class="string">&quot;&quot;</span></span><br><span class="line">LDAP_TLS_KEYFILE = <span class="string">&quot;&quot;</span></span><br><span class="line">LDAP_TLS_REQUIRE_CERT = True</span><br><span class="line">LDAP_TLS_CIPHER_SUITE = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># i18n</span></span><br><span class="line">BABEL_DEFAULT_LOCALE   = <span class="string">&#x27;zh_CN&#x27;</span></span><br><span class="line">BABEL_DEFAULT_TIMEZONE = <span class="string">&#x27;Asia/Shanghai&#x27;</span></span><br><span class="line"><span class="comment"># available translations</span></span><br><span class="line">LANGUAGES   = &#123;</span><br><span class="line">    <span class="string">&#x27;en&#x27;</span>:  <span class="string">&#x27;English&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;zh_CN&#x27;</span>:  <span class="string">&#x27;Chinese-Simplified&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># portal site config</span></span><br><span class="line">MAINTAINERS = [<span class="string">&#x27;root&#x27;</span>]</span><br><span class="line">CONTACT = <span class="string">&#x27;root@open-falcon.com&#x27;</span></span><br><span class="line"></span><br><span class="line">DEBUG = True</span><br><span class="line"></span><br><span class="line">try:</span><br><span class="line">    from rrd.local_config import *</span><br><span class="line">except:</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;[warning] no local config file&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 启动服务</span></span><br><span class="line"></span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent rrd]# <span class="built_in">cd</span> ..</span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent dashboard-master]# ./control start</span><br><span class="line">falcon-dashboard started..., pid=25575</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 查看日志并退出环境</span></span><br><span class="line"></span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent dashboard-master]# ./control <span class="built_in">tail</span></span><br><span class="line">[2024-08-04 02:03:48 +0000] [25575] [INFO] Starting gunicorn 19.9.0</span><br><span class="line">[2024-08-04 02:03:48 +0000] [25575] [INFO] Listening at: http://0.0.0.0:8081 (25575)</span><br><span class="line">[2024-08-04 02:03:48 +0000] [25575] [INFO] Using worker: <span class="built_in">sync</span></span><br><span class="line">[2024-08-04 02:03:48 +0000] [25580] [INFO] Booting worker with pid: 25580</span><br><span class="line">[2024-08-04 02:03:48 +0000] [25585] [INFO] Booting worker with pid: 25585</span><br><span class="line">[2024-08-04 02:03:48 +0000] [25590] [INFO] Booting worker with pid: 25590</span><br><span class="line">[2024-08-04 02:03:48 +0000] [25591] [INFO] Booting worker with pid: 25591</span><br><span class="line">^C</span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent dashboard-master]# deactivate</span><br><span class="line">[root@open-falcon-agent dashboard-master]# netstat -lntup</span><br><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    </span><br><span class="line">tcp        0      0 0.0.0.0:8081            0.0.0.0:*               LISTEN      25575/python2       </span><br><span class="line">tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      8951/sshd           </span><br><span class="line">tcp        0      0 127.0.0.1:25            0.0.0.0:*               LISTEN      9216/master         </span><br><span class="line">tcp6       0      0 :::22                   :::*                    LISTEN      8951/sshd           </span><br><span class="line">tcp6       0      0 ::1:25                  :::*                    LISTEN      9216/master</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>访问网站 10.0.0.201：8081</p><p><img src="D:%5CTypora%5Cdevops%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4%E5%B7%A5%E5%85%B7%5C10.open-falcon.assets%5CQQ_1722708400816.png" alt="img"></p><p><img src="D:%5CTypora%5Cdevops%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4%E5%B7%A5%E5%85%B7%5C10.open-falcon.assets%5CQQ_1722708830296.png" alt="img"></p><p><img src="D:%5CTypora%5Cdevops%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4%E5%B7%A5%E5%85%B7%5C10.open-falcon.assets%5CQQ_1722708967167.png" alt="img"></p>]]></content>
    
    
    <summary type="html">本文介绍了小米旗下的一款监控软件falcon的部署</summary>
    
    
    
    <category term="监控" scheme="https://lukme.top/categories/%E7%9B%91%E6%8E%A7/"/>
    
    <category term="falcon" scheme="https://lukme.top/categories/%E7%9B%91%E6%8E%A7/falcon/"/>
    
    
    <category term="zabbix" scheme="https://lukme.top/tags/zabbix/"/>
    
  </entry>
  
  <entry>
    <title>zabbix分布式监控</title>
    <link href="https://lukme.top/posts/715aec45.html"/>
    <id>https://lukme.top/posts/715aec45.html</id>
    <published>2024-08-24T13:58:53.000Z</published>
    <updated>2024-10-06T14:27:20.468Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://cos.lukme.top/Pic/QQ_1723279401909.png" alt="QQ_1723279401909"></p><p><strong>应用场景</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.一台Server管理的agent过多</span><br><span class="line">2.需要管理的agent在不同的国家或者地区，有网络波动</span><br><span class="line"><span class="comment"># 重新加载缓存</span></span><br><span class="line">[root@zabbix5-server ~]# zabbix_server -R config_cache_reload</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="zabbix-proxy特征">zabbix-proxy特征</h3><table><thead><tr><th>proxy</th><th></th></tr></thead><tbody><tr><td>轻量级（Lightweight）</td><td>yes</td></tr><tr><td>图形界面（GUI）</td><td>no</td></tr><tr><td>独立工作（Works independently）</td><td>yes</td></tr><tr><td>易于维护（Easy maintenance）</td><td>yes</td></tr><tr><td>自动生成数据库（Automatic DB creation）1</td><td>yes</td></tr><tr><td>本地管理（Local administration）</td><td>no</td></tr><tr><td>准备嵌入式硬件 （Ready for embedded hardware）</td><td>yes</td></tr><tr><td>单向TCP连接（One way TCP connections）</td><td>yes</td></tr><tr><td>集中配置（Centralised configuration）</td><td>yes</td></tr><tr><td>生成通知（Generates notifications）</td><td>no</td></tr></tbody></table><blockquote><p>1.zabbix proxy 数据库必须和 server 分开,否则数据会被破坏。</p><p>2.从Zabbix server数据库直接更新最新配置的proxy可能会比Zabbix server新，而Zabbix server的 配置由于CacheUpdateFrequency 的原因而无法快速更新。因此，proxy收集发送Zabbix server数 据可能会被忽略。</p></blockquote><p>zabbix proxy 是一个数据收集器,它不计算触发器、不处理事件、不发送报警。</p><p>有关proxy功能的概述， 如下表：</p><p><img src="https://cos.lukme.top/Pic/QQ_1723280852820.png" alt="QQ_1723280852820"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.无法设置触发器</span><br><span class="line">2.无法处理事件</span><br><span class="line">3.无法发送告警</span><br><span class="line">4.无法使用自愈模式</span><br></pre></td></tr></table></figure><p><strong>代理场景</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1723280897596.png" alt="QQ_1723280897596"></p><h3 id="部署zabbix-proxy">部署zabbix-proxy</h3><table><thead><tr><th>主机名</th><th>WanIP</th><th>LanIP</th><th>角色</th><th>应用</th></tr></thead><tbody><tr><td>Zabbix5-server</td><td>10.0.0.71</td><td>172.16.1.71</td><td>服务端</td><td>Zabbix-server、 Zabbix-agent</td></tr><tr><td>web01</td><td>10.0.0.7</td><td>172.16.1.7</td><td>zabbix5客户端</td><td>Zabbix-agent</td></tr><tr><td>web02</td><td>10.0.0.8</td><td>172.16.1.8</td><td>zabbix5客户端</td><td>Zabbix-agent</td></tr><tr><td></td><td>10.0.0.7,10.0.0.8</td><td>172.16.1.7,172.16.1.8</td><td>Zabbix客户端 收集 Java监控数据</td><td>Zabbix-java-gateway</td></tr><tr><td>zabbix_proxy73</td><td>10.0.0.73</td><td>172.16.1.73</td><td>代理web01</td><td>zabbix-proxy</td></tr><tr><td>zabbix_proxy74</td><td>10.0.0.74</td><td>172.16.1.74</td><td>代理web02</td><td>zabbix-proxy</td></tr></tbody></table><p>下载链接：<a href="https://mirrors.tuna.tsinghua.edu.cn/zabbix/zabbix/5.0/rhel/7/x86_64/">https://mirrors.tuna.tsinghua.edu.cn/zabbix/zabbix/5.0/rhel/7/x86_64/</a></p><p><strong>配置proxy73和web01</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.安装zabbix-proxy</span></span><br><span class="line">[root@zabbix-proxy ~]# yum install -y https://mirrors.tuna.tsinghua.edu.cn/zabbix/zabbix/5.0/rhel/7/x86_64/zabbix-proxy-mysql-5.0.42-1.el7.x86_64.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.连接数据库   (zabbix -71执行  有数据库)</span></span><br><span class="line">[root@zabbix5-server ~]# mysql</span><br><span class="line">create database zabbix_proxy73 charset utf8;</span><br><span class="line">create database zabbix_proxy74 charset utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.导入数据</span></span><br><span class="line">zcat /usr/share/doc/zabbix-proxy-mysql-5.0.42//schema.sql.gz |mysql -uzabbix -p123 -h172.16.1.71 zabbix_proxy73</span><br><span class="line"></span><br><span class="line">zcat /usr/share/doc/zabbix-proxy-mysql-5.0.42//schema.sql.gz |mysql -uzabbix -p123 -h172.16.1.71 zabbix_proxy74</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.修改zabbix-proxy配置文件</span></span><br><span class="line">[root@zabbix-proxy ~]# vim /etc/zabbix/zabbix_proxy.conf</span><br><span class="line">Server=172.16.1.71</span><br><span class="line">Hostname=zabbix_proxy73</span><br><span class="line">DBHost=172.16.1.71</span><br><span class="line">DBName=zabbix_proxy73</span><br><span class="line">DBUser=zabbix</span><br><span class="line">DBPassword=123</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.配置agent指向proxy</span></span><br><span class="line">[root@web01 ~]# vim /etc/zabbix/zabbix_agentd.conf</span><br><span class="line">Server=172.16.1.73</span><br><span class="line">ServerActive=172.16.1.73</span><br><span class="line">Hostname=web01</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6.重启agent</span></span><br><span class="line">[root@web01 ~]# systemctl restart zabbix-agent</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#重启代理</span></span><br><span class="line"><span class="comment">#7.最后重启zabbix-proxy  （如果最后数据没有显示，重启zabbix-proxy）</span></span><br><span class="line">systemctl start zabbix-proxy</span><br><span class="line">systemctl <span class="built_in">enable</span> zabbix-proxy</span><br><span class="line"></span><br><span class="line"><span class="comment">#zabbix-proxy代理要在  zabbix服务端，客户端重启之后   最后重启</span></span><br></pre></td></tr></table></figure><p><strong>web界面操作</strong></p><p><strong>创建代理</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1723338047556.png" alt="QQ_1723338047556"></p><p><img src="https://cos.lukme.top/Pic/QQ_1723338284210.png" alt="QQ_1723338284210"></p><p><strong>停用自动注册动作，没有则忽略</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1723338342003.png" alt="QQ_1723338342003"></p><p><img src="https://cos.lukme.top/Pic/QQ_1723338415805.png" alt="QQ_1723338415805"></p><p><img src="https://cos.lukme.top/Pic/QQ_1723338495182.png" alt="QQ_1723338495182"></p><p><strong>回到主机，刷新</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1723338515005.png" alt="QQ_1723338515005"></p><p><strong>查看监控板里数据</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1723338699914.png" alt="QQ_1723338699914"></p><h3 id="调取zabbix的API">调取zabbix的API</h3><p>zabbix官方：<a href="https://www.zabbix.com/documentation/5.0/zh/manual/api">API (zabbix.com)</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">准备Postman，注册登录后用于调取zabbix接口使用</span><br></pre></td></tr></table></figure><p><strong>使用curl调取接口</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">curl -X POST http<span class="punctuation">:</span><span class="comment">//10.0.0.71/api_jsonrpc.php -H &#x27;Content-Type: application/json-rpc&#x27; -d &#x27;</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;jsonrpc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;method&quot;</span><span class="punctuation">:</span> <span class="string">&quot;user.login&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;params&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;user&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Admin&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;password&quot;</span><span class="punctuation">:</span> <span class="string">&quot;zabbix&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;auth&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line"><span class="punctuation">&#125;</span>&#x27;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#返回值，其中result值是token   每次token都不一样</span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;jsonrpc&quot;</span><span class="punctuation">:</span><span class="string">&quot;2.0&quot;</span><span class="punctuation">,</span><span class="attr">&quot;result&quot;</span><span class="punctuation">:</span><span class="string">&quot;17d3a8bddc03d4f6cdc752527e91d03b&quot;</span><span class="punctuation">,</span><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><strong>使用postman调取接口</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1723340719798.png" alt="QQ_1723340719798"></p><p><img src="https://cos.lukme.top/Pic/QQ_1723340820336.png" alt="QQ_1723340820336"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">http://10.0.0.71/api_jsonrpc.php</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;jsonrpc&quot;</span>: <span class="string">&quot;2.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;method&quot;</span>: <span class="string">&quot;user.login&quot;</span>,</span><br><span class="line">    <span class="string">&quot;params&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;user&quot;</span>: <span class="string">&quot;Admin&quot;</span>,</span><br><span class="line">        <span class="string">&quot;password&quot;</span>: <span class="string">&quot;zabbix&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: 1,</span><br><span class="line">    <span class="string">&quot;auth&quot;</span>: null</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">e4b67c3d6c13c9470c9ec56350552c2d</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#获得token后，每次查询带上token即可</span></span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/QQ_1723340900158.png" alt="QQ_1723340900158"></p><p><strong>获得主机组ID</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">#在Postman里查询</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">           <span class="attr">&quot;jsonrpc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">           <span class="attr">&quot;method&quot;</span><span class="punctuation">:</span> <span class="string">&quot;host.get&quot;</span><span class="punctuation">,</span></span><br><span class="line">           <span class="attr">&quot;params&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">               <span class="attr">&quot;output&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                   <span class="string">&quot;hostid&quot;</span><span class="punctuation">,</span></span><br><span class="line">                   <span class="string">&quot;host&quot;</span></span><br><span class="line">               <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">               <span class="attr">&quot;selectInterfaces&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                   <span class="string">&quot;interfaceid&quot;</span><span class="punctuation">,</span></span><br><span class="line">                   <span class="string">&quot;ip&quot;</span></span><br><span class="line">               <span class="punctuation">]</span></span><br><span class="line">           <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">           <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">           <span class="attr">&quot;auth&quot;</span><span class="punctuation">:</span> <span class="string">&quot;e4b67c3d6c13c9470c9ec56350552c2d&quot;</span></span><br><span class="line">       <span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#返回值</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;jsonrpc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;hostid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;10460&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;host&quot;</span><span class="punctuation">:</span> <span class="string">&quot;web01&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;interfaces&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;interfaceid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;22&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;ip&quot;</span><span class="punctuation">:</span> <span class="string">&quot;172.16.1.7&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">2</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><strong>获取模板ID</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">           <span class="attr">&quot;jsonrpc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">           <span class="attr">&quot;method&quot;</span><span class="punctuation">:</span> <span class="string">&quot;template.get&quot;</span><span class="punctuation">,</span></span><br><span class="line">           <span class="attr">&quot;params&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">               <span class="attr">&quot;output&quot;</span><span class="punctuation">:</span> <span class="string">&quot;extend&quot;</span><span class="punctuation">,</span></span><br><span class="line">               <span class="attr">&quot;filter&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                   <span class="attr">&quot;host&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                      <span class="string">&quot;Template OS Linux by Zabbix agent&quot;</span></span><br><span class="line">                   <span class="punctuation">]</span></span><br><span class="line">               <span class="punctuation">&#125;</span></span><br><span class="line">           <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">           <span class="attr">&quot;auth&quot;</span><span class="punctuation">:</span> <span class="string">&quot;e4b67c3d6c13c9470c9ec56350552c2d&quot;</span><span class="punctuation">,</span></span><br><span class="line">           <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line">       <span class="punctuation">&#125;</span></span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line">##返回值</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;jsonrpc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;proxy_hostid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;host&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Template OS Linux by Zabbix agent&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="string">&quot;3&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;disable_until&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;error&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;available&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;errors_from&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;lastaccess&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;ipmi_authtype&quot;</span><span class="punctuation">:</span> <span class="string">&quot;-1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;ipmi_privilege&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;ipmi_username&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;ipmi_password&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;ipmi_disable_until&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;ipmi_available&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;snmp_disable_until&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;snmp_available&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;maintenanceid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;maintenance_status&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;maintenance_type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;maintenance_from&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;ipmi_errors_from&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;snmp_errors_from&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;ipmi_error&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;snmp_error&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;jmx_disable_until&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;jmx_available&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;jmx_errors_from&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;jmx_error&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Template OS Linux by Zabbix agent&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;flags&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;templateid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;10001&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Official Linux template. Requires agent of Zabbix 3.0.14, 3.4.5 and 4.0.0 or newer.\r\n\r\nKnown Issues:\r\n\r\n  Description: Network discovery. Zabbix agent as of 4.2 doesn&#x27;t support items such as net.if.status, net.if.speed.\r\n\r\nYou can discuss this template or leave feedback on our forum https://www.zabbix.com/forum/zabbix-suggestions-and-feedback/387225-discussion-thread-for-official-zabbix-template-for-linux\r\n\r\nTemplate tooling version used: 0.39&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;tls_connect&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;tls_accept&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;tls_issuer&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;tls_subject&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;tls_psk_identity&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;tls_psk&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;proxy_address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;auto_compress&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><strong>添加主机</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">模板机ID，主机组ID（groupid）上面已获取</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">curl -X POST http://10.0.0.71/api_jsonrpc.php -H <span class="string">&#x27;Content-Type: application/json-rpc&#x27;</span> -d <span class="string">&#x27;</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">           &quot;jsonrpc&quot;: &quot;2.0&quot;,</span></span><br><span class="line"><span class="string">           &quot;method&quot;: &quot;host.create&quot;,</span></span><br><span class="line"><span class="string">           &quot;params&quot;: &#123;</span></span><br><span class="line"><span class="string">               &quot;host&quot;: &quot;Linux server&quot;,</span></span><br><span class="line"><span class="string">               &quot;interfaces&quot;: [</span></span><br><span class="line"><span class="string">                   &#123;</span></span><br><span class="line"><span class="string">                       &quot;type&quot;: 1,</span></span><br><span class="line"><span class="string">                       &quot;main&quot;: 1,</span></span><br><span class="line"><span class="string">                       &quot;useip&quot;: 1,</span></span><br><span class="line"><span class="string">                       &quot;ip&quot;: &quot;10.0.0.9&quot;,</span></span><br><span class="line"><span class="string">                       &quot;dns&quot;: &quot;&quot;,</span></span><br><span class="line"><span class="string">                       &quot;port&quot;: &quot;10050&quot;</span></span><br><span class="line"><span class="string">                   &#125;</span></span><br><span class="line"><span class="string">               ],</span></span><br><span class="line"><span class="string">               &quot;groups&quot;: [</span></span><br><span class="line"><span class="string">                   &#123;</span></span><br><span class="line"><span class="string">                       &quot;groupid&quot;: &quot;2&quot;</span></span><br><span class="line"><span class="string">                   &#125;</span></span><br><span class="line"><span class="string">               ],</span></span><br><span class="line"><span class="string">               &quot;tags&quot;: [</span></span><br><span class="line"><span class="string">                   &#123;</span></span><br><span class="line"><span class="string">                       &quot;tag&quot;: &quot;Host name&quot;,</span></span><br><span class="line"><span class="string">                       &quot;value&quot;: &quot;Linux server&quot;</span></span><br><span class="line"><span class="string">                   &#125;</span></span><br><span class="line"><span class="string">               ],</span></span><br><span class="line"><span class="string">               &quot;templates&quot;: [</span></span><br><span class="line"><span class="string">                   &#123;</span></span><br><span class="line"><span class="string">                       &quot;templateid&quot;: &quot;20045&quot;</span></span><br><span class="line"><span class="string">                   &#125;,</span></span><br><span class="line"><span class="string">                   &#123;</span></span><br><span class="line"><span class="string">                   &quot;templateid&quot;: &quot;10001&quot;</span></span><br><span class="line"><span class="string">                   &#125;</span></span><br><span class="line"><span class="string">               ],</span></span><br><span class="line"><span class="string">               &quot;macros&quot;: [</span></span><br><span class="line"><span class="string">                   &#123;</span></span><br><span class="line"><span class="string">                       &quot;macro&quot;: &quot;&#123;$USER_ID&#125;&quot;,</span></span><br><span class="line"><span class="string">                       &quot;value&quot;: &quot;123321&quot;</span></span><br><span class="line"><span class="string">                   &#125;,</span></span><br><span class="line"><span class="string">                   &#123;</span></span><br><span class="line"><span class="string">                       &quot;macro&quot;: &quot;&#123;$USER_LOCATION&#125;&quot;,</span></span><br><span class="line"><span class="string">                       &quot;value&quot;: &quot;0:0:0&quot;,</span></span><br><span class="line"><span class="string">                       &quot;description&quot;: &quot;latitude, longitude and altitude coordinates&quot;</span></span><br><span class="line"><span class="string">                   &#125;</span></span><br><span class="line"><span class="string">               ],</span></span><br><span class="line"><span class="string">               &quot;inventory_mode&quot;: 0,</span></span><br><span class="line"><span class="string">               &quot;inventory&quot;: &#123;</span></span><br><span class="line"><span class="string">                   &quot;macaddress_a&quot;: &quot;01234&quot;,</span></span><br><span class="line"><span class="string">                   &quot;macaddress_b&quot;: &quot;56768&quot;</span></span><br><span class="line"><span class="string">               &#125;</span></span><br><span class="line"><span class="string">           &#125;,</span></span><br><span class="line"><span class="string">           &quot;auth&quot;: &quot;e4b67c3d6c13c9470c9ec56350552c2d&quot;,</span></span><br><span class="line"><span class="string">           &quot;id&quot;: 1</span></span><br><span class="line"><span class="string">       &#125;&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">带你了解什么是zabbix-proxy及使用</summary>
    
    
    
    <category term="监控" scheme="https://lukme.top/categories/%E7%9B%91%E6%8E%A7/"/>
    
    <category term="zabbix" scheme="https://lukme.top/categories/%E7%9B%91%E6%8E%A7/zabbix/"/>
    
    
    <category term="zabbix" scheme="https://lukme.top/tags/zabbix/"/>
    
  </entry>
  
  <entry>
    <title>zabbix邮件告警</title>
    <link href="https://lukme.top/posts/97b5f9b7.html"/>
    <id>https://lukme.top/posts/97b5f9b7.html</id>
    <published>2024-08-23T15:10:00.000Z</published>
    <updated>2024-08-23T15:30:10.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-添加报警媒介">1.添加报警媒介</h3><p><img src="https://cos.lukme.top/Pic/QQ_1722776498063.png" alt="QQ_1722776498063"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722776993991.png" alt="QQ_1722776993991"></p><p><strong>获取QQ邮箱授权码</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1722776749588.png" alt="QQ_1722776749588"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722776784428.png" alt="QQ_1722776784428"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722776853820.png" alt="QQ_1722776853820"></p><p><strong>可以测试能否成功发邮件</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1722777067263.png" alt="QQ_1722777067263"></p><h3 id="2-添加动作">2.添加动作</h3><p><img src="https://cos.lukme.top/Pic/QQ_1722778117057.png" alt="QQ_1722778117057"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722777618840.png" alt="QQ_1722777618840"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722777179047.png" alt="QQ_1722777179047"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722777497942.png" alt="QQ_1722777497942"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722777580123.png" alt="QQ_1722777580123"></p><h3 id="3-添加报警收件人">3.添加报警收件人</h3><p><img src="https://cos.lukme.top/Pic/QQ_1722777689193.png" alt="QQ_1722777689193"></p><p><strong>测试</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1722777896537.png" alt="QQ_1722777896537"></p><h3 id="4-邮件告警-html告警">4.邮件告警-html告警</h3><p><img src="https://cos.lukme.top/Pic/QQ_1722841657383.png" alt="QQ_1722841657383"></p><p><strong>故障</strong></p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml">故障</span><span class="template-variable">&#123;TRIGGER.STATUS&#125;</span><span class="language-xml">,服务器:</span><span class="template-variable">&#123;HOSTNAME1&#125;</span><span class="language-xml">发生: </span><span class="template-variable">&#123;TRIGGER.NAME&#125;</span><span class="language-xml">故障!</span></span><br><span class="line"><span class="language-xml">告警地址:</span><span class="template-variable">&#123;HOST.IP&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">告警主机:</span><span class="template-variable">&#123;HOSTNAME1&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">告警时间:</span><span class="template-variable">&#123;EVENT.DATE&#125;</span><span class="language-xml"> </span><span class="template-variable">&#123;EVENT.TIME&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">告警等级:</span><span class="template-variable">&#123;TRIGGER.SEVERITY&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">告警信息: </span><span class="template-variable">&#123;TRIGGER.NAME&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">告警项目:</span><span class="template-variable">&#123;TRIGGER.KEY1&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">问题详情:</span><span class="template-variable">&#123;ITEM.NAME&#125;</span><span class="language-xml">:</span><span class="template-variable">&#123;ITEM.VALUE&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">当前状态:</span><span class="template-variable">&#123;TRIGGER.STATUS&#125;</span><span class="language-xml">:</span><span class="template-variable">&#123;ITEM.VALUE1&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">事件ID:</span><span class="template-variable">&#123;EVENT.ID&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-tag">body</span>&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&#x27;https://seopic.699pic.com/photo/40007/7490.jpg_wh1200.jpg&#x27;</span>);</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;http://pic1.win4000.com/wallpaper/8/573acd203bc77.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-tag">table</span> <span class="selector-class">.guzhang</span> &#123;<span class="attribute">color</span>: red;&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;3&quot;</span> <span class="attr">bordercolor</span>=<span class="string">&quot;black&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0px&quot;</span> <span class="attr">cellpadding</span>=<span class="string">&quot;4px&quot;</span> <span class="attr">width</span>=<span class="string">&quot;500px&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">&quot;guzhang&quot;</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#0C1B3D&quot;</span> &gt;</span><span class="tag">&lt;<span class="name">th</span> <span class="attr">colspan</span>=<span class="string">2</span>&gt;</span>&#123;TRIGGER.STATUS&#125; 故障！！！故障！！！</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="symbol">&amp;#128514;</span> <span class="symbol">&amp;#128514;</span> <span class="symbol">&amp;#128514;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#F9B602&quot;</span> <span class="attr">width</span>=<span class="string">&quot;20%&quot;</span>&gt;</span>告警主机<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#F9B602&quot;</span>&gt;</span>&#123;HOSTNAME1&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#F9B602&quot;</span>&gt;</span>告警别名<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#F9B602&quot;</span>&gt;</span>&#123;HOST.NAME&#125; <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#F9B602&quot;</span>&gt;</span>告警地址<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#F9B602&quot;</span>&gt;</span>&#123;HOST.IP&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#F9B602&quot;</span>&gt;</span>告警时间<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#F9B602&quot;</span>&gt;</span>&#123;EVENT.DATE&#125; &#123;EVENT.TIME&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#F9B602&quot;</span>&gt;</span>告警等级<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#F9B602&quot;</span>&gt;</span>&#123;TRIGGER.SEVERITY&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#F9B602&quot;</span>&gt;</span>告警信息<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#F9B602&quot;</span>&gt;</span>&#123;TRIGGER.NAME&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#F9B602&quot;</span>&gt;</span>告警项目<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#F9B602&quot;</span>&gt;</span>&#123;TRIGGER.KEY1&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&#x27;guzhang2&#x27;</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#FF3333&quot;</span>&gt;</span>问题详情<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&#x27;guzhang3&#x27;</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#FF3333&quot;</span>&gt;</span>&#123;ITEM.NAME&#125;:<span class="symbol">&amp;nbsp;</span>&#123;ITEM.VALUE&#125; <span class="symbol">&amp;#128520;</span> <span class="symbol">&amp;#128520;</span> <span class="symbol">&amp;#128520;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#F9B602&quot;</span>&gt;</span>当前状态<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#F9B602&quot;</span>&gt;</span>&#123;TRIGGER.STATUS&#125;:<span class="symbol">&amp;nbsp;</span>&#123;ITEM.VALUE1&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#F9B602&quot;</span>&gt;</span>事件ID<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#F9B602&quot;</span>&gt;</span>&#123;EVENT.ID&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>恢复</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">恢复&#123;TRIGGER.STATUS&#125;, 服务器:&#123;HOSTNAME1&#125;: &#123;TRIGGER.NAME&#125;已恢复!</span><br><span class="line">告警地址:&#123;HOST.IP&#125;</span><br><span class="line">告警主机:&#123;HOSTNAME1&#125;</span><br><span class="line">告警时间:&#123;EVENT.DATE&#125; &#123;EVENT.TIME&#125;</span><br><span class="line">告警等级:&#123;TRIGGER.SEVERITY&#125;</span><br><span class="line">告警信息: &#123;TRIGGER.NAME&#125;</span><br><span class="line">告警项目:&#123;TRIGGER.KEY1&#125;</span><br><span class="line">问题详情:&#123;ITEM.NAME&#125;:&#123;ITEM.VALUE&#125;</span><br><span class="line">当前状态:&#123;TRIGGER.STATUS&#125;:&#123;ITEM.VALUE1&#125;</span><br><span class="line">事件ID:&#123;EVENT.ID&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-tag">table</span> <span class="selector-class">.guzhang</span> &#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-tag">body</span>&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&#x27;https://seopic.699pic.com/photo/40007/7490.jpg_wh1200.jpg&#x27;</span>);</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;http://pic1.win4000.com/wallpaper/8/573acd203bc77.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">bordercolor</span>=<span class="string">&quot;black&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0px&quot;</span> <span class="attr">cellpadding</span>=<span class="string">&quot;4px&quot;</span> <span class="attr">width</span>=<span class="string">&quot;500px&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#49c208&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">th</span> <span class="attr">colspan</span>=<span class="string">2</span>&gt;</span></span><br><span class="line">    &#123;TRIGGER.STATUS&#125; 哈哈哈哈哈哈,好了</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="symbol">&amp;#128512;</span> <span class="symbol">&amp;#128512;</span> <span class="symbol">&amp;#128512;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;lightgreen&quot;</span> <span class="attr">width</span>=<span class="string">&quot;20%&quot;</span>&gt;</span>恢复主机<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;yellow&quot;</span>&gt;</span>&#123;HOSTNAME1&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;lightgreen&quot;</span>&gt;</span>恢复别名<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;yellow&quot;</span>&gt;</span>&#123;HOST.NAME&#125; <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;lightgreen&quot;</span>&gt;</span>恢复地址<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;yellow&quot;</span>&gt;</span>&#123;HOST.IP&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;lightgreen&quot;</span>&gt;</span>恢复时间<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;yellow&quot;</span>&gt;</span>&#123;EVENT.DATE&#125; &#123;EVENT.RECOVERY.TIME&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;lightgreen&quot;</span>&gt;</span>恢复等级<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;yellow&quot;</span>&gt;</span>&#123;TRIGGER.SEVERITY&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;lightgreen&quot;</span>&gt;</span>恢复信息<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;yellow&quot;</span>&gt;</span>&#123;TRIGGER.NAME&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;lightgreen&quot;</span>&gt;</span>恢复项目<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;yellow&quot;</span>&gt;</span>&#123;TRIGGER.KEY1&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#49c208&quot;</span>&gt;</span>恢复详情<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#49c208&quot;</span>&gt;</span>&#123;ITEM.NAME&#125;:<span class="symbol">&amp;nbsp;</span>&#123;ITEM.VALUE&#125; <span class="symbol">&amp;#9889;</span> <span class="symbol">&amp;#9889;</span><span class="symbol">&amp;#9889;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;lightgreen&quot;</span>&gt;</span>当前状态<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;yellow&quot;</span>&gt;</span>&#123;TRIGGER.STATUS&#125;:<span class="symbol">&amp;nbsp;</span>&#123;ITEM.VALUE1&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;lightgreen&quot;</span>&gt;</span>事件ID<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;yellow&quot;</span>&gt;</span>&#123;EVENT.ID&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本文介绍了zabbix如何实现邮件告警通知</summary>
    
    
    
    <category term="监控" scheme="https://lukme.top/categories/%E7%9B%91%E6%8E%A7/"/>
    
    <category term="zabbix" scheme="https://lukme.top/categories/%E7%9B%91%E6%8E%A7/zabbix/"/>
    
    
    <category term="zabbix" scheme="https://lukme.top/tags/zabbix/"/>
    
  </entry>
  
  <entry>
    <title>zabbix自定义监控项</title>
    <link href="https://lukme.top/posts/9ccde0e4.html"/>
    <id>https://lukme.top/posts/9ccde0e4.html</id>
    <published>2024-08-22T14:10:00.000Z</published>
    <updated>2024-10-06T13:47:24.307Z</updated>
    
    <content type="html"><![CDATA[<h3 id="创建模板">创建模板</h3><p><img src="https://cos.lukme.top/Pic/QQ_1722762642396.png" alt="QQ_1722762642396"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722762853490.png" alt="QQ_1722762853490"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722766153284.png" alt="QQ_1722766153284"></p><p><strong>自定义监控实例</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.监控用户登录数量</span><br><span class="line">2.监控服务是否存活</span><br></pre></td></tr></table></figure><p><strong>1.监控用户登录数量</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.了解监控需求，获取监控数据</span></span><br><span class="line"><span class="comment">## 零宽断言</span></span><br><span class="line">[root@web02 ~]# ifconfig eth0|grep -Po <span class="string">&#x27;[1-9][0-9]*\.\d+\.\d+\.\d+(?= netmask)&#x27;</span></span><br><span class="line">[root@web02 ~]# <span class="built_in">uptime</span>|grep -Po <span class="string">&#x27;\d+(?= user)&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.修改zabbix-agent的配置文件（使用zabbix-agent配置文件中的 UserParameter= 定义监控项）</span></span><br><span class="line">语法：</span><br><span class="line">Format: UserParameter=&lt;key&gt;,&lt;shell <span class="built_in">command</span>&gt;</span><br><span class="line">Format: UserParameter=监控项名字,shell命令</span><br><span class="line">[root@web01 ~]# vim /etc/zabbix/zabbix_agentd.conf</span><br><span class="line">UserParameter=user.count,<span class="built_in">uptime</span>|grep -Po <span class="string">&#x27;\d+(?= user)&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##建议以后直接创建conf文件（类似nginx子配置文件）</span></span><br><span class="line">[root@web01 ~]# vim /etc/zabbix/zabbix_agentd.d/userlogin.conf</span><br><span class="line">UserParameter=user.count,<span class="built_in">uptime</span>|grep -Po <span class="string">&#x27;\d+(?= user)&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.重启zabbix-agent</span></span><br><span class="line">[root@web01 ~]# systemctl restart zabbix-agent</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.在zabbix-server上（zabbix-get）测试，是否可以接收到zabbix-agent获取的数据</span></span><br><span class="line">rpm -ivh https://mirrors.tuna.tsinghua.edu.cn/zabbix/zabbix/5.0/rhel/7/x86_64/zabbix-get-5.0.0-1.el7.x86_64.rpm</span><br><span class="line"></span><br><span class="line">[root@zabbix5 ~]# zabbix_get -s 172.16.1.7 -k user.count</span><br><span class="line">1</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="添加监控项">添加监控项</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#统一添加到创建的模板里，每次监控都不需要单独创建监控项，而是直接选择这个模板就行</span></span><br><span class="line">找到创建的自定义模板&gt;监控项&gt;创建监控项</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/QQ_1722766187140.png" alt="QQ_1722766187140"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722766273027.png" alt="QQ_1722766273027"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722771986050.png" alt="QQ_1722771986050"></p><h3 id="添加触发器">添加触发器</h3><p><strong>如何做到报警提醒？</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1722772037897.png" alt="QQ_1722772037897"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722772224830.png" alt="QQ_1722772224830"></p><p><strong>添加表达式</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">插入表达式后，添加数据，表达式选择&gt;   图1错了</span><br><span class="line"></span><br><span class="line">&#123;HOST.NAME&#125;:可见的名称</span><br><span class="line">&#123;HOST.IP&#125;：IP地址</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/QQ_1722772470739.png" alt="QQ_1722772470739"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722772899528.png" alt="QQ_1722772899528"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用变量</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/QQ_1722773526820.png" alt="QQ_1722773526820"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#关联模板</span></span><br><span class="line">配置&gt;主机&gt;web01-10.0.0.7&gt;模板&gt;选择自定义模板</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/QQ_1722772708350.png" alt="QQ_1722772708350"></p><p><strong>==测试==</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1722772812337.png" alt="QQ_1722772812337"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722773021302.png" alt="QQ_1722773021302"></p><h3 id="添加图表">添加图表</h3><p><img src="https://cos.lukme.top/Pic/QQ_1722773128565.png" alt="QQ_1722773128565"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">创建图形</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/QQ_1722773144333.png" alt="QQ_1722773144333"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722773217580.png" alt="QQ_1722773217580"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722773354712.png" alt="QQ_1722773354712"></p><h3 id="监控服务状态">监控服务状态</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.获取数据</span></span><br><span class="line">[root@web01 ~]# netstat -lntup|grep -<span class="built_in">wc</span> <span class="string">&quot;8080&quot;</span></span><br><span class="line">1</span><br><span class="line"><span class="comment"># 2.修改配置文件</span></span><br><span class="line">[root@web01 ~]# vim /etc/zabbix/zabbix_agentd.d/port.conf</span><br><span class="line">UserParameter=tcp.port.ssh,netstat -lntup|grep -<span class="built_in">wc</span> <span class="string">&quot;22&quot;</span></span><br><span class="line">UserParameter=tcp.port.http,netstat -lntup|grep -<span class="built_in">wc</span> <span class="string">&quot;80&quot;</span></span><br><span class="line">UserParameter=tcp.port.tomcat,netstat -lntup|grep -<span class="built_in">wc</span> <span class="string">&quot;8080&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#3，重启客户端</span></span><br><span class="line">systemctl restart zabbix-agent.service </span><br><span class="line"></span><br><span class="line"><span class="comment">#参数化定义监控项</span></span><br><span class="line">[root@web01 ~]#vim /etc/zabbix/zabbix_agentd.d/port.conf</span><br><span class="line">UserParameter=tcp.port[*],ss -lntup|grep -<span class="built_in">wc</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">[root@web01 ~]# systemctl restart zabbix-agen</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#如何获取值？</span></span><br><span class="line">[root@zabbix5 fonts]# zabbix_get -s 172.16.1.7 -k tcp.port[80]</span><br><span class="line">0</span><br></pre></td></tr></table></figure><p><strong>依次添加监控项</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1722774448589.png" alt="QQ_1722774448589"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722774470909.png" alt="QQ_1722774470909"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722774493661.png" alt="QQ_1722774493661"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722775398498.png" alt="QQ_1722775398498"></p><p><strong>排错</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1722774829533.png" alt="QQ_1722774829533"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722774871851.png" alt="QQ_1722774871851"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix5 fonts]# zabbix_get -s 172.16.1.7 -k tcp.port.http</span><br><span class="line">(Not all processes could be identified, non-owned process info</span><br><span class="line"> will not be shown, you would have to be root to see it all.)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">报错原因：定义监控项时，定义的数据类型是数字，结果获取到的值含有字符串</span><br><span class="line">解决方案：将zabbix用户提权</span><br><span class="line">[root@web01 ~]# visudo</span><br><span class="line">zabbix ALL=(ALL) NOPASSWD: ALL</span><br><span class="line"></span><br><span class="line"><span class="comment"># 监控命令：</span></span><br><span class="line">[root@web01 ~]# vim /etc/zabbix/zabbix_agentd.d/port.conf</span><br><span class="line">UserParameter=tcp.port.ssh,<span class="built_in">sudo</span> netstat -lntup|grep -<span class="built_in">wc</span> <span class="string">&quot;22&quot;</span></span><br><span class="line">UserParameter=tcp.port.http,<span class="built_in">sudo</span> netstat -lntup|grep -<span class="built_in">wc</span> <span class="string">&quot;80&quot;</span></span><br><span class="line">UserParameter=tcp.port.tomcat,<span class="built_in">sudo</span> netstat -lntup|grep -<span class="built_in">wc</span> <span class="string">&quot;8080&quot;</span></span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">UserParameter=tcp.port.ssh,ss -ltnup|grep -<span class="built_in">wc</span> <span class="string">&#x27;sshd&#x27;</span></span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">给netstat命令加setuid权限</span><br></pre></td></tr></table></figure><p><strong>添加触发器</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">表达式添加，选择nginx的触发器，阈值为0</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/QQ_1722776310520.png" alt="QQ_1722776310520"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722776258077.png" alt="QQ_1722776258077"></p><h3 id="监控nginx状态页">监控nginx状态页</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/nginx/conf.d/webapp.conf</span><br><span class="line">server&#123;</span><br><span class="line">listen 80;</span><br><span class="line">server_name _;</span><br><span class="line">location / &#123;</span><br><span class="line">root /code/webapp;</span><br><span class="line">index index.html;</span><br><span class="line">&#125;</span><br><span class="line">location /status &#123;</span><br><span class="line">stub_status on;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http://10.0.0.7/status</span><br><span class="line">http://webapp.com/status</span><br><span class="line"><span class="comment">#注：如果使用域名，物理机和虚拟机都需要hosts域名解析</span></span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/QQ_1722778620045.png" alt="QQ_1722778620045"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.创建存放监控脚本目录</span></span><br><span class="line">[root@web01 ~]# <span class="built_in">mkdir</span> /etc/zabbix/zabbix_agentd.d/scripts</span><br><span class="line">[root@web01 ~]# vim /etc/zabbix/zabbix_agentd.d/scripts/nginx_status.sh</span><br><span class="line"></span><br><span class="line">NGINX_PORT=80 <span class="comment">#如果端口不同仅需要修改脚本即可，否则修改xml很麻烦</span></span><br><span class="line">NGINX_URL=http://172.16.1.7/status</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">nginx_active</span></span>()&#123;</span><br><span class="line">/usr/bin/curl -s <span class="string">&quot;<span class="variable">$&#123;NGINX_URL&#125;</span>&quot;</span> |awk <span class="string">&#x27;/Active/ &#123;print $NF&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">nginx_reading</span></span>()&#123;</span><br><span class="line">/usr/bin/curl -s <span class="string">&quot;<span class="variable">$&#123;NGINX_URL&#125;</span>&quot;</span> |awk <span class="string">&#x27;/Reading/ &#123;print $2&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">nginx_writing</span></span>()&#123;</span><br><span class="line">/usr/bin/curl -s <span class="string">&quot;<span class="variable">$&#123;NGINX_URL&#125;</span>&quot;</span> |awk <span class="string">&#x27;/Writing/ &#123;print $4&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">nginx_waiting</span></span>()&#123;</span><br><span class="line">/usr/bin/curl -s <span class="string">&quot;<span class="variable">$&#123;NGINX_URL&#125;</span>&quot;</span> |awk <span class="string">&#x27;/Waiting/ &#123;print $6&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">nginx_accepts</span></span>()&#123;</span><br><span class="line">/usr/bin/curl -s <span class="string">&quot;<span class="variable">$&#123;NGINX_URL&#125;</span>&quot;</span> |awk <span class="string">&#x27;NR==3 &#123;print $1&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">nginx_handled</span></span>()&#123;</span><br><span class="line">/usr/bin/curl -s <span class="string">&quot;<span class="variable">$&#123;NGINX_URL&#125;</span>&quot;</span> |awk <span class="string">&#x27;NR==3 &#123;print $2&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">nginx_requests</span></span>()&#123;</span><br><span class="line">/usr/bin/curl -s <span class="string">&quot;<span class="variable">$&#123;NGINX_URL&#125;</span>&quot;</span> |awk <span class="string">&#x27;NR==3 &#123;print $3&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span></span><br><span class="line">active)</span><br><span class="line">nginx_active;</span><br><span class="line">;;</span><br><span class="line">reading)</span><br><span class="line">nginx_reading;</span><br><span class="line">;;</span><br><span class="line">writing)</span><br><span class="line">nginx_writing;</span><br><span class="line">;;</span><br><span class="line">waiting)</span><br><span class="line">nginx_waiting;</span><br><span class="line">;;</span><br><span class="line">accepts)</span><br><span class="line">nginx_accepts;</span><br><span class="line">;;</span><br><span class="line">handled)</span><br><span class="line">nginx_handled;</span><br><span class="line">;;</span><br><span class="line">requests)</span><br><span class="line">nginx_requests;</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">echo</span> $<span class="string">&quot;USAGE:<span class="variable">$0</span> &#123;active|reading|writing|waiting|accepts|handled|requests&#125;&quot;</span></span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 授权</span></span><br><span class="line">[root@web01 ~]# <span class="built_in">chmod</span> +x /etc/zabbix/zabbix_agentd.d/scripts/nginx_status.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改zabbix-agent配置文件</span></span><br><span class="line">[root@web01 ~]# vim /etc/zabbix/zabbix_agentd.d/nginx_status.conf</span><br><span class="line">UserParameter=nginx.status[*],/etc/zabbix/zabbix_agentd.d/scripts/nginx_status.sh <span class="variable">$1</span></span><br><span class="line"><span class="comment">#重启客户端</span></span><br><span class="line">[root@web01 ~]# systemctl restart zabbix-agent</span><br></pre></td></tr></table></figure><p><strong>依次添加监控项</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1722780577877.png" alt="QQ_1722780577877"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722780778047.png" alt="QQ_1722780778047"></p><p><strong>添加图形</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1722780847328.png" alt="QQ_1722780847328"></p>]]></content>
    
    
    <summary type="html">本文介绍了zabbix如何自定义创建监控项</summary>
    
    
    
    <category term="监控" scheme="https://lukme.top/categories/%E7%9B%91%E6%8E%A7/"/>
    
    <category term="zabbix" scheme="https://lukme.top/categories/%E7%9B%91%E6%8E%A7/zabbix/"/>
    
    
    <category term="zabbix" scheme="https://lukme.top/tags/zabbix/"/>
    
  </entry>
  
  <entry>
    <title>zabbix部署</title>
    <link href="https://lukme.top/posts/42dcb23.html"/>
    <id>https://lukme.top/posts/42dcb23.html</id>
    <published>2024-08-21T14:10:12.000Z</published>
    <updated>2024-10-02T12:49:58.833Z</updated>
    
    <content type="html"><![CDATA[<h3 id="zabbix5部署">zabbix5部署</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">zabbix版本</span><br><span class="line">7.0：不支持C7</span><br><span class="line">6.4：不支持C7</span><br><span class="line">6.0：不支持C7</span><br><span class="line">5.0：支持C7</span><br><span class="line">4.x：zabbix前后端分离</span><br><span class="line">3.x：zabbix前后端不分离</span><br><span class="line"></span><br><span class="line"><span class="comment">#部署zabbxi5和zabbix3，看看区别</span></span><br></pre></td></tr></table></figure><p><strong>环境准备</strong></p><table><thead><tr><th>主机名</th><th>内网ip</th><th>ip</th><th>角色</th><th style="text-align:left">应用</th></tr></thead><tbody><tr><td>zabbix5</td><td>172.16.1.71</td><td>10.0.0.71</td><td>zabbix服务端</td><td style="text-align:left">zabbix-server、MySQL</td></tr><tr><td>zabbix3</td><td>172.16.1.72</td><td>10.0.0.72</td><td>zabbix服务端</td><td style="text-align:left">zabbix-server、MySQL</td></tr><tr><td>web01</td><td>172.16.1.7</td><td>10.0.0.7</td><td>zabbix5的客户端</td><td style="text-align:left">zabbix-agent</td></tr><tr><td>web02</td><td>172.16.1.8</td><td>10.0.0.8</td><td>zabbix3的客户端</td><td style="text-align:left">zabbix-agent</td></tr></tbody></table><p>官网：<a href="https://www.zabbix.com/">https://www.zabbix.com/</a>   点击download</p><h4 id="安装服务端">安装服务端</h4><p><strong>部署zabbix5</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1722752866743.png" alt="QQ_1722752866743"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#zabbix5服务端10.0.0.71执行</span></span><br><span class="line"><span class="comment">#1.更换zabbix官方源</span></span><br><span class="line">rpm -Uvh https://repo.zabbix.com/zabbix/5.0/rhel/7/x86_64/zabbix-release-5.0-1.el7.noarch.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.安装部署后端代码和客户端</span></span><br><span class="line">yum install -y zabbix-server-mysql zabbix-agent</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.添加zabbix前端代码源</span></span><br><span class="line">yum install centos-release-scl -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.打开yum仓库使用</span></span><br><span class="line">[root@zabbix5-server ~]# vim /etc/yum.repos.d/zabbix.repo</span><br><span class="line">[zabbix-frontend]</span><br><span class="line">...</span><br><span class="line">enabled=1</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.安装zabbix前端代码</span></span><br><span class="line">yum -y install zabbix-web-mysql-scl zabbix-nginx-conf-scl</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#报错</span></span><br><span class="line">Cannot find a valid baseurl <span class="keyword">for</span> repo: centos-sclo-rh/x86_64</span><br><span class="line">原因：CentOS7的SCL源在2024年6月30日停止维护了。 当scl源里面默认使用了centos官方的地址，无法连接，需要替换为阿里云。</span><br><span class="line">解决：</span><br><span class="line"><span class="built_in">cd</span> /etc/yum.repos.d/</span><br><span class="line"><span class="built_in">mv</span> CentOS-SCLo-scl.repo CentOS-SCLo-scl.repo.bak</span><br><span class="line"><span class="built_in">mv</span> CentOS-SCLo-scl-rh.repo CentOS-SCLo-scl-rh.repo.bak</span><br><span class="line"></span><br><span class="line"><span class="comment">#更换阿里云</span></span><br><span class="line">vim CentOS-SCLo-rh.repo</span><br><span class="line">[centos-sclo-rh]</span><br><span class="line">name=CentOS-7 - SCLo rh</span><br><span class="line">baseurl=https://mirrors.aliyun.com/centos/7/sclo/x86_64/rh/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-SIG-SCLo</span><br><span class="line"></span><br><span class="line"><span class="comment">#5.解决报错之后重新安装</span></span><br><span class="line">yum -y install zabbix-web-mysql-scl zabbix-nginx-conf-scl</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6.安装MySQL</span></span><br><span class="line">yum install -y mariadb-server</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7.启动MySQL并加入开机自启</span></span><br><span class="line">systemctl start mariadb</span><br><span class="line">systemctl <span class="built_in">enable</span> mariadb</span><br><span class="line"></span><br><span class="line"><span class="comment"># 8.进入mysql并创建数据库</span></span><br><span class="line">mysql</span><br><span class="line">MariaDB [(none)]&gt; create database zabbix5 character <span class="built_in">set</span> utf8 collate utf8_bin;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 9.创建用户</span></span><br><span class="line">MariaDB [(none)]&gt; grant all on *.* to zabbix@<span class="string">&#x27;172.16.1.%&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line">退出</span><br><span class="line">\q</span><br><span class="line"></span><br><span class="line"><span class="comment"># 10.导入数据</span></span><br><span class="line">[root@zabbix5 ~]#zcat /usr/share/doc/zabbix-server-mysql-5.0.42/create.sql.gz | mysql-uzabbix -p123 -h172.16.1.71 zabbix5</span><br><span class="line">ERROR 1045 (28000):Access denied <span class="keyword">for</span> user <span class="string">&#x27;zabbix&#x27;</span>@<span class="string">&#x27;zabbix5&#x27;</span>(using password:YES)</span><br><span class="line"></span><br><span class="line"><span class="comment">#报错原因：数据库将主机IP反向解析成主机名</span></span><br><span class="line">解决：关闭反向解析，[mysqld]下添加  skip_name_resolve</span><br><span class="line">vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">skip_name_resolve</span><br><span class="line"><span class="comment">#修改完毕之后重启数据库</span></span><br><span class="line">systemctl restart mariadb</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#10.重新导入数据</span></span><br><span class="line">zcat /usr/share/doc/zabbix-server-mysql-5.0.42/create.sql.gz  |mysql -uzabbix -p123 -h172.16.1.71 zabbix5</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 11.修改zabbix-server配置文件</span></span><br><span class="line">vim /etc/zabbix/zabbix_server.conf</span><br><span class="line">DBHost=172.16.1.71</span><br><span class="line">DBName=zabbix5<span class="comment">#数据库名</span></span><br><span class="line">DBUser=zabbix<span class="comment">#创建的数据库用户</span></span><br><span class="line">DBPassword=123</span><br><span class="line"></span><br><span class="line"><span class="comment"># 12.修改nginx配置文件</span></span><br><span class="line">[root@zabbix5-server ~]# vim /etc/opt/rh/rh-nginx116/nginx/conf.d/zabbix.conf</span><br><span class="line">server &#123;</span><br><span class="line">listen 80;</span><br><span class="line">server_name zabbix.web.com;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 13.修改php配置文件</span></span><br><span class="line">[root@zabbix5-server ~]# vim /etc/opt/rh/rh-php72/php-fpm.d/zabbix.conf</span><br><span class="line">listen.acl_users = apache,nginx</span><br><span class="line">php_value[date.timezone] = Asia/Shanghai</span><br><span class="line"></span><br><span class="line"><span class="comment"># 14.启动服务并加入开机自启</span></span><br><span class="line">systemctl restart zabbix-server zabbix-agent rh-nginx116-nginx rh-php72-php-fpm</span><br><span class="line">systemctl <span class="built_in">enable</span> zabbix-server zabbix-agent rh-nginx116-nginx rh-php72-php-fpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 15.物理机做域名解析</span></span><br><span class="line">打开cmd -&gt; 输入drivers -&gt; 打开hosts文件</span><br><span class="line">10.0.0.71 zabbix.web.com</span><br><span class="line"></span><br><span class="line"><span class="comment">#16.浏览器访问</span></span><br><span class="line">zabbix.web.com</span><br></pre></td></tr></table></figure><ul><li>如果想使用10.0.0.71访问zabbix时候报错如下</li></ul><p><img src="https://cos.lukme.top/Pic/QQ_1722756226179.png" alt="QQ_1722756226179"></p><ul><li><p>原因：使用ip访问默认会去找<code>/opt/rh/rh-nginx116/root/usr/share/nginx/html</code>.</p></li><li><p><code>/etc/opt/rh/rh-nginx116/nginx/nginx.conf</code>.里指向了路径</p></li><li><p>解决：删除默认nginx配置文件里server层，http层下的server层，删掉保留如下</p></li><li><p>重启nginx   <code>systemctl restart rh-nginx116-nginx</code></p></li></ul><p><img src="https://cos.lukme.top/Pic/QQ_1722756503836.png" alt="QQ_1722756503836"></p><p><strong>浏览器访问10.0.0.71</strong></p><p>输入连接的数据库host，库名，用户及密码</p><p><img src="https://cos.lukme.top/Pic/QQ_1722756894033.png" alt="QQ_1722756894033"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722757040903.png" alt="QQ_1722757040903"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Username：Admin</span><br><span class="line">Password：zabbix</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/QQ_1722757104745.png" alt="QQ_1722757104745"></p><h4 id="汉化">汉化</h4><p><img src="https://cos.lukme.top/Pic/QQ_1722757339488.png" alt="QQ_1722757339488"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722757366149.png" alt="QQ_1722757366149"></p><p><strong>zabbix图形字体显示异常解决</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1722757866125.png" alt="QQ_1722757866125"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## zabbix存放字体的目录</span></span><br><span class="line">[root@zabbix5-server ~]# rpm -ql zabbix-web|grep font</span><br><span class="line">/usr/share/zabbix/assets/fonts</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">windows打开CMD 输入 fonts</span><br><span class="line"><span class="comment"># 进入字体目录,将中文系统字体拖到zabbix字体目录</span></span><br><span class="line">[root@zabbix5-server ~]# <span class="built_in">cd</span> /usr/share/zabbix/assets/fonts</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除字体目录中的默认软链接字体文件</span></span><br><span class="line">[root@zabbix5-server fonts]# <span class="built_in">rm</span> -f graphfont.ttf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改字体文件名</span></span><br><span class="line">[root@zabbix5-server fonts]# <span class="built_in">mv</span> YGYXSZITI2.0.TTF graphfont.ttf</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/QQ_1722757894487.png" alt="QQ_1722757894487"></p><h4 id="安装客户端">安装客户端</h4><p><strong>10.0.0.7</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.更换zabbix官方源</span></span><br><span class="line">rpm -Uvh https://repo.zabbix.com/zabbix/5.0/rhel/7/x86_64/zabbix-release-5.0-1.el7.noarch.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.安装zabbix-agent</span></span><br><span class="line">yum install -y zabbix-agent</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.修改zabbix-agent配置文件</span></span><br><span class="line">[root@web01 ~]# vim /etc/zabbix/zabbix_agentd.conf</span><br><span class="line">Server=172.16.1.71</span><br><span class="line">Hostname=web01</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.启动zabbix-agent</span></span><br><span class="line">systemctl start zabbix-agent</span><br><span class="line">systemctl <span class="built_in">enable</span> zabbix-agent</span><br><span class="line"></span><br><span class="line">端口：</span><br><span class="line">zabbix-server：10051</span><br><span class="line">zabbix-agent：10050</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="添加监控主机">添加监控主机</h4><p><img src="https://cos.lukme.top/Pic/QQ_1722758479060.png" alt="QQ_1722758479060"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722758820075.png" alt="QQ_1722758820075"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#类型：</span></span><br><span class="line">客户端：zabbix-server获取zabbix-agent的数据</span><br><span class="line">SNMP：监控网络设备的接口(交换机)</span><br><span class="line">JMX：监控JAVA程序</span><br><span class="line">IPMI：监控硬件设备(硬件负载均衡 F5 硬件防火墙)</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/QQ_1722758979163.png" alt="QQ_1722758979163"></p><p><strong>模板选好就添加</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1722759100045.png" alt="QQ_1722759100045"></p><p><strong>返回主机，等待刷新变绿</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1722759174786.png" alt="QQ_1722759174786"></p><h3 id="zabbix3-4部署">zabbix3.4部署</h3><h4 id="部署服务端">部署服务端</h4><p>清华源：<a href="https://mirrors.tuna.tsinghua.edu.cn/">https://mirrors.tuna.tsinghua.edu.cn/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.更换zabbix3.4源</span></span><br><span class="line">rpm -ivh https://mirrors.tuna.tsinghua.edu.cn/zabbix/zabbix/3.4/rhel/7/x86_64/zabbix-release-3.4-1.el7.centos.noarch.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.安装zabbix-server zabbix-web（apache） zabbix-agent</span></span><br><span class="line">yum -y install zabbix-server-mysql zabbix-web-mysql zabbix-agent</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.进入并创建数据库（使用远程数据库，172.16.1.71，安装数据库见zabbix5部署）</span></span><br><span class="line">mysql</span><br><span class="line">MariaDB [(none)]&gt; create database zabbix3 character <span class="built_in">set</span> utf8 collate utf8_bin;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.创建用户（使用zabbix5创建的用户也可以）</span></span><br><span class="line">MariaDB [(none)]&gt; grant all on *.* to zabbix@<span class="string">&#x27;172.16.1.%&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.导入数据</span></span><br><span class="line">zcat /usr/share/doc/zabbix-server-mysql-3.4.15/create.sql.gz |mysql -uzabbix -p123 -h172.16.1.71 zabbix3</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6.修改zabbix-server配置文件</span></span><br><span class="line">[root@zabbix3-server ~]# vim /etc/zabbix/zabbix_server.conf</span><br><span class="line">DBHost=172.16.1.71</span><br><span class="line">DBName=zabbix3</span><br><span class="line">DBUser=zabbix</span><br><span class="line">DBPassword=123</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7.修改apache配置文件</span></span><br><span class="line">[root@zabbix3-server ~]# vim /etc/httpd/conf.d/zabbix.conf</span><br><span class="line">php_value date.timezone Asia/Shanghai</span><br><span class="line"></span><br><span class="line"><span class="comment"># 8.启动zabbix</span></span><br><span class="line">systemctl start zabbix-server zabbix-agent httpd</span><br><span class="line">systemctl <span class="built_in">enable</span> zabbix-server zabbix-agent httpd</span><br><span class="line"></span><br><span class="line"><span class="comment">#9.浏览器访问</span></span><br><span class="line">http://10.0.0.72/zabbix/</span><br></pre></td></tr></table></figure><p><strong>如果启动报错</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">检查日志</span><br><span class="line"><span class="built_in">cat</span> /var/log/zabbix/zabbix_server.log</span><br><span class="line">如果是如下</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/QQ_1722761828372.png" alt="QQ_1722761828372"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">原因：</span><br><span class="line">kernel.sem参数设置过小，共享内存信号量设置共享内存：</span><br><span class="line">可以通过ipcs -lm命令查看目前系统共享内存的参数限制</span><br><span class="line"></span><br><span class="line">解决：</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;kernel.sem = 500 64000 64 256&quot;</span> &gt;&gt; /etc/sysctl.conf</span><br><span class="line"></span><br><span class="line">sysctl -p</span><br><span class="line"></span><br><span class="line">systemctl start zabbix-server <span class="comment"># 成功</span></span><br></pre></td></tr></table></figure><p><strong>登录浏览器访问</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1722760000155.png" alt="QQ_1722760000155"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">登录用户名及密码同zabbix5</span><br><span class="line">Username：Admin</span><br><span class="line">Password：zabbix</span><br><span class="line"></span><br><span class="line">汉化及字体异常同zabbix5</span><br><span class="line"><span class="comment"># 1.查找zabbix存放字体目录</span></span><br><span class="line">[root@zabbix3-server ~]# rpm -ql zabbix-web|grep font</span><br><span class="line">/usr/share/zabbix/fonts</span><br><span class="line"><span class="comment"># 2.进入目录</span></span><br><span class="line">[root@zabbix3-server ~]# <span class="built_in">cd</span> /usr/share/zabbix/fonts</span><br><span class="line"><span class="comment"># 3.修改字体</span></span><br><span class="line">[root@zabbix3-server fonts]# <span class="built_in">rm</span> -f graphfont.ttf</span><br><span class="line">[root@zabbix3-server fonts]# <span class="built_in">mv</span> YGYXSZITI2.0.TTF graphfont.ttf</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/QQ_1722760127865.png" alt="QQ_1722760127865"></p><h4 id="部署客户端">部署客户端</h4><p><strong>10.0.0.8</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">https://mirrors.tuna.tsinghua.edu.cn/zabbix/zabbix/3.4/rhel/7/x86_64/</span><br><span class="line"><span class="comment"># 0.安装zabbix-agent源</span></span><br><span class="line">rpm -ivh https://mirrors.tuna.tsinghua.edu.cn/zabbix/zabbix/3.4/rhel/7/x86_64/zabbix-agent-3.4.15-1.el7.x86_64.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment">#1.安装zabbix-agent</span></span><br><span class="line">yum -y install zabbix-agent</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.修改agent配置文件</span></span><br><span class="line">[root@web02 ~]# vim /etc/zabbix/zabbix_agentd.conf</span><br><span class="line">Server=172.16.1.72</span><br><span class="line">Hostname=web02</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.启动zabbix-agent</span></span><br><span class="line">systemctl start zabbix-agent</span><br><span class="line">systemctl <span class="built_in">enable</span> zabbix-agent</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/QQ_1722760672992.png" alt="QQ_1722760672992"></p><p><strong>搜索linux，添加Template OS Linux</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1722760735288.png" alt="QQ_1722760735288"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722761703199.png" alt="QQ_1722761703199"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722761797069.png" alt="QQ_1722761797069"></p><hr>]]></content>
    
    
    <summary type="html">本文介绍了zabbix两种版本的部署，查看区别，选其一即可</summary>
    
    
    
    <category term="监控" scheme="https://lukme.top/categories/%E7%9B%91%E6%8E%A7/"/>
    
    <category term="zabbix" scheme="https://lukme.top/categories/%E7%9B%91%E6%8E%A7/zabbix/"/>
    
    
    <category term="zabbix" scheme="https://lukme.top/tags/zabbix/"/>
    
  </entry>
  
  <entry>
    <title>zabbix监控概述</title>
    <link href="https://lukme.top/posts/ccb410e2.html"/>
    <id>https://lukme.top/posts/ccb410e2.html</id>
    <published>2024-08-20T12:18:10.000Z</published>
    <updated>2024-10-02T11:07:04.991Z</updated>
    
    <content type="html"><![CDATA[<h3 id="监控介绍">监控介绍</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.系统的监控:实际上是对系统不间断的实时监控</span><br><span class="line">2.实时反馈系统当前状态:我们监控某个硬件、或者某个系统，都是需要能实时看到当前系统的状态是正常、异常、或者故障。</span><br><span class="line">3.保证服务可靠性安全性:我们监控的目的就是要保证系统、服务、业务正常运行</span><br><span class="line">4.保证业务持续稳定运行:如果我们的监控做得很完善，即使出现故障，能第一时间接收到故障报警在第一时间处理解决，从而保证业务持续性的稳定运行。（往往，第一时间知道业务宕机的都是用户）</span><br></pre></td></tr></table></figure><p><strong>监控软件介绍</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.CACTI 网络监控</span><br><span class="line">2.Nagios 系统监控        https://www.nagios.com/</span><br><span class="line">3.falcon 小米监控https://open-falcon.github.io/</span><br></pre></td></tr></table></figure><p><strong>监控有哪些方面</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">硬件层</span><br><span class="line">- CPU温度</span><br><span class="line">- 风扇转速</span><br><span class="line">- 磁盘是否损坏</span><br><span class="line">- CMOS电池电量</span><br><span class="line">- 内存是否损坏</span><br><span class="line">...</span><br><span class="line">系统层</span><br><span class="line">- CPU：使用率、负载</span><br><span class="line">- 内存：使用率</span><br><span class="line">- 磁盘：使用率，IO</span><br><span class="line">- 进程</span><br><span class="line">- TCP状态</span><br><span class="line">- 系统负载</span><br><span class="line">- 文件描述符</span><br><span class="line">...</span><br><span class="line">网络层</span><br><span class="line">- 网络设备：路由器，交换机</span><br><span class="line">- 网卡入口流量</span><br><span class="line">- 网卡出口流量</span><br><span class="line">- 带宽的峰值</span><br><span class="line">...</span><br><span class="line">应用层</span><br><span class="line">- MySQL：主从复制是否有延迟（zabbix监控模板）</span><br><span class="line">- redis：主从复制是否有延迟</span><br><span class="line">- 监控思路:zabbix没有固定模板，可以在主库中<span class="built_in">set</span>一个key为时间戳，然后从库会同步这个时</span><br><span class="line">- 间戳（动态），写脚本时时获取这两个时间戳，做对比</span><br><span class="line">- NFS：磁盘挂载状况</span><br><span class="line">- tomcat：JVM监控，老年代、新生代、永久带、full-gc（垃圾回收）</span><br><span class="line">- rsync的同步情况，MD5校验文件是否被篡改</span><br><span class="line">...</span><br><span class="line">业务层</span><br><span class="line">- URL的监控</span><br><span class="line">- API的监控</span><br><span class="line">- nginx的状态码</span><br><span class="line">- tomcat的exception</span><br><span class="line">- 请求时间</span><br><span class="line">- 响应时间</span><br><span class="line">- 加载时间</span><br><span class="line">- 渲染时间</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="常用监控命令">常用监控命令</h3><h4 id="CPU监控命令">CPU监控命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">[root@web02 ~]# w</span><br><span class="line">10:33:44 up 1:28, 1 user, load average: 0.00, 0.01, 0.05</span><br><span class="line">USER TTY FROM LOGIN@ IDLE JCPU PCPU WHAT</span><br><span class="line">root pts/0 10.0.0.1 09:44 0.00s 0.03s 0.00s w</span><br><span class="line"></span><br><span class="line">零宽断言</span><br><span class="line">ifconfig eth0|grep -Po <span class="string">&#x27;\d\d\.\d\.\d\.\d(?=  netmask)&#x27;</span></span><br><span class="line">ifconfig eth0|grep -Po <span class="string">&#x27;[1-9][0-9]+\.[0-9]+\.[0-9]+\.[0-9]+(?=  netmask)&#x27;</span></span><br><span class="line">10.0.0.7</span><br><span class="line"></span><br><span class="line">\K 是一个特殊的 PCRE 符号，表示“忽略之前的匹配”，</span><br><span class="line">ifconfig eth0 | grep -oP <span class="string">&#x27;inet \K(\d+\.\d+\.\d+\.\d+)&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@web02 ~]# top</span><br><span class="line"></span><br><span class="line">[root@web02 ~]# htop</span><br><span class="line">[root@web02 ~]# glances</span><br><span class="line">[root@web02 ~]# <span class="built_in">uptime</span></span><br><span class="line">10:37:12 up 1:32, 1 user, load average: 0.13, 0.09, 0.01</span><br><span class="line"></span><br><span class="line"><span class="comment">#不管用什么命令监控，查看CPU，我们都必须了解，系统的用户态和内和态。</span></span><br><span class="line">%Cpu(s): 0.0 us, 0.0 sy, 0.0 ni,100.0 <span class="built_in">id</span>, 0.0 wa, 0.0 hi, 0.0 si, 0.0 st</span><br><span class="line">us: 用户态 跟用户的操作有关35%</span><br><span class="line">sy: 内和态 跟内核的处理有关65%</span><br><span class="line"><span class="built_in">id</span>: CPU空闲</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看命令执行时间</span></span><br><span class="line">[root@web02 ~]# time <span class="built_in">ls</span></span><br><span class="line">backup.sh group_vars_web_group</span><br><span class="line">real 0m0.002s 真实执行时间</span><br><span class="line">user 0m0.001s 用户执行时间</span><br><span class="line">sys 0m0.001s 系统执行时间</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="内存监控命令">内存监控命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">[root@web02 ~]# free -m</span><br><span class="line">   total used free shared buff/cache available</span><br><span class="line">Mem: 972 94 588 7 290 712</span><br><span class="line">Swap: 1023 0 1023</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 如何查看单个进程占用内存？</span></span><br><span class="line"><span class="comment">#进程占用内存公式</span></span><br><span class="line">pmem = VmRSS / MemTotal * 100</span><br><span class="line">process mem = 虚拟内存 / 总内存 * 100</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@web02 ~]# <span class="built_in">cat</span> mem.py</span><br><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># _*_ coding:UTF-8 _*_</span></span><br><span class="line"><span class="comment"># 收集程序所占用的物理内存大小，占所有物理内存的比例</span></span><br><span class="line"><span class="comment"># Python: 2.7.6</span></span><br><span class="line">import sys</span><br><span class="line">import os</span><br><span class="line">from subprocess import Popen,PIPE</span><br><span class="line"></span><br><span class="line">def get_pid(program):</span><br><span class="line"><span class="string">&#x27;获取目标程序的PID列表&#x27;</span></span><br><span class="line">p = Popen([<span class="string">&#x27;pidof&#x27;</span>,program],stdout=PIPE,stderr=PIPE)</span><br><span class="line">pids,stderrput = p.communicate()</span><br><span class="line"><span class="comment"># pids = p.stdout.read() #这种方法也是可以的</span></span><br><span class="line"><span class="comment"># 这里也可以对stderrput来进行判断</span></span><br><span class="line"><span class="keyword">if</span> pids:</span><br><span class="line"><span class="built_in">return</span> pids.split()</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">raise ValueError</span><br><span class="line"></span><br><span class="line">def mem_calc(pids):</span><br><span class="line"><span class="string">&#x27;计算PIDs占用的内存大小&#x27;</span></span><br><span class="line">mem_total = 0</span><br><span class="line"><span class="keyword">for</span> pid <span class="keyword">in</span> pids:</span><br><span class="line">os.chdir(<span class="string">&#x27;/proc/%s&#x27;</span> % pid)</span><br><span class="line">with open(<span class="string">&#x27;status&#x27;</span>) as fd:</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> fd:</span><br><span class="line"><span class="keyword">if</span> line.startswith(<span class="string">&#x27;VmRSS&#x27;</span>):</span><br><span class="line">mem = line.strip().<span class="built_in">split</span>()[1]</span><br><span class="line">mem_total += int(mem)</span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="built_in">return</span> mem_total</span><br><span class="line"></span><br><span class="line">def mem_percent(mem):</span><br><span class="line"><span class="string">&#x27;计算程序内存占用物理内存的百分比&#x27;</span></span><br><span class="line">with open(<span class="string">&#x27;/proc/meminfo&#x27;</span>) as fd:</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> fd:</span><br><span class="line"><span class="keyword">if</span> line.startswith(<span class="string">&#x27;MemTotal&#x27;</span>):</span><br><span class="line">total = line.strip().<span class="built_in">split</span>()[1]</span><br><span class="line">percent = (<span class="built_in">float</span>(mem)/int(total)) * 100</span><br><span class="line"><span class="built_in">return</span> percent</span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">try:</span><br><span class="line">program = sys.argv[1]</span><br><span class="line">pids = get_pid(program)</span><br><span class="line">except IndexError as e:</span><br><span class="line">sys.exit(<span class="string">&#x27;%s need a Program name &#x27;</span> % __file__)</span><br><span class="line">except ValueError as e:</span><br><span class="line">sys.exit(<span class="string">&#x27;%s not a Process Name or not Start&#x27;</span> % program )</span><br><span class="line">mem_total = mem_calc(pids)</span><br><span class="line">percent = mem_percent(mem_total)</span><br><span class="line"><span class="built_in">return</span> program,mem_total,percent</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">program,mem_total,mem_percent=main()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;进程名称:%s\n物理内存为:%s\n百分比为:%.2f%%&#x27;</span>%</span><br><span class="line">(program,mem_total,mem_percent))</span><br></pre></td></tr></table></figure><h4 id="磁盘监控命令">磁盘监控命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@web02 ~]# <span class="built_in">df</span> -h</span><br><span class="line"></span><br><span class="line">[root@web02 ~]# iotop</span><br><span class="line">[root@web02 ~]# iostat -dm 1 10</span><br><span class="line">[root@web01 ~]# iostat -dm 1 10</span><br><span class="line">Linux 3.10.0-957.el7.x86_64 (web01)     08/04/2024      _x86_64_        (1 CPU)</span><br><span class="line"></span><br><span class="line">Device:            tps    MB_read/s    MB_wrtn/s    MB_read    MB_wrtn</span><br><span class="line">scd0              0.00         0.00         0.00          1          0</span><br><span class="line">sda               1.08         0.02         0.00         93         15</span><br><span class="line">[root@web02 ~]# dstat</span><br><span class="line">----total-cpu-usage---- -dsk/total- -net/total- ---paging-- ---system--</span><br><span class="line">usr sys idl wai hiq siq| <span class="built_in">read</span>  writ| recv  send|  <span class="keyword">in</span>   out | int   csw </span><br><span class="line">  0   0  99   0   0   0|  36k   45k|   0     0 |   0     0 |  56   125 </span><br><span class="line">  0   0 100   0   0   0|   0     0 |  60B  874B|   0     0 |  56    94 </span><br></pre></td></tr></table></figure><h4 id="网络监控命令">网络监控命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@web02 ~]# ifconfig</span><br><span class="line">[root@web02 ~]# iftop</span><br><span class="line">[root@web02 ~]# nethogs</span><br><span class="line">[root@web02 ~]# route -n</span><br><span class="line">Kernel IP routing table</span><br><span class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</span><br><span class="line">0.0.0.0         10.0.0.254      0.0.0.0         UG    102    0        0 eth0</span><br><span class="line">10.0.0.0        0.0.0.0         255.255.255.0   U     102    0        0 eth0</span><br><span class="line">172.16.1.0      0.0.0.0         255.255.255.0   U     101    0        0 eth1</span><br></pre></td></tr></table></figure><h4 id="TCP监控命令">TCP监控命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# netstat -an|awk <span class="string">&#x27;/^tcp/ &#123;print $NF&#125;&#x27;</span>|<span class="built_in">sort</span>|<span class="built_in">uniq</span> -c</span><br><span class="line">      2 ESTABLISHED</span><br><span class="line">      6 LISTEN</span><br><span class="line">[root@web01 ~]# netstat -an|awk <span class="string">&#x27;/^tcp/ &#123;++state[$NF]&#125; END &#123;for(key in state)print key,&quot; \t&quot; ,state[key]&#125;&#x27;</span></span><br><span class="line">LISTEN           6</span><br><span class="line">ESTABLISHED      2</span><br><span class="line">[root@web02 ~]# ss -n|awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>|<span class="built_in">sort</span>|<span class="built_in">uniq</span> -c</span><br><span class="line">     89 ESTAB</span><br><span class="line">      1 State</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="系统的oom">系统的oom</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">随着时间的推移，用户不断增多，服务消耗的内存越来越多，当系统内存不足的时候，可能会导致系统产生oom（out of memory）</span><br><span class="line">1.当系统内存不足时就会大量使用swap（虚拟内存）</span><br><span class="line">2.当系统大量使用swap的时候，系统会特别卡</span><br><span class="line"></span><br><span class="line">注意：有时可能内存还有剩余300M或者500M，但是swap依然被使用</span><br><span class="line"></span><br><span class="line">[root@web02 ~]# <span class="built_in">dd</span> &lt; /dev/zero &gt; /dev/null bs=2000M</span><br><span class="line">[root@web02 ~]# <span class="built_in">tail</span> -f /var/log/messages</span><br><span class="line">Out of memory: Kill process 29957 (<span class="built_in">dd</span>) score 366 or sacrifice child</span><br><span class="line">Killed process 29957 (<span class="built_in">dd</span>) total-vm:2532680kB, anon-rss:1416508kB, filers:0kB</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本文介绍了监控软件以及常用监控命令</summary>
    
    
    
    <category term="监控" scheme="https://lukme.top/categories/%E7%9B%91%E6%8E%A7/"/>
    
    <category term="zabbix" scheme="https://lukme.top/categories/%E7%9B%91%E6%8E%A7/zabbix/"/>
    
    
    <category term="zabbix" scheme="https://lukme.top/tags/zabbix/"/>
    
  </entry>
  
  <entry>
    <title>MySQL的读写分离</title>
    <link href="https://lukme.top/posts/12e80162.html"/>
    <id>https://lukme.top/posts/12e80162.html</id>
    <published>2024-08-17T12:18:10.000Z</published>
    <updated>2024-10-02T12:11:31.003Z</updated>
    
    <content type="html"><![CDATA[<h2 id="读写分离软件">读写分离软件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Atlas是由 Qihoo 360公司Web平台部基础架构团队开发维护的一个基于MySQL协议的数据中间层项 目。它在MySQL官方推出的MySQL-Proxy 0.8.2版本的基础上，修改了大量bug，添加了很多功能特 性。目前该项目在360公司内部得到了广泛应用，很多MySQL业务已经接入了Atlas平台，每天承载的读 写请求数达几十亿条。同时，有超过50家公司在生产环境中部署了Atlas，超过800人已加入了我们的开 发者交流群，并且这些数字还在不断增加。</span><br><span class="line"></span><br><span class="line">mysql-proxy</span><br><span class="line">Atlas：阿里</span><br><span class="line">Atlas：360</span><br><span class="line">mycat</span><br></pre></td></tr></table></figure><p>Atlas功能</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1.读写分离</span><br><span class="line">2.从库负载均衡</span><br><span class="line">3.IP过滤</span><br><span class="line">4.自动分表</span><br><span class="line">5.DBA可平滑上下线DB</span><br><span class="line">6.自动摘除宕机的DB</span><br></pre></td></tr></table></figure><p><strong>Atlas相对于官方MySQL-Proxy的优势</strong></p><p>1.将主流程中所有 Lua 代码用C重写，Lua仅用于管理接口</p><p>2.重写网络模型、线程模型</p><p>3.实现了真正意义上的连接池</p><p>4.优化了锁机制，性能提高数十倍</p><p><img src="https://cos.lukme.top/Pic/QQ_1724851191524.png" alt="QQ_1724851191524"></p><h2 id="安装配置Atlas">安装配置Atlas</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.下载atlas</span></span><br><span class="line">[root@mha-manager ~]# wget http://test.driverzeng.com/MySQL_plugins/Atlas-2.2.1.el6.x86_64.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.安装Atlas</span></span><br><span class="line">[root@mha-manager ~]# rpm -ivh Atlas-2.2.1.el6.x86_64.rpm</span><br><span class="line">[root@mha-manager ~]# ll /usr/local/mysql-proxy/</span><br><span class="line">drwxr-xr-x 2 root root 75 Aug 28 15:54 bin <span class="comment"># 程序相关命令</span></span><br><span class="line">drwxr-xr-x 2 root root 22 Aug 28 15:54 conf <span class="comment"># 程序相关配置</span></span><br><span class="line">drwxr-xr-x 3 root root 331 Aug 28 15:54 lib <span class="comment"># 程序相关插件</span></span><br><span class="line">drwxr-xr-x 2 root root 6 Dec 17 2014 <span class="built_in">log</span> <span class="comment"># 程序相关日志</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.修改配置文件</span></span><br><span class="line">[root@db01 ~]# <span class="built_in">cat</span> /usr/local/mysql-proxy/conf/test.cnf </span><br><span class="line">[mysql-proxy]</span><br><span class="line"><span class="comment">#带#号的为非必需的配置项目</span></span><br><span class="line"><span class="comment">#管理接口的用户名</span></span><br><span class="line">admin-username = user</span><br><span class="line"></span><br><span class="line"><span class="comment">#管理接口的密码</span></span><br><span class="line">admin-password = <span class="built_in">pwd</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Atlas后端连接的MySQL主库的IP和端口，可设置多项，用逗号分隔</span></span><br><span class="line">proxy-backend-addresses = 172.16.1.51:3306</span><br><span class="line"></span><br><span class="line"><span class="comment">#Atlas后端连接的MySQL从库的IP和端口，@后面的数字代表权重，用来作负载均衡，若省略则默认为1，可设置多项，用逗号分隔</span></span><br><span class="line">proxy-read-only-backend-addresses = 172.16.1.52:3306@1,172.16.1.53:3306@1,172.16.1.54:3306@1</span><br><span class="line"></span><br><span class="line"><span class="comment">#用户名与其对应的加密过的MySQL密码，密码使用PREFIX/bin目录下的加密程序encrypt加密，下行的user1和user2为示例，将其替换为你的MySQL的用户名和加密密码！</span></span><br><span class="line">pwds = root:3yb5jEku5h4=, mha:3yb5jEku5h4=</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置Atlas的运行方式，设为true时为守护进程方式，设为false时为前台方式，一般开发调试时设为false，线上运行时设为true,true后面不能有空格。</span></span><br><span class="line">daemon = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#设置Atlas的运行方式，设为true时Atlas会启动两个进程，一个为monitor，一个为worker，monitor在worker意外退出后会自动将其重启，设为false时只有worker，没有monitor，一般开发调试时设为false，线上运行时设为true,true后面不能有空格。</span></span><br><span class="line">keepalive = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#工作线程数，对Atlas的性能有很大影响，可根据情况适当设置</span></span><br><span class="line">event-threads = 8</span><br><span class="line"></span><br><span class="line"><span class="comment">#日志级别，分为message、warning、critical、error、debug五个级别</span></span><br><span class="line">log-level = error</span><br><span class="line"></span><br><span class="line"><span class="comment">#日志存放的路径</span></span><br><span class="line">log-path = /usr/local/mysql-proxy/log</span><br><span class="line"></span><br><span class="line"><span class="comment">#SQL日志的开关，可设置为OFF、ON、REALTIME，OFF代表不记录SQL日志，ON代表记录SQL日志，REALTIME代表记录SQL日志且实时写入磁盘，默认为OFF</span></span><br><span class="line">sql-log = ON</span><br><span class="line"></span><br><span class="line"><span class="comment">#慢日志输出设置。当设置了该参数时，则日志只输出执行时间超过sql-log-slow（单位：ms)的日志记录。不设置该参数则输出全部日志。</span></span><br><span class="line"><span class="comment">#sql-log-slow = 10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#实例名称，用于同一台机器上多个Atlas实例间的区分</span></span><br><span class="line"><span class="comment">#instance = test</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Atlas监听的工作接口IP和端口</span></span><br><span class="line">proxy-address = 0.0.0.0:1234</span><br><span class="line"></span><br><span class="line"><span class="comment">#Atlas监听的管理接口IP和端口</span></span><br><span class="line">admin-address = 0.0.0.0:2345</span><br><span class="line"></span><br><span class="line"><span class="comment">#分表设置，此例中person为库名，mt为表名，id为分表字段，3为子表数量，可设置多项，以逗号分隔，若不分表则不需要设置该项</span></span><br><span class="line"><span class="comment">#tables = person.mt.id.3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#默认字符集，设置该项后客户端不再需要执行SET NAMES语句</span></span><br><span class="line">charset = utf8</span><br><span class="line"></span><br><span class="line"><span class="comment">#允许连接Atlas的客户端的IP，可以是精确IP，也可以是IP段，以逗号分隔，若不设置该项则允许所有IP连接，否则只允许列表中的IP连接</span></span><br><span class="line">client-ips = 127.0.0.1, 172.16.1</span><br><span class="line"></span><br><span class="line"><span class="comment">#Atlas前面挂接的LVS的物理网卡的IP(注意不是虚IP)，若有LVS且设置了client-ips则此项必须设置，否则可以不设置</span></span><br><span class="line"><span class="comment">#lvs-ips = 192.168.1.1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#4.启动Atlas</span></span><br><span class="line">[root@mha ~]# /usr/local/mysql-proxy/bin/mysql-proxyd <span class="built_in">test</span> start</span><br></pre></td></tr></table></figure><h2 id="Atlas管理接口使用">Atlas管理接口使用</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 连接管理接口</span></span><br><span class="line">[root@mha-manager ~]# mysql -uuser -ppwd -h127.0.0.1 -P2345</span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看帮助</span></span><br><span class="line">mysql&gt; <span class="keyword">select</span> * from <span class="built_in">help</span>;</span><br><span class="line">db01 [(none)]&gt;<span class="keyword">select</span> * from <span class="built_in">help</span>;</span><br><span class="line">+----------------------------+---------------------------------------------------------+</span><br><span class="line">| <span class="built_in">command</span>                    | description                                             |</span><br><span class="line">+----------------------------+---------------------------------------------------------+</span><br><span class="line">| SELECT * FROM <span class="built_in">help</span>         | 查看帮助</span><br><span class="line">| SELECT * FROM backends     | 查看后端数据库</span><br><span class="line">| SET OFFLINE <span class="variable">$backend_id</span>    | 下线数据库 <span class="built_in">set</span> offline 2;</span><br><span class="line">| SET ONLINE <span class="variable">$backend_id</span>     | 上线数据库 <span class="built_in">set</span> online 2;</span><br><span class="line">| ADD MASTER <span class="variable">$backend</span>        | 添加一个主库 add master 172.16.1.88:3306;</span><br><span class="line">| ADD SLAVE <span class="variable">$backend</span>         | 添加一个从库 add slave 172.16.1.77:3306;</span><br><span class="line">| REMOVE BACKEND <span class="variable">$backend_id</span> | 删除后端数据库 remove backend 2;</span><br><span class="line">| SELECT * FROM clients      | 查看可连接的客户端 <span class="keyword">select</span> * from clients</span><br><span class="line">| ADD CLIENT <span class="variable">$client</span>         | 添加一个可连接atlas的客户端 add client 10.0.0;</span><br><span class="line">| REMOVE CLIENT <span class="variable">$client</span>      | 删除客户端 remove client 10.0.0 </span><br><span class="line">| SELECT * FROM pwds         | 查看所有可连接atlas的用户和密码 <span class="keyword">select</span> * from pwds;</span><br><span class="line">| ADD PWD <span class="variable">$pwd</span>               | 添加一个明文的密码用户 add <span class="built_in">pwd</span> mha:mha;</span><br><span class="line">| ADD ENPWD <span class="variable">$pwd</span>             | 添加一个加密的密码用户 add enpwd tls:O2jBXONX098=;</span><br><span class="line">| REMOVE PWD <span class="variable">$pwd</span>            | 删除用户 remove <span class="built_in">pwd</span> zls;</span><br><span class="line">| SAVE CONFIG                | 保存配置文件</span><br><span class="line">| SELECT VERSION             | 查看atlas版本号</span><br><span class="line">+----------------------------+---------------------------------------------------------+</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看后端数据库   ----rw 主库   ----ro从库</span></span><br><span class="line">db01 [(none)]&gt;<span class="keyword">select</span> * from backends;</span><br><span class="line">+-------------+------------------+-------+------+</span><br><span class="line">| backend_ndx | address          | state | <span class="built_in">type</span> |</span><br><span class="line">+-------------+------------------+-------+------+</span><br><span class="line">|           1 | 172.16.1.51:3306 | up    | rw   |</span><br><span class="line">|           2 | 172.16.1.52:3306 | up    | ro   |</span><br><span class="line">|           3 | 172.16.1.53:3306 | up    | ro   |</span><br><span class="line">|           4 | 172.16.1.54:3306 | up    | ro   |</span><br><span class="line">+-------------+------------------+-------+------+</span><br><span class="line"></span><br><span class="line"><span class="comment"># 平滑下线DB</span></span><br><span class="line">mysql&gt; <span class="built_in">set</span> offline 2;</span><br><span class="line"><span class="comment"># 平滑上线</span></span><br><span class="line">mysql&gt; <span class="built_in">set</span> online 2;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Atlas结合MHA脚本">Atlas结合MHA脚本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">mha_log=<span class="string">&quot;/etc/mha/logs/manager.log&quot;</span></span><br><span class="line">down_master=$(sed -nr <span class="string">&#x27;s#(.*)\(.*\) \(current master\)$#\1#gp&#x27;</span> <span class="variable">$&#123;mha_log&#125;</span>|tail-1)</span><br><span class="line">new_master=$(sed -nr <span class="string">&#x27;s#(.*)\(.*\) \(new master\)$#\1#gp&#x27;</span> /etc/mha/logs/manager.log|<span class="built_in">tail</span> -1)</span><br><span class="line"></span><br><span class="line">atlas_manager_user=<span class="string">&#x27;user&#x27;</span></span><br><span class="line">atlas_manager_password=<span class="string">&#x27;pwd&#x27;</span></span><br><span class="line">atlas_manager_port=<span class="string">&#x27;2345&#x27;</span></span><br><span class="line">atlas_conn=<span class="string">&quot;mysql -u<span class="variable">$&#123;atlas_manager_user&#125;</span> -p<span class="variable">$&#123;atlas_manager_password&#125;</span> -P<span class="variable">$&#123;atlas_manager_port&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> atlas_ip <span class="keyword">in</span> 51 52 53 54;<span class="keyword">do</span></span><br><span class="line">  down_master_backend_id=$(<span class="variable">$&#123;atlas_conn&#125;</span> -h172.16.1.<span class="variable">$&#123;atlas_ip&#125;</span> -e <span class="string">&#x27;select * from backends&#x27;</span>|grep <span class="string">&quot;<span class="variable">$&#123;new_master&#125;</span>&quot;</span>|awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>)</span><br><span class="line">  <span class="variable">$&#123;atlas_conn&#125;</span> -h172.16.1.<span class="variable">$&#123;atlas_ip&#125;</span> -e <span class="string">&quot;remove backend <span class="variable">$&#123;down_master_backend_id&#125;</span>&quot;</span> </span><br><span class="line">  <span class="variable">$&#123;atlas_conn&#125;</span> -h172.16.1.<span class="variable">$&#123;atlas_ip&#125;</span> -e <span class="string">&quot;add slave <span class="variable">$&#123;down_master&#125;</span>:3306;save config&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@mha-manager ~]# vim /etc/mha/app1/master_ip_failover</span><br><span class="line">sub <span class="function"><span class="title">start_vip</span></span>() &#123;</span><br><span class="line">`ssh <span class="variable">$ssh_user</span>\@<span class="variable">$new_master_host</span> \&quot; <span class="variable">$ssh_start_vip</span> \&quot;`;</span><br><span class="line">`/bin/sh -x \&quot;/root/atlas_mha.sh\&quot;`;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">mysqladmin  -umha -pmha -h172.16.1.55 ping</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本文介绍了MySQL读写分离软件Atlas的部署</summary>
    
    
    
    <category term="MySQL" scheme="https://lukme.top/categories/MySQL/"/>
    
    
    <category term="MySQL" scheme="https://lukme.top/tags/MySQL/"/>
    
    <category term="MHA" scheme="https://lukme.top/tags/MHA/"/>
    
  </entry>
  
  <entry>
    <title>MySQL的MHA高可用</title>
    <link href="https://lukme.top/posts/df39ce32.html"/>
    <id>https://lukme.top/posts/df39ce32.html</id>
    <published>2024-08-15T15:10:10.000Z</published>
    <updated>2024-08-15T15:14:05.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MHA介绍及组成">MHA介绍及组成</h2><h3 id="MHA介绍">MHA介绍</h3><p>​MHA能够在较短的时间内实现自动故障检测和故障转移，通常在10-30秒以内;在复制框架中，MHA能够很好地解决复制过程中的数据一致性问题，由于不需要在现有的replication中添加额外的服务器，仅需要一个manager节点，而一个Manager能管理多套复制，所以能大大地节约服务器的数量;另外，安装简单，无性能损耗，以及不需要修改现有的复制部署也是它的优势之处。</p><p>MHA还提供在线主库切换的功能，能够安全地切换当前运行的主库到一个新的主库中(通过将从库提升为主库),大概0.5-2秒内即可完成。</p><h3 id="MHA的组成部分">MHA的组成部分</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">`MHA Manager（管理节点）`</span><br><span class="line">可以单独部署在一台独立的机器上管理多个master-slave集群，也可以部署在一台slave上。</span><br><span class="line"></span><br><span class="line">`MHA Node（数据节点）`</span><br><span class="line">运行在每台MySQL服务器上   MHA Manager 会定时探测集群中的master节点，当master出现故障时，它可以自动将最新数据的slave提升为新的master；然后将所有其他的slave重新指向新的master，整个故障转移过程对应用程序是完全透明的；</span><br></pre></td></tr></table></figure><h3 id="MHA软件结构介绍">MHA软件结构介绍</h3><table><thead><tr><th>节点信息</th><th>软件组件</th><th>作用介绍</th></tr></thead><tbody><tr><td>MHA Manager（管理节点）</td><td>masterha_manger</td><td>用于启动MHA</td></tr><tr><td></td><td>masterha_check_ssh</td><td>用于检查MHA的SSH配置互信状况</td></tr><tr><td></td><td>masterha_check_repl</td><td>用于检查MySQL复制状态，以及配置信息</td></tr><tr><td></td><td>masterha_master_monitor</td><td>用于检测master是否宕机</td></tr><tr><td></td><td>masterha_check_status</td><td>用于检测当前MHA运行状态</td></tr><tr><td></td><td>masterha_master_switch</td><td>用于控制故障转移（自动或者手动）</td></tr><tr><td></td><td>masterha_conf_host</td><td>添加或删除配置的server信息</td></tr><tr><td>MHA Node（数据节点）</td><td>save_binary_logs</td><td>保存和复制master的二进制日志</td></tr><tr><td></td><td>apply_diff_relay_logs</td><td>识别差异的中继日志事件并将其差异的事件应用于其他slave</td></tr><tr><td></td><td>purge_relay_logs</td><td>清除中继日志（不会阻塞SQL线程）</td></tr></tbody></table><h2 id="MHA的工作的原理">MHA的工作的原理</h2><p><img src="https://cos.lukme.top/Pic/QQ_1724757765903.png" alt="QQ_1724757765903"></p><p>:dango:<strong>MHA的设计原理分析（Failover 过程）</strong></p><h3 id="1-MHA软件启动">1.MHA软件启动</h3><p>根据启动命令，分析MHA软件启动原理：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">nohup</span> masterha_manager --conf=/etc/mha/app1.cnf --remove_dead_master_conf --ignore_last_failover  &lt; /dev/null &gt; /var/log/mha/app1/manager.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><p>根据以上启动命令，需要先调取MHA启动脚本文件<code>masterha_manager</code> ，</p><p><code>--conf=.../app1.cnf</code> 会根据加载的MHA的配置文件不同，实现管理多个高可用架构环境，进行高可用业务的架构环境的区分；</p><p><code>--remove_dead_master_conf</code>参数表示在主节点出现宕机情况时，将会从集群中被踢出，即从配置文件中删除掉故障节点；</p><p><code>--ignore_last_failover</code> 默认MHA服务是不能频繁进行故障切换的，需要有一定的间隔时间，加此参数表示忽略切换的间隔时间；</p><p><code>/var/log/mha/app1/manager.log 2&gt;&amp;1</code>最后将MHA启动运行的信息放入到日志文件中即可</p><p>:dango:<strong>补充</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">补充说明：--ignore_last_failover</span><br><span class="line"></span><br><span class="line">【官方解释】</span><br><span class="line">If the previous failover failed, MHA does not start failover because the problem might happen again. The normal step to start failover is manually remove failover error file <span class="built_in">which</span> is created under (manager_workdir)/(app_name).failover.error .By setting --ignore_last_failover, MHA continues failover regardless of the last failover status.</span><br><span class="line"></span><br><span class="line">如果上一次高可用功能失败，MHA不会再启动高可用功能，因为这个问题可能会再次出现。后续再想启动故障转移的正常步骤是手动删除故障转移错误文件，错误文件会在manager_workdir目录下，创建一个名为app_name.failover.error的文件。对于设置--ignore_last_failover，表示无论上次故障切换状态如何，MHA都会继续进行启动故障切换功能</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">在缺省情况下，如果 MHA 检测到连续发生宕机，且两次宕机间隔不足 8 小时的话，则不会进行 Failover；之所以这样限制是为了避免 ping-pong 效应。该参数代表忽略上次 MHA 触发切换产生的文件；默认情况下，MHA 发生切换后会在日志记录，在日志目录中会生成 app1.failover.complete 文件；下次再次切换的时候如果发现该目录下存在该文件将不允许触发切换，除非在第一次切换后删除该文件；</span><br><span class="line"></span><br><span class="line">`官方默认8小时之内不能再次执行切换主库，除非删除锁文件  设置的工作目录下的*.failover.error文件`</span><br></pre></td></tr></table></figure><h3 id="2-MHA实现监控">2.MHA实现监控</h3><p>利用MHA启动脚本文件<code>masterha_manager</code>会自动调用监控脚本文件<code>masterha_master_monitor</code>，并且每隔配置文件指定时间；</p><p><code>ping_interval=2</code> 进行脚本监控一次，从而判断主节点是否处于存活状态，连续4次还没有主库心跳，即说明主库宕机；</p><figure class="highlight plaintext"><figcaption><span>wiki</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 监控脚本验证主节点存活方法</span><br><span class="line">[root@xiaoQ-03 ~]# mysql -umha -pmha -h192.168.30.101 -e &quot;select user();&quot;</span><br><span class="line">mysql: [Warning] Using a password on the command line interface can be insecure.</span><br><span class="line">+-----------------+</span><br><span class="line">| user()          |</span><br><span class="line">+-----------------+</span><br><span class="line">| mha@172.16.1.51 |</span><br><span class="line">+-----------------+</span><br></pre></td></tr></table></figure><h3 id="3-MHA选主过程">3.MHA选主过程</h3><p>在MHA中进行选主时，根据选主源码文件信息分析，主要会利用到四个数组：alive latest pref bad，并且会识别节点编号信息；</p><p>在进行选主时，主要会关注竞选新主节点的日志量、以及是否设置candidate_master参数配置信息；</p><table><thead><tr><th>数组信息</th><th>简述</th><th>作用说明</th></tr></thead><tbody><tr><td>alive</td><td>存活数组</td><td>主要用于探测存活的节点状态；当主库宕机后，探测的就是两个从库节点</td></tr><tr><td>latest</td><td>最新数组</td><td>表示获取日志最新的从库信息，即数据量最接近主库的从库（根据GTID信息 或 position信息）</td></tr><tr><td>pref</td><td>备选数组</td><td>在数组中具有candidate_master参数判断条件，此参数可以放入配置文件节点中，便于节点优先选择为新主</td></tr><tr><td>bad</td><td>不选数组</td><td>如果设定了参数：no_master=1，表示相应节点不参与竞选主；<br>如果设定了参数：log_bin=0（二进制日志没开），表示相应节点不参与竞选主；<br>如何设定了参数：check_slave_delay，检查从库延迟主库100M数据信息日志量，表示节点不参与竞选主</td></tr></tbody></table><p>MHA选主判断总结（利用if判断选主的情况）</p><ul><li><p>循环对比latest数组和pref数组的slave，如果存在相同的slave，并且这个slave不在bad数组当中，该slave会被推选为新的master</p><p>DB02节点即满足latest数组信息，又满足perf数组信息，但不满足bad数据信息，即会被选为新主，有多个按照号码顺序选举；</p></li><li><p>如果pref和bad数组当中的个数为0，则选择latest数组当中的第一个slave为master；</p><p>DB02节点没有candidate_master参数配置，又没有不选数组里的三种情况配置，即db02恰好是latest，为新主；</p></li><li><p>循环对比alive数组和pref数组当中的slaves，如果有一个slave相同，并且不在bad数组当中，该节点就会成为新的master；</p><p>DB02节点即不满足latest，也不满足bad，但是满足pref，也会被选择作为新主；</p></li><li><p>循环latest数组，如果又循环到slave不在bad数组当中，这个slave就会成为master，就算添加了candidate_master=1参数；</p><p>该slave也不一定会成为主库；</p><p>DB02节点即满足latest数组，不是bad数组，也会成为新的主；</p></li><li><p>从活着的slave当中进行循环，如果循环到slave不在bad数组当中，那么这个slave就会成为主库；</p><p>DB02节点是活着的，不满足bad，也可以成为新的主；</p></li><li><p>如果进行了多次选择都找不到主库，那么主库选择失败，failover失败；</p></li></ul><p>选主策略简述表：</p><table><thead><tr><th>优先级</th><th>alive数组</th><th>latest数组</th><th>pref数组</th><th>bad数组</th><th>选主策略</th><th>多个选择情况</th></tr></thead><tbody><tr><td>01</td><td><code>满足</code></td><td><code>满足</code></td><td><code>满足</code></td><td>不满足</td><td>优选选择</td><td>按照节点号码顺序选择</td></tr><tr><td>02</td><td><code>满足</code></td><td><code>满足</code></td><td>不满足</td><td>不满足</td><td>优选选择</td><td>按照节点号码顺序选择</td></tr><tr><td>03</td><td><code>满足</code></td><td>不满足</td><td><code>满足</code></td><td>不满足</td><td>优选选择</td><td>按照节点号码顺序选择</td></tr><tr><td>04</td><td><code>满足</code></td><td>不满足</td><td>不满足</td><td>不满足</td><td>优选活着节点</td><td>按照节点号码顺序选择</td></tr></tbody></table><blockquote><p>说明：在进行手工指定切换新主时，即应用了prio_new_master_host参数信息时，会最优先选择相应节点为新主；</p><p>一般情况下是：根据mha配置文件里server后的数值小的切换</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[server1]</span><br><span class="line">hostname=10.0.0.51</span><br><span class="line">port=3306</span><br><span class="line">[server2]</span><br><span class="line">hostname=10.0.0.52</span><br><span class="line">port=3306</span><br></pre></td></tr></table></figure></blockquote><h3 id="4-MHA数据补偿">4.MHA数据补偿</h3><p>在进行数据补偿之前，需要让新主库与原有宕机主库进行对比，获悉需要补偿的数据量情况，即对比差的数据日志量信息；</p><p>然后可以从binlog日志中，进行补充数据信息的截取，随之进行数据信息补偿，但是有种特殊情况，若原有主库无法访问了；</p><p>所以进行数据补偿操作，也需要分各种情景进行处理：</p><ul><li><p>原主库SSH连接正常：</p><p>各个从节点自动调用：<code>save_binary_logs</code>脚本文件，立即保存缺失部分的bin_log，到各节点/var/tmp/目录；</p></li><li><p>原主库SSH连接异常：</p><p>各个从节点自动调用：<code>apply_diff_relay_logs</code>脚本文件，进行relay_log日志差异信息补偿；</p></li><li><p>额外特殊数据补充：（利用主库日志冗余机制）</p><p>MHA提供了binlog_server功能，可以实时拉取主库的binlog日志到备份节点，从而进行数据额外补偿；</p></li></ul><h3 id="5-MHA业务切换">5.MHA业务切换</h3><p>自动解除原有的主从关系，实现新的主从关系的建立；</p><figure class="highlight plaintext"><figcaption><span>wiki</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 所有从库解除主从关系操作</span><br><span class="line">stop slave;</span><br><span class="line">reset slave;</span><br><span class="line"></span><br><span class="line"># 所有从库重构主从关系操作</span><br><span class="line">change master to ...</span><br></pre></td></tr></table></figure><h3 id="6-MHA应用透明">6.MHA应用透明</h3><p>实现MHA的VIP功能，利用脚本实现，上传mha_script.tar文件到/usr/local/bin目录中，然后进行解压处理；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"># 上传MHA所需的脚本文件</span><br><span class="line">[root@xiaoQ-03 ~]# cd /usr/local/bin/</span><br><span class="line">[root@xiaoQ-03 bin]# chmod +x /usr/local/bin/*</span><br><span class="line"></span><br><span class="line"># 修改MHA脚本文件的信息</span><br><span class="line">[root@xiaoQ-03 bin]# cp master_ip_failover master_ip_failover.bak</span><br><span class="line">[root@xiaoQ-03 bin]# dos2unix /usr/local/bin/*</span><br><span class="line">[root@xiaoQ-03 bin]# vim master_ip_failover</span><br><span class="line">13 my $vip = &#x27;192.168.30.110/24&#x27;;</span><br><span class="line">14 my $key = &#x27;1&#x27;;</span><br><span class="line">15 my $if = &#x27;eth0&#x27;;</span><br><span class="line">16 my $ssh_start_vip = &quot;/sbin/ifconfig $if:$key $vip&quot;;</span><br><span class="line">17 my $ssh_stop_vip = &quot;/sbin/ifconfig $if:$key down&quot;;</span><br><span class="line">18 my $ssh_Bcast_arp= &quot;/sbin/arping -I $if -c 3 -A 192.168.30.110&quot;;</span><br><span class="line"></span><br><span class="line"># 修改配置文件</span><br><span class="line">[root@xiaoQ-03 ~]# vim /etc/mha/app1.cnf</span><br><span class="line">master_ip_failover_script=/usr/local/bin/master_ip_failover</span><br><span class="line"></span><br><span class="line"># 重启MHA服务</span><br><span class="line">[root@xiaoQ-03 bin]# masterha_stop --conf=/etc/mha/app1.cnf</span><br><span class="line">[root@xiaoQ-03 bin]# nohup masterha_manager --conf=/etc/mha/app1.cnf --remove_dead_master_conf --ignore_last_failover  &lt; /dev/null&gt; /var/log/mha/app1/manager.log 2&gt;&amp;1 &amp;</span><br><span class="line"></span><br><span class="line"># 手工在主库上添加VIP</span><br><span class="line">[root@xiaoQ-03 bin]# masterha_check_status --conf=/etc/mha/app1.cnf</span><br><span class="line">app1 (pid:103046) is running(0:PING_OK), master:192.168.30.101</span><br><span class="line">-- 核实此时的MHA的主库节点</span><br><span class="line">ifconfig eth0:1 192.168.30.110/24</span><br><span class="line">-- 在主库节点手工添加vip地址信息</span><br><span class="line"></span><br><span class="line"># 进行VIP地址连接测试</span><br><span class="line">-- 可以使用navcat软件，连接MHA的vip地址，查看所连主机信息是否为主节点，当故障转移后可以核实VIP地址是否持续连接；</span><br></pre></td></tr></table></figure><blockquote><p>说明：进行MHA的VIP地址漂移时，只能在局域网环境进行漂移，不能实现跨网段的VIP地址漂移；</p></blockquote><h3 id="7-MHA故障报警">7.MHA故障报警</h3><p>实现MHA的报警功能，利用脚本实现，上传mha_script.tar文件到/usr/local/bin目录中，然后进行解压处理；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 准备脚本文件</span></span><br><span class="line">[root@xiaoQ-03 bin]# <span class="built_in">cp</span> send_report send_report.bak</span><br><span class="line">28 my <span class="variable">$smtp</span>=<span class="string">&#x27;smtp.qq.com&#x27;</span>;</span><br><span class="line">-- smtp服务器地址域名</span><br><span class="line">29 my <span class="variable">$mail_from</span>=<span class="string">&#x27;330882721@qq.com&#x27;</span>;</span><br><span class="line">-- 发件箱信息配置</span><br><span class="line">30 my <span class="variable">$mail_user</span>=<span class="string">&#x27;330882721&#x27;</span>;</span><br><span class="line">-- 用户名 QQ号</span><br><span class="line">31 my <span class="variable">$mail_pass</span>=<span class="string">&#x27;ypokkranqlgkcbba&#x27;</span>;</span><br><span class="line">-- 邮箱授权码</span><br><span class="line">32 my <span class="variable">$mail_to</span>=<span class="string">&#x27;330882721@qq.com&#x27;</span>;</span><br><span class="line">or</span><br><span class="line">my <span class="variable">$mail_to</span>=[<span class="string">&#x27;to1@qq.com&#x27;</span>,<span class="string">&#x27;to2@qq.com&#x27;</span>];</span><br><span class="line">-- 收件箱信息配置</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改配置文件</span></span><br><span class="line">[root@xiaoQ-03 ~]# vim /etc/mha/app1.cnf</span><br><span class="line">report_script=/usr/local/bin/send_report</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启MHA服务</span></span><br><span class="line">[root@xiaoQ-03 bin]# masterha_stop --conf=/etc/mha/app1.cnf</span><br><span class="line">[root@xiaoQ-03 bin]# <span class="built_in">nohup</span> masterha_manager --conf=/etc/mha/app1.cnf --remove_dead_master_conf --ignore_last_failover  &lt; /dev/null&gt; /var/log/mha/app1/manager.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><h3 id="8-MHA额外补偿">8.MHA额外补偿</h3><p>利用binlog_server作为额外的日志补偿的冗余方案，即实时保存主库的bin_log日志文件到特定节点目录中；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建日志存放目录</span></span><br><span class="line">[root@xiaoQ-03 ~]# <span class="built_in">mkdir</span> -p /data/binlog_server/</span><br><span class="line">[root@xiaoQ-03 ~]# <span class="built_in">chown</span> -R mysql.mysql /data/*</span><br><span class="line">[root@xiaoQ-03 ~]# <span class="built_in">cd</span> /data/binlog_server</span><br><span class="line">[root@xiaoQ-03 binlog_server]# mysql -e <span class="string">&quot;show slave status\G&quot;</span>|grep <span class="string">&quot;Master_Log&quot;</span></span><br><span class="line">Master_Log_File: mysql-bin.000002</span><br><span class="line">Read_Master_Log_Pos: 1201</span><br><span class="line">Relay_Master_Log_File: mysql-bin.000002</span><br><span class="line">Exec_Master_Log_Pos: 1201</span><br><span class="line">-- 拉取日志的起点，需要按照目前从库的已经获取到的二进制日志点为起点</span><br><span class="line">[root@xiaoQ-03 binlog_server]# mysqlbinlog -R --host=192.168.30.101 --user=mha --password=mha --raw --stop-never mysql-bin.000002 &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编写配置文件信息</span></span><br><span class="line">[root@xiaoQ-03 ~]# vim /etc/mha/app1.cnf</span><br><span class="line">[binlog1]</span><br><span class="line">no_master=1</span><br><span class="line">-- 不存于竞选</span><br><span class="line">hostname=192.168.30.103</span><br><span class="line">-- 将日志额外补偿到哪个主机上</span><br><span class="line">master_binlog_dir=/data/binlog_server/</span><br><span class="line">-- 日志额外补偿的存储目录</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启MHA服务</span></span><br><span class="line">[root@xiaoQ-03 bin]# masterha_stop --conf=/etc/mha/app1.cnf</span><br><span class="line">[root@xiaoQ-03 bin]# <span class="built_in">nohup</span> masterha_manager --conf=/etc/mha/app1.cnf --remove_dead_master_conf --ignore_last_failover  &lt; /dev/null&gt; /var/log/mha/app1/manager.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><h2 id="MHA搭建">MHA搭建</h2><ul><li>搭建MySQL的MHA需要保证主从复制是OK的</li></ul><p><strong>环境一览</strong></p><table><thead><tr><th style="text-align:left">主机名</th><th>WanIP</th><th>LanIP</th><th>角色</th></tr></thead><tbody><tr><td style="text-align:left">mha</td><td>10.0.0.50</td><td>172.16.1.50</td><td>MHA管理端</td></tr><tr><td style="text-align:left">db01</td><td>10.0.0.51</td><td>172.16.1.51</td><td>暂时主库，客户端</td></tr><tr><td style="text-align:left">db02</td><td>10.0.0.52</td><td>172.16.1.52</td><td>从库，MHA客户端</td></tr><tr><td style="text-align:left">db03</td><td>10.0.0.53</td><td>172.16.1.53</td><td>从库，MHA客户端</td></tr><tr><td style="text-align:left">db04</td><td>10.0.0.54</td><td>172.16.1.54</td><td>从库，MHA客户端</td></tr></tbody></table><h3 id="MHA的必要条件">MHA的必要条件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">1.主从复制OK</span><br><span class="line">2.数据库的每个节点都得有rep主从复制用户</span><br><span class="line">3.数据库每个节点要有mha用户</span><br><span class="line">4.关闭自动删除relay-log</span><br><span class="line">5.每一台都需要做免密连接</span><br><span class="line">6.做mysqld软链接</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 三台从库设置只读（临时生效）</span></span><br><span class="line">mysql&gt; <span class="built_in">set</span> global read_only=1;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 四台数据库关闭relaylog自动删除功能（临时生效）</span></span><br><span class="line">mysql&gt; <span class="built_in">set</span> global relay_log_purge = 0;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>:dango:<strong>主从复制</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1.编辑主库配置文件</span></span><br><span class="line">[root@db01 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">basedir=/app/mysql</span><br><span class="line">datadir=/app/mysql/data</span><br><span class="line">server_id=1</span><br><span class="line">log-bin=mysql-bin</span><br><span class="line">skip_name=resolve</span><br><span class="line"><span class="comment">#关闭自动删除relay-log</span></span><br><span class="line">relay_log_purge=0</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.从库配置文件的每台server_id不同即可</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#3.主库创建主从复制用户</span></span><br><span class="line">mysql&gt; grant replication slave on *.* to rep@<span class="string">&#x27;172.16.1.5%&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#主库检查bin-log位置点</span></span><br><span class="line">db01 [(none)]&gt;show master status;</span><br><span class="line">+------------------+----------+--------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB |</span><br><span class="line">+------------------+----------+--------------+</span><br><span class="line">| mysql-bin.000003 |      327 |              |</span><br><span class="line">+------------------+----------+--------------+</span><br><span class="line"></span><br><span class="line"><span class="comment">#4.所有从库执行</span></span><br><span class="line">change master to</span><br><span class="line">master_host=<span class="string">&#x27;172.16.1.51&#x27;</span>,</span><br><span class="line">master_user=<span class="string">&#x27;rep&#x27;</span>,</span><br><span class="line">master_password=<span class="string">&#x27;123&#x27;</span>,</span><br><span class="line">master_log_file=<span class="string">&#x27;mysql-bin.000003&#x27;</span>,</span><br><span class="line">master_log_pos=327,</span><br><span class="line">master_port=3306;</span><br><span class="line"></span><br><span class="line"><span class="comment">#所有从库开启主从复制</span></span><br><span class="line">mysql &gt; start slave;</span><br></pre></td></tr></table></figure><p>:dango:<strong>主库执行</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#主库执行（主从复制OK情况下）</span></span><br><span class="line"><span class="comment">#每台都有主从复制用户</span></span><br><span class="line">mysql&gt; grant replication slave on *.* to rep@<span class="string">&#x27;172.16.1.5%&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#每台都有mha用户</span></span><br><span class="line">mysql&gt; grant all on *.* to mha@<span class="string">&#x27;172.16.1.5%&#x27;</span> identified by <span class="string">&#x27;mha&#x27;</span>;</span><br></pre></td></tr></table></figure><p>:dango:<strong>互信免密</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#可以执行脚本，每一台都需要免密（注意修改密码 -p 1 ）</span></span><br><span class="line">[root@db01 ~]# <span class="built_in">cat</span> push_public_key.sh </span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">yum -y install sshpass</span><br><span class="line"><span class="built_in">test</span> -f ~/.ssh/id_rsa || ssh-keygen -t rsa -P <span class="string">&#x27;&#x27;</span> -f ~/.ssh/id_rsa &gt;/dev/null 2&gt;&amp;1</span><br><span class="line"><span class="keyword">for</span> ip <span class="keyword">in</span> 50 51 52 53 54;<span class="keyword">do</span></span><br><span class="line">ping -c1 -W1 172.16.1.<span class="variable">$ip</span> &amp;&gt;/dev/null</span><br><span class="line">[ $? -eq 0 ] &amp;&amp;\</span><br><span class="line">sshpass -p 1 ssh-copy-id -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa.pub root@172.16.1.<span class="variable">$ip</span> &amp;&gt;/dev/null &amp;&amp;\</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;172.16.1.<span class="variable">$ip</span> 推送成功...&quot;</span> ||\</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;172.16.1.<span class="variable">$ip</span> 推送失败...&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#不用脚本</span></span><br><span class="line"><span class="comment">## 生成密钥对</span></span><br><span class="line">[root@db01 ~]# ssh-keygen -t dsa -P <span class="string">&#x27;&#x27;</span> -f ~/.ssh/id_dsa &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">[root@db02 ~]# ssh-keygen -t dsa -P <span class="string">&#x27;&#x27;</span> -f ~/.ssh/id_dsa &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">[root@db03 ~]# ssh-keygen -t dsa -P <span class="string">&#x27;&#x27;</span> -f ~/.ssh/id_dsa &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">[root@db04 ~]# ssh-keygen -t dsa -P <span class="string">&#x27;&#x27;</span> -f ~/.ssh/id_dsa &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">[root@mha-manager ~]# ssh-keygen -t dsa -P <span class="string">&#x27;&#x27;</span> -f ~/.ssh/id_dsa &gt;/dev/null 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 推送公钥（每一台都需要执行，sshpass需要安装，不然需要交互）</span></span><br><span class="line">[root@db01 ~]# sshpass -p 1 ssh-copy-id -i ~/.ssh/id_dsa.pub root@172.16.1.50</span><br><span class="line">[root@db01 ~]# sshpass -p 1 ssh-copy-id -i ~/.ssh/id_dsa.pub root@172.16.1.51</span><br><span class="line">[root@db01 ~]# sshpass -p 1 ssh-copy-id -i ~/.ssh/id_dsa.pub root@172.16.1.52</span><br><span class="line">[root@db01 ~]# sshpass -p 1 ssh-copy-id -i ~/.ssh/id_dsa.pub root@172.16.1.53</span><br><span class="line">[root@db01 ~]# sshpass -p 1 ssh-copy-id -i ~/.ssh/id_dsa.pub root@172.16.1.54</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#所以用脚本吧</span></span><br></pre></td></tr></table></figure><p>:dango:<strong>命令软链接</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 ~]# <span class="built_in">ln</span> -s /app/mysql/bin/mysqlbinlog /usr/bin/mysqlbinlog</span><br><span class="line">[root@db01 ~]# <span class="built_in">ln</span> -s /app/mysql/bin/mysql /usr/bin/mysql</span><br><span class="line"></span><br><span class="line">[root@db02 ~]# <span class="built_in">ln</span> -s /app/mysql/bin/mysqlbinlog /usr/bin/mysqlbinlog</span><br><span class="line">[root@db02 ~]# <span class="built_in">ln</span> -s /app/mysql/bin/mysql /usr/bin/mysql</span><br><span class="line"></span><br><span class="line">[root@db03 ~]# <span class="built_in">ln</span> -s /app/mysql/bin/mysqlbinlog /usr/bin/mysqlbinlog</span><br><span class="line">[root@db03 ~]# <span class="built_in">ln</span> -s /app/mysql/bin/mysql /usr/bin/mysql</span><br><span class="line"></span><br><span class="line">[root@db04 ~]# <span class="built_in">ln</span> -s /app/mysql/bin/mysqlbinlog /usr/bin/mysqlbinlog</span><br><span class="line">[root@db04 ~]# <span class="built_in">ln</span> -s /app/mysql/bin/mysql /usr/bin/mysql</span><br></pre></td></tr></table></figure><h3 id="部署MHA客户端">部署MHA客户端</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#MySQL 5.6版本可以使用node0.56版本</span></span><br><span class="line">[root@db01 ~]# wget http://test.driverzeng.com/MySQL_plugins/mha4mysql-node-0.56-0.el6.noarch.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment">#MySQL 5.7及以上建议使用node0.58版本</span></span><br><span class="line">[root@db01 ~]# wget https://github.com/yoshinorim/mha4mysql-node/releases/download/v0.58/mha4mysql-node-0.58-0.el7.centos.noarch.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment">#将node传到其它机器</span></span><br><span class="line">[root@db01 ~]# scp mha4mysql-node-0.56-0.el6.noarch.rpm 10.0.0.50:/root</span><br><span class="line">[root@db01 ~]# scp mha4mysql-node-0.56-0.el6.noarch.rpm 10.0.0.52:/root</span><br><span class="line">[root@db01 ~]# scp mha4mysql-node-0.56-0.el6.noarch.rpm 10.0.0.53:/root</span><br><span class="line">[root@db01 ~]# scp mha4mysql-node-0.56-0.el6.noarch.rpm 10.0.0.54:/root</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装node（每个节点都做）</span></span><br><span class="line">[root@db01 ~]# yum -y localinstall mha4mysql-node-0.56-0.el6.noarch.rpm</span><br><span class="line">[root@db02 ~]# yum -y localinstall mha4mysql-node-0.56-0.el6.noarch.rpm</span><br><span class="line">[root@db03 ~]# yum -y localinstall mha4mysql-node-0.56-0.el6.noarch.rpm</span><br><span class="line">[root@db04 ~]# yum -y localinstall mha4mysql-node-0.56-0.el6.noarch.rpm</span><br><span class="line">[root@mha ~]# yum -y localinstall mha4mysql-node-0.56-0.el6.noarch.rpm</span><br></pre></td></tr></table></figure><h3 id="部署MHA管理端">部署MHA管理端</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.创建配置文件存放目录</span></span><br><span class="line">[root@mha-manager ~]# <span class="built_in">mkdir</span> /etc/mha</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.编写配置文件</span></span><br><span class="line">[root@mha-manager ~]# vim /etc/mha/app1.cnf</span><br><span class="line">[server default]</span><br><span class="line">manager_log=/etc/mha/logs/manager.log</span><br><span class="line">manager_workdir=/etc/mha/app1</span><br><span class="line">master_binlog_dir=/app/mysql/data</span><br><span class="line">user=mha</span><br><span class="line">password=mha</span><br><span class="line">ping_interval=2</span><br><span class="line">repl_user=rep</span><br><span class="line">repl_password=123</span><br><span class="line">ssh_user=root</span><br><span class="line">ssh_port=22</span><br><span class="line"></span><br><span class="line">[server1]</span><br><span class="line"><span class="comment">#candidate_master=1</span></span><br><span class="line"><span class="comment">#check_repl_delay=0</span></span><br><span class="line">hostname=172.16.1.51</span><br><span class="line">port=3306</span><br><span class="line"></span><br><span class="line">[server2]</span><br><span class="line"><span class="comment">#candidate_master=1</span></span><br><span class="line"><span class="comment">#check_repl_delay=0</span></span><br><span class="line">hostname=172.16.1.52</span><br><span class="line">port=3306</span><br><span class="line"></span><br><span class="line">[server3]</span><br><span class="line">hostname=172.16.1.53</span><br><span class="line">port=3306</span><br><span class="line"></span><br><span class="line">[server4]</span><br><span class="line">hostname=172.16.1.54</span><br><span class="line">port=3306</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.创建MHA管理用户</span></span><br><span class="line">mysql&gt; grant all on *.* to mha@<span class="string">&#x27;172.16.1.5%&#x27;</span> identified by <span class="string">&#x27;mha&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.日志和工作目录目录创建</span></span><br><span class="line">[root@mha-manager ~]# <span class="built_in">mkdir</span> -p /etc/mha/&#123;logs,app1&#125;</span><br><span class="line">[root@mha-manager ~]# ll /etc/mha/</span><br><span class="line">total 4</span><br><span class="line">drwxr-xr-x 2 root root 6 Aug 27 12:20 app1</span><br><span class="line">-rw-r--r-- 1 root root 457 Aug 27 12:16 app1.cnf</span><br><span class="line">drwxr-xr-x 2 root root 6 Aug 27 12:19 logs</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.检测MHA ssh免密</span></span><br><span class="line">[root@mha-manager ~]# masterha_check_ssh --conf=/etc/mha/app1.cnf</span><br><span class="line">All SSH connection tests passed successfully.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6.检测MHA 主从复制</span></span><br><span class="line">[root@mha-manager ~]# masterha_check_repl --conf=/etc/mha/app1.cnf</span><br><span class="line">MySQL Replication Health is OK.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7.启动MHA</span></span><br><span class="line"><span class="built_in">nohup</span> masterha_manager --conf=/etc/mha/app1.cnf --remove_dead_master_conf --ignore_last_failover &lt; /dev/null &gt; /etc/mha/logs/manager.log 2&gt;&amp;1 &amp;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">`masterha_manager：`启动命令</span><br><span class="line">--conf=/etc/mha/app1.cnf：指定配置文件</span><br><span class="line">--remove_dead_master_conf：做完切换后，从配置文件中摘除宕机的主库</span><br><span class="line">--ignore_last_failover：忽略上一次切换</span><br><span class="line"></span><br><span class="line"><span class="comment"># MHA切换机制：</span></span><br><span class="line">1.MHA在做一次切换后，生成一个锁文件（app1.failover.complete），在工作目录下，8个小时之内，无法做第二次切换</span><br><span class="line">2.MHA切换完成后，会自动结束MHA的进程</span><br><span class="line">3.在所有从库数据相同时，MHA会选择配置文件中标签<span class="built_in">id</span>最小的切换</span><br><span class="line"></span><br><span class="line"><span class="comment"># 8.启动后检测</span></span><br><span class="line">[root@mha-manager ~]# masterha_check_status --conf=/etc/mha/app1.cnf</span><br><span class="line">app1 (pid:19524) is running(0:PING_OK), master:172.16.1.51</span><br><span class="line"></span><br><span class="line"><span class="comment">## 使用systemd管理mha</span></span><br><span class="line">[root@mha-manager ~]# vim /usr/lib/systemd/system/mha.service</span><br><span class="line">[Unit]</span><br><span class="line">Description=MHA</span><br><span class="line">After=network.target sshd-keygen.service</span><br><span class="line">Wants=sshd-keygen.service</span><br><span class="line">[Service]</span><br><span class="line">Type=sample</span><br><span class="line">ExecStart=/usr/bin/masterha_manager --conf=/etc/mha/app1.cnf --</span><br><span class="line">remove_dead_master_conf --ignore_last_failover &gt; /etc/mha/logs/manager.log</span><br><span class="line">ExecStop=/usr/bin/masterha_stop --conf=/etc/mha/app1.cnf</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="MHA配置文件详解-dango">MHA配置文件详解:dango:</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">[server default]</span><br><span class="line"><span class="comment">#设置manager的工作目录</span></span><br><span class="line">manager_workdir=/var/log/masterha/app1</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置manager的日志</span></span><br><span class="line">manager_log=/var/log/masterha/app1/manager.log </span><br><span class="line"></span><br><span class="line"><span class="comment">#设置master 保存binlog的位置，以便MHA可以找到master的日志，我这里的也就是mysql的数据目录</span></span><br><span class="line">master_binlog_dir=/data/mysql</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置自动failover时候的切换脚本</span></span><br><span class="line">master_ip_failover_script= /usr/local/bin/master_ip_failover</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置手动切换时候的切换脚本</span></span><br><span class="line">master_ip_online_change_script= /usr/local/bin/master_ip_online_change</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置mysql中root用户的密码，这个密码是前文中创建监控用户的那个密码</span></span><br><span class="line">password=1</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置监控用户root</span></span><br><span class="line">user=root</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置监控主库，发送ping包的时间间隔，尝试三次没有回应的时候自动进行failover</span></span><br><span class="line">ping_interval=1</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置远端mysql在发生切换时binlog的保存位置</span></span><br><span class="line">remote_workdir=/tmp</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置复制用户的密码</span></span><br><span class="line">repl_password=123</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置复制环境中的复制用户名 </span></span><br><span class="line">repl_user=rep</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置发生切换后发送的报警的脚本</span></span><br><span class="line">report_script=/usr/local/send_report</span><br><span class="line"></span><br><span class="line"><span class="comment">#一旦MHA到server02的监控之间出现问题，MHA Manager将会尝试从server03登录到server02</span></span><br><span class="line">secondary_check_script= /usr/local/bin/masterha_secondary_check -s server03 -s server02 --user=root --master_host=server02 --master_ip=192.168.0.50 --master_port=3306</span><br><span class="line"><span class="comment">#设置故障发生后关闭故障主机脚本（该脚本的主要作用是关闭主机放在发生脑裂,这里没有使用）</span></span><br><span class="line">shutdown_script=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="comment">#设置ssh的登录用户名</span></span><br><span class="line">ssh_user=root </span><br><span class="line">[server1]</span><br><span class="line">hostname=10.0.0.51</span><br><span class="line">port=3306</span><br><span class="line">[server2]</span><br><span class="line">hostname=10.0.0.52</span><br><span class="line">port=3306</span><br><span class="line"><span class="comment">#设置为候选master，如果设置该参数以后，发生主从切换以后将会将此从库提升为主库，即使这个主库不是集群中事件最新的slave。</span></span><br><span class="line">candidate_master=1</span><br><span class="line"><span class="comment">#默认情况下如果一个slave落后master 100M的relay logs的话，MHA将不会选择该slave作为一个新的master，因为对于这个slave的恢复需要花费很长时间，通过设置check_repl_delay=0,MHA触发切换在选择一个新的master的时候将会忽略复制延时，这个参数对于设置了candidate_master=1的主机非常有用，因为这个候选主在切换的过程中一定是新的master</span></span><br><span class="line">check_repl_delay=0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="comment">#一旦MHA到server02的监控之间出现问题，MHA Manager将会尝试从server03登录到server02</span></span><br><span class="line">secondary_check_script= /usr/local/bin/masterha_secondary_check -s server03 -s </span><br><span class="line">server02 --user=root --master_host=server02 --master_ip=192.168.0.50 --</span><br><span class="line">master_port=3306</span><br><span class="line"></span><br><span class="line"> <span class="comment">#设置故障发生后关闭故障主机脚本（该脚本的主要作用是关闭主机放在发生脑裂,这里没有使用）</span></span><br><span class="line">shutdown_script=<span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">#设置ssh的登录用户名</span></span><br><span class="line">ssh_user=root </span><br><span class="line"></span><br><span class="line">[server1]</span><br><span class="line">hostname=10.0.0.51</span><br><span class="line">port=3306</span><br><span class="line"></span><br><span class="line">[server2]</span><br><span class="line">hostname=10.0.0.52</span><br><span class="line">port=3306</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置为候选 master，如果设置该参数以后，发生主从切换以后将会将此从库提升为主库，即使这个主库不是集群中事件最新的 slave。</span></span><br><span class="line">candidate_master=1</span><br><span class="line"></span><br><span class="line"><span class="comment">#默认情况下如果一个 slave 落后 master 100M 的 relay logs 的话，MHA 将不会选择该 slave 作为一个新的 master，因为对于这个 slave 的恢复需要花费很长时间，通过设置 check_repl_delay=0,MHA 触发切换在选择一个新的 master 的时候将会忽略复制延时，这个参数对于设置了 candidate_master=1 的主机非常有用，因为这个候选主在切换的过程中一定是新的 master</span></span><br><span class="line">check_repl_delay=0</span><br></pre></td></tr></table></figure><h3 id="切换日志–注意几点">切换日志–注意几点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 切换日志：</span></span><br><span class="line"><span class="comment"># GTID主从没有开启</span></span><br><span class="line">GTID failover mode = 0</span><br><span class="line">Starting Non-GTID based failover.</span><br><span class="line"></span><br><span class="line"><span class="comment"># VIP漂移的脚本没有设置</span></span><br><span class="line">master_ip_failover_script is not <span class="built_in">set</span>. Skipping invalidating dead master IP address.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 没有配置 Candidate masters</span></span><br><span class="line">Candidate masters from the configuration file:</span><br><span class="line">Non-candidate masters:</span><br><span class="line">candidate_master=1 // 设立太子，但是如果太子落后其他机器数据超过100M，就废储</span><br><span class="line">check_repl_delay=0 // 关闭对太子落后的检测</span><br><span class="line"></span><br><span class="line"><span class="comment"># change master语句 以后恢复数据时候要根据这个点位来切换</span></span><br><span class="line">All other slaves should start replication from here. Statement should be:</span><br><span class="line">CHANGE MASTER TO MASTER_HOST=<span class="string">&#x27;172.16.1.54&#x27;</span>, MASTER_PORT=3306,MASTER_LOG_FILE=<span class="string">&#x27;mysql-bin.000003&#x27;</span>, MASTER_LOG_POS=878597, MASTER_USER=<span class="string">&#x27;rep&#x27;</span>,MASTER_PASSWORD=<span class="string">&#x27;xxx&#x27;</span>;</span><br></pre></td></tr></table></figure><p><strong>MHA相关工具命令</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">save_binary_logs</span><br><span class="line">--<span class="built_in">command</span>=save</span><br><span class="line">--start_file=mysql-bin.000001</span><br><span class="line">--start_pos=878597</span><br><span class="line">--binlog_dir=/app/mysql/data</span><br><span class="line">--</span><br><span class="line">output_file=/var/tmp/saved_master_binlog_from_172.16.1.52_3306_20240827154042.bi</span><br><span class="line">nlog</span><br><span class="line">--handle_raw_binlog=1</span><br><span class="line">--disable_log_bin=0</span><br><span class="line">--manager_version=0.58</span><br><span class="line">pply_diff_relay_logs</span><br><span class="line">--<span class="built_in">command</span>=apply</span><br><span class="line">--slave_user=<span class="string">&#x27;mha&#x27;</span></span><br><span class="line">--slave_host=172.16.1.54</span><br><span class="line">--slave_ip=172.16.1.54</span><br><span class="line">--slave_port=3306</span><br><span class="line">--</span><br><span class="line">apply_files=/var/tmp/saved_master_binlog_from_172.16.1.52_3306_20240827154042.bi</span><br><span class="line">nlog</span><br><span class="line">--workdir=/var/tmp</span><br><span class="line">--target_version=5.7.42-<span class="built_in">log</span></span><br><span class="line">--timestamp=20240827154042</span><br><span class="line">--handle_raw_binlog=1</span><br><span class="line">--disable_log_bin=0</span><br><span class="line">--manager_version=0.58</span><br><span class="line">--slave_pass=xxx</span><br><span class="line"> </span><br></pre></td></tr></table></figure><p><strong>binlog的路径</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.先将binlog保存在宕机主库的 /var/tmp/</span></span><br><span class="line">[root@db02 ~]# ll</span><br><span class="line">/var/tmp/saved_master_binlog_from_172.16.1.52_3306_20240827154042.binlog</span><br><span class="line">-rw-r--r-- 1 root root 177 Aug 27 15:40</span><br><span class="line">/var/tmp/saved_master_binlog_from_172.16.1.52_3306_20240827154042.binlog</span><br><span class="line"><span class="comment"># 2.将binlog从宕机主库保存到manager所在的机器</span></span><br><span class="line">[root@mha-manager ~]# ll</span><br><span class="line">/etc/mha/app1/saved_master_binlog_from_172.16.1.52_3306_20240827154042.binlog</span><br><span class="line">-rw-r--r-- 1 root root 177 Aug 27 15:40</span><br><span class="line">/etc/mha/app1/saved_master_binlog_from_172.16.1.52_3306_20240827154042.binlog</span><br><span class="line"><span class="comment"># 3.将binlog从manager所在的机器发送给新主库</span></span><br><span class="line">[root@db04 ~]# ll</span><br><span class="line">/var/tmp/saved_master_binlog_from_172.16.1.52_3306_20240827154042.binlog</span><br><span class="line">-rw-r--r-- 1 root root 177 Aug 27 15:40</span><br><span class="line">/var/tmp/saved_master_binlog_from_172.16.1.52_3306_20240827154042.binlog</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/QQ_1724772576926.png" alt="QQ_1724772576926"></p><h2 id="MHA自动恢复">MHA自动恢复</h2><h3 id="手动恢复">手动恢复</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.修复宕机的主库</span></span><br><span class="line">[root@db02 ~]# systemctl start mysqld</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.找到change master语句</span></span><br><span class="line">CHANGE MASTER TO MASTER_HOST=<span class="string">&#x27;172.16.1.54&#x27;</span>, MASTER_PORT=3306,</span><br><span class="line">MASTER_LOG_FILE=<span class="string">&#x27;mysql-bin.000003&#x27;</span>, MASTER_LOG_POS=878597, MASTER_USER=<span class="string">&#x27;rep&#x27;</span>,</span><br><span class="line">MASTER_PASSWORD=<span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.启动主从复制</span></span><br><span class="line">mysql&gt; start slave;</span><br><span class="line"><span class="comment"># 4.补全配置文件</span></span><br><span class="line">[root@mha-manager ~]# vim /etc/mha/app1.cnf</span><br><span class="line">[server2]</span><br><span class="line">hostname=172.16.1.52</span><br><span class="line">port=3306</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.启动MHA</span></span><br><span class="line">[root@mha-manager ~]# systemctl start mha</span><br><span class="line"><span class="comment"># 6.检测MHA启动</span></span><br><span class="line">[root@mha-manager ~]# masterha_check_status --conf=/etc/mha/app1.cnf</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="自动恢复脚本">自动恢复脚本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">. /etc/init.d/functions</span><br><span class="line"><span class="comment">#vars</span></span><br><span class="line">log_file=<span class="string">&#x27;/etc/mha/logs/manager.log&#x27;</span></span><br><span class="line">mha_conf=<span class="string">&quot;/etc/mha/app1.cnf&quot;</span></span><br><span class="line">repl_pass=<span class="string">&#x27;123&#x27;</span></span><br><span class="line">mha_user=$(awk -F= <span class="string">&#x27;/^user/&#123;print $2&#125;&#x27;</span> <span class="variable">$&#123;mha_conf&#125;</span>)</span><br><span class="line">mha_password=$(awk -F= <span class="string">&#x27;/^password/&#123;print $2&#125;&#x27;</span> <span class="variable">$&#123;mha_conf&#125;</span>)</span><br><span class="line">down_master=$(sed -nr <span class="string">&#x27;s#^Master (.*)\(.*\).*!$#\1#gp&#x27;</span> <span class="variable">$&#123;log_file&#125;</span>|<span class="built_in">tail</span> -1 )</span><br><span class="line">change_master=$(grep -i <span class="string">&#x27;change master to&#x27;</span> <span class="variable">$&#123;log_file&#125;</span>|<span class="built_in">tail</span> -1|awk -F: <span class="string">&#x27;&#123;print $4&#125;&#x27;</span>|sed <span class="string">&quot;s#xxx#<span class="variable">$&#123;repl_pass&#125;</span>#g&quot;</span>)</span><br><span class="line">master_ip_failover_script=/etc/mha/app1/master_ip_failover</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#启动MySQL，检测MySQL是否完全启动，启动后执行命令，开启主从复制</span></span><br><span class="line">ssh <span class="variable">$&#123;down_master&#125;</span> <span class="string">&#x27;systemctl start mysqld&#x27;</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>;<span class="keyword">do</span></span><br><span class="line">  mysqladmin -u<span class="variable">$&#123;mha_user&#125;</span> -p<span class="variable">$&#123;mha_password&#125;</span> -h<span class="variable">$&#123;down_master&#125;</span> ping &amp;&gt;/dev/null</span><br><span class="line">  <span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line">    mysql -u<span class="variable">$&#123;mha_user&#125;</span> -p<span class="variable">$&#123;mha_password&#125;</span> -h<span class="variable">$&#123;down_master&#125;</span> -e <span class="string">&quot;<span class="variable">$&#123;change_master&#125;</span>;start slave&quot;</span></span><br><span class="line">    <span class="built_in">break</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#重新写入MHA管理端配置文件</span></span><br><span class="line"><span class="built_in">cat</span> &gt; <span class="variable">$&#123;mha_conf&#125;</span> &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">[server default]</span></span><br><span class="line"><span class="string">manager_log=/etc/mha/logs/manager.log</span></span><br><span class="line"><span class="string">manager_workdir=/etc/mha/app1</span></span><br><span class="line"><span class="string">master_binlog_dir=/app/mysql/data</span></span><br><span class="line"><span class="string">password=$&#123;mha_password&#125;</span></span><br><span class="line"><span class="string">ping_interval=2</span></span><br><span class="line"><span class="string">repl_password=123</span></span><br><span class="line"><span class="string">repl_user=rep</span></span><br><span class="line"><span class="string">ssh_port=22</span></span><br><span class="line"><span class="string">ssh_user=root</span></span><br><span class="line"><span class="string">user=$&#123;mha_user&#125;</span></span><br><span class="line"><span class="string">[server1]</span></span><br><span class="line"><span class="string">hostname=172.16.1.51</span></span><br><span class="line"><span class="string">port=3306</span></span><br><span class="line"><span class="string">[server2]</span></span><br><span class="line"><span class="string">hostname=172.16.1.52</span></span><br><span class="line"><span class="string">port=3306</span></span><br><span class="line"><span class="string">[server3]</span></span><br><span class="line"><span class="string">hostname=172.16.1.53</span></span><br><span class="line"><span class="string">port=3306</span></span><br><span class="line"><span class="string">[server4]</span></span><br><span class="line"><span class="string">hostname=172.16.1.54</span></span><br><span class="line"><span class="string">port=3306</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#启动MHA，并且检测MHA状态，直至启动成功结束循环</span></span><br><span class="line">systemctl start mha</span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>;<span class="keyword">do</span></span><br><span class="line">  masterha_check_status --conf=<span class="variable">$&#123;mha_conf&#125;</span> &amp;&gt;/dev/null</span><br><span class="line">  <span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line">    action <span class="string">&quot;mha server&quot;</span> /bin/true</span><br><span class="line">    <span class="built_in">break</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p><strong>优化</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">[root@mha ~]# <span class="built_in">cat</span> failover_status </span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#上一次新主库</span></span><br><span class="line">last_new_master=$(grep <span class="string">&#x27;(new master)&#x27;</span> /etc/mha/logs/manager.log |<span class="built_in">tail</span> -2|awk -F <span class="string">&#x27;(&#x27;</span> <span class="string">&#x27;NR==1&#123;print $1&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">[root@mha ~]# <span class="built_in">cat</span> recovery_mha.sh</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">. /etc/init.d/functions</span><br><span class="line">. /root/failover_status</span><br><span class="line"></span><br><span class="line">log_file=<span class="string">&#x27;/etc/mha/logs/manager.log&#x27;</span></span><br><span class="line">mha_conf=<span class="string">&quot;/etc/mha/app1.cnf&quot;</span></span><br><span class="line">repl_pass=<span class="string">&#x27;123&#x27;</span></span><br><span class="line">mha_user=$(awk -F= <span class="string">&#x27;/^user/&#123;print $2&#125;&#x27;</span> <span class="variable">$&#123;mha_conf&#125;</span>)</span><br><span class="line">mha_password=$(awk -F= <span class="string">&#x27;/^password/&#123;print $2&#125;&#x27;</span> <span class="variable">$&#123;mha_conf&#125;</span>)</span><br><span class="line">down_master=$(sed -nr <span class="string">&#x27;s#^Master (.*)\(.*\).*!$#\1#gp&#x27;</span> <span class="variable">$&#123;log_file&#125;</span>|<span class="built_in">tail</span> -1 )</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>;<span class="keyword">do</span></span><br><span class="line"><span class="comment">#判断是否修复完成</span></span><br><span class="line"><span class="comment">#当前down的主库和上次主库一致时，判定修复完成（依据截取Master 172.16.1.*(172.16.1.*:3306) is down!）</span></span><br><span class="line"><span class="comment">#判定依据就是只有修复完成才会有Master 172.16.1.*(172.16.1.*:3306) is down!）</span></span><br><span class="line">  <span class="keyword">if</span> [ <span class="variable">$&#123;down_master&#125;</span> == <span class="variable">$&#123;last_new_master&#125;</span> ];<span class="keyword">then</span></span><br><span class="line">    change_master=$(grep -i <span class="string">&#x27;change master to&#x27;</span> <span class="variable">$&#123;log_file&#125;</span>|<span class="built_in">tail</span> -1|awk -F: <span class="string">&#x27;&#123;print $4&#125;&#x27;</span>|sed <span class="string">&quot;s#xxx#<span class="variable">$&#123;repl_pass&#125;</span>#g&quot;</span>)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;主库修复中...&quot;</span></span><br><span class="line">    ssh <span class="variable">$&#123;down_master&#125;</span> -C <span class="string">&#x27;systemctl start mysqld&#x27;</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">true</span>;<span class="keyword">do</span></span><br><span class="line">      mysqladmin -u<span class="variable">$&#123;mha_user&#125;</span> -p<span class="variable">$&#123;mha_password&#125;</span> -h<span class="variable">$&#123;down_master&#125;</span> ping &amp;&gt;/dev/null</span><br><span class="line">      <span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line"><span class="comment">#down的机器做从库</span></span><br><span class="line">        mysql -u<span class="variable">$&#123;mha_user&#125;</span> -p<span class="variable">$&#123;mha_password&#125;</span> -h<span class="variable">$&#123;down_master&#125;</span> -e <span class="string">&quot;<span class="variable">$&#123;change_master&#125;</span>;start slave&quot;</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;主库修复成功...&quot;</span></span><br><span class="line">        <span class="built_in">break</span></span><br><span class="line">      <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;正在补全MHA配置文件...&quot;</span></span><br><span class="line">    <span class="built_in">cat</span> &gt; <span class="variable">$&#123;mha_conf&#125;</span> &lt;&lt;- <span class="string">EOF</span></span><br><span class="line"><span class="string">        [server default]</span></span><br><span class="line"><span class="string">        manager_log=/etc/mha/logs/manager.log</span></span><br><span class="line"><span class="string">        manager_workdir=/etc/mha/app1</span></span><br><span class="line"><span class="string">        master_binlog_dir=/app/mysql/data</span></span><br><span class="line"><span class="string">        password=$&#123;mha_password&#125;</span></span><br><span class="line"><span class="string">        ping_interval=2</span></span><br><span class="line"><span class="string">        repl_password=123</span></span><br><span class="line"><span class="string">        repl_user=rep</span></span><br><span class="line"><span class="string">        ssh_port=22</span></span><br><span class="line"><span class="string">        ssh_user=root</span></span><br><span class="line"><span class="string">        user=$&#123;mha_user&#125;</span></span><br><span class="line"><span class="string">        [server1]</span></span><br><span class="line"><span class="string">        hostname=172.16.1.51</span></span><br><span class="line"><span class="string">        port=3306</span></span><br><span class="line"><span class="string">        [server2]</span></span><br><span class="line"><span class="string">        hostname=172.16.1.52</span></span><br><span class="line"><span class="string">        port=3306</span></span><br><span class="line"><span class="string">        [server3]</span></span><br><span class="line"><span class="string">        hostname=172.16.1.53</span></span><br><span class="line"><span class="string">        port=3306</span></span><br><span class="line"><span class="string">        [server4]</span></span><br><span class="line"><span class="string">        hostname=172.16.1.54</span></span><br><span class="line"><span class="string">        port=3306</span></span><br><span class="line"><span class="string">        EOF</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;正在启动MHA...&quot;</span></span><br><span class="line">    systemctl start mha</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">true</span>;<span class="keyword">do</span></span><br><span class="line">      masterha_check_status --conf=<span class="variable">$&#123;mha_conf&#125;</span> &amp;&gt;/dev/null</span><br><span class="line">      <span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line">        action <span class="string">&quot;MHA manager启动&quot;</span> /bin/true</span><br><span class="line">        <span class="built_in">exit</span> 0</span><br><span class="line">      <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">continue</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="MHA的vip漂移">MHA的vip漂移</h3><p><strong>配置master_ip_failover</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.修改MHA配置文件，加上脚本</span></span><br><span class="line">[root@mha-manager ~]# vim /etc/mha/app1.cnf</span><br><span class="line">[server default]</span><br><span class="line">master_ip_failover_script=/etc/mha/app1/master_ip_failover</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.修改MHA脚本 加上绑定vip的命令(先上传脚本)</span></span><br><span class="line">[root@mha-manager ~]# vim /etc/mha/app1/master_ip_failover</span><br><span class="line">my <span class="variable">$vip</span> = <span class="string">&#x27;172.16.1.55/24&#x27;</span>;</span><br><span class="line">my <span class="variable">$key</span> = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">my <span class="variable">$ssh_start_vip</span> = <span class="string">&quot;/sbin/ifconfig eth1:<span class="variable">$key</span> <span class="variable">$vip</span>&quot;</span>;</span><br><span class="line">my <span class="variable">$ssh_stop_vip</span> = <span class="string">&quot;/sbin/ifconfig eth1:<span class="variable">$key</span> down&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.给脚本执行权限</span></span><br><span class="line">[root@mha-manager ~]# <span class="built_in">chmod</span> +x /etc/mha/app1/master_ip_failover</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.手动在主库上绑定VIP</span></span><br><span class="line">[root@db01 ~]# ifconfig eth1:1 172.16.1.55/24</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6.重启MHA</span></span><br><span class="line">[root@mha-manager ~]# systemctl stop mha</span><br><span class="line">[root@mha-manager ~]# systemctl start mha</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 添加脚本后，启动不起来的原因：</span></span><br><span class="line">1.脚本权限问题</span><br><span class="line">[root@mha-manager ~]# <span class="built_in">chmod</span> +x /etc/mha/app1/master_ip_failover</span><br><span class="line">2.脚本语法问题</span><br><span class="line">3.脚本格式问题</span><br><span class="line">[root@mha-manager ~]# dos2unix /etc/mha/app1/master_ip_failover</span><br><span class="line">dos2unix: converting file /etc/mha/app1/master_ip_failover to Unix format ...</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>自动恢复脚本</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">[root@mha ~]# <span class="built_in">cat</span> failover_status </span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#上一次新主库</span></span><br><span class="line">last_new_master=$(grep <span class="string">&#x27;(new master)&#x27;</span> /etc/mha/logs/manager.log |<span class="built_in">tail</span> -2|awk -F <span class="string">&#x27;(&#x27;</span> <span class="string">&#x27;NR==1&#123;print $1&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">[root@mha ~]# <span class="built_in">cat</span> recovery_mha.sh</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">. /etc/init.d/functions</span><br><span class="line">. /root/failover_status</span><br><span class="line"></span><br><span class="line">log_file=<span class="string">&#x27;/etc/mha/logs/manager.log&#x27;</span></span><br><span class="line">mha_conf=<span class="string">&quot;/etc/mha/app1.cnf&quot;</span></span><br><span class="line">repl_pass=<span class="string">&#x27;123&#x27;</span></span><br><span class="line">mha_user=$(awk -F= <span class="string">&#x27;/^user/&#123;print $2&#125;&#x27;</span> <span class="variable">$&#123;mha_conf&#125;</span>)</span><br><span class="line">mha_password=$(awk -F= <span class="string">&#x27;/^password/&#123;print $2&#125;&#x27;</span> <span class="variable">$&#123;mha_conf&#125;</span>)</span><br><span class="line">down_master=$(sed -nr <span class="string">&#x27;s#^Master (.*)\(.*\).*!$#\1#gp&#x27;</span> <span class="variable">$&#123;log_file&#125;</span>|<span class="built_in">tail</span> -1 )</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>;<span class="keyword">do</span></span><br><span class="line"><span class="comment">#判断是否修复完成</span></span><br><span class="line"><span class="comment">#当前down的主库和上次主库一致时，判定修复完成（依据截取Master 172.16.1.*(172.16.1.*:3306) is down!）</span></span><br><span class="line"><span class="comment">#判定依据就是只有修复完成才会有Master 172.16.1.*(172.16.1.*:3306) is down!）</span></span><br><span class="line">  <span class="keyword">if</span> [ <span class="variable">$&#123;down_master&#125;</span> == <span class="variable">$&#123;last_new_master&#125;</span> ];<span class="keyword">then</span></span><br><span class="line">    change_master=$(grep -i <span class="string">&#x27;change master to&#x27;</span> <span class="variable">$&#123;log_file&#125;</span>|<span class="built_in">tail</span> -1|awk -F: <span class="string">&#x27;&#123;print $4&#125;&#x27;</span>|sed <span class="string">&quot;s#xxx#<span class="variable">$&#123;repl_pass&#125;</span>#g&quot;</span>)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;主库修复中...&quot;</span></span><br><span class="line">    ssh <span class="variable">$&#123;down_master&#125;</span> -C <span class="string">&#x27;systemctl start mysqld&#x27;</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">true</span>;<span class="keyword">do</span></span><br><span class="line">      mysqladmin -u<span class="variable">$&#123;mha_user&#125;</span> -p<span class="variable">$&#123;mha_password&#125;</span> -h<span class="variable">$&#123;down_master&#125;</span> ping &amp;&gt;/dev/null</span><br><span class="line">      <span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line"><span class="comment">#down的机器做从库</span></span><br><span class="line">        mysql -u<span class="variable">$&#123;mha_user&#125;</span> -p<span class="variable">$&#123;mha_password&#125;</span> -h<span class="variable">$&#123;down_master&#125;</span> -e <span class="string">&quot;<span class="variable">$&#123;change_master&#125;</span>;start slave&quot;</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;主库修复成功...&quot;</span></span><br><span class="line">        <span class="built_in">break</span></span><br><span class="line">      <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;正在补全MHA配置文件...&quot;</span></span><br><span class="line">    <span class="built_in">cat</span> &gt; <span class="variable">$&#123;mha_conf&#125;</span> &lt;&lt;- <span class="string">EOF</span></span><br><span class="line"><span class="string">        [server default]</span></span><br><span class="line"><span class="string">        master_ip_failover_script=/etc/mha/app1/master_ip_failover</span></span><br><span class="line"><span class="string">        manager_log=/etc/mha/logs/manager.log</span></span><br><span class="line"><span class="string">        manager_workdir=/etc/mha/app1</span></span><br><span class="line"><span class="string">        master_binlog_dir=/app/mysql/data</span></span><br><span class="line"><span class="string">        password=$&#123;mha_password&#125;</span></span><br><span class="line"><span class="string">        ping_interval=2</span></span><br><span class="line"><span class="string">        repl_password=123</span></span><br><span class="line"><span class="string">        repl_user=rep</span></span><br><span class="line"><span class="string">        ssh_port=22</span></span><br><span class="line"><span class="string">        ssh_user=root</span></span><br><span class="line"><span class="string">        user=$&#123;mha_user&#125;</span></span><br><span class="line"><span class="string">        [server1]</span></span><br><span class="line"><span class="string">        hostname=172.16.1.51</span></span><br><span class="line"><span class="string">        port=3306</span></span><br><span class="line"><span class="string">        [server2]</span></span><br><span class="line"><span class="string">        hostname=172.16.1.52</span></span><br><span class="line"><span class="string">        port=3306</span></span><br><span class="line"><span class="string">        [server3]</span></span><br><span class="line"><span class="string">        hostname=172.16.1.53</span></span><br><span class="line"><span class="string">        port=3306</span></span><br><span class="line"><span class="string">        [server4]</span></span><br><span class="line"><span class="string">        hostname=172.16.1.54</span></span><br><span class="line"><span class="string">        port=3306</span></span><br><span class="line"><span class="string">        EOF</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;正在启动MHA...&quot;</span></span><br><span class="line">    systemctl start mha</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">true</span>;<span class="keyword">do</span></span><br><span class="line">      masterha_check_status --conf=<span class="variable">$&#123;mha_conf&#125;</span> &amp;&gt;/dev/null</span><br><span class="line">      <span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line">        action <span class="string">&quot;MHA manager启动&quot;</span> /bin/true</span><br><span class="line">        <span class="built_in">exit</span> 0</span><br><span class="line">      <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">continue</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="MySQL-binlog实时同步">MySQL binlog实时同步</h3><p><strong>使用mysqlbinlog实时同步binlog</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## MHA 配置 binlog server</span></span><br><span class="line"><span class="comment"># 1.修改MHA配置文件</span></span><br><span class="line">[root@mha-manager ~]# vim /etc/mha/app1.cnf</span><br><span class="line">[binlog1]</span><br><span class="line"><span class="comment">#加上no_master之后无论如何都不会被提升为主库</span></span><br><span class="line">no_master=1</span><br><span class="line">hostname=172.16.1.50</span><br><span class="line">master_binlog_dir=/data/mysql/binlog/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.创建binlog目录</span></span><br><span class="line">[root@mha-manager ~]# <span class="built_in">mkdir</span> -p /data/mysql/binlog/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.manager服务器安装mysql5.7客户端</span></span><br><span class="line">[root@mha-manager ~]# <span class="built_in">cat</span> /etc/yum.repos.d/mysql-community.repo</span><br><span class="line">[mysql56-community]</span><br><span class="line">name=MySQL 5.6 Community Server</span><br><span class="line">baseurl=http://repo.mysql.com/yum/mysql-5.6-community/el/7/<span class="variable">$basearch</span></span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line"></span><br><span class="line">[root@mha-manager binlog]# yum install -y mysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.实时同步binlog</span></span><br><span class="line">[root@mha-manager binlog]# mysqlbinlog -R --host=172.16.1.55 --user=mha --password=mha --raw --stop-never mysql-bin.000001 &amp;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">MySQL的高可用MHA的部署及二次开发</summary>
    
    
    
    <category term="MySQL" scheme="https://lukme.top/categories/MySQL/"/>
    
    
    <category term="MySQL" scheme="https://lukme.top/tags/MySQL/"/>
    
    <category term="MHA" scheme="https://lukme.top/tags/MHA/"/>
    
  </entry>
  
  <entry>
    <title>MySQL的主从复制</title>
    <link href="https://lukme.top/posts/9ee789ff.html"/>
    <id>https://lukme.top/posts/9ee789ff.html</id>
    <published>2024-08-12T15:28:10.000Z</published>
    <updated>2024-08-12T15:42:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>:dango:<strong>为什么做主从复制</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.为了做高可用</span><br><span class="line">2.为了解决MySQL的单点故障</span><br><span class="line">3.分摊主库的压力</span><br><span class="line">4.备份（延时从库）</span><br></pre></td></tr></table></figure><h2 id="主从复制原理">主从复制原理</h2><p><code>三个线程四个文件配合</code></p><p><img src="https://cos.lukme.top/Pic/QQ_1724397104506.png" alt="QQ_1724397104506"></p><p><strong>1）</strong> Slave 上面的IO 线程连接上 Master，并请求从指定日志文件的指定位置(或者从最开始的日志)之后的日志内容。（请求有没有新的数据）<br><strong>2）</strong> Master 接收到来自 Slave 的 IO 线程的请求后，通过负责复制的 IO 线程根据请求信息读取指定日志指定位置之后的日志信息，返回给 Slave 端的 IO 线程。</p><p>3）Slave 的 IO 线程接收到信息后，将接收到的日志内容依次写入到 Slave 端的RelayLog（中继日志文件）文件(MySQL-relay-bin.xxxxxx)的最末端，并将读取到的Master 端的bin-log 的文件名和位置记录到master-info 文件中，以便在下一次读取的时候能够清楚的告诉Master“我需要从某个bin-log 的哪个位置开始往后的日志内容，请发给我” 。<br>**4）**Slave 的 SQL 线程检测到 Relay Log 中新增加了内容后，会马上解析该 Log 文件中的内容成为在 Master 端真实执行时候的那些可执行的 Query 语句，并在自身执行这些 Query。同时将执行relay log 名字和位置点记录到relay-log.info里</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 三个线程</span></span><br><span class="line"><span class="comment"># 从库</span></span><br><span class="line">IO线程：和主库建立连接接收主库新数据</span><br><span class="line">SQL线程：将IO线程接收到的新数据在数据库中执行</span><br><span class="line"></span><br><span class="line"><span class="comment"># 主库</span></span><br><span class="line">dump线程：接收IO线程的请求，从binlog中取出新数据返回给IO线程</span><br><span class="line"></span><br><span class="line"><span class="comment">## 四个文件</span></span><br><span class="line"><span class="comment"># 从库</span></span><br><span class="line">master.info：记录IO线程上一次取出主库上binlog的名字和位置点（主库信息）</span><br><span class="line">relay-log：存储binlog中新增的数据（不是一直存在的）复制SQL线程在执行完文件中的所有事件并且不再需要它后，会自动删除每个中继日志文件</span><br><span class="line">relay-log.info：记录SQL语句上一回执行到中继日志的哪个位置点了</span><br><span class="line"><span class="comment"># 主库</span></span><br><span class="line">bin-log：二进制日志记录主库所有对表数据发生变化的语句</span><br></pre></td></tr></table></figure><h2 id="搭建主从复制">搭建主从复制</h2><p>:dango:<strong>环境一览    一主三从</strong></p><table><thead><tr><th>主机名</th><th>WanIP</th><th>LanIP</th><th>说明</th></tr></thead><tbody><tr><td>db01</td><td>10.0.0.51</td><td>172.16.1.51</td><td>master</td></tr><tr><td>db02</td><td>10.0.0.52</td><td>172.16.1.52</td><td>slave</td></tr><tr><td>db03</td><td>10.0.0.53</td><td>172.16.1.53</td><td>slave</td></tr><tr><td>db04</td><td>10.0.0.54</td><td>172.16.1.54</td><td>slave</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#主库</span></span><br><span class="line">1.修改配置文件</span><br><span class="line">[root@db01 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">basedir=/app/mysql</span><br><span class="line">datadir=/app/mysql/data</span><br><span class="line">server_id=1</span><br><span class="line">log-bin=mysql-bin</span><br><span class="line">skip_name_resolve</span><br><span class="line"></span><br><span class="line">2.重启</span><br><span class="line">[root@db01 ~]# systemctl restart mysqld</span><br><span class="line"></span><br><span class="line">3.创建主从复制用户</span><br><span class="line">mysql&gt; grant replication slave on *.* to rep@<span class="string">&#x27;172.16.1.5%&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"></span><br><span class="line">4.查看binlog（master）信息  记录binlog文件名和点</span><br><span class="line">mysql&gt; show master status;</span><br><span class="line">+------------------+----------+</span><br><span class="line">| File             | Position |</span><br><span class="line">+------------------+----------+</span><br><span class="line">| mysql-bin.000001 |  1324392 |</span><br><span class="line">+------------------+----------+</span><br><span class="line"></span><br><span class="line"><span class="comment">#从库操作   （ db02,db03,db04 ）</span></span><br><span class="line">1.修改从库配置文件</span><br><span class="line">[root@db02 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">basedir=/app/mysql</span><br><span class="line">datadir=/app/mysql/data</span><br><span class="line">server_id=2</span><br><span class="line">skip_name_resolve</span><br><span class="line"></span><br><span class="line">2.重启数据库</span><br><span class="line">[root@db01 ~]# systemctl restart mysqld</span><br><span class="line"></span><br><span class="line">3.登录MySQL执行change master 语句</span><br><span class="line">mysql &gt; change master to</span><br><span class="line">master_host=<span class="string">&#x27;172.16.1.51&#x27;</span>,</span><br><span class="line">master_user=<span class="string">&#x27;rep&#x27;</span>,</span><br><span class="line">master_password=<span class="string">&#x27;123&#x27;</span>,</span><br><span class="line">master_log_file=<span class="string">&#x27;mysql-bin.000001&#x27;</span>,</span><br><span class="line">master_log_pos=1324392,</span><br><span class="line">master_port=3306;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">############</span></span><br><span class="line">master_host=<span class="string">&#x27;172.16.1.51&#x27;</span>,     <span class="comment">#主库ip</span></span><br><span class="line">master_user=<span class="string">&#x27;rep&#x27;</span>,  <span class="comment">#主从复制的用户</span></span><br><span class="line">master_password=<span class="string">&#x27;123&#x27;</span>,   <span class="comment">#rep用户的密码</span></span><br><span class="line">master_log_file=<span class="string">&#x27;mysql-bin.000001&#x27;</span>,<span class="comment">#主库在用的binlog文件</span></span><br><span class="line">master_log_pos=1324392, <span class="comment">#主库插入点位置</span></span><br><span class="line">master_port=3306;</span><br><span class="line"></span><br><span class="line">4.开启主从复制</span><br><span class="line">mysql&gt; start slave;</span><br><span class="line"></span><br><span class="line">5.查看主从复制状态   (保证两个线程都是OK的)</span><br><span class="line">mysql&gt; show slave status\G</span><br><span class="line">Slave_IO_Running: Yes</span><br><span class="line">Slave_SQL_Running: Yes</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="主从故障处理-dango">主从故障处理:dango:</h2><p>mysql里执行<code>show slave status\G</code> 查看是哪个线程出错</p><p>:dango:<strong>IO线程故障</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1.检查连接是否有问题</span></span><br><span class="line">change master to</span><br><span class="line">master_host=<span class="string">&#x27;172.16.1.51&#x27;</span>,</span><br><span class="line">master_user=<span class="string">&#x27;rep&#x27;</span>,</span><br><span class="line">master_password=<span class="string">&#x27;123&#x27;</span>,</span><br><span class="line">master_log_file=<span class="string">&#x27;mysql-bin.000001&#x27;</span>,</span><br><span class="line">master_log_pos=1324392,</span><br><span class="line">master_port=3306;</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.检查IP是否有问题</span></span><br><span class="line">ping 172.16.1.51   ping 主机ip</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.检查端口是否有问题</span></span><br><span class="line">telnet 172.16.1.51 3306</span><br><span class="line">端口不通：</span><br><span class="line">- 防火墙 selinux</span><br><span class="line">- 服务没起</span><br><span class="line">- 没有创建远程连接的用户</span><br><span class="line"></span><br><span class="line"><span class="comment">#4.检查用户名和密码能否登录</span></span><br><span class="line">[root@db02 ~]# mysql -urep -p123 -h172.16.1.51</span><br><span class="line"></span><br><span class="line"><span class="comment">#5.  主库  检查binlog名字和位置点</span></span><br><span class="line">mysql&gt; show master status;</span><br><span class="line">+------------------+----------+</span><br><span class="line">| File             | Position |</span><br><span class="line">+------------------+----------+</span><br><span class="line">| mysql-bin.000001 |  1324392 |</span><br><span class="line">+------------------+----------+</span><br><span class="line"></span><br><span class="line"><span class="comment">#6.检查主库和从库配置文件的server_id是否相同</span></span><br><span class="line"><span class="comment">#如果相同则报错如下：</span></span><br><span class="line">Last_IO_Error:Fatal error:The slave I/0 thread stops because master and slave have equal MySQL server ids;these ids must be different <span class="keyword">for</span> replication to work (or the --repLicate-same-server-id option must be used on slave but this does not always make sense;please c</span><br><span class="line"></span><br><span class="line"><span class="comment">#7.检查uuid是否一样（如果你是直接克隆虚拟机）</span></span><br><span class="line">[root@db01 ~]# <span class="built_in">cat</span> /app/mysql/data/auto.cnf </span><br><span class="line">[auto]</span><br><span class="line">server-uuid=80a4722e-60ef-11ef-baf4-000c29bff80f</span><br><span class="line"></span><br><span class="line"><span class="comment">#如果uuid一直则报错如下</span></span><br><span class="line">error:The slave I/0 thread stops because master and slave have equal MySQL server UUIDs;these UUIDs must be different <span class="keyword">for</span> replication to work.</span><br></pre></td></tr></table></figure><p>:dango:<strong>SQL线程故障</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 根本原因：主库和从库数据不一致</span></span><br><span class="line"><span class="comment"># 1.主库有从库没有的数据</span></span><br><span class="line">出现原因：新加的从库主从复制点位是主库已有数据状态</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.主库没有从库有的数据</span></span><br><span class="line">`出现原因`:直接在从库中操作数据库</span><br><span class="line">`解决`:</span><br><span class="line">解决方案：从库设置为只读（读写分离）</span><br><span class="line"><span class="comment"># 在命令行临时设置</span></span><br><span class="line"><span class="built_in">set</span> global read_only=1;</span><br><span class="line"><span class="comment"># 在配置文件中永久生效</span></span><br><span class="line">read_only=1</span><br></pre></td></tr></table></figure><p>:dango:<strong>生成环境如何添加新从库  保持新主数据一致  避免SQL线程故障</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.从库初始化环境</span></span><br><span class="line">[root@db04 ~]# systemctl stop mysqld</span><br><span class="line">[root@db04 ~]# <span class="built_in">rm</span> -fr /app/mysql/data</span><br><span class="line">[root@db04 ~]# /app/mysql/scripts/mysql_install_db --user=mysql --basedir=/app/mysql --datadir=/app/mysql/data</span><br><span class="line"></span><br><span class="line">`mysql5.7`</span><br><span class="line">/app/mysql/bin/mysqld --initialize-insecure --user=mysql --basedir=/app/mysq --datadir=/app/mysql/data</span><br><span class="line"></span><br><span class="line">[root@db04 ~]# systemctl start mysqld</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.主库打点全备</span></span><br><span class="line">[root@db01 ~]# mysqldump -A -R --triggers --master-data=2 --single-transaction|gzip &gt; /tmp/full.sql.gz</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.从库恢复数据</span></span><br><span class="line">[root@db01 ~]# scp /tmp/full.sql.gz 172.16.1.54:/root</span><br><span class="line">[root@db04 ~]# zcat /root/full.sql.gz |mysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4..查看主库全备的点位</span></span><br><span class="line">[root@db04 ~]# zcat /root/full.sql.gz |<span class="built_in">head</span> -25</span><br><span class="line">--MASTER_LOG_FILE=<span class="string">&#x27;mysql-bin.000001&#x27;</span>, MASTER_LOG_POS=1843126;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.从库执行change master语句</span></span><br><span class="line">change master to</span><br><span class="line">master_host=<span class="string">&#x27;172.16.1.51&#x27;</span>,</span><br><span class="line">master_user=<span class="string">&#x27;rep&#x27;</span>,</span><br><span class="line">master_password=<span class="string">&#x27;123&#x27;</span>,</span><br><span class="line">master_log_file=<span class="string">&#x27;mysql-bin.000001&#x27;</span>,</span><br><span class="line">master_log_pos=1843126;</span><br><span class="line"></span><br><span class="line"><span class="comment">#6.开启主从复制</span></span><br><span class="line">mysql&gt; start slave;</span><br></pre></td></tr></table></figure><p>:dango:<strong>取消主从复制</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;stop slave;</span><br><span class="line"></span><br><span class="line">mysql&gt;reset slave all;</span><br><span class="line"></span><br><span class="line">mysql&gt; show slave status\G</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="数据库的延时从库">数据库的延时从库</h2><p><strong>:dango:传统主从复制缺陷</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1.传统住从复制无法做备份</span><br><span class="line">2.传统主从复制无法过滤复制</span><br><span class="line">3.传统主从复制速度慢</span><br><span class="line">4.传统主从复制是异步复制，从库数据延迟</span><br><span class="line"></span><br><span class="line">`延时从库应运而生`</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">一般企业中会延时3-6小时（开不开启从库延时   看企业需求，优弊端都有）</span><br><span class="line"></span><br><span class="line">`优点：`</span><br><span class="line">1.做延时从库的服务器，无法在生产中继续提供服务</span><br><span class="line">2.备份</span><br><span class="line">3.恢复数据速度更快</span><br><span class="line"></span><br><span class="line">`弊端:`</span><br><span class="line">企业使用从库延时做备份需求，需要一台服务器做备胎，浪费资源</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>:dango:<strong>延时从库原理</strong></p><p>如下主从基础上，IO线程继续拿数据，SQL线程在指定时间后，延时执行，当主库出现删除库操作，那么从库将在设置的延时之后才会删除库，这就是延时从库实现原理</p><p><img src="https://cos.lukme.top/Pic/QQ_1724397104506-1724654962435-1.png" alt="QQ_1724397104506"></p><p>:dango:<strong>如何配置延时从库</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.停止主从复制</span></span><br><span class="line">mysql&gt; stop slave;</span><br><span class="line"></span><br><span class="line"><span class="comment">#2. 设置延时180s</span></span><br><span class="line">mysql&gt; change master to master_delay=180;</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.开启主从</span></span><br><span class="line">mysql&gt; start slave;</span><br><span class="line"></span><br><span class="line"><span class="comment">#4.查看状态</span></span><br><span class="line">mysql&gt; show slave status \G</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#关闭延时从库</span></span><br><span class="line"><span class="comment">#停止主从复制</span></span><br><span class="line">mysql&gt; stop slave;</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置延时为0关闭</span></span><br><span class="line">mysql&gt; change master to master_delay=0;</span><br><span class="line"></span><br><span class="line"><span class="comment">#开启主从</span></span><br><span class="line">mysql&gt; start slave;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#使用延时从库恢复数据</span></span><br><span class="line">`思路：</span><br><span class="line">`IO线程不停，读取relay-log里SQL线程最后拿取的点位为起始点，过滤relay-binlog文件读取drop之前的点为结束点，这一段为第一次新增数据`</span><br><span class="line"></span><br><span class="line">`drop 之后结束点为起点，停止数据库写入，此时读取relay-binlog文件最后点（IO不停），截取为第二段新增数据`</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1.停止延时从库SQL线程</span></span><br><span class="line">mysql&gt; stop slave SQL_thread;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2准备新环境</span></span><br><span class="line">[root@db03 ~]# systemctl stop mysqld</span><br><span class="line">[root@db03 ~]# <span class="built_in">rm</span> -fr /app/mysql/data</span><br><span class="line">[root@db03 ~]# /app/mysql/bin/mysqld --user=mysql --basedir=/app/mysql --datadir=/app/mysql/data</span><br><span class="line">[root@db03 ~]# systemctl start mysqld</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.全备延时从库</span></span><br><span class="line">[root@db04 ~]# mysqldump -A -R --triggers &gt; /tmp/full_new.sql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.截取relay-log</span></span><br><span class="line"><span class="built_in">cat</span> /app/mysql/data/relay-log.info </span><br><span class="line">./db04-relay-bin.000002</span><br><span class="line">12656</span><br><span class="line">mysql-bin.000003</span><br><span class="line">390768</span><br><span class="line">起始位置点：12656</span><br><span class="line"></span><br><span class="line">[root@db04 data]# mysqlbinlog --base64-output=decode-rows db04-relay-bin.000002 |grep -C 10 drop    <span class="comment">#drop之前</span></span><br><span class="line">结束位置点：24110</span><br><span class="line"></span><br><span class="line"><span class="comment">#导出第一段新增数据</span></span><br><span class="line">mysqlbinlog --start-position=12656 --stop-position=24110 /app/mysql/data/db04-relay-bin.000002 &gt;/tmp/inc1.sql</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#停止主库写入</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#截取第二段新增数据</span></span><br><span class="line">[root@db04 data]# mysqlbinlog --base64-output=decode-rows db04-relay-bin.000002 |grep -C 10 drop    <span class="comment">#drop之后</span></span><br><span class="line">起始位置点：24202</span><br><span class="line">mysqlbinlog --base64-output=decode-rows db04-relay-bin.000002</span><br><span class="line">结束位置点：220265</span><br><span class="line"></span><br><span class="line"><span class="comment">#导出第二段新僧数据</span></span><br><span class="line">mysqlbinlog --start-position=24202 --stop-position=240826 /app/mysql/data/db04-relay-bin.000002 &gt;/tmp/inc2.sql</span><br><span class="line"></span><br><span class="line">prod：1051</span><br><span class="line"></span><br><span class="line"><span class="comment">#导入数据</span></span><br><span class="line">导入延时从库全备</span><br><span class="line">[root@db04 data]# scp /tmp/full.sql 172.16.1.53:/root</span><br><span class="line">[root@db03 ~]# mysql &lt;full.sql </span><br><span class="line"></span><br><span class="line"><span class="comment">#导入第一次新增数据</span></span><br><span class="line">[root@db04 data]# scp /tmp/inc1.sql  172.16.1.53:/root   </span><br><span class="line">[root@db03 ~]# mysql &lt;inc1.sql </span><br><span class="line"></span><br><span class="line"><span class="comment">#导入第二次新增数据</span></span><br><span class="line">[root@db04 data]# scp /tmp/inc2.sql  172.16.1.53:/root</span><br><span class="line">[root@db03 ~]# mysql &lt;inc2.sql </span><br><span class="line"></span><br><span class="line"><span class="comment">#应用割接</span></span><br><span class="line">开发改代码</span><br><span class="line">运维将新环境全备到旧环境</span><br></pre></td></tr></table></figure><h2 id="数据库的半同步复制">数据库的半同步复制</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">从MYSQL5.5开始，支持半自动复制。之前版本的MySQL Replication都是异（asynchronous）的，主库在执行完一些事务后，是不会管备库的进度的。如果备库不幸落后，而更不幸的是主库此时又出现Crash（例如宕机），这时备库中的数据就是不完整的。简而言之，在主库发生故障的时候，我们无法使用备库来继续提供数据一致的服务了。</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">半同步复制出现原因：`为了保证主库和从库的数据一致性`</span><br><span class="line">从库的IO线程在没有接收到ACK之前，会阻塞主库写入操作</span><br><span class="line"></span><br><span class="line">`半同步缺点`：阻塞主库写入数据，影响主库性能，降低用户体验</span><br><span class="line">`半同步优点`：主库和从库数据保证了一致性，不会丢数据</span><br><span class="line"></span><br><span class="line">半同步复制（Semi synchronous Replication）则一定程度上保证提交的事务已经传给了至少一个备库。出发点是保证主从数据一致性问题，安全的考虑。</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>:dango:注意</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1)在半同步复制中，Master节点等待Slave节点返回确认信息的过程中，如果发生异常，或者一直等待直到超过rpl_semi_sync_master_timeout配置的时间点，同步复制将退化为异步复制。</span><br><span class="line"></span><br><span class="line">2）在退化为异步复制后，如果Slave节点追上了Master节点，那么Master节点又会重新转为半同步复制。</span><br><span class="line"></span><br><span class="line">看企业选择</span><br></pre></td></tr></table></figure><p>:dango:<strong>MySQL的半同步复制原理</strong></p><p>IO线程取出数据之后，先放入tcp缓存，直到SQL线程完成再给IO线程返回ack</p><p><strong>半同步插件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 ~]# ll /app/mysql/lib/plugin/</span><br><span class="line">-rwxr-xr-x 1 mysql mysql 515584 Aug  7 23:04 semisync_master.so</span><br><span class="line">-rwxr-xr-x 1 mysql mysql 276296 Aug  7 23:04 semisync_slave.so</span><br></pre></td></tr></table></figure><p><strong>:dango:配置半同步</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 主库操作</span></span><br><span class="line"><span class="comment"># 1.主库查看是否支持半同步</span></span><br><span class="line">mysql&gt; show global variables like <span class="string">&#x27;have_dynamic_loading&#x27;</span>;</span><br><span class="line">+----------------------+-------+</span><br><span class="line">| Variable_name | Value|</span><br><span class="line">+----------------------+-------+</span><br><span class="line">| have_dynamic_loading | YES |</span><br><span class="line">+----------------------+-------+</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.安装主库半同步插件</span></span><br><span class="line">mysql&gt; INSTALL PLUGIN rpl_semi_sync_master SONAME<span class="string">&#x27;semisync_master.so&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.启动插件</span></span><br><span class="line">mysql&gt; SET GLOBAL rpl_semi_sync_master_enabled = 1;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.设置超时时间(毫秒)</span></span><br><span class="line">mysql&gt; SET GLOBAL rpl_semi_sync_master_timeout = 1000;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.永久启动+超时时间</span></span><br><span class="line">[root@db01 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">rpl_semi_sync_master_enabled=1</span><br><span class="line">rpl_semi_sync_master_timeout = 1000</span><br><span class="line"></span><br><span class="line">db01 [(none)]&gt;show variables like<span class="string">&#x27;rpl%&#x27;</span>;</span><br><span class="line">+------------------------------------+----------+</span><br><span class="line">| Variable_name                      | Value    |</span><br><span class="line">+------------------------------------+----------+</span><br><span class="line">| rpl_semi_sync_master_enabled       | ON       |</span><br><span class="line">| rpl_semi_sync_master_timeout       | 1000     |</span><br><span class="line">| rpl_semi_sync_master_trace_level   | 32       |</span><br><span class="line">| rpl_semi_sync_master_wait_no_slave | ON       |</span><br><span class="line">| rpl_stop_slave_timeout             | 31536000 |</span><br><span class="line">+------------------------------------+----------+</span><br><span class="line"></span><br><span class="line">db01 [(none)]&gt;show global status like <span class="string">&#x27;rpl_semi%&#x27;</span>;</span><br><span class="line">+--------------------------------------------+-------+</span><br><span class="line">| Variable_name                              | Value |</span><br><span class="line">+--------------------------------------------+-------+</span><br><span class="line">| Rpl_semi_sync_master_clients               | 0     |</span><br><span class="line">| Rpl_semi_sync_master_net_avg_wait_time     | 0     |</span><br><span class="line">| Rpl_semi_sync_master_net_wait_time         | 0     |</span><br><span class="line">| Rpl_semi_sync_master_net_waits             | 0     |</span><br><span class="line">| Rpl_semi_sync_master_no_times              | 0     |</span><br><span class="line">| Rpl_semi_sync_master_no_tx                 | 0     |</span><br><span class="line">| Rpl_semi_sync_master_status                | ON    |</span><br><span class="line">| Rpl_semi_sync_master_timefunc_failures     | 0     |</span><br><span class="line">| Rpl_semi_sync_master_tx_avg_wait_time      | 0     |</span><br><span class="line">| Rpl_semi_sync_master_tx_wait_time          | 0     |</span><br><span class="line">| Rpl_semi_sync_master_tx_waits              | 0     |</span><br><span class="line">| Rpl_semi_sync_master_wait_pos_backtraverse | 0     |</span><br><span class="line">| Rpl_semi_sync_master_wait_sessions         | 0     |</span><br><span class="line">| Rpl_semi_sync_master_yes_tx                | 0     |</span><br><span class="line">+--------------------------------------------+-------+</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 从库操作</span></span><br><span class="line"><span class="comment"># 1.安装从库半同步插件</span></span><br><span class="line">mysql&gt; INSTALL PLUGIN rpl_semi_sync_slave SONAME<span class="string">&#x27;semisync_slave.so&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.启动插件</span></span><br><span class="line">mysql&gt; SET GLOBAL rpl_semi_sync_slave_enabled = 1;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.重启IO线程</span></span><br><span class="line">mysql&gt; stop slave io_thread;</span><br><span class="line">mysql&gt; start slave io_thread;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.永久生效</span></span><br><span class="line">[root@db02 data]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">rpl_semi_sync_slave_enabled = 1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mysql&gt; show global status like <span class="string">&#x27;rpl_semi%&#x27;</span>;</span><br><span class="line">+--------------------------------------------+-------+</span><br><span class="line">| Variable_name                              | Value |</span><br><span class="line">+--------------------------------------------+-------+</span><br><span class="line">| Rpl_semi_sync_master_clients               | 1     |</span><br><span class="line">| Rpl_semi_sync_master_net_avg_wait_time     | 0     |</span><br><span class="line">| Rpl_semi_sync_master_net_wait_time         | 0     |</span><br><span class="line">| Rpl_semi_sync_master_net_waits             | 6     |</span><br><span class="line">| Rpl_semi_sync_master_no_times              | 0     |</span><br><span class="line">| Rpl_semi_sync_master_no_tx                 | 0     |</span><br><span class="line">| Rpl_semi_sync_master_status                | ON    |</span><br><span class="line">| Rpl_semi_sync_master_timefunc_failures     | 0     |</span><br><span class="line">| Rpl_semi_sync_master_tx_avg_wait_time      | 1363  |</span><br><span class="line">| Rpl_semi_sync_master_tx_wait_time          | 8178  |</span><br><span class="line">| Rpl_semi_sync_master_tx_waits              | 6     |</span><br><span class="line">| Rpl_semi_sync_master_wait_pos_backtraverse | 0     |</span><br><span class="line">| Rpl_semi_sync_master_wait_sessions         | 0     |</span><br><span class="line">| Rpl_semi_sync_master_yes_tx                | 6     |</span><br><span class="line">+--------------------------------------------+-------+</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="MySQL过滤复制">MySQL过滤复制</h2><p>:dango:<strong>主库配置过滤复制</strong></p><ul><li>binlog-do-db：白名单</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 ~]# <span class="built_in">cat</span> /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">binlog-do-db=prod</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">db01 [(none)]&gt;show master status;</span><br><span class="line">+------------------+----------+--------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB |</span><br><span class="line">+------------------+----------+--------------+</span><br><span class="line">| mysql-bin.000006 |   515446 |     prod     |</span><br><span class="line">+------------------+----------+--------------+</span><br><span class="line"></span><br><span class="line">binlog：只记录prod库的数据</span><br></pre></td></tr></table></figure><ul><li>binlog-ignore-db：黑名单</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 ~]# <span class="built_in">cat</span> /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">binlog-ignore-db=prod</span><br><span class="line">binlog：不记录prod库的数据</span><br><span class="line"></span><br><span class="line">mysql&gt; show master status;</span><br><span class="line">+------------------+----------+--------------+------------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB |</span><br><span class="line">+------------------+----------+--------------+------------------+</span><br><span class="line">| mysql-bin.000006 |   515446 |              |      prod        |</span><br><span class="line">+------------------+----------+--------------+------------------+</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>:dango:<strong>从库配置过滤复制</strong></p><p><strong>白名单</strong></p><ul><li>replicate-do-db=prod                    #从库SQL线程只执行prod库的SQL语句</li><li>replicate-do-table=prod.prod        #从库SQL线程只执行prod库里prod表的SQL语句</li><li>replicate-wild-do-table=prod.p*     #从库SQL线程只执行prod库里所有p开头表的SQL语句</li></ul><p>SQL线程只执行 Replicat_Do_DB指定的库的SQL语句</p><p><strong>黑名单</strong></p><ul><li>replicate-ignore-db</li><li>replicate-ignore-table</li><li>replicate-wild-ignore-table</li></ul><p>SQL线程不执行 Replicat_Ignore_DB指定的库的SQL语句</p><h2 id="基于GTID的主从复制">基于GTID的主从复制</h2><p>:dango:<strong>什么是GTID</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">GTID：事务提交做的主从复制（全局事务标识符）</span><br><span class="line">GTID=UUID：主库的身份证号 + TID：事务提交号</span><br><span class="line">3E11FA47-71CA-11E1-9E33-C80AA9429562:23</span><br></pre></td></tr></table></figure><p>:dango:<strong>GTID特性</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(1).支持多线程复制:事实上是针对每个database开启相应的独立线程,即每个库有一个单独的(sqlthread).</span><br><span class="line">(2).支持启用GTID,在配置主从复制,传统的方式里,你需要找到binlog和POS点,然后change master to指向.在mysql5.6里,无须再知道binlog和POS点,只需要知道master的IP/端口/账号密码即可,因为同步复制是自动的,MySQL通过内部机制GTID自动找点同步.</span><br><span class="line">(3).基于Row复制只保存改变的列,大大节省Disk Space/Network resources和Memory usage.</span><br><span class="line">(4).支持把Master 和Slave的相关信息记录在Table中原来是记录在文件里,记录在表里,增强可用性</span><br><span class="line">(5).支持延迟复制</span><br></pre></td></tr></table></figure><p>:dango:<strong>GTID主从配置</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">主库172.16.1.51</span><br><span class="line">从库172.16.1.52、172.16.1.53、172.16.1.54</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1.修改主库配置文件</span></span><br><span class="line">[root@db01 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">server_id=1</span><br><span class="line">log-bin=mysql-bin</span><br><span class="line">gtid_mode=ON</span><br><span class="line">enforce_gtid_consistency</span><br><span class="line"><span class="comment">#msyql5.6需要再加下面一个（5.7不需要）</span></span><br><span class="line">log_slave_updates</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.修改从库配置文件</span></span><br><span class="line">[root@db01 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">server_id=2</span><br><span class="line">log-bin=mysql-bin</span><br><span class="line">gtid_mode=ON</span><br><span class="line">enforce_gtid_consistency</span><br><span class="line"><span class="comment">#msyql5.6需要再加下面一个（5.7不需要）</span></span><br><span class="line">log_slave_updates</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@db01 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">server_id=3</span><br><span class="line">log-bin=mysql-bin</span><br><span class="line">gtid_mode=ON</span><br><span class="line">enforce_gtid_consistency</span><br><span class="line"><span class="comment">#msyql5.6需要再加下面一个（5.7不需要）</span></span><br><span class="line">log_slave_updates</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@db01 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">server_id=4</span><br><span class="line">log-bin=mysql-bin</span><br><span class="line">gtid_mode=ON</span><br><span class="line">enforce_gtid_consistency</span><br><span class="line"><span class="comment">#msyql5.6需要再加下面一个（5.7不需要）</span></span><br><span class="line">log_slave_updates</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.在主库上创建主从复制用户</span></span><br><span class="line">mysql&gt; grant replication slave on *.* to rep@<span class="string">&#x27;172.16.1.5%&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.所有从库上执行change master</span></span><br><span class="line">change master to</span><br><span class="line">master_host=<span class="string">&#x27;172.16.1.53&#x27;</span>,</span><br><span class="line">master_user=<span class="string">&#x27;rep&#x27;</span>,</span><br><span class="line">master_password=<span class="string">&#x27;123&#x27;</span>,</span><br><span class="line">master_auto_position=1;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.所有从库开启主从复制</span></span><br><span class="line">start slave;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看GTID是否开启</span></span><br><span class="line">db01 [(none)]&gt;show variables like <span class="string">&#x27;%gtid%&#x27;</span>;</span><br><span class="line">+---------------------------------+-----------+</span><br><span class="line">| Variable_name                   | Value     |</span><br><span class="line">+---------------------------------+-----------+</span><br><span class="line">| binlog_gtid_simple_recovery     | OFF       |</span><br><span class="line">| enforce_gtid_consistency        | ON        |</span><br><span class="line">| gtid_executed                   |           |</span><br><span class="line">| gtid_mode                       | ON        |</span><br><span class="line">| gtid_next                       | AUTOMATIC |</span><br><span class="line">| gtid_owned                      |           |</span><br><span class="line">| gtid_purged                     |           |</span><br><span class="line">| simplified_binlog_gtid_recovery | OFF       |</span><br><span class="line">+---------------------------------+-----------+</span><br><span class="line"></span><br><span class="line">`注意`</span><br><span class="line"><span class="comment">## MySQL5.6开启GTID</span></span><br><span class="line">gtid_mode=ON // 开启GTID模块</span><br><span class="line">enforce_gtid_consistency // 保证GITD数据强一致性</span><br><span class="line">log-slave-updates // 从库日志更新（1.基于GTID的主从复制 2.双主+keepalived 3.级联复制）</span><br><span class="line">log-bin=mysql-bin // 开启binlog</span><br><span class="line"></span><br><span class="line"><span class="comment">## MySQL5.7开启GTID</span></span><br><span class="line">gtid_mode=ON</span><br><span class="line">enforce_gtid_consistency</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">MySQL主从复制原理及部署，点开看看吧</summary>
    
    
    
    <category term="MySQL" scheme="https://lukme.top/categories/MySQL/"/>
    
    
    <category term="MySQL" scheme="https://lukme.top/tags/MySQL/"/>
    
  </entry>
  
</feed>
