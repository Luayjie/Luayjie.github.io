<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>11-Prometheus数据远端存储</title>
      <link href="/posts/ee6702b0.html"/>
      <url>/posts/ee6702b0.html</url>
      
        <content type="html"><![CDATA[<h2 id="VicoriaMetrics概述">VicoriaMetrics概述</h2><p>VictoriaMetrics是一个快速、经济高效且可扩展的监控解决方案和时间序列数据库。</p><p>官网地址:<br><a href="https://victoriametrics.com/">https://victoriametrics.com/</a></p><p>官方文档:<br><a href="https://docs.victoriametrics.com/">https://docs.victoriametrics.com/</a></p><p>GitHub地址:<br><a href="https://github.com/VictoriaMetrics/VictoriaMetrics">https://github.com/VictoriaMetrics/VictoriaMetrics</a></p><p>部署文档:<br><a href="https://docs.victoriametrics.com/quick-start/">https://docs.victoriametrics.com/quick-start/</a></p><h2 id="部署victoriametrics">部署victoriametrics</h2><p><strong>1. 下载victoriametrics</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@elk02 ~]# wget https://github.com/VictoriaMetrics/VictoriaMetrics/releases/download/v1.93.16/victoria-metrics-linux-amd64-v1.93.16.tar.gz</span><br></pre></td></tr></table></figure><p>**2. 解压软件包 **</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@elk02 ~]# tar xf victoria-metrics-linux-amd64-v1.93.16.tar.gz  -C /usr/local/bin/</span><br></pre></td></tr></table></figure><p><strong>3 编写启动脚本</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@elk02 ~]# <span class="built_in">cat</span> &gt; /etc/systemd/system/victoria-metrics.service &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">[Unit]</span></span><br><span class="line"><span class="string">Description=Linux VictoriaMetrics Server</span></span><br><span class="line"><span class="string">Documentation=https://docs.victoriametrics.com/</span></span><br><span class="line"><span class="string">After=network.target</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">ExecStart=/usr/local/bin/victoria-metrics-prod  \</span></span><br><span class="line"><span class="string">   -httpListenAddr=0.0.0.0:8428 \</span></span><br><span class="line"><span class="string">   -storageDataPath=/data/victoria-metrics \</span></span><br><span class="line"><span class="string">   -retentionPeriod=3</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Install]</span></span><br><span class="line"><span class="string">WantedBy=multi-user.target</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">[root@elk02 ~]# systemctl daemon-reload</span><br><span class="line">[root@elk02 ~]# systemctl <span class="built_in">enable</span> --now victoria-metrics.service</span><br><span class="line">[root@elk02 ~]# systemctl status victoria-metrics</span><br></pre></td></tr></table></figure><p><strong>4 检查端口是否存活</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@elk02 ~]# ss -ntl | grep 8428</span><br><span class="line">LISTEN 0      4096              0.0.0.0:8428       0.0.0.0:*        </span><br></pre></td></tr></table></figure><p><strong>5 查看webUI</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://10.0.0.212:8428/</span><br><span class="line">`此时点到WebUI时候搜索`<span class="string">&#x27;node_cpu_seconds_total&#x27;</span>  是没有任何数据的</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241128130653976.png" alt="image-20241128130653976"></p><h2 id="prometheus配置远端存储">prometheus配置远端存储</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@elk02:1 ~]# vim /softwares/prometheus-2.53.2.linux-amd64/prometheus.yml </span><br><span class="line">···</span><br><span class="line"><span class="comment"># 在顶级字段中配置VictoriaMetrics地址</span></span><br><span class="line">remote_write:</span><br><span class="line">  - url: http://10.0.0.212:8428/api/v1/write</span><br><span class="line">  </span><br><span class="line"><span class="comment">#因为之前配置的prometheus的启动脚本指定了数据存储目录，所以这里为了避免冲突，不使用systemd方式启动</span></span><br><span class="line"></span><br><span class="line">1.停止prometheus</span><br><span class="line">systemctl stop prometheus-server.service </span><br><span class="line"></span><br><span class="line">2.进入prometheus安装目录</span><br><span class="line">[root@elk02:2 ~]# <span class="built_in">cd</span> /softwares/prometheus-2.53.2.linux-amd64/</span><br><span class="line"></span><br><span class="line">3.启动prometheus，指定修改过的配置文件（如果配置没有错误，就会去连接http://10.0.0.212:8428）</span><br><span class="line">./prometheus --config.file=<span class="string">&quot;prometheus.yml&quot;</span>  </span><br><span class="line"></span><br><span class="line">4.查看WebUI</span><br><span class="line">http://10.0.0.212:8428/</span><br><span class="line">`此时点到WebUI时候搜索`<span class="string">&#x27;node_cpu_seconds_total&#x27;</span> 发现数据过来了</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241128133415223.png" alt="image-20241128133415223"></p><blockquote><p>温馨提示：</p><p>​    如果此时没有数据接入，就不要进行下面步骤了，不然就一直是错的，出数据就行</p></blockquote><p><strong>4.配置grafana的数据源及URL</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">选择数据源还是prometheus，名字区分下，地址更换下就行了</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241128134037207.png" alt="image-20241128134037207"></p><h2 id="部署参考连接">部署参考连接</h2><p>单点部署参考链接:<br><a href="https://docs.victoriametrics.com/quick-start/#starting-vm-single-from-a-binary">https://docs.victoriametrics.com/quick-start/#starting-vm-single-from-a-binary</a></p><p>集群部署参考链接:<br><a href="https://docs.victoriametrics.com/quick-start/#starting-vm-cluster-from-binaries">https://docs.victoriametrics.com/quick-start/#starting-vm-cluster-from-binaries</a><br><a href="https://docs.victoriametrics.com/cluster-victoriametrics/#architecture-overview">https://docs.victoriametrics.com/cluster-victoriametrics/#architecture-overview</a></p><p>部署集群时软件包要下载对应的集群cluster版本:<br>wget <a href="https://github.com/VictoriaMetrics/VictoriaMetrics/releases/download/v1.93.16/victoria-metrics-linux-amd64-v1.93.16-cluster.tar.gz">https://github.com/VictoriaMetrics/VictoriaMetrics/releases/download/v1.93.16/victoria-metrics-linux-amd64-v1.93.16-cluster.tar.gz</a></p><p>软件包会提供3个程序，该程序对应了集群的3个组件<br>vmstorage:<br>存储原始数据，并返回给定标签过滤器在给定时间范围内的查询数据<br>vminsert:<br>接受摄入的数据，并根据对度量名称及其所有标签的一致散列在vmstorage节点之间传播<br>vmselect:<br>通过从所有配置的vmstorage节点获取所需数据来执行传入查询</p><p><strong>集群部署VictoriaMetrics架构</strong></p><p><img src="https://cos.lukme.top/Pic/VictoriaMetrics-cluster.png" alt="VictoriaMetrics集群架构图解"></p>]]></content>
      
      
      <categories>
          
          <category> 监控 </category>
          
          <category> Prometheus </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Prometheus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>10-Prometheus的联邦模式</title>
      <link href="/posts/d10c7e6f.html"/>
      <url>/posts/d10c7e6f.html</url>
      
        <content type="html"><![CDATA[<h2 id="联邦模式配置">联邦模式配置</h2><p><strong>1.prometheus联邦模式架构概述</strong><br>默认情况下，prometheus采集的数据会存储到本地，这意味者prometheus在这种工作模式下，可能会存在单机存储的瓶颈。为了解决prometheus对于数据的采集压力，我们可以采用联邦模式来部署prometheus。</p><blockquote><p>这里 91,92,93 节点分别对应本篇的 211,212,213 节点</p></blockquote><p><img src="https://cos.lukme.top/Pic/prometheus-federate.jpg" alt="联邦模式Prometheus server"></p><p><strong>2.部署Prometheus的集群环境</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">1. 212,213节点部署Prometheus</span><br><span class="line">  略，步骤见01-Prometheus介绍及部署</span><br><span class="line"></span><br><span class="line">`212节点`</span><br><span class="line">2. 212节点配置Prometheus</span><br><span class="line">[root@elk02:1 ~]# vim /softwares/prometheus-2.53.2.linux-amd64/prometheus.yml </span><br><span class="line">···</span><br><span class="line">  - job_name: <span class="string">&#x27;file-sd-discovery-212&#x27;</span></span><br><span class="line">    file_sd_configs:</span><br><span class="line">      - files:</span><br><span class="line">        - /softwares/prometheus-2.53.2.linux-amd64/file-sd.yaml</span><br><span class="line"></span><br><span class="line">3. 编写Prometheus的基于文件服务的发现</span><br><span class="line">[root@elk02:0 ~]# <span class="built_in">cat</span> &gt; /softwares/prometheus-2.53.2.linux-amd64/file-sd.yaml &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">- targets:</span></span><br><span class="line"><span class="string">  - 10.0.0.211:9100</span></span><br><span class="line"><span class="string">  labels:</span></span><br><span class="line"><span class="string">    &quot;tag&quot;: &quot;elk01&quot;</span></span><br><span class="line"><span class="string">    &quot;apps&quot;: &quot;yaml&quot;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">4. 检查Prometheus语法</span><br><span class="line">[root@elk02:0 ~]# /softwares/prometheus-2.53.2.linux-amd64/promtool check config /softwares/prometheus-2.53.2.linux-amd64/prometheus.yml </span><br><span class="line"></span><br><span class="line">5.Prometheus热加载</span><br><span class="line">[root@elk02:0 ~]# curl -X POST http://10.0.0.212:9090/-/reload</span><br><span class="line"></span><br><span class="line">6.访问Prometheus的WebUI</span><br><span class="line">http://10.0.0.212:9090/targets?search=</span><br><span class="line"></span><br><span class="line">`213节点`</span><br><span class="line">1. 213 节点配置Prometheus</span><br><span class="line">[root@elk03:1 ~]# vim /softwares/prometheus-2.53.2.linux-amd64/prometheus.yml </span><br><span class="line">···</span><br><span class="line">  - job_name: <span class="string">&#x27;file-sd-discovery-212&#x27;</span></span><br><span class="line">    file_sd_configs:</span><br><span class="line">      - files:</span><br><span class="line">        - /softwares/prometheus-2.53.2.linux-amd64/file-sd.yaml</span><br><span class="line"></span><br><span class="line">2.编写Prometheus的基于文件服务的发现</span><br><span class="line">[root@elk03:0 ~]# <span class="built_in">cat</span> &gt; /softwares/prometheus-2.53.2.linux-amd64/file-sd.yaml &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">- targets:</span></span><br><span class="line"><span class="string">  - 10.0.0.212:9100</span></span><br><span class="line"><span class="string">  - 10.0.0.213:9100</span></span><br><span class="line"><span class="string">  labels:</span></span><br><span class="line"><span class="string">    &quot;tag&quot;: &quot;elk02/03&quot;</span></span><br><span class="line"><span class="string">    &quot;apps&quot;: &quot;yaml&quot;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">3. 检查Prometheus语法</span><br><span class="line">[root@elk03:0 ~]# /softwares/prometheus-2.53.2.linux-amd64/promtool check config /softwares/prometheus-2.53.2.linux-amd64/prometheus.yml </span><br><span class="line"></span><br><span class="line">4.Prometheus热加载</span><br><span class="line">[root@elk03:0 ~]# curl -X POST http://10.0.0.213:9090/-/reload</span><br><span class="line"></span><br><span class="line">5.访问Prometheus的WebUI</span><br><span class="line">http://10.0.0.213:9090/targets?search=</span><br></pre></td></tr></table></figure><p><strong>3.修改211节点配置</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">1.修改Prometheus配置文件</span><br><span class="line">[root@elk01:0 ~]# vim /softwares/prometheus-2.53.2.linux-amd64/prometheus.yml </span><br><span class="line">···</span><br><span class="line">  - job_name: <span class="string">&quot;prometheus-federate-212&quot;</span></span><br><span class="line">    metrics_path: <span class="string">&quot;/federate&quot;</span></span><br><span class="line">    honor_labels: <span class="literal">true</span></span><br><span class="line">    params:</span><br><span class="line">       <span class="string">&quot;match[]&quot;</span>:</span><br><span class="line">       - <span class="string">&#x27;&#123;job=&quot;promethues&quot;&#125;&#x27;</span></span><br><span class="line">       - <span class="string">&#x27;&#123;__name__=~&quot;job:.*&quot;&#125;&#x27;</span></span><br><span class="line">       - <span class="string">&#x27;&#123;__name__=~&quot;node.*&quot;&#125;&#x27;</span></span><br><span class="line">    static_configs:</span><br><span class="line">    - targets:</span><br><span class="line">        - <span class="string">&quot;10.0.0.212:9090&quot;</span></span><br><span class="line"></span><br><span class="line">  - job_name: <span class="string">&quot;prometheus-federate-213&quot;</span></span><br><span class="line">    metrics_path: <span class="string">&quot;/federate&quot;</span></span><br><span class="line">    honor_labels: <span class="literal">true</span></span><br><span class="line">    params:</span><br><span class="line">       <span class="string">&quot;match[]&quot;</span>:</span><br><span class="line">       - <span class="string">&#x27;&#123;job=&quot;promethues&quot;&#125;&#x27;</span></span><br><span class="line">       - <span class="string">&#x27;&#123;__name__=~&quot;job:.*&quot;&#125;&#x27;</span></span><br><span class="line">       - <span class="string">&#x27;&#123;__name__=~&quot;node.*&quot;&#125;&#x27;</span></span><br><span class="line">    static_configs:</span><br><span class="line">    - targets:</span><br><span class="line">        - <span class="string">&quot;10.0.0.213:9090&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2.检查Prometheus语法</span><br><span class="line">3.Prometheus热加载</span><br></pre></td></tr></table></figure><p><strong>4.验证</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">213上可查询的语法（可自行访问212或者213的Prometheus的WebUI界面找到promQL语法查询放在211节点上验证）</span><br><span class="line">node_cpu_seconds_total&#123;apps=<span class="string">&quot;yaml&quot;</span>, cpu=<span class="string">&quot;0&quot;</span>, job=<span class="string">&quot;file-sd-discovery-213&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">在211上查询是否有结果</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241128112719771.png" alt="image-20241128112719771"></p>]]></content>
      
      
      <categories>
          
          <category> 监控 </category>
          
          <category> Prometheus </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Prometheus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>09-Prometheus的服务发现</title>
      <link href="/posts/86e5bc5f.html"/>
      <url>/posts/86e5bc5f.html</url>
      
        <content type="html"><![CDATA[<h2 id="服务发现的常见类别说明">服务发现的常见类别说明</h2><pre><code>- 静态配置： static_configs每次修改配置后，都需要重新加载配置或者重启服务。- 动态配置每次修改后，无需重新加载配置或者重启服务。常见的动态配置:&lt;file_sd_config&gt;基于文件的服务发现。https://prometheus.io/docs/prometheus/2.53/configuration/configuration/#file_sd_config&lt;consul_sd_config&gt;基于consul的服务发现。https://prometheus.io/docs/prometheus/2.53/configuration/configuration/#consul_sd_config&lt;kubernetes_sd_config&gt;基于K8S实现的服务发现https://prometheus.io/docs/prometheus/2.53/configuration/configuration/#kubernetes_sd_config&lt;dns_sd_config&gt;:基于DNS实现服务发现。https://prometheus.io/docs/prometheus/2.53/configuration/configuration/#dns_sd_config&lt;docker_sd_config&gt;：基于docker engine的服务发现https://prometheus.io/docs/prometheus/2.53/configuration/configuration/#docker_sd_config&lt;http_sd_config&gt;：基于http的服务发现。https://prometheus.io/docs/prometheus/2.53/configuration/configuration/#http_sd_config</code></pre><h2 id="基于文件的服务发现">基于文件的服务发现</h2><p><strong>1.修改Prometheus的配置文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:5 ~]# vim /softwares/prometheus-2.53.2.linux-amd64/prometheus.yml </span><br><span class="line">...</span><br><span class="line">  - job_name: <span class="string">&quot;linux-file-sd-config&quot;</span></span><br><span class="line">    file_sd_configs:</span><br><span class="line">     - files:</span><br><span class="line">        -  /softwares/prometheus-2.53.2.linux-amd64/test.yaml</span><br><span class="line">        -  /softwares/prometheus-2.53.2.linux-amd64/test.json</span><br><span class="line"></span><br><span class="line"><span class="comment">#检查Prometheus语法是否有误</span></span><br><span class="line">[root@elk01:0 ~]# /softwares/prometheus-2.53.2.linux-amd64/promtool check config /softwares/prometheus-2.53.2.linux-amd64/prometheus.yml </span><br><span class="line"></span><br><span class="line"><span class="comment">#Prometheus热加载</span></span><br><span class="line">[root@elk01:0 ~]# curl -X POST http://10.0.0.211:9090/-/reload</span><br><span class="line"></span><br><span class="line">此时访问Prometheus的webui，发现没有显示新的服务</span><br><span class="line">http://10.0.0.211:9090/targets</span><br></pre></td></tr></table></figure><p><strong>2.编辑服务发现文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">`yaml格式：`</span><br><span class="line">[root@elk01:5 ~]# vim /softwares/prometheus-2.53.2.linux-amd64/test.yaml</span><br><span class="line">- targets:</span><br><span class="line">    - 10.0.0.213:9100</span><br><span class="line">    - 10.0.0.211:9100</span><br><span class="line">    - 10.0.0.212:3000</span><br><span class="line">    </span><br><span class="line">`json格式`</span><br><span class="line">[root@elk01:5 ~]# vim /softwares/prometheus-2.53.2.linux-amd64/test.json</span><br><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;targets&quot;</span>: [ <span class="string">&quot;10.0.0.211:9100&quot;</span>,<span class="string">&quot;10.0.0.212:9100&quot;</span> ]</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><strong>3.测试验证</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">文件保存后直接访问webUI，即可发现就可以显示了，不需要热加载Prometheus</span><br><span class="line">http://10.0.0.211:9090/targets</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241127135024922.png" alt="image-20241127135024922"></p><h2 id="基于文件发现和基于consul对比">基于文件发现和基于consul对比</h2><p>基于文件的服务发现是在Prometheus本地基于某个文件读取要监控的节点;</p><p>基于consul服务发现是需要单独部署一套consul集群，Prometheus-server去对应的consul集群获取需要监控的节点。</p><h2 id="部署基于console的服务发现">部署基于console的服务发现</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">1 下载consul</span><br><span class="line">wget https://releases.hashicorp.com/consul/1.19.2/consul_1.19.2_linux_amd64.zip</span><br><span class="line"></span><br><span class="line">2 解压consul</span><br><span class="line">unzip consul_1.19.2_linux_amd64.zip -d /usr/local/bin/</span><br><span class="line"></span><br><span class="line">3 运行consul 集群</span><br><span class="line">服务端211:</span><br><span class="line">consul agent -server -bootstrap -<span class="built_in">bind</span>=10.0.0.211 -data-dir=/data/consul -client=10.0.0.211 -ui</span><br><span class="line"></span><br><span class="line">客户端212:</span><br><span class="line">consul agent  -<span class="built_in">bind</span>=10.0.0.212 -data-dir=/data/consul -client=10.0.0.212 -ui -retry-join=10.0.0.211</span><br><span class="line"></span><br><span class="line">客户端213:</span><br><span class="line">consul agent -server -<span class="built_in">bind</span>=10.0.0.213 -data-dir=/data/consul -client=10.0.0.213 -ui -retry-join=10.0.0.211</span><br><span class="line"></span><br><span class="line">4 查看各节点的监听端口</span><br><span class="line">ss -ntl | grep 8500</span><br><span class="line"></span><br><span class="line">5 访问console服务的WebUI</span><br><span class="line">http://10.0.0.213:8500/ui/dc1/nodes</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241127144212517.png" alt="image-20241127144212517"></p><h2 id="基于consul的服务发现应用">基于consul的服务发现应用</h2><p><strong>1 修改prometheus的配置文件并重新加载配置</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:1 ~]# vim /softwares/prometheus-2.53.2.linux-amd64/prometheus.yml </span><br><span class="line">  ...</span><br><span class="line">  - job_name: <span class="string">&quot;Linux-consul-seriver-discovery&quot;</span></span><br><span class="line">    <span class="comment"># 配置基于consul的服务发现</span></span><br><span class="line">    consul_sd_configs:</span><br><span class="line">        <span class="comment"># 指定consul的服务器地址，若不指定，则默认值为&quot;localhost:8500&quot;.</span></span><br><span class="line">      - server: 10.0.0.213:8500</span><br><span class="line">      - server: 10.0.0.212:8500</span><br><span class="line">      - server: 10.0.0.211:8500</span><br><span class="line">    relabel_configs:</span><br><span class="line">        <span class="comment"># 匹配consul的源标签字段，表示服务名称</span></span><br><span class="line">      - source_labels: [__meta_consul_service]</span><br><span class="line">        <span class="comment"># 指定源标签的正则表达式，若不定义，默认值为&quot;(.*)&quot;</span></span><br><span class="line">        regex: consul</span><br><span class="line">        <span class="comment"># 执行动作为删除，默认值为&quot;replace&quot;,有效值有多种</span></span><br><span class="line">        <span class="comment">#   https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_action</span></span><br><span class="line">        action: drop</span><br><span class="line">        </span><br><span class="line"><span class="comment">#检查Prometheus语法是否有误</span></span><br><span class="line">[root@elk01:0 ~]# /softwares/prometheus-2.53.2.linux-amd64/promtool check config /softwares/prometheus-2.53.2.linux-amd64/prometheus.yml </span><br><span class="line"></span><br><span class="line"><span class="comment">#Prometheus热加载</span></span><br><span class="line">[root@elk01:0 ~]# curl -X POST http://10.0.0.211:9090/-/reload</span><br></pre></td></tr></table></figure><p><strong>2.被监控节点注册到console集群</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01 ~]# curl -X PUT -d <span class="string">&#x27;&#123;&quot;id&quot;:&quot;elk211&quot;,&quot;name&quot;:&quot;elk01&quot;,&quot;address&quot;:&quot;10.0.0.211&quot;,&quot;port&quot;:9100,&quot;tags&quot;:[&quot;node-exporter&quot;],&quot;checks&quot;: [&#123;&quot;http&quot;:&quot;http://10.0.0.211:9100&quot;,&quot;interval&quot;:&quot;5m&quot;&#125;]&#125;&#x27;</span> http://10.0.0.213:8500/v1/agent/service/register</span><br><span class="line"></span><br><span class="line">[root@elk02 ~]# curl -X PUT -d <span class="string">&#x27;&#123;&quot;id&quot;:&quot;elk212&quot;,&quot;name&quot;:&quot;elk212&quot;,&quot;address&quot;:&quot;10.0.0.212&quot;,&quot;port&quot;:9100,&quot;tags&quot;:[&quot;node-exporter&quot;],&quot;checks&quot;: [&#123;&quot;http&quot;:&quot;http://10.0.0.212:9100&quot;,&quot;interval&quot;:&quot;5m&quot;&#125;]&#125;&#x27;</span> http://10.0.0.213:8500/v1/agent/service/register</span><br><span class="line"></span><br><span class="line">[root@elk03 ~]# curl -X PUT -d <span class="string">&#x27;&#123;&quot;id&quot;:&quot;elk213&quot;,&quot;name&quot;:&quot;elk213&quot;,&quot;address&quot;:&quot;10.0.0.213&quot;,&quot;port&quot;:9100,&quot;tags&quot;:[&quot;node-exporter&quot;],&quot;checks&quot;: [&#123;&quot;http&quot;:&quot;http://10.0.0.213:9100&quot;,&quot;interval&quot;:&quot;5m&quot;&#125;]&#125;&#x27;</span> http://10.0.0.213:8500/v1/agent/service/register</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">`详解`</span><br><span class="line"><span class="string">&quot;id&quot;</span>:<span class="string">&quot;elk211&quot;</span>,<span class="string">&quot;name&quot;</span>:<span class="string">&quot;elk01&quot;</span>,<span class="string">&quot;address&quot;</span>:<span class="string">&quot;10.0.0.211&quot;</span>,<span class="string">&quot;port&quot;</span>:9100 监控211节点，地址和端口</span><br><span class="line">checks<span class="string">&quot;: [&#123;&quot;</span>http<span class="string">&quot;:&quot;</span>http://10.0.0.211:9100<span class="string">&quot;,&quot;</span>interval<span class="string">&quot;:&quot;</span>5m<span class="string">&quot;&#125;]&#125;&#x27;  检查节点，和间隔时间</span></span><br><span class="line"><span class="string">http://10.0.0.213:8500/v1/agent/service/register                注册到console集群（写211,212,213都可以）</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><p><strong>3.检查consul的WebUI</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://10.0.0.212:8500/ui/dc1/services</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241127153448968.png" alt="image-20241127153448968"></p><p><strong>4 检查Prometheus的WebUI</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://10.0.0.211:9090/targets?search=</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241127153520806.png" alt="image-20241127153520806"></p><p><strong>5.注销节点</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -X PUT http://10.0.0.213:8500/v1/agent/service/deregister/elk213</span><br><span class="line"></span><br><span class="line">elk213  `这里写的是<span class="built_in">id</span>，而不是name`</span><br></pre></td></tr></table></figure><p>注意，也可以使用POSTMAN直接进行如下操作，需要使用PUT方法。<br>PUT <a href="http://10.0.0.213:8500/v1/agent/service/deregister/elk213">http://10.0.0.213:8500/v1/agent/service/deregister/elk213</a></p><h2 id="Prometheus监控console集群">Prometheus监控console集群</h2><p>Prometheus监控consul集群</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">1.下载consul exporter</span><br><span class="line">[root@elk02:5 ~]# wget https://github.com/prometheus/consul_exporter/releases/download/v0.12.1/consul_exporter-0.12.1.linux-amd64.tar.gz</span><br><span class="line"></span><br><span class="line">2.解压软件包 </span><br><span class="line">[root@elk02:5 ~]# tar xf consul_exporter-0.12.1.linux-amd64.tar.gz  -C /usr/local/bin/ consul_exporter-0.12.1.linux-amd64/consul_exporter --strip-components=1</span><br><span class="line"></span><br><span class="line">3.启动console exporter </span><br><span class="line">[root@elk02:5 ~]# consul_exporter --consul.server=<span class="string">&quot;http://10.0.0.213:8500&quot;</span> --web.telemetry-path=<span class="string">&quot;/metrics&quot;</span> --web.listen-address=:9107 </span><br><span class="line"></span><br><span class="line">4.访问consul exporter的WebUI</span><br><span class="line">http://10.0.0.212:9107/metrics</span><br><span class="line"></span><br><span class="line">5.向consul注册(或者修改Prometheus配置文件，静态发现需要热加载Prometheus)</span><br><span class="line">[root@elk02:5 ~]# curl -X PUT -d <span class="string">&#x27;&#123;&quot;id&quot;:&quot;elk212-consul&quot;,&quot;name&quot;:&quot;consul-cluster&quot;,&quot;address&quot;:&quot;10.0.0.212&quot;,&quot;port&quot;:9107,&quot;tags&quot;:[&quot;node-exporter&quot;],&quot;checks&quot;: [&#123;&quot;http&quot;:&quot;http://10.0.0.212:9107&quot;,&quot;interval&quot;:&quot;5m&quot;&#125;]&#125;&#x27;</span> http://10.0.0.213:8500/v1/agent/service/register</span><br><span class="line"></span><br><span class="line">6.访问consul的WebUI</span><br><span class="line">http://10.0.0.212:8500/ui/dc1/services/consul-cluster/instances</span><br><span class="line"></span><br><span class="line">7.访问prometheus的WebUI</span><br><span class="line">http://10.0.0.211:9090/targets</span><br><span class="line"></span><br><span class="line">8.grafana导入模板ID </span><br><span class="line">12049</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 监控 </category>
          
          <category> Prometheus </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Prometheus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>08-部署pushgetway和altermanager</title>
      <link href="/posts/2cdee406.html"/>
      <url>/posts/2cdee406.html</url>
      
        <content type="html"><![CDATA[<h2 id="部署pushgatway">部署pushgatway</h2><p>Prometheus自定义监控组件pushgateway<br>1.下载pushgateway</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@elk02:0 ~]# wget https://github.com/prometheus/pushgateway/releases/download/v1.9.0/pushgateway-1.9.0.linux-amd64.tar.gz</span><br></pre></td></tr></table></figure><p>2.解压软件包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@elk02:0 ~]# tar xf pushgateway-1.9.0.linux-amd64.tar.gz -C /softwares/</span><br></pre></td></tr></table></figure><p>3.运行pushgateway组件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@elk02:0 ~]# <span class="built_in">cd</span> /softwares/pushgateway-1.9.0.linux-amd64/</span><br><span class="line">[root@elk02:0 ~]# ./pushgateway --web.listen-address=:9091 --web.telemetry-path=<span class="string">&quot;/metrics&quot;</span> </span><br></pre></td></tr></table></figure><p>4.访问pushgetway组件的WebUI</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://10.0.0.212:9091</span><br></pre></td></tr></table></figure><p>5.推送测试数据到pushgateway组件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@elk211 ~]# <span class="built_in">echo</span> <span class="string">&quot;student_online 75&quot;</span> | curl --data-binary @-  http://10.0.0.212:9091/metrics/job/student/instance/10.0.0.211</span><br></pre></td></tr></table></figure><p>6.再次访问pushgetway组件的WebUI</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://10.0.0.92:9091/#</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241124112052347.png" alt="image-20241124112052347"></p><p>7.修改Prometheus的配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@elk02 ~]# vim /softwares/prometheus-2.53.2.linux-amd64/prometheus.yml </span><br><span class="line">...</span><br><span class="line">    - job_name: <span class="string">&quot;pushgateway&quot;</span></span><br><span class="line">      <span class="comment"># 用于解决标签的冲突问题，有效值为: true和false，默认值为false</span></span><br><span class="line">      <span class="comment"># 当设置为true时，将保留抓取的标签以忽略服务器自身的标签。说白了会覆盖原有标签。</span></span><br><span class="line">      <span class="comment"># 当设置为false时，则不会覆盖原有标签，而是在标点前加了一个&quot;exported_&quot;前缀。</span></span><br><span class="line">      honor_labels: <span class="literal">true</span></span><br><span class="line">      static_configs:</span><br><span class="line">        - targets: </span><br><span class="line">          - <span class="string">&quot;10.0.0.212:9091&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#检查Prometheus语法是否有误</span></span><br><span class="line">[root@elk01:0 ~]# /softwares/prometheus-2.53.2.linux-amd64/promtool check config /softwares/prometheus-2.53.2.linux-amd64/prometheus.yml </span><br><span class="line"></span><br><span class="line"><span class="comment">#Prometheus热加载</span></span><br><span class="line">[root@elk01:0 ~]# curl -X POST http://10.0.0.211:9090/-/reload</span><br><span class="line"></span><br><span class="line"><span class="comment">#浏览器访问</span></span><br><span class="line">http://10.0.0.211:9090/targets?search=</span><br></pre></td></tr></table></figure><h2 id="Alertmanager环境部署">Alertmanager环境部署</h2><p><strong>1.altermanager概述</strong><br>用于prometheus server的告警功能的组件，目前支持多种告警媒介，包括但不限于邮件告警，钉钉告警，企业微信告警等。</p><p><strong>2.部署alermanager组件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">1.下载软件包</span><br><span class="line">[root@elk02:1 ~]# wget https://github.com/prometheus/alertmanager/releases/download/v0.27.0/alertmanager-0.27.0.linux-amd64.tar.gz</span><br><span class="line"></span><br><span class="line">2. 解压软件包</span><br><span class="line">[root@elk02:1 ~]# tar xf alertmanager-0.27.0.linux-amd64.tar.gz  -C /softwares/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3.修改alermanager的配置文件</span><br><span class="line">[root@elk02:1 ~]# vim /softwares/alertmanager-0.27.0.linux-amd64/alertmanager.yml </span><br><span class="line">global:</span><br><span class="line">  resolve_timeout: 5m</span><br><span class="line">  smtp_from: <span class="string">&#x27;1968554226@qq.com&#x27;</span></span><br><span class="line">  smtp_smarthost: <span class="string">&#x27;smtp.qq.com:465&#x27;</span></span><br><span class="line">  smtp_auth_username: <span class="string">&#x27;1968554226@qq.com&#x27;</span></span><br><span class="line">  smtp_auth_password: <span class="string">&#x27;xwghtaasufprewcb&#x27;</span></span><br><span class="line">  smtp_require_tls: <span class="literal">false</span></span><br><span class="line">  smtp_hello: <span class="string">&#x27;qq.com&#x27;</span></span><br><span class="line">route:</span><br><span class="line">  group_by: [<span class="string">&#x27;alertname&#x27;</span>]</span><br><span class="line">  group_wait: 5s</span><br><span class="line">  group_interval: 5s</span><br><span class="line">  repeat_interval: 30s</span><br><span class="line">  receiver: <span class="string">&#x27;email&#x27;</span></span><br><span class="line">receivers:</span><br><span class="line">- name: <span class="string">&#x27;email&#x27;</span></span><br><span class="line">  email_configs:</span><br><span class="line">  - to: <span class="string">&#x27;3078155561@qq.com&#x27;</span></span><br><span class="line">    send_resolved: <span class="literal">true</span></span><br><span class="line">inhibit_rules:</span><br><span class="line">  - source_match:</span><br><span class="line">      severity: <span class="string">&#x27;critical&#x27;</span></span><br><span class="line">    target_match:</span><br><span class="line">      severity: <span class="string">&#x27;warning&#x27;</span></span><br><span class="line">    equal: [<span class="string">&#x27;alertname&#x27;</span>, <span class="string">&#x27;dev&#x27;</span>, <span class="string">&#x27;instance&#x27;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">4.启动alermanager</span><br><span class="line">[root@elk02:1 ~]# <span class="built_in">cd</span> /softwares/alertmanager-0.27.0.linux-amd64/</span><br><span class="line">[root@elk02:1 alertmanager-0.27.0.linux-amd64]# ./alertmanager </span><br><span class="line"></span><br><span class="line">5.访问webui</span><br><span class="line">http://10.0.0.212:9093/#/status</span><br></pre></td></tr></table></figure><p><strong>3.修改Prometheus配置文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:0 ~]# vim /softwares/prometheus-2.53.2.linux-amd64/prometheus.yml </span><br><span class="line">···</span><br><span class="line"><span class="comment"># Alertmanager configuration</span></span><br><span class="line">alerting:</span><br><span class="line">  alertmanagers:</span><br><span class="line">    - static_configs:</span><br><span class="line">        - targets:</span><br><span class="line">          - 10.0.0.212:9093</span><br><span class="line"></span><br><span class="line"><span class="comment"># Load rules once and periodically evaluate them according to the global &#x27;evaluation_interval&#x27;.</span></span><br><span class="line">rule_files:</span><br><span class="line">  - <span class="string">&quot;/softwares/prometheus-2.53.2.linux-amd64/status-rules.yaml&quot;</span></span><br></pre></td></tr></table></figure><p><strong>4.修改告警规则</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /softwares/prometheus-2.53.2.linux-amd64/status-rules.yaml &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">groups:</span></span><br><span class="line"><span class="string">- name: service_status</span></span><br><span class="line"><span class="string">  rules:</span></span><br><span class="line"><span class="string">  - alert: 10.0.0.213:9100节点挂掉啦</span></span><br><span class="line"><span class="string">    expr: up&#123;instance=&quot;10.0.0.213:9100&quot;&#125; == 0</span></span><br><span class="line"><span class="string">    for: 15s</span></span><br><span class="line"><span class="string">    labels:</span></span><br><span class="line"><span class="string">      service: node_exporter</span></span><br><span class="line"><span class="string">      porter: 9100</span></span><br><span class="line"><span class="string">    annotations:</span></span><br><span class="line"><span class="string">      summary: &quot;&#123;&#123; $labels.instance &#125;&#125; 已停止运行超过 15s！&quot;</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p><strong>5.重新加载Prometheus配置</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#检查Prometheus语法是否有误</span></span><br><span class="line">[root@elk01:0 ~]# /softwares/prometheus-2.53.2.linux-amd64/promtool check config /softwares/prometheus-2.53.2.linux-amd64/prometheus.yml </span><br><span class="line"></span><br><span class="line"><span class="comment">#Prometheus热加载</span></span><br><span class="line">[root@elk01:0 ~]# curl -X POST http://10.0.0.211:9090/-/reload</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241127094655913.png" alt="image-20241127094655913"></p><p>6.验证告警</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">停止elk3的node_exporter服务</span><br><span class="line">[root@elk03:0 ~]# systemctl stop node-exporter.service </span><br><span class="line"></span><br><span class="line">问题未修复没间隔30s发一次邮件（自己可设置）</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241127095054688.png" alt="image-20241127095054688"></p><p>告警邮件</p><p><img src="https://cos.lukme.top/Pic/image-20241127095509855.png" alt="image-20241127095509855"></p><h2 id="修改告警模板">修改告警模板</h2><p><strong>1. 告警模板介绍</strong><br>默认的告警信息界面有些简单，可以借助告警的模板信息，对告警信息进行丰富，需要借助于Alertmanager的模板功能来实现。</p><p>告警模板的使用流程如下:<br>- 分析关键信息<br>- 定制模板内容<br>- Alertmanager加载模板文件<br>- 告警信息使用模板内容属性</p><p>模板文件使用标准Go模板语法，并暴露一些包含时间标签和值的变量。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">标签引用: &#123;&#123; <span class="variable">$label</span>.&lt;label_name&gt; &#125;&#125;</span><br><span class="line">指标样本值引用: &#123;&#123; <span class="variable">$value</span> &#125;&#125;</span><br></pre></td></tr></table></figure><p>为了显式效果，需要了解一些html相关技术，参考链接:<br><a href="https://www.w3school.com.cn/html/index.asp">https://www.w3school.com.cn/html/index.asp</a></p><p><strong>2.自定义模板</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">创建一个模板目录</span><br><span class="line">[root@elk02:0 ~]# <span class="built_in">mkdir</span> /softwares/alertmanager-0.27.0.linux-amd64/tmpl</span><br><span class="line">[root@elk02:0 tmpl]# <span class="built_in">cat</span> email.tmpl</span><br><span class="line">&#123;&#123; define <span class="string">&quot;alert.html&quot;</span> &#125;&#125;</span><br><span class="line">&lt;h1 style=<span class="string">&#x27;color: red;&#x27;</span>&gt;服务异常告警&lt;/h1&gt;</span><br><span class="line">&lt;table border=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">        &lt;<span class="built_in">tr</span>&gt;</span><br><span class="line">                &lt;th&gt;报警项&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;实例&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;报警阀值&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;开始时间&lt;/th&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &#123;&#123; range <span class="variable">$i</span>, <span class="variable">$alert</span> := .Alerts &#125;&#125;</span><br><span class="line">                &lt;<span class="built_in">tr</span>&gt;</span><br><span class="line">                        &lt;td&gt;&#123;&#123; index <span class="variable">$alert</span>.Labels <span class="string">&quot;alertname&quot;</span> &#125;&#125;&lt;/td&gt;</span><br><span class="line">                        &lt;td&gt;&#123;&#123; index <span class="variable">$alert</span>.Labels <span class="string">&quot;instance&quot;</span> &#125;&#125;&lt;/td&gt;</span><br><span class="line">                        &lt;td&gt;&#123;&#123; index <span class="variable">$alert</span>.Annotations <span class="string">&quot;value&quot;</span> &#125;&#125;&lt;/td&gt;</span><br><span class="line">                        &lt;td&gt;&#123;&#123; <span class="variable">$alert</span>.StartsAt &#125;&#125;&lt;/td&gt;</span><br><span class="line">                &lt;/tr&gt;</span><br><span class="line">        &#123;&#123; end &#125;&#125;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line">&#123;&#123; end &#125;&#125;</span><br></pre></td></tr></table></figure><p><strong>3.alertmanager引用自定义模板文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@elk02:0 temp]# vim /softwares/alertmanager-0.27.0.linux-amd64/alertmanager.yml </span><br><span class="line"><span class="comment">#加载模板</span></span><br><span class="line">templates:</span><br><span class="line">  - <span class="string">&#x27;./tmpl/*.tmpl&#x27;</span></span><br><span class="line">···</span><br><span class="line">receivers:</span><br><span class="line">- name: <span class="string">&#x27;email&#x27;</span></span><br><span class="line">  email_configs:</span><br><span class="line">  - to: <span class="string">&#x27;3078155561@qq.com&#x27;</span></span><br><span class="line">    send_resolved: <span class="literal">true</span></span><br><span class="line">    <span class="comment"># 添加此行，定制邮件的标题，对于&quot;&#123;&#123;&#125;&#125;&quot;属性用于加载其他信息，需要使用单引号括住。</span></span><br><span class="line">    headers: &#123; Subject: <span class="string">&quot;[WARN] 报警邮件&quot;</span> &#125;</span><br><span class="line">    <span class="comment"># 添加此行，调用模板显式邮件正文，对于&quot;&#123;&#125;&quot;不需要使用单引号，否则服务启动不成功。</span></span><br><span class="line">    html: <span class="string">&#x27;&#123;&#123; template &quot;alert.html&quot; . &#125;&#125;&#x27;</span></span><br><span class="line">      <span class="comment">#alter.html是模板里定义的的define，.代表的是加载</span></span><br></pre></td></tr></table></figure><p><strong>4.altermanager语法检查</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@elk02:0 alertmanager-0.27.0.linux-amd64]# <span class="built_in">pwd</span></span><br><span class="line">/softwares/alertmanager-0.27.0.linux-amd64</span><br><span class="line">[root@elk02:0 alertmanager-0.27.0.linux-amd64]# ./amtool check-config ./alertmanager.yml </span><br><span class="line">Checking <span class="string">&#x27;./alertmanager.yml&#x27;</span>  SUCCESS</span><br><span class="line">Found:</span><br><span class="line"> - global config</span><br><span class="line"> - route</span><br><span class="line"> - 1 inhibit rules</span><br><span class="line"> - 1 receivers</span><br><span class="line"> - 1 templates</span><br><span class="line">  SUCCESS</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment">#altermanager自带的语法检查</span></span><br></pre></td></tr></table></figure><p><strong>5.重新启动altermanager</strong></p><p>上面我们定制邮件内容中包含阈值的部分，而我们在规则中并没有指定，所以prometheus需要修改以下规则文件。</p><p><strong>6.修改规则文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:1 ~]# vim /softwares/prometheus-2.53.2.linux-amd64/status-rules.yaml </span><br><span class="line">···</span><br><span class="line">    annotations:</span><br><span class="line">      summary: <span class="string">&quot;&#123;&#123; .instance &#125;&#125; 已停止运行超过 15s！&quot;</span></span><br><span class="line">      value: <span class="string">&quot;&#123;&#123; <span class="variable">$value</span> &#125;&#125;&quot;</span></span><br></pre></td></tr></table></figure><p><strong>7.检查Prometheus配置文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#检查Prometheus语法是否有误</span></span><br><span class="line">[root@elk01:0 ~]# /softwares/prometheus-2.53.2.linux-amd64/promtool check config /softwares/prometheus-2.53.2.linux-amd64/prometheus.yml </span><br><span class="line"></span><br><span class="line"><span class="comment">#Prometheus热加载</span></span><br><span class="line">[root@elk01:0 ~]# curl -X POST http://10.0.0.211:9090/-/reload</span><br></pre></td></tr></table></figure><p><strong>访问prometheus的WebUI</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10.0.0.91:9090/rules</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241127104621570.png" alt="image-20241127104621570"></p><p><strong>8.验证测试</strong></p><p>停掉exporter服务</p><p><img src="https://cos.lukme.top/Pic/image-20241127110010277.png" alt="image-20241127110010277"></p><p>依据模板可以将告警和恢复模板分开，使用不同模板通知</p><p>推荐阅读:<br><a href="https://prometheus.io/docs/alerting/latest/configuration/">https://prometheus.io/docs/alerting/latest/configuration/</a></p>]]></content>
      
      
      <categories>
          
          <category> 监控 </category>
          
          <category> Prometheus </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Prometheus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>07-监控nginx和tomcat</title>
      <link href="/posts/750619ba.html"/>
      <url>/posts/750619ba.html</url>
      
        <content type="html"><![CDATA[<h2 id="Prometheus监控nginx">Prometheus监控nginx</h2><h3 id="1-编译安装nginx">1 编译安装nginx</h3><p>1.1 安装编译工具</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CentOS：</span><br><span class="line">yum -y install git wget gcc make zlib-devel gcc-c++ libtool openssl openssl-devel</span><br><span class="line"></span><br><span class="line">Ubuntu：</span><br><span class="line">[root@elk93 ~]# apt -y install git wget gcc make zlib1g-dev build-essential libtool openssl libssl-dev</span><br></pre></td></tr></table></figure><p>1.2 克隆nginx-module-vts模块</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git://github.com/vozlt/nginx-module-vts.git</span><br><span class="line"></span><br><span class="line">如果上述连接不好用，可以执行下面代码:</span><br><span class="line">git <span class="built_in">clone</span> https://gitee.com/jasonyin2020/nginx-module-vts.git</span><br></pre></td></tr></table></figure><p>1.3 下载nginx软件包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@elk93 ~]# wget https://nginx.org/download/nginx-1.26.2.tar.gz</span><br></pre></td></tr></table></figure><p>1.4 解压nginx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@elk93 ~]# tar xf nginx-1.26.2.tar.gz </span><br><span class="line"></span><br><span class="line">[root@elk93 ~]# ll nginx-1.26.2</span><br><span class="line">total 860</span><br><span class="line">drwxr-xr-x  8  502 staff   4096 Aug 13 00:39 ./</span><br><span class="line">drwx------ 10 root root    4096 Sep  5 14:35 ../</span><br><span class="line">drwxr-xr-x  6  502 staff   4096 Sep  5 14:35 auto/</span><br><span class="line">-rw-r--r--  1  502 staff 327851 Aug 13 00:39 CHANGES</span><br><span class="line">-rw-r--r--  1  502 staff 501527 Aug 13 00:39 CHANGES.ru</span><br><span class="line">drwxr-xr-x  2  502 staff   4096 Sep  5 14:35 conf/</span><br><span class="line">-rwxr-xr-x  1  502 staff   2611 Aug 12 22:28 configure*</span><br><span class="line">drwxr-xr-x  4  502 staff   4096 Sep  5 14:35 contrib/</span><br><span class="line">drwxr-xr-x  2  502 staff   4096 Sep  5 14:35 html/</span><br><span class="line">-rw-r--r--  1  502 staff   1397 Aug 12 22:28 LICENSE</span><br><span class="line">drwxr-xr-x  2  502 staff   4096 Sep  5 14:35 man/</span><br><span class="line">-rw-r--r--  1  502 staff     49 Aug 12 22:28 README</span><br><span class="line">drwxr-xr-x  9  502 staff   4096 Aug 13 00:39 src/</span><br></pre></td></tr></table></figure><p>1.5 配置nginx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Centos：</span><br><span class="line"><span class="built_in">cd</span> nginx-1.22.1</span><br><span class="line">./configure --prefix=/softwares/nginx \</span><br><span class="line">--with-http_ssl_module \</span><br><span class="line">--with-http_v2_module \</span><br><span class="line">--with-http_realip_module \</span><br><span class="line">--with-http_stub_status_module \</span><br><span class="line">--without-http_gzip_module \</span><br><span class="line">--with-pcre \</span><br><span class="line">--with-file-aio \</span><br><span class="line">--with-stream \</span><br><span class="line">--with-stream_ssl_module \</span><br><span class="line">--with-stream_realip_module \</span><br><span class="line">--add-module=/root/nginx-module-vts</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Ubuntu:</span><br><span class="line">[root@elk93 ~]# <span class="built_in">cd</span> nginx-1.26.2/</span><br><span class="line">[root@elk93 nginx-1.26.2]# </span><br><span class="line">[root@elk93 nginx-1.26.2]# ./configure --prefix=/softwares/nginx --with-http_ssl_module --with-http_v2_module --with-http_realip_module --without-http_rewrite_module --with-http_stub_status_module --without-http_gzip_module  --with-file-aio --with-stream --with-stream_ssl_module --with-stream_realip_module --add-module=/root/nginx-module-vts</span><br></pre></td></tr></table></figure><p>1.6 编译并安装nginx</p><pre><code>[root@elk93 nginx-1.26.2]# make -j 2 &amp;&amp; make install</code></pre><p>1.7 修改nginx的配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@elk93 nginx-1.26.2]# vim /softwares/nginx/conf/nginx.conf</span><br><span class="line">...</span><br><span class="line">http &#123;</span><br><span class="line">    vhost_traffic_status_zone;</span><br><span class="line">    upstream linux-promethues &#123;</span><br><span class="line">       server 10.0.0.31:9090;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">    server &#123;</span><br><span class="line">        ...</span><br><span class="line">        location / &#123;</span><br><span class="line">            root   html;</span><br><span class="line">            <span class="comment"># index  index.html index.htm;</span></span><br><span class="line">            proxy_pass http://linux-promethues;</span><br><span class="line">        &#125;</span><br><span class="line">    location /status &#123;</span><br><span class="line">        vhost_traffic_status_display;</span><br><span class="line">        vhost_traffic_status_display_format html;</span><br><span class="line">       &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>1.8 检查配置文件语法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@elk93 nginx-1.26.2]# /softwares/nginx/sbin/nginx -t</span><br><span class="line">nginx: the configuration file /softwares/nginx/conf/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /softwares/nginx/conf/nginx.conf <span class="built_in">test</span> is successful</span><br></pre></td></tr></table></figure><p>1.9 启动nginx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@elk93 nginx-1.26.2]# /softwares/nginx/sbin/nginx</span><br></pre></td></tr></table></figure><p>1.10 访问nginx的状态页面</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://10.0.0.93/status/format/prometheus</span><br></pre></td></tr></table></figure><h3 id="2-安装nginx-vtx-exporter">2 安装nginx-vtx-exporter</h3><p>2.1 下载nginx-vtx-exporter</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">CentOS：</span><br><span class="line">wget https://github.com/hnlq715/nginx-vts-exporter/releases/download/v0.10.3/nginx-vts-exporter-0.10.3.linux-amd64.tar.gz</span><br><span class="line"></span><br><span class="line">温馨提示:</span><br><span class="line">不建议下载更高版本，因为其会提升对GLIC的版本要求，可以通过<span class="string">&quot; strings /lib64/libc.so.6 | grep GLIBC_ &quot;</span>查看默认是2.17版本，若使用较高版本则需要2.32+</span><br><span class="line"></span><br><span class="line">Ubuntu:</span><br><span class="line">wget https://github.com/sysulq/nginx-vts-exporter/releases/download/v0.10.8/nginx-vtx-exporter_0.10.8_linux_amd64.tar.gz</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2.2 解压软件包到path路径</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@elk92 ~]# tar xf nginx-vtx-exporter_0.10.8_linux_amd64.tar.gz -C /usr/local/bin/ nginx-vtx-exporter</span><br></pre></td></tr></table></figure><p>2.3 运行nginx-vtx-exporter</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@elk92 ~]# nginx-vtx-exporter -nginx.scrape_uri=http://10.0.0.93/status/format/json</span><br></pre></td></tr></table></figure><p>2.4 访问测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://10.0.0.92:9913/metrics</span><br><span class="line">http://10.0.0.93/status/format/prometheus</span><br></pre></td></tr></table></figure><h3 id="3-配置prometheus采集nginx数据">3 配置prometheus采集nginx数据</h3><p>3.1 修改配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@elk91 ~]# vim /softwares/prometheus-2.53.2.linux-amd64/prometheus.yml </span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">scrape_configs:</span><br><span class="line">  ...</span><br><span class="line"></span><br><span class="line">  - job_name: <span class="string">&quot;nginx-exporter&quot;</span></span><br><span class="line">    metrics_path: <span class="string">&quot;/status/format/prometheus&quot;</span></span><br><span class="line">    static_configs:</span><br><span class="line">      - targets:</span><br><span class="line">        - <span class="string">&quot;10.0.0.93:80&quot;</span></span><br><span class="line"></span><br><span class="line">  - job_name: <span class="string">&quot;nginx-vts-exporter&quot;</span></span><br><span class="line">    static_configs:</span><br><span class="line">      - targets:</span><br><span class="line">        - <span class="string">&quot;10.0.0.92:9913&quot;</span></span><br><span class="line">          ...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#检查Prometheus语法是否有误</span></span><br><span class="line"><span class="comment">#Prometheus热加载         （前面文章都有未赘述）</span></span><br></pre></td></tr></table></figure><p>3.2 查看Prometheus的WebUI</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://10.0.0.91:9090/targets?</span><br></pre></td></tr></table></figure><p>3.3 导入grafana模板</p><pre><code>2949</code></pre><h2 id="prometheus监控tomcat">prometheus监控tomcat</h2><p>部署tomcat-exporter<br>1 基于Dockerfile构建tomcat-exporter<br>参考链接：<br>[root@elk93 ~]# git clone <a href="https://gitee.com/jasonyin2020/tomcat-exporter.git">https://gitee.com/jasonyin2020/tomcat-exporter.git</a></p><p>2 编译tomcat exporter镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@elk93 ~]# <span class="built_in">cd</span> tomcat-exporter/</span><br><span class="line">[root@elk93 tomcat-exporter]# ll</span><br><span class="line">total 44</span><br><span class="line">drwxr-xr-x  5 root root 4096 Sep  5 15:02 ./</span><br><span class="line">drwx------ 11 root root 4096 Sep  5 15:02 ../</span><br><span class="line">-rw-r--r--  1 root root   96 Sep  5 15:02 build.sh</span><br><span class="line">-rw-r--r--  1 root root  503 Sep  5 15:02 Dockerfile</span><br><span class="line">drwxr-xr-x  8 root root 4096 Sep  5 15:02 .git/</span><br><span class="line">drwxr-xr-x  2 root root 4096 Sep  5 15:02 libs/</span><br><span class="line">-rw-r--r--  1 root root 3407 Sep  5 15:02 metrics.war</span><br><span class="line">drwxr-xr-x  2 root root 4096 Sep  5 15:02 myapp/</span><br><span class="line">-rw-r--r--  1 root root  191 Sep  5 15:02 README.md</span><br><span class="line">-rw-r--r--  1 root root 7604 Sep  5 15:02 server.xml</span><br><span class="line">[root@elk93 tomcat-exporter]# </span><br><span class="line">[root@elk93 tomcat-exporter]# bash build.sh </span><br></pre></td></tr></table></figure><p>3.运行tomcat exporter镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@elk93 tomcat-exporter]# docker run -p 28080:8080 -d --name tomcat-server registry.cn-hangzhou.aliyuncs.com/yinzhengjie-k8s/tomcat9-app:v1</span><br><span class="line">81926f3514f0531a462d289a022b6dbb12c4d68f2023e9c947ad9d8766d0fb90</span><br></pre></td></tr></table></figure><p>4.访问tomcat应用</p><pre><code>http://10.0.0.93:28080/metrics/http://10.0.0.93:28080/myapp/</code></pre><p>5 配置prometheus监控tomcat应用</p><p>5.1 修改配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@elk91 ~]# vim /softwares/prometheus-2.53.2.linux-amd64/prometheus.yml </span><br><span class="line">...</span><br><span class="line">scrape_configs:</span><br><span class="line">  ...</span><br><span class="line"></span><br><span class="line">  - job_name: <span class="string">&quot;tomcat-exporter&quot;</span></span><br><span class="line">    static_configs:</span><br><span class="line">      - targets: </span><br><span class="line">        - <span class="string">&quot;10.0.0.93:28080&quot;</span></span><br><span class="line">        </span><br><span class="line"><span class="comment">#检查Prometheus语法是否有误</span></span><br><span class="line"><span class="comment">#Prometheus热加载</span></span><br></pre></td></tr></table></figure><p>5.2 查看Prometheus的WebUI</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://10.0.0.91:9090/targets</span><br></pre></td></tr></table></figure><p>5.3 导入grafana模板</p><pre><code>由于官方的支持并不友好，可以在GitHub自行搜索相应的tomcat监控模板。 参考链接:https://github.com/nlighten/tomcat_exporter/blob/master/dashboard/example.json</code></pre>]]></content>
      
      
      <categories>
          
          <category> 监控 </category>
          
          <category> Prometheus </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Prometheus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>06-监控docker容器及数据库</title>
      <link href="/posts/668ffa27.html"/>
      <url>/posts/668ffa27.html</url>
      
        <content type="html"><![CDATA[<h1>监控docker</h1><p><strong>环境准备</strong></p><table><thead><tr><th>主机名</th><th>WanIP</th><th>角色</th></tr></thead><tbody><tr><td>elk01</td><td>10.0.0.211</td><td>Prometheus服务端</td></tr><tr><td>elk02</td><td>10.0.0.212</td><td>作为docker的被监控端，安装docker，cadvisor</td></tr><tr><td>elk03</td><td>10.0.0.213</td><td>作为docker的被监控端，安装docker，cadvisor</td></tr></tbody></table><p>Prometheus监控docker容器环境<br>1.cadVisor<br>cadVisor是Google公司开源的一款容器监控工具，支持docker，podman容器管理工具的监控。</p><p>GitHub地址:<br><a href="https://github.com/google/cadvisor">https://github.com/google/cadvisor</a></p><p><strong>两台需要机器能够翻墙，因为拉取的是谷歌容器镜像仓库</strong></p><p><strong>我有cadvisor镜像，所有直接导入就行了</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@elk02:~# docker load  &lt; cadvisor-amd64-0.49.1.tar.gz </span><br><span class="line">root@elk03:~# docker load  &lt; cadvisor-amd64-0.49.1.tar.gz </span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">后续考虑提供cadvisor镜像</span><br><span class="line"></span><br><span class="line">docker run \</span><br><span class="line">  -v /:/rootfs:ro \</span><br><span class="line">  -v /var/run:/var/run:ro \</span><br><span class="line">  -v /sys:/sys:ro \</span><br><span class="line">  -v /var/lib/docker/:/var/lib/docker:ro \</span><br><span class="line">  -v /dev/disk/:/dev/disk:ro \</span><br><span class="line">  -p 18080:8080 \</span><br><span class="line">  -d  \</span><br><span class="line">  --name=cadvisor \</span><br><span class="line">  --privileged \</span><br><span class="line">  --device=/dev/kmsg \</span><br><span class="line">  gcr.io/cadvisor/cadvisor-amd64:v0.49.1</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">可以尝使用dockerhub里的cadvisor，镜像换为google/cadvisor:latest  </span><br></pre></td></tr></table></figure><p><strong>访问测试</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@elk03:1 ~]# curl -s 10.0.0.213:18080/metrics | <span class="built_in">head</span> -3</span><br><span class="line"><span class="comment"># HELP cadvisor_version_info A metric with a constant &#x27;1&#x27; value labeled by kernel version, OS version, docker version, cadvisor version &amp; cadvisor revision.</span></span><br><span class="line"><span class="comment"># TYPE cadvisor_version_info gauge</span></span><br><span class="line">cadvisor_version_info&#123;cadvisorRevision=<span class="string">&quot;6f3f25ba&quot;</span>,cadvisorVersion=<span class="string">&quot;v0.49.1&quot;</span>,dockerVersion=<span class="string">&quot;&quot;</span>,kernelVersion=<span class="string">&quot;5.15.0-124-generic&quot;</span>,osVersion=<span class="string">&quot;Alpine Linux v3.18&quot;</span>&#125; 1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">或者浏览器访问</span><br><span class="line">http://10.0.0.212:18080/containers/</span><br></pre></td></tr></table></figure><p><strong>prometheus定义要监控的docker主机</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">1.修改Prometheus的配置文件</span><br><span class="line">[root@elk02:2 ~]# vim /softwares/prometheus-2.53.2.linux-amd64/prometheus.yml </span><br><span class="line">···</span><br><span class="line">   - job_name: <span class="string">&quot;docker&quot;</span></span><br><span class="line">      static_configs:</span><br><span class="line">      - targets:</span><br><span class="line">        - 10.0.0.212:18080</span><br><span class="line">        - 10.0.0.213:18080</span><br><span class="line">        </span><br><span class="line">2.检查Prometheus语法是否有误</span><br><span class="line">[root@elk01:0 ~]# /softwares/prometheus-2.53.2.linux-amd64/promtool check config /softwares/prometheus-2.53.2.linux-amd64/prometheus.yml </span><br><span class="line"></span><br><span class="line">3.重新发起请求（热加载Prometheus）</span><br><span class="line">[root@elk02 ~]# curl -X POST http://10.0.0.211:9090/-/reload</span><br><span class="line"></span><br><span class="line">4.grafana导入对应的模板Id</span><br><span class="line">315</span><br><span class="line">10619</span><br></pre></td></tr></table></figure><h1>监控数据库</h1><h2 id="监控MySQL">监控MySQL</h2><p><strong>mysql本身并不支持metrics接口，因此需要独立部署mysql-exporter来提供metrics接口。</strong></p><p><strong>这里使用docker部署MySQL，使用Prometheus监控MySQL(不再赘述docker安装部署了)</strong></p><p>GitHub地址:</p><p><a href="https://github.com/prometheus/mysqld_exporter/releases/download/v0.16.0/mysqld_exporter-0.16.0.linux-amd64.tar.gz">https://github.com/prometheus/mysqld_exporter/releases/download/v0.16.0/mysqld_exporter-0.16.0.linux-amd64.tar.gz</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">1.下载mysql_exporter</span><br><span class="line">[root@elk02:1 ~]# wget https://github.com/prometheus/mysqld_exporter/releases/download/v0.16.0/mysqld_exporter-0.16.0.linux-amd64.tar.gz</span><br><span class="line"></span><br><span class="line">2.拉取镜像</span><br><span class="line">[root@elk02:1 ~]# docker pull mysql:8.3.0-oracle</span><br><span class="line"></span><br><span class="line">3.部署MySQL数据库 </span><br><span class="line">[root@elk02:1 ~]# docker run --name mysql-server -t \</span><br><span class="line">             -e MYSQL_DATABASE=<span class="string">&quot;linux&quot;</span> \</span><br><span class="line">             -e MYSQL_USER=<span class="string">&quot;luay&quot;</span> \</span><br><span class="line">             -e MYSQL_PASSWORD=<span class="string">&quot;123&quot;</span> \</span><br><span class="line">             -e MYSQL_ALLOW_EMPTY_PASSWORD=<span class="string">&quot;yes&quot;</span> \</span><br><span class="line">             --restart unless-stopped \</span><br><span class="line"> --network host \</span><br><span class="line">             -d mysql:8.3.0-oracle \</span><br><span class="line">             --character-set-server=utf8mb4 --collation-server=utf8mb4_bin \</span><br><span class="line">             --default-authentication-plugin=mysql_native_password</span><br><span class="line"></span><br><span class="line">4.查看运行状态</span><br><span class="line">[root@elk02:1 ~]# docker ps -l</span><br><span class="line">CONTAINER ID   IMAGE                COMMAND                  CREATED         STATUS      </span><br><span class="line">a069ae1367ff   mysql:8.3.0-oracle   <span class="string">&quot;docker-entrypoint.s…&quot;</span>   5 seconds ago   Up 4 seconds</span><br><span class="line"></span><br><span class="line">[root@elk02:1 ~]# netstat -lntup|grep 3306</span><br><span class="line">tcp6       0      0 :::3306      :::*      LISTEN      38663/mysqld       </span><br><span class="line">tcp6       0      0 :::33060     :::*      LISTEN      38663/mysqld </span><br><span class="line"></span><br><span class="line">5.解压软件包(后面步骤意思是将mysqld_exporter直接解压到/usr/local/bin/下，跳过一层目录)</span><br><span class="line">tar xf mysqld_exporter-0.15.1.linux-amd64.tar.gz -C /usr/local/bin/ mysqld_exporter-0.15.1.linux-amd64/mysqld_exporter  --strip-components=1</span><br><span class="line"></span><br><span class="line">6.创建MySQL的配置，指定默认的用户名和密码</span><br><span class="line">[root@elk02:1 ~]#  <span class="built_in">cat</span> &gt; /root/.my.cnf &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">[client]</span></span><br><span class="line"><span class="string">user=luay</span></span><br><span class="line"><span class="string">password=123</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">7.运行mysqld-exporter</span><br><span class="line">[root@elk02:1 ~]# mysqld_exporter --mysqld.address=<span class="string">&quot;10.0.0.212:3306&quot;</span> --web.listen-address=:9104 --config.my-cnf=<span class="string">&quot;/root/.my.cnf&quot;</span></span><br><span class="line"></span><br><span class="line">8.访问mysqld-exporter的webui</span><br><span class="line">http://10.0.0.212:9104/metrics</span><br><span class="line"></span><br><span class="line">9.修改Prometheus的配置文件</span><br><span class="line">[root@elk02:2 ~]# vim /softwares/prometheus-2.53.2.linux-amd64/prometheus.yml </span><br><span class="line">···</span><br><span class="line">   - job_name: <span class="string">&quot;mysql&quot;</span></span><br><span class="line">      static_configs:</span><br><span class="line">      - targets:</span><br><span class="line">        - 10.0.0.212:9104</span><br><span class="line">        </span><br><span class="line">10.检查Prometheus语法是否有误</span><br><span class="line">[root@elk01:0 ~]# /softwares/prometheus-2.53.2.linux-amd64/promtool check config /softwares/prometheus-2.53.2.linux-amd64/prometheus.yml </span><br><span class="line"></span><br><span class="line">11.重新发起请求（热加载Prometheus）</span><br><span class="line">[root@elk02 ~]# curl -X POST http://10.0.0.211:9090/-/reload</span><br><span class="line"></span><br><span class="line">12.检查Prometheus的WebUI</span><br><span class="line">http://10.0.0.211:9090/targets</span><br><span class="line"></span><br><span class="line">13.grafana导入对应的模板ID</span><br><span class="line">17320</span><br><span class="line">18949</span><br><span class="line">14057</span><br></pre></td></tr></table></figure><h2 id="监控redis">监控redis</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">1.拉取镜像</span><br><span class="line">[root@elk02:1 ~]# docker pull redis:7.2.5</span><br><span class="line"></span><br><span class="line">2.下载redis_exporter</span><br><span class="line">[root@elk02:1 ~]# wget https://github.com/oliver006/redis_exporter/releases/download/v1.62.0/redis_exporter-v1.62.0.linux-amd64.tar.gz</span><br><span class="line"></span><br><span class="line">3.启动redis</span><br><span class="line">[root@elk02:1 ~]# docker run -d --name redis-sever --network host redis:7.2.5 </span><br><span class="line"></span><br><span class="line">[root@elk02:1 ~]# netstat -lntup|grep 6379</span><br><span class="line">tcp     0   0 0.0.0.0:6379     0.0.0.0:*   LISTEN      39212/redis-server</span><br><span class="line">tcp6    0   0 :::6379          :::*        LISTEN      39212/redis-server</span><br><span class="line"></span><br><span class="line">4.解压软件包 </span><br><span class="line">[root@elk02:1 ~]# tar xf redis_exporter-v1.62.0.linux-amd64.tar.gz -C /usr/local/bin/ redis_exporter-v1.62.0.linux-amd64/redis_exporter --strip-components=1</span><br><span class="line"></span><br><span class="line">5.启动redis-exporter</span><br><span class="line">[root@elk92 ~]# redis_exporter -redis.addr redis://10.0.0.212:6379 -web.telemetry-path /metrics -web.listen-address :9121</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看redis_exporter帮助</span></span><br><span class="line">[root@elk02:1 ~]# redis_exporter -h</span><br><span class="line"></span><br><span class="line">5.浏览器访问</span><br><span class="line">10.0.0.212:9121/metrics</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241123135827708.png" alt="image-20241123135827708"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">1.进入redis数据库</span><br><span class="line">[root@elk02:2 ~]# docker <span class="built_in">exec</span> -it redis-sever redis-cli --raw -n 1</span><br><span class="line">127.0.0.1:6379[1]&gt; </span><br><span class="line"></span><br><span class="line">2.写入数据</span><br><span class="line">127.0.0.1:6379[1]&gt; <span class="built_in">set</span> name zhangsan </span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379[1]&gt; get name</span><br><span class="line">zhangsan</span><br><span class="line">127.0.0.1:6379[1]&gt; <span class="built_in">set</span> age 18</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379[1]&gt; get age</span><br><span class="line">18</span><br><span class="line">127.0.0.1:6379[1]&gt; keys *</span><br><span class="line">name</span><br><span class="line">age</span><br><span class="line">127.0.0.1:6379[1]&gt; </span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241123140117078.png" alt="image-20241123140117078"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">1.修改Prometheus的配置文件</span><br><span class="line">[root@elk02:2 ~]# vim /softwares/prometheus-2.53.2.linux-amd64/prometheus.yml </span><br><span class="line">···</span><br><span class="line">   - job_name: <span class="string">&quot;redis&quot;</span></span><br><span class="line">      static_configs:</span><br><span class="line">      - targets:</span><br><span class="line">        - 10.0.0.212:9121</span><br><span class="line">        </span><br><span class="line">10.检查Prometheus语法是否有误</span><br><span class="line">[root@elk01:0 ~]# /softwares/prometheus-2.53.2.linux-amd64/promtool check config /softwares/prometheus-2.53.2.linux-amd64/prometheus.yml </span><br><span class="line"></span><br><span class="line">11.重新发起请求（热加载Prometheus）</span><br><span class="line">[root@elk02 ~]# curl -X POST http://10.0.0.211:9090/-/reload</span><br><span class="line"></span><br><span class="line">12.检查Prometheus的WebUI</span><br><span class="line">http://10.0.0.211:9021/targets</span><br><span class="line"></span><br><span class="line">13.grafana导入对应的模板ID</span><br><span class="line">763</span><br><span class="line">14091</span><br><span class="line">14615</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 监控 </category>
          
          <category> Prometheus </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Prometheus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>05-监控CPU</title>
      <link href="/posts/2471ba3e.html"/>
      <url>/posts/2471ba3e.html</url>
      
        <content type="html"><![CDATA[<p><strong>监控CPU的使用情况案例</strong><br>1 统计各个节点CPU的使用率<br>1.1 我们需要先找到CPU相关的KEY</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node_cpu_seconds_total</span><br></pre></td></tr></table></figure><p>1.2 过滤出CPU的空闲时间({mode=‘idle’})和全部CPU的时间(‘{}’)</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node_cpu_seconds_total&#123;<span class="attribute">mode</span>=<span class="string">&#x27;idle&#x27;</span>&#125;</span><br></pre></td></tr></table></figure><p>过滤CPU的空闲时间。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node_cpu_seconds_total&#123;&#125;</span><br><span class="line">此处的<span class="string">&#x27;&#123;&#125;&#x27;</span>可以不写，因为里面没有任何参数，代表获取CPU的所有状态时间。</span><br></pre></td></tr></table></figure><p>1.3 统计1分钟内CPU的增量时间</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">increase</span><span class="params">(node_cpu_seconds_total&#123;mode=<span class="string">&#x27;idle&#x27;</span>&#125;[<span class="number">1</span>m])</span></span></span><br></pre></td></tr></table></figure><p>统计1分钟内CPU空闲状态的增量。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">increase(node_cpu_seconds_total[1m])</span><br></pre></td></tr></table></figure><p>统计1分钟内CPU所有状态的增量。</p><p>1.4 将结果进行加和统计</p><p>将1分钟内所有CPU空闲时间的增量进行加和计算。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">sum</span><span class="params">(increase(node_cpu_seconds_total&#123;mode=<span class="string">&#x27;idle&#x27;</span>&#125;[<span class="number">1</span>m])</span></span>)</span><br></pre></td></tr></table></figure><p>将1分钟内所有CPU空闲时间的增量进行加和计算。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sum</span>(increase(node_cpu_seconds_total[1m]))</span><br></pre></td></tr></table></figure><p>1.5 按照不同节点进行分组</p><p>将1分钟内所有CPU空闲时间的增量进行加和计算，并按照机器实例进行分组。</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sum(<span class="name">increase</span>(<span class="name">node_cpu_seconds_total</span>&#123;mode=&#x27;idle&#x27;&#125;[<span class="number">1</span>m])) by (<span class="name">instance</span>)</span><br></pre></td></tr></table></figure><p>将1分钟内所有CPU空闲时间的增量进行加和计算，并按照机器实例进行分组。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sum</span>(increase(node_cpu_seconds_total[1m])) by (instance)</span><br></pre></td></tr></table></figure><p>1.6 计算1分钟内CPU空闲时间的百分比</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sum(<span class="name">increase</span>(<span class="name">node_cpu_seconds_total</span>&#123;mode=&#x27;idle&#x27;&#125;[<span class="number">1</span>m])) by (<span class="name">instance</span>) / sum(<span class="name">increase</span>(<span class="name">node_cpu_seconds_total</span>[<span class="number">1</span>m])) by (<span class="name">instance</span>)</span><br></pre></td></tr></table></figure><p>1.7 统计1小时内CPU的使用率，计算公式: (1 - CPU空闲时间的百分比) * 100%。</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="number">1</span> - sum(<span class="name">increase</span>(<span class="name">node_cpu_seconds_total</span>&#123;mode=&#x27;idle&#x27;&#125;[<span class="number">1</span>h])) by (<span class="name">instance</span>) / sum(<span class="name">increase</span>(<span class="name">node_cpu_seconds_total</span>[<span class="number">1</span>h])) by (<span class="name">instance</span>)) * <span class="number">100</span></span><br></pre></td></tr></table></figure><p>1.8 统计1分钟内CPU的使用率，计算公式: (1 - CPU空闲时间的百分比) * 100%。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(1 - <span class="built_in">sum</span>(increase(node_cpu_seconds_total&#123;mode=<span class="string">&#x27;idle&#x27;</span>&#125;[1m])) by (instance) / <span class="built_in">sum</span>(increase(node_cpu_seconds_total[1m])) by (instance)) * 100</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241123101647287.png" alt="image-20241123101647287"></p><p>2 计算CPU用户态的1分钟内百分比</p><pre><code>sum(increase(node_cpu_seconds_total&#123;mode='user'&#125;[1m])) by (instance) / sum(increase(node_cpu_seconds_total[1m])) by (instance) * 100</code></pre><p>3 计算CPU内核态的1分钟内百分比</p><pre><code>(sum(increase(node_cpu_seconds_total&#123;mode='system'&#125;[1m])) by (instance) / sum(increase(node_cpu_seconds_total[1m])) by (instance)) * 100</code></pre><p>4 计算CPU IO等待时间的1分钟内百分比</p><pre><code>(sum(increase(node_cpu_seconds_total&#123;mode='iowait'&#125;[1m])) by (instance) / sum(increase(node_cpu_seconds_total[1m])) by (instance)) * 100</code></pre><p><strong>以此添加以上2,3,4语法效果如下</strong></p><p><img src="https://cos.lukme.top/Pic/image-20241123101831485.png" alt="image-20241123101831485"></p><p><strong>保存dashboard</strong></p><p><img src="https://cos.lukme.top/Pic/image-20241123102158402.png" alt="image-20241123102158402"></p><p><strong>如何实现类似这样选择效果？</strong></p><p><img src="https://cos.lukme.top/Pic/image-20241123102014754.png" alt="image-20241123102014754"></p><h2 id="grafana的变量定义">grafana的变量定义</h2><p><img src="https://cos.lukme.top/Pic/image-20241123102621980.png" alt="image-20241123102621980"></p><p><img src="https://cos.lukme.top/Pic/image-20241123103440922.png" alt="image-20241123103440922"></p><p><strong>应用保存后再次查看这个dashboard</strong></p><p><img src="https://cos.lukme.top/Pic/image-20241123103551574.png" alt="image-20241123103551574"></p><p>==不过此时我们点击是没有效果的，因为我们之前写的promQL是直接写死的没有使用变量==</p><p><strong>替换如下变量</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">(<span class="built_in">sum</span>(increase(node_cpu_seconds_total&#123;mode=<span class="string">&#x27;iowait&#x27;</span>,instance=<span class="string">&quot;<span class="variable">$myhost</span>&quot;</span>&#125;[1m])) by (instance) / <span class="built_in">sum</span>(increase(node_cpu_seconds_total&#123;instance=<span class="string">&quot;<span class="variable">$myhost</span>&quot;</span>&#125;[1m])) by (instance)) * 100</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(1 - <span class="built_in">sum</span>(increase(node_cpu_seconds_total&#123;mode=<span class="string">&#x27;idle&#x27;</span>,instance=<span class="string">&quot;<span class="variable">$myhost</span>&quot;</span>&#125;[1m])) by (instance) / <span class="built_in">sum</span>(increase(node_cpu_seconds_total&#123;instance=<span class="string">&quot;<span class="variable">$myhost</span>&quot;</span>&#125;[1m])) by (instance)) * 100</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(<span class="built_in">sum</span>(increase(node_cpu_seconds_total&#123;mode=<span class="string">&#x27;system&#x27;</span>,instance=<span class="string">&quot;<span class="variable">$myhost</span>&quot;</span>&#125;[1m])) by (instance) / <span class="built_in">sum</span>(increase(node_cpu_seconds_total&#123;instance=<span class="string">&quot;<span class="variable">$myhost</span>&quot;</span>&#125;[1m])) by (instance)) * 100</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">sum</span>(increase(node_cpu_seconds_total&#123;mode=<span class="string">&#x27;user&#x27;</span>,instance=<span class="string">&quot;<span class="variable">$myhost</span>&quot;</span>&#125;[1m])) by (instance) / <span class="built_in">sum</span>(increase(node_cpu_seconds_total&#123;instance=<span class="string">&quot;<span class="variable">$myhost</span>&quot;</span>&#125;[1m])) by (instance) * 100</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241123104039207.png" alt="image-20241123104039207"></p><p><strong>再次回到dashboard验证点击是否有变化（只验证了一个）</strong></p><p>==很明显变化了==</p><p><img src="D:/PixPin/History/recording.gif" alt="recording"></p><h2 id="自定义变量类型">自定义变量类型</h2><p><img src="https://cos.lukme.top/Pic/image-20241123105342511.png" alt="image-20241123105342511"></p><h2 id="dashboard备份">dashboard备份</h2><p><strong>点击到模板的设置，选择json model</strong></p><p><img src="https://cos.lukme.top/Pic/image-20241123111303063.png" alt="image-20241123111303063"></p>]]></content>
      
      
      <categories>
          
          <category> 监控 </category>
          
          <category> Prometheus </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Prometheus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>04-监控ELK系列</title>
      <link href="/posts/750619ba.html"/>
      <url>/posts/750619ba.html</url>
      
        <content type="html"><![CDATA[<h2 id="监控zookeeper集群">监控zookeeper集群</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1.修改zookeeper配置文件</span></span><br><span class="line">[root@elk03:2 ~]# vim /app/zookeeper/conf/zoo.cfg </span><br><span class="line">···</span><br><span class="line">metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider</span><br><span class="line">metricsProvider.httpHost=0.0.0.0</span><br><span class="line">metricsProvider.httpPort=7000</span><br><span class="line">metricsProvider.exportJvmInfo=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#2.同步到其他节点</span></span><br><span class="line">[root@elk01 ~]# scp /app/zookeeper/conf/zoo.cfg root@10.0.0.212:/app/zookeeper/conf/</span><br><span class="line">[root@elk01 ~]# scp /app/zookeeper/conf/zoo.cfg root@10.0.0.213:/app/zookeeper/conf/</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.重启zookeeper集群</span></span><br><span class="line">[root@elk01 ~]# zkServer.sh restart</span><br><span class="line">[root@elk02 ~]# zkServer.sh restart</span><br><span class="line">[root@elk03 ~]# zkServer.sh restart</span><br><span class="line"></span><br><span class="line"><span class="comment">#4.测试访问zookeeper的监听端口是否正常</span></span><br><span class="line">[root@elk03 ~]# curl -s 10.0.0.211:7000/metrics | <span class="built_in">head</span> -3</span><br><span class="line"><span class="comment"># HELP approximate_data_size approximate_data_size</span></span><br><span class="line"><span class="comment"># TYPE approximate_data_size gauge</span></span><br><span class="line">approximate_data_size 15794.0</span><br><span class="line"></span><br><span class="line"><span class="comment">#5.Prometheus配置zookeeper </span></span><br><span class="line">[root@elk03:2 ~]# vim /softwares/prometheus-2.53.2.linux-amd64/prometheus.yml </span><br><span class="line">···</span><br><span class="line">   - job_name: <span class="string">&quot;zookeeper&quot;</span></span><br><span class="line">      static_configs:</span><br><span class="line">      - targets:</span><br><span class="line">        - 10.0.0.211:7000</span><br><span class="line">        - 10.0.0.212:7000</span><br><span class="line">        - 10.0.0.213:7000</span><br><span class="line">        </span><br><span class="line"><span class="comment">#6.检查Prometheus语法是否有误</span></span><br><span class="line">[root@elk01:0 ~]# /softwares/prometheus-2.53.2.linux-amd64/promtool check config /softwares/prometheus-2.53.2.linux-amd64/prometheus.yml </span><br><span class="line"></span><br><span class="line"><span class="comment">#7.重新发起请求（热加载Prometheus）</span></span><br><span class="line">[root@elk211 ~]# curl -X POST http://10.0.0.211:9090/-/reload</span><br><span class="line"></span><br><span class="line"><span class="comment">#8. 浏览器刷新访问,在target里即可看到被监控端</span></span><br><span class="line">10.0.0.211:9090/targets</span><br><span class="line"></span><br><span class="line"><span class="comment">#grafana导入模板ID</span></span><br><span class="line">10465</span><br></pre></td></tr></table></figure><h2 id="监控kafka集群">监控kafka集群</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#官方  https://prometheus.io/docs/instrumenting/exporters/  搜索kafka exporter</span></span><br><span class="line"></span><br><span class="line">1.下载kafka exporter </span><br><span class="line">wget https://github.com/danielqsj/kafka_exporter/releases/download/v1.8.0/kafka_exporter-1.8.0.linux-amd64.tar.gz</span><br><span class="line"></span><br><span class="line">2.解压kafka exporter软件包 并做软连接</span><br><span class="line">[root@elk01:3 ~]# tar xf kafka_exporter-1.8.0.linux-amd64.tar.gz -C /app/</span><br><span class="line">[root@elk01:3 ~]# <span class="built_in">ln</span> -s  /app/kafka_exporter-1.8.0.linux-amd64/ /app/kafka-exporter</span><br><span class="line"></span><br><span class="line">3.运行kafka exporter程序暴露kafka集群的指标提供http接口，以供Prometheus识别</span><br><span class="line">[root@elk01:3 ~]# /app/kafka-exporter/kafka_exporter \</span><br><span class="line">--web.listen-address=<span class="string">&quot;:9308&quot;</span> --web.telemetry-path=<span class="string">&quot;/metrics&quot;</span> \</span><br><span class="line">--kafka.server=elk211:9092 --kafka.server=elk212:9092  \</span><br><span class="line">--kafka.server=elk213:9092 --kafka.version=<span class="string">&quot;3.8.0&quot;</span></span><br><span class="line"></span><br><span class="line">4.访问kafka exporter测试</span><br><span class="line">http://10.0.0.213:9308/metrics</span><br><span class="line"></span><br><span class="line">5.Prometheus配置监控kafka</span><br><span class="line">[root@elk03:2 ~]# vim /softwares/prometheus-2.53.2.linux-amd64/prometheus.yml </span><br><span class="line">···</span><br><span class="line">    - job_name: <span class="string">&quot;kafka&quot;</span></span><br><span class="line">      static_configs:</span><br><span class="line">      - targets:</span><br><span class="line">        - 10.0.0.213:9308 </span><br><span class="line">        </span><br><span class="line">6.检测Prometheus语法</span><br><span class="line">7.热加载Prometheus</span><br></pre></td></tr></table></figure><h2 id="监控elasticsearch集群">监控elasticsearch集群</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">1.下载elasticsearch exporter </span><br><span class="line">[root@elk01:3 ~]# wget https://github.com/prometheus-community/elasticsearch_exporter/releases/download/v1.7.0/elasticsearch_exporter-1.7.0.linux-amd64.tar.gz</span><br><span class="line"></span><br><span class="line">2.解压软件包</span><br><span class="line">[root@elk01:3 ~]# tar xf elasticsearch_exporter-1.7.0.linux-amd64.tar.gz -C /app</span><br><span class="line"></span><br><span class="line">3.运行elasticsearch exporter暴露ES集群的监控指标为http接口，供给Prometheus抓取数据</span><br><span class="line">[root@elk01:3 ~]# /app/elasticsearch_exporter-1.7.0.linux-amd64/elasticsearch_exporter \</span><br><span class="line">--web.telemetry-path=<span class="string">&quot;/metrics&quot;</span> \</span><br><span class="line">--web.listen-address=:9114 \</span><br><span class="line">--es.all \</span><br><span class="line">--es.uri=<span class="string">&quot;http://elastic:123456@10.0.0.211:9200&quot;</span></span><br><span class="line"></span><br><span class="line">4.访问elasticsearch exporter的WebUI</span><br><span class="line">http://10.0.0.212:9114/metrics</span><br><span class="line"></span><br><span class="line">5.Prometheus配置监控kafka</span><br><span class="line">[root@elk03:2 ~]# vim /softwares/prometheus-2.53.2.linux-amd64/prometheus.yml </span><br><span class="line">···</span><br><span class="line">    - job_name: <span class="string">&quot;es&quot;</span></span><br><span class="line">      static_configs:</span><br><span class="line">      - targets:</span><br><span class="line">        - 10.0.0.213:9114</span><br><span class="line">        </span><br><span class="line">6.检测Prometheus语法</span><br><span class="line">7.热加载Prometheus</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 监控 </category>
          
          <category> Prometheus </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Prometheus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>03-grafana出图</title>
      <link href="/posts/c9c8c45c.html"/>
      <url>/posts/c9c8c45c.html</url>
      
        <content type="html"><![CDATA[<h2 id="安装部署grafana">安装部署grafana</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">网址： https://grafana.com/grafana/download/9.5.21?pg=get&amp;plcmt=selfmanaged-box1-cta1</span><br><span class="line"></span><br><span class="line"><span class="comment">#1.安装软件包（选择9版本的最新版）</span></span><br><span class="line">[root@elk01:0 ~]# yum install -y https://dl.grafana.com/enterprise/release/grafana-enterprise-9.5.21-1.x86_64.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.配置开机自启动</span></span><br><span class="line">[root@elk01:0 ~]# systemctl <span class="built_in">enable</span> --now grafana-server </span><br><span class="line"></span><br><span class="line"><span class="comment">#3.访问grafana的WebUI</span></span><br><span class="line">http://10.0.0.211:3000/login</span><br><span class="line"></span><br><span class="line">首次登录用户名和密码均为admin，登录点击后面直接点击skip跳过修改密码</span><br></pre></td></tr></table></figure><h2 id="配置Prometheus数据源">配置Prometheus数据源</h2><p><img src="https://cos.lukme.top/Pic/image-20241122135329713.png" alt="image-20241122135329713"></p><p><img src="https://cos.lukme.top/Pic/image-20241122135413189.png" alt="image-20241122135413189"></p><p><img src="https://cos.lukme.top/Pic/image-20241122135559291.png" alt="image-20241122135559291"></p><p><strong>下拉找到保存save即可</strong></p><h2 id="导入模板">导入模板</h2><p><a href="https://grafana.com/grafana/dashboards/?search=node">官方dashboard，点击直达，搜索node查看模板</a></p><p>找到合适模板知道模板id导入grafana</p><p><img src="https://cos.lukme.top/Pic/image-20241122135814095.png" alt="image-20241122135814095"></p><p><img src="https://cos.lukme.top/Pic/image-20241122141944442.png" alt="image-20241122141944442"></p><blockquote><p>还有个模板8919仅供参考</p></blockquote><p><strong>CPU压测后数据明显了</strong><img src="https://cos.lukme.top/Pic/image-20241122142250940.png" alt="image-20241122142250940"></p><h2 id="创建自己的模板">创建自己的模板</h2><p><img src="https://cos.lukme.top/Pic/image-20241123094852067.png" alt="image-20241123094852067"></p><p><strong>Add  visualization</strong></p><p><img src="https://cos.lukme.top/Pic/image-20241123095639123.png" alt="image-20241123095639123"></p><p><strong>==创建dashboard以及出图见05-监控CPU使用情况==</strong></p><h2 id="grafana修改模板">grafana修改模板</h2><p><strong>以普罗米模板11277为例</strong></p><p><strong>导入模板</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1726060882752.png" alt="QQ_1726060882752"></p><p><img src="https://cos.lukme.top/Pic/image-20240911212345131.png" alt="image-20240911212345131"></p><p><img src="https://cos.lukme.top/Pic/image-20240911212434248.png" alt="image-20240911212434248"></p><h2 id="修改模板">修改模板</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">去普罗米里发现新现版prometheus的project改为了job，所有下一步修改变量</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/recording.gif" alt="recording"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">将project改为job，并且删掉不支持的project</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 监控 </category>
          
          <category> Prometheus </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Prometheus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>02-prometheus常用函数介绍</title>
      <link href="/posts/7c8bc612.html"/>
      <url>/posts/7c8bc612.html</url>
      
        <content type="html"><![CDATA[<p><strong>Prometheus常用的函数</strong></p><h2 id="increase">increase</h2><p>increase函数:<br>用来针对counter数据类型，截取其中一段时间总的增量。</p><p>举个例子:</p><p>统计1分钟内，使用标签过滤器查看&quot;10.0.0.211:9100&quot;节点的第0颗CPU，空闲状态使用的总时间增量。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">increase(node_cpu_seconds_total&#123;instance=<span class="string">&quot;10.0.0.211:9100&quot;</span>,mode=<span class="string">&quot;idle&quot;</span>&#125;[1m])</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241122125610115.png" alt="image-20241122125610115"></p><blockquote><p>一分钟内空闲59s，CPU太闲了，压测一波</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1.安装压力测试工具</span></span><br><span class="line">[root@elk02 ~]# yum install -y stress</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.压力测试CPU</span></span><br><span class="line">[root@elk03:1 ~]# stress --cpu 8 --io 4 --vm 2 --vm-bytes 128M --<span class="built_in">timeout</span> 10m</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241122130528444.png" alt="image-20241122130528444"></p><h2 id="sum">sum</h2><p>sum函数:<br>加和的作用。 （将下方图1所有结果累加，不分组）</p><p>举个例子:</p><p>统计1分钟内，使用标签过滤器查看所有节点的第0颗CPU，空闲状态使用的总时间增量，并将返回结果累加。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sum</span>(increase(node_cpu_seconds_total&#123;mode=<span class="string">&quot;idle&quot;</span>,cpu=<span class="string">&#x27;0&#x27;</span>&#125;[1m]))</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241122131145124.png" alt="image-20241122131145124"></p><p><img src="https://cos.lukme.top/Pic/image-20241122131116002.png" alt="image-20241122131116002"></p><h2 id="by">by</h2><p>by函数:<br>将数据进行分组，类似于MySQL的&quot;GROUP BY&quot;。</p><p>举个例子:</p><p>统计1分钟内，使用标签过滤器查看CPU空闲状态，并将结果进行累加，基于instance进行分组。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sum</span>(increase(node_cpu_seconds_total&#123;mode=<span class="string">&quot;idle&quot;</span>,cpu=<span class="string">&#x27;0&#x27;</span>&#125;[1m])) by (instance)</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241122131653295.png" alt="image-20241122131653295"></p><h2 id="rate">rate</h2><p>rate函数:<br>它的功能是按照设置的时间段，取counter在这个时间段中平均每秒的增量。<br>举个例子:</p><p>统计1分钟内，使用标签过滤器查看&quot;10.0.0.212:9100&quot;节点的第0颗CPU，空闲状态使用的每秒的增量。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rate(node_cpu_seconds_total&#123;instance=<span class="string">&quot;10.0.0.212:9100&quot;</span>,mode=<span class="string">&quot;idle&quot;</span>,cpu=<span class="string">&#x27;0&#x27;</span>&#125;[1m])</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241122132326591.png" alt="image-20241122132326591"></p><p>increase和rate如何选择:<br>(1)对于采集数据频率较低的场景建议使用increase函数，因为使用rate函数可能会出现断点,比如针对硬盘容量监控。<br>(2)对于采集数据频率较高的场景建议使用rate函数，比如针对CPU，内存，网络流量等都是可以基于rate函数来采集等。</p><h2 id="topk">topk</h2><p>topk函数:<br>取前几位的最高值，实际使用的时候一般会用该函数进行瞬时报警，而不是为了观察曲线图。</p><p>举个例子:<br>统计1分钟内，使用标签过滤器查看CPU，所有状态使用的每秒的增量，只查看前3个节点。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">topk(3,rate(node_cpu_seconds_total&#123;mode=<span class="string">&quot;idle&quot;</span>&#125;[1m]))</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241122132911868.png" alt="image-20241122132911868"></p><p><img src="https://cos.lukme.top/Pic/image-20241122133011958.png" alt="image-20241122133011958"></p><h2 id="count">count</h2><p>count函数:<br>把数值符合条件的，输出数目进行累加加和。<br>比如说企业中有100台服务器，如果只有10台服务器CPU使用率高于80%时候是不需要报警的，但是数量超过70台时就需要报警了。</p><p>举个例子:<br>count(tcp_wait_conn &gt; 500):<br>假设tcp_wait_conn是咱们自定义的KEY。<br>若TCP等待数量大于500的机器数量就判断条件为真。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#对统计的结果进行计数。</span></span><br><span class="line"></span><br><span class="line">count(rate(node_cpu_seconds_total&#123;cpu=<span class="string">&quot;0&quot;</span>,mode=<span class="string">&quot;idle&quot;</span>&#125;[1m]))</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241122133509836.png" alt="image-20241122133509836"></p><p>7 其他函数</p><p>推荐阅读:<br><a href="https://prometheus.io/docs/prometheus/latest/querying/functions/">https://prometheus.io/docs/prometheus/latest/querying/functions/</a></p>]]></content>
      
      
      <categories>
          
          <category> 监控 </category>
          
          <category> Prometheus </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Prometheus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>01-prometheus介绍及部署</title>
      <link href="/posts/d9386973.html"/>
      <url>/posts/d9386973.html</url>
      
        <content type="html"><![CDATA[<h2 id="prometheus介绍">prometheus介绍</h2><p>1.什么是Prometheus<br>Prometheus是一款监控系统，可以监控传统业务（tomcat，nginx，mysql，redis，elasticsearch），还能够监控云原生业务，比如docker，k8s监控。</p><p><strong>官方链接:</strong><br><a href="https://prometheus.io/docs/introduction/overview/#architecture">https://prometheus.io/docs/introduction/overview/#architecture</a></p><p>推荐阅读:</p><pre><code>云原生CNCF官网:    https://landscape.cncf.io/Prometheus的GitHub地址:    https://github.com/prometheus/prometheusPrometheus的官网地址:    https://prometheus.io/</code></pre><p><img src="https://cos.lukme.top/Pic/image-20241121163541907.png" alt="image-20241121163541907"></p><table><thead><tr><th>主机名</th><th>WanIP</th><th>角色</th></tr></thead><tbody><tr><td>elk01</td><td>10.0.0.211</td><td>Prometheus服务端，安装Prometheus、node exporeter</td></tr><tr><td>elk02</td><td>10.0.0.212</td><td>被监控端，安装node exporeter</td></tr><tr><td>elk03</td><td>10.0.0.213</td><td>被监控端，安装node exporeter</td></tr></tbody></table><blockquote><p>我的环境使用的是之前部署elk的环境，主机名所以都是elk，—无关紧要</p></blockquote><h2 id="二进制部署prometheus">二进制部署prometheus</h2><p><strong>本篇使用的是一键安装方式脚本部署，安装目录都在/software目录下</strong>k8s阶段可以使用云原生方式部署</p><p>**1.下载Prometheus server **</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01 ~]# wget https://github.com/prometheus/prometheus/releases/download/v2.53.3/prometheus-2.53.3.linux-amd64.tar.gz</span><br></pre></td></tr></table></figure><p>**2.解压软件包 **</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01 ~]# tar xf prometheus-2.53.2.linux-amd64.tar.gz -C /app/</span><br><span class="line">[root@elk01 ~]# <span class="built_in">ln</span> -s /app/prometheus-2.53.2.linux-amd64/ /app/prometheus</span><br></pre></td></tr></table></figure><p>**3.启动Prometheus server **</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01 ~]# <span class="built_in">cd</span> /app/prometheus/ &amp;&amp; ./prometheus </span><br></pre></td></tr></table></figure><p><strong>4.访问Prometheus的WebUI</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10.0.0.211:9090</span><br></pre></td></tr></table></figure><blockquote><p>使用安装脚本一键安装prometheus,软件包放在同级目录的download里</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:0 auto_install_prometheus-server]# <span class="built_in">cat</span> install-prometheus-server.sh </span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># auther: lugaojie</span></span><br><span class="line"><span class="comment"># blog: www.lukme.top</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">VERSION=2.53.2</span><br><span class="line">ARCH=amd64</span><br><span class="line">SOFTWARE=prometheus-<span class="variable">$&#123;VERSION&#125;</span>.linux-<span class="variable">$&#123;ARCH&#125;</span>.tar.gz</span><br><span class="line">URL=https://github.com/prometheus/prometheus/releases/download/v<span class="variable">$&#123;VERSION&#125;</span>/<span class="variable">$&#123;SOFTWARE&#125;</span></span><br><span class="line">DOWNLOAD=./download          <span class="comment">#指定软件下载目录</span></span><br><span class="line">INSTALLDIR=/softwares</span><br><span class="line">BASEDIR=<span class="variable">$&#123;INSTALLDIR&#125;</span>/prometheus-<span class="variable">$&#123;VERSION&#125;</span>.linux-amd64</span><br><span class="line">DATADIR=/data/prometheus</span><br><span class="line">LOGDIR=/var/log/prometheus</span><br><span class="line">HOSTIP=0.0.0.0</span><br><span class="line">PORT=9090</span><br><span class="line">HOSTNAME=`hostname`</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">prepare</span></span>() &#123;</span><br><span class="line"><span class="comment"># 判断目录是否存在，若不存在则创建，-d指定目录，-o可以指定属主，-g指定数组</span></span><br><span class="line">[ -d <span class="variable">$INSTALLDIR</span> ] || install -d  <span class="variable">$&#123;INSTALLDIR&#125;</span></span><br><span class="line">[ -d <span class="variable">$DOWNLOAD</span> ] || install -d <span class="variable">$&#123;DOWNLOAD&#125;</span></span><br><span class="line">[ -d <span class="variable">$DATADIR</span> ] || install -d <span class="variable">$&#123;DATADIR&#125;</span></span><br><span class="line">[ -d <span class="variable">$LOGDIR</span> ] || install -d <span class="variable">$&#123;LOGDIR&#125;</span></span><br><span class="line"></span><br><span class="line">. /etc/os-release</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$ID</span>&quot;</span> == <span class="string">&quot;centos&quot;</span> ];<span class="keyword">then</span></span><br><span class="line"> <span class="comment"># 判断系统是否安装wget</span></span><br><span class="line"> [ -f /usr/bin/wget ] || yum -y install wget</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 判断文件是否存在，若不存在则下载</span></span><br><span class="line">[ -s <span class="variable">$&#123;DOWNLOAD&#125;</span>/<span class="variable">$&#123;SOFTWARE&#125;</span> ] || wget <span class="variable">$URL</span> -O <span class="variable">$&#123;DOWNLOAD&#125;</span>/<span class="variable">$&#123;SOFTWARE&#125;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">deploy</span></span>() &#123;</span><br><span class="line"><span class="comment"># 检查环境</span></span><br><span class="line">prepare</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压文件软件包</span></span><br><span class="line">tar xf <span class="variable">$&#123;DOWNLOAD&#125;</span>/<span class="variable">$&#123;SOFTWARE&#125;</span> -C <span class="variable">$&#123;INSTALLDIR&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成启动脚本</span></span><br><span class="line"><span class="built_in">cat</span> &gt; /etc/systemd/system/prometheus-server.service &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">[Unit]</span></span><br><span class="line"><span class="string">Description== Linux  Prometheus Server</span></span><br><span class="line"><span class="string">Documentation=https://prometheus.io/docs/introduction/overview/</span></span><br><span class="line"><span class="string">After=network.target</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">Restart=on-failure</span></span><br><span class="line"><span class="string">ExecStart=/bin/bash -c &quot;$&#123;BASEDIR&#125;/prometheus \</span></span><br><span class="line"><span class="string">  --config.file=$&#123;BASEDIR&#125;/prometheus.yml \</span></span><br><span class="line"><span class="string">      --web.enable-lifecycle \</span></span><br><span class="line"><span class="string">      --storage.tsdb.path=$&#123;DATADIR&#125; \</span></span><br><span class="line"><span class="string">      --storage.tsdb.retention.time=60d  \</span></span><br><span class="line"><span class="string">      --web.listen-address=$&#123;HOSTIP&#125;:$&#123;PORT&#125;  \</span></span><br><span class="line"><span class="string">      --web.max-connections=65535  \</span></span><br><span class="line"><span class="string">      --storage.tsdb.retention.size=512MB \</span></span><br><span class="line"><span class="string">      --query.timeout=10s \</span></span><br><span class="line"><span class="string">      --query.max-concurrency=20 \</span></span><br><span class="line"><span class="string">      --log.level=info \</span></span><br><span class="line"><span class="string">      --log.format=json \</span></span><br><span class="line"><span class="string">      --web.read-timeout=5m &amp;&gt;&gt; $&#123;LOGDIR&#125;/prometheus-server.log&quot;</span></span><br><span class="line"><span class="string">ExecReload=/bin/kill -HUP \$MAINPID</span></span><br><span class="line"><span class="string">LimitNOFILE=65535</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Install]</span></span><br><span class="line"><span class="string">WantedBy=multi-user.target</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#  --web.enable-lifecycle                      指定webUI的热加载功能</span></span><br><span class="line"><span class="comment">#  --storage.tsdb.path=$&#123;DATADIR&#125;     指定存储路径</span></span><br><span class="line"><span class="comment">#  --storage.tsdb.retention.time=60d  指定保留数据时间，默认15d</span></span><br><span class="line"><span class="comment">#  --web.max-connections=65535        指定最大连接数</span></span><br><span class="line"><span class="comment">#  --storage.tsdb.retention.size=512MB指定存储块大小，512M滚动一次</span></span><br><span class="line"><span class="comment">#  --log.level=info                                  指定日志级别</span></span><br><span class="line"><span class="comment">#  --log.format=json                              指定日志格式</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将服务设置为开机自启动</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl <span class="built_in">enable</span> --now prometheus-server</span><br><span class="line">systemctl status prometheus-server</span><br><span class="line"><span class="built_in">sleep</span> 0.3</span><br><span class="line">ss -ntl | grep <span class="variable">$&#123;PORT&#125;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">delete</span></span>()&#123;</span><br><span class="line">systemctl <span class="built_in">disable</span> --now prometheus-server.service</span><br><span class="line"><span class="built_in">rm</span> -rf /etc/systemd/system/node-exporter.service <span class="variable">$BASEDIR</span> <span class="variable">$DATADIR</span> <span class="variable">$LOGDIR</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">main</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span> </span><br><span class="line"> deploy|i)</span><br><span class="line">   deploy</span><br><span class="line">   <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;HOSTNAME&#125;</span> 的prometheus-server 已经部署成功![successfully]&quot;</span></span><br><span class="line">   ;;</span><br><span class="line"> delete|r)</span><br><span class="line">   delete</span><br><span class="line">   <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;HOSTNAME&#125;</span> 的prometheus-server 已经卸载成功,期待下次使用~&quot;</span></span><br><span class="line">   ;;</span><br><span class="line"> *)</span><br><span class="line">   <span class="built_in">echo</span> <span class="string">&quot;Usage: <span class="variable">$0</span> deploy[i]|delete[r]&quot;</span></span><br><span class="line">   ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">main <span class="variable">$1</span></span><br></pre></td></tr></table></figure></blockquote><h2 id="部署node-exporter">部署node exporter</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">部署过程同上，官网找到下载</span><br><span class="line"></span><br><span class="line">1.#下载node exporter</span><br><span class="line">[root@elk01 ~]# wget https://github.com/prometheus/node_exporter/releases/download/v1.8.2/node_exporter-1.8.2.linux-amd64.tar.gz</span><br><span class="line"></span><br><span class="line">2.#解压至指定目录</span><br><span class="line">[root@elk01 ~]# tar xf node_exporter-1.8.2.linux-amd64.tar.gz -C /app</span><br><span class="line">[root@elk01 ~]# <span class="built_in">ln</span> -s /app/node_exporter-1.8.2.linux-amd64 /app/node_exporter</span><br><span class="line"></span><br><span class="line">4.#启动node_exporter</span><br><span class="line">[root@elk01 ~]# <span class="built_in">cd</span>  /app/node_exporter &amp;&amp; ./node_exporter </span><br><span class="line"></span><br><span class="line">5.#另外两个节点同样安装 node exporter</span><br><span class="line"></span><br><span class="line"><span class="comment">#浏览器访问（这就是暴露出来的接口）</span></span><br><span class="line">http://10.0.0.211:9100/metrics</span><br><span class="line">http://10.0.0.212:9100/metrics</span><br><span class="line">http://10.0.0.213:9100/metrics</span><br></pre></td></tr></table></figure><blockquote><p>一键安装exporter,软件包放在同级目录的download目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:1 ~]# <span class="built_in">cat</span> auto-install-node-exporter/install-node-exporter.sh </span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># auther: lugaojie</span></span><br><span class="line"><span class="comment"># blog: https://www.lukme.top</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">VERSION=1.8.2</span><br><span class="line">SOFTWARE=node_exporter-<span class="variable">$&#123;VERSION&#125;</span>.linux-amd64.tar.gz</span><br><span class="line">URL=https://github.com/prometheus/node_exporter/releases/download/v<span class="variable">$&#123;VERSION&#125;</span>/<span class="variable">$&#123;SOFTWARE&#125;</span></span><br><span class="line">DOWNLOAD=./download</span><br><span class="line">INSTALLDIR=/softwares</span><br><span class="line">BASEDIR=<span class="variable">$&#123;INSTALLDIR&#125;</span>/node_exporter-<span class="variable">$&#123;VERSION&#125;</span>.linux-amd64</span><br><span class="line">HOST=<span class="string">&quot;0.0.0.0&quot;</span></span><br><span class="line">PORT=9100</span><br><span class="line">hostname=`hostname`</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">prepare</span></span>() &#123;</span><br><span class="line"><span class="comment"># 判断目录是否存在，若不存在则创建</span></span><br><span class="line">[ -d <span class="variable">$INSTALLDIR</span> ] || <span class="built_in">mkdir</span> -pv <span class="variable">$&#123;INSTALLDIR&#125;</span></span><br><span class="line">[ -d <span class="variable">$DOWNLOAD</span> ] || <span class="built_in">mkdir</span> -pv <span class="variable">$&#123;DOWNLOAD&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$ID</span>&quot;</span> == <span class="string">&quot;centos&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">  <span class="comment"># 判断系统是否安装curl</span></span><br><span class="line">  [ -f /usr/bin/wget ] || yum -y install wget</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 判断文件是否存在，若不存在则下载</span></span><br><span class="line">[ -s <span class="variable">$&#123;DOWNLOAD&#125;</span>/<span class="variable">$&#123;SOFTWARE&#125;</span> ] || wget <span class="variable">$URL</span> -O <span class="variable">$&#123;DOWNLOAD&#125;</span>/<span class="variable">$&#123;SOFTWARE&#125;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">install</span></span>() &#123;</span><br><span class="line"><span class="comment"># 检查环境</span></span><br><span class="line">prepare</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压文件软件包</span></span><br><span class="line">tar xf <span class="variable">$&#123;DOWNLOAD&#125;</span>/<span class="variable">$&#123;SOFTWARE&#125;</span> -C <span class="variable">$&#123;INSTALLDIR&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成启动脚本</span></span><br><span class="line"><span class="built_in">cat</span> &gt; /etc/systemd/system/node-exporter.service &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">[Unit]</span></span><br><span class="line"><span class="string">Description= Linux Node Exporter</span></span><br><span class="line"><span class="string">Documentation=https://prometheus.io/docs/introduction/overview/</span></span><br><span class="line"><span class="string">After=network.target</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">ExecStart=$&#123;BASEDIR&#125;/node_exporter --web.telemetry-path=&quot;/metrics&quot; \</span></span><br><span class="line"><span class="string">--web.listen-address=$&#123;HOST&#125;:$&#123;PORT&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Install]</span></span><br><span class="line"><span class="string">WantedBy=multi-user.target</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 将服务设置为开机自启动</span></span><br><span class="line">  systemctl daemon-reload</span><br><span class="line">  systemctl <span class="built_in">enable</span> --now node-exporter.service</span><br><span class="line">  systemctl status node-exporter.service</span><br><span class="line">  ss -ntl | grep 9100</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">remove</span></span>()&#123;</span><br><span class="line">systemctl <span class="built_in">disable</span> --now node-exporter.service</span><br><span class="line"><span class="built_in">rm</span> -rf /etc/systemd/system/node-exporter.service <span class="variable">$BASEDIR</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">main</span></span>() &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span> </span><br><span class="line"> install|i)</span><br><span class="line">   install</span><br><span class="line">   <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;hostname&#125;</span> 的node-exporter 已经部署成功![successfully]&quot;</span></span><br><span class="line">   ;;</span><br><span class="line"> remove|r)</span><br><span class="line">   remove</span><br><span class="line">   <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;hostname&#125;</span> 的node-exporter 已经卸载成功,期待下次使用~&quot;</span></span><br><span class="line">   ;;</span><br><span class="line"> *)</span><br><span class="line">   <span class="built_in">echo</span> <span class="string">&quot;Usage: <span class="variable">$0</span> install[i]|remove[r]&quot;</span></span><br><span class="line">   ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">main <span class="variable">$1</span></span><br></pre></td></tr></table></figure></blockquote><h2 id="修改Prometheus文件">修改Prometheus文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1.修改配置文件</span></span><br><span class="line">[root@elk01:0 ~]# vim /softwares/prometheus-2.53.2.linux-amd64/prometheus.yml </span><br><span class="line"><span class="comment">#为了测试，拉取间隔时间可以设置为3s</span></span><br><span class="line">scrape_interval: 3s</span><br><span class="line">···末尾加上</span><br><span class="line">    <span class="comment">#job名随便，告诉Prometheus去哪拉取数据     </span></span><br><span class="line">  - job_name: <span class="string">&quot;elk&quot;</span></span><br><span class="line">    static_configs:</span><br><span class="line">      - targets: [<span class="string">&quot;10.0.0.211:9100&quot;</span>,<span class="string">&quot;10.0.0.212:9100&quot;</span>,<span class="string">&quot;10.0.0.213:9100&quot;</span>]</span><br><span class="line">      </span><br><span class="line"><span class="comment">#2.修改配置文件后，对配置文件进行语法检查（Prometheus自带的）</span></span><br><span class="line">[root@elk01:0 ~]# /softwares/prometheus-2.53.2.linux-amd64/promtool check config /softwares/prometheus-2.53.2.linux-amd64/prometheus.yml </span><br><span class="line">Checking /softwares/prometheus-2.53.2.linux-amd64/prometheus.yml</span><br><span class="line"> SUCCESS: /softwares/prometheus-2.53.2.linux-amd64/prometheus.yml is valid prometheus config file syntax</span><br><span class="line"> </span><br><span class="line">`可以设置别名针对检查配置文件命令太长`</span><br><span class="line">[root@elk01:~]# vim /etc/profile</span><br><span class="line"><span class="built_in">alias</span> check=<span class="string">&#x27;/softwares/prometheus-2.53.2.linux-amd64/promtool check config /softwares/prometheus-2.53.2.linux-amd64/prometheus.yml&#x27;</span></span><br><span class="line"></span><br><span class="line">[root@elk01:0 ~]# <span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.重新加载配置（热加载）</span></span><br><span class="line">[root@elk211 ~]# curl -X POST http://10.0.0.211:9090/-/reload</span><br><span class="line"></span><br><span class="line"><span class="comment">#4. 浏览器刷新访问,在target里即可看到被监控端</span></span><br><span class="line">10.0.0.211:9090/targets</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241122111710195.png" alt="image-20241122111710195"></p><p><strong>关于metrics</strong></p><p><img src="https://cos.lukme.top/Pic/image-20241122113152787.png" alt="image-20241122113152787"></p><p><strong>过滤数据</strong></p><p><img src="https://cos.lukme.top/Pic/image-20241122114130917.png" alt="image-20241122114130917"></p><h2 id="Prometheus-metrics-类型">Prometheus metrics 类型</h2><ul><li>prometheus metrics type<br>prometheus监控中采集过来的数据统一称为Metrics数据，其并不是代表具体的数据格式，而是一种统计度量计算单位。</li></ul><p>当我们需要为某个系统或者某个服务做监控时，就需要使用到metrics。</p><p>prometheus支持的metrics包括但不限于以下几种数据类型:<br>guage:<br>最简单的度量指标，只是一个简单的返回值，或者叫瞬时状态。<br>比如说统计硬盘，内存等使用情况。<br>couter:<br>就是一个计数器，从数据量0开始累积计算，在理想情况下，只能是永远的增长，不会降低(有特殊情况，比如粉丝量)。<br>比如统计1小时，1天，1周，1一个月的用户访问量，这就是一个累加的操作。<br>histograms:<br>是统计数据的分布情况，比如最小值，最大值，中间值，中位数等，代表的是一种近似百分比估算数值。<br>通过histograms可以分别统计处在一个时间段(1s,2s,5s,10s)内nginx访问用户的响应时间。<br>summary:<br>summary是histograms的扩展类型，主要弥补histograms不足。</p><h2 id="Prometheus的PromQL语法">Prometheus的PromQL语法</h2><p>1 查看某个特定的key<br>node_cpu_seconds_total</p><p>2.查看某个节点的指标</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node_cpu_seconds_total&#123;instance=<span class="string">&quot;10.0.0.211:9100&quot;</span>&#125;</span><br></pre></td></tr></table></figure><p>3 查看某个节点的某刻CPU的某种状态</p><pre><code>node_cpu_seconds_total&#123;instance=&quot;10.0.0.211:9100&quot;,mode=&quot;idle&quot;,cpu=&quot;1&quot;&#125;</code></pre><p>4 查询最近10s内某个节点CPU的某种状态时间</p><pre><code>node_cpu_seconds_total&#123;instance=&quot;10.0.0.211:9100&quot;,mode=&quot;idle&quot;,cpu=&quot;1&quot;&#125;[10s]</code></pre><p>5 统计10s内，使用标签过滤器查看&quot;10.0.0.211:9100&quot;节点的第0颗CPU，非空闲状态使用的总时间</p><pre><code>node_cpu_seconds_total&#123;instance=&quot;10.0.0.211:9100&quot;,mode!=&quot;idle&quot;,cpu=&quot;1&quot;&#125;[10s]</code></pre><p>6 统计10s内，使用标签过滤器查看&quot;10.0.0.211:9100&quot;节点的第0颗CPU，mode名称以字母&quot;i&quot;开头的所有CPU核心。</p><pre><code>node_cpu_seconds_total&#123;instance=&quot;10.0.0.211:9100&quot;,mode=~&quot;i.*&quot;,cpu=&quot;0&quot;&#125;[10s]</code></pre><p>7 统计10s内，使用标签过滤器查看&quot;10.0.0.211:9100&quot;节点的第0颗CPU，mode名称不是以字母&quot;i&quot;开头的所有CPU核心。</p><pre><code>node_cpu_seconds_total&#123;instance=&quot;10.0.0.211:9100&quot;,mode!~&quot;i.*&quot;,cpu=&quot;0&quot;&#125;[10s]</code></pre>]]></content>
      
      
      <categories>
          
          <category> 监控 </category>
          
          <category> Prometheus </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Prometheus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>14.基于kafka的日志收集</title>
      <link href="/posts/b922fe1d.html"/>
      <url>/posts/b922fe1d.html</url>
      
        <content type="html"><![CDATA[<h2 id="filebeat写入数据到kafka集群">filebeat写入数据到kafka集群</h2><p><strong>1. 创建topic</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:5 ~]# kafka-topics.sh --bootstrap-server 10.0.0.212:9092 --topic linux-study --partitions 3 --replication-factor 2 --create</span><br><span class="line">Created topic linux-study.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@elk01:5 ~]# kafka-topics.sh --bootstrap-server 10.0.0.212:9092 --topic linux-study --describe</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241030003043850.png" alt="image-20241030003043850"></p><p><strong>2. filebeat写入数据到kafka</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:0 ~]# <span class="built_in">cat</span> /etc/filebeat/20-filebeat-to-kafka.yaml </span><br><span class="line">filebeat.inputs:</span><br><span class="line">  - <span class="built_in">type</span>: filestream</span><br><span class="line">    paths:</span><br><span class="line">      - /opt/access.log*</span><br><span class="line">  </span><br><span class="line">output.kafka:</span><br><span class="line">  <span class="comment"># 指定kafka集群地址</span></span><br><span class="line">  hosts: [<span class="string">&quot;10.0.0.211:9092&quot;</span>, <span class="string">&quot;10.0.0.212:9092&quot;</span>, <span class="string">&quot;10.0.0.213:9092&quot;</span>]</span><br><span class="line"></span><br><span class="line">  <span class="comment"># 指定写入的topic地址</span></span><br><span class="line">  topic: <span class="string">&#x27;linux-study&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#启动filebeat实例</span></span><br><span class="line">[root@elk01:0 ~]# filebeat -e -c /etc/filebeat/20-filebeat-to-kafka.yaml</span><br></pre></td></tr></table></figure><p><strong>3. kafka节点测试</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:0 ~]#  kafka-console-consumer.sh --bootstrap-server 10.0.0.212:9092 --topic linux-study --from-beginning --group filebeat01</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241030004427518.png" alt="image-20241030004427518"></p><h2 id="logstash从kafka集群读取数据">logstash从kafka集群读取数据</h2><p>**1.编写logstash实例 **</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:0 ~]# <span class="built_in">cat</span> /etc/logstash/conf.d/17-kafka-to-logstash.conf</span><br><span class="line">input &#123;</span><br><span class="line">  kafka &#123;</span><br><span class="line">    <span class="comment"># 指定kafka集群的地址</span></span><br><span class="line">    bootstrap_servers =&gt; <span class="string">&quot;10.0.0.211:9092,10.0.0.212:9092,10.0.0.213:9092&quot;</span></span><br><span class="line">    <span class="comment"># 指定topic列表</span></span><br><span class="line">    topics =&gt; [<span class="string">&quot;linux-study&quot;</span>]</span><br><span class="line">    <span class="comment"># 指定消费者组  (每次启动logstash，都需要换个组，因为同一个组的采集了不会再次采集，你也可以不用这个)</span></span><br><span class="line">    group_id =&gt; [<span class="string">&quot;filebeat01&quot;</span>]</span><br><span class="line">    <span class="comment"># 指定从offset开始读取数据的位置，earliest表示最早的数据开始读，latest表示从最新的位置读取。</span></span><br><span class="line">    auto_offset_reset =&gt; <span class="string">&quot;earliest&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output &#123;</span><br><span class="line">  stdout &#123;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment"># elasticsearch&#123;</span></span><br><span class="line"> <span class="comment">#    hosts =&gt; [&quot;10.0.0.91:9200&quot;,&quot;10.0.0.92:9200&quot;,&quot;10.0.0.93:9200&quot;]</span></span><br><span class="line"> <span class="comment">#    index =&gt; &quot;oldboyedu-kafka-elk-%&#123;+yyyy.MM.dd&#125;&quot;</span></span><br><span class="line"> <span class="comment">#    user =&gt; &quot;elastic&quot;</span></span><br><span class="line"> <span class="comment">#    password =&gt; &quot;123456&quot;</span></span><br><span class="line"> <span class="comment">#  &#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2. 启动logstash实例</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:0 ~]# logstash -rf /etc/logstash/conf.d/17-kafka-to-logstash.conf </span><br><span class="line"></span><br><span class="line">      <span class="string">&quot;@version&quot;</span> =&gt; <span class="string">&quot;1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;@timestamp&quot;</span> =&gt; 2024-10-29T17:05:27.448Z,</span><br><span class="line">       <span class="string">&quot;message&quot;</span> =&gt; <span class="string">&quot;&#123;\&quot;@timestamp\&quot;:\&quot;2024-10-29T16:39:24.279Z\&quot;,\&quot;@metadata\&quot;:&#123;\&quot;beat\&quot;:\&quot;filebeat\&quot;,\&quot;type\&quot;:\&quot;_doc\&quot;,\&quot;version\&quot;:\&quot;7.17.23\&quot;&#125;,\&quot;log\&quot;:&#123;\&quot;offset\&quot;:20478,\&quot;file\&quot;:&#123;\&quot;path\&quot;:\&quot;/opt/access.log\&quot;&#125;&#125;,\&quot;message\&quot;:\&quot;109.110.162.51 - - [04/Oct/2024:10:00:41 +0800] \\\&quot;GET / HTTP/1.1\\\&quot; 304 0 \\\&quot;-\\\&quot; \\\&quot;Mozilla/5.0 (iPhone; CPU iPhone OS 16_6 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/16.6 Mobile/15E148 Safari/604.1 Edg/129.0.0.0\\\&quot;\&quot;,\&quot;input\&quot;:&#123;\&quot;type\&quot;:\&quot;filestream\&quot;&#125;,\&quot;ecs\&quot;:&#123;\&quot;version\&quot;:\&quot;1.12.0\&quot;&#125;,\&quot;host\&quot;:&#123;\&quot;name\&quot;:\&quot;elk01\&quot;&#125;,\&quot;agent\&quot;:&#123;\&quot;id\&quot;:\&quot;0f020f85-7619-4e85-83ae-346d91b5ca57\&quot;,\&quot;name\&quot;:\&quot;elk01\&quot;,\&quot;type\&quot;:\&quot;filebeat\&quot;,\&quot;version\&quot;:\&quot;7.17.23\&quot;,\&quot;hostname\&quot;:\&quot;elk01\&quot;,\&quot;ephemeral_id\&quot;:\&quot;ed96638d-32ee-4ee0-afbb-504643c3d52a\&quot;&#125;&#125;&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241030010834508.png" alt="image-20241030010834508"></p><p><strong>3. 优化logstash</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:0 ~]# <span class="built_in">cat</span> /etc/logstash/conf.d/17-kafka-to-logstash.conf</span><br><span class="line">input &#123;</span><br><span class="line">  kafka &#123;</span><br><span class="line">    <span class="comment"># 指定kafka集群的地址</span></span><br><span class="line">    bootstrap_servers =&gt; <span class="string">&quot;10.0.0.211:9092,10.0.0.212:9092,10.0.0.213:9092&quot;</span></span><br><span class="line">    <span class="comment"># 指定topic列表</span></span><br><span class="line">    topics =&gt; [<span class="string">&quot;linux-study&quot;</span>]</span><br><span class="line">    <span class="comment"># 指定消费者组  (每次启动logstash，都需要换个组，因为同一个组的采集了不会再次采集，你也可以不用这个)</span></span><br><span class="line">    group_id =&gt; [<span class="string">&quot;filebeat01&quot;</span>]</span><br><span class="line">    <span class="comment"># 指定从offset开始读取数据的位置，earliest表示最早的数据开始读，latest表示从最新的位置读取。</span></span><br><span class="line">    auto_offset_reset =&gt; <span class="string">&quot;earliest&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#对message字段进行json格式化</span></span><br><span class="line">filter &#123;</span><br><span class="line">  json &#123;</span><br><span class="line">    <span class="built_in">source</span> =&gt; <span class="string">&quot;message&quot;</span></span><br><span class="line">    <span class="comment">#移除不需要的字段，不然像下面一样出现很多没有价值的字段</span></span><br><span class="line">   <span class="comment"># remove_field =&gt; [ &quot;input&quot;,&quot;host&quot;,&quot;agent&quot;,&quot;@version&quot;,&quot;log&quot;, &quot;ecs&quot; ]</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output &#123;</span><br><span class="line">  stdout &#123;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出结果展示</span></span><br><span class="line"></span><br><span class="line">         <span class="string">&quot;agent&quot;</span> =&gt; &#123;</span><br><span class="line">                <span class="string">&quot;name&quot;</span> =&gt; <span class="string">&quot;elk01&quot;</span>,</span><br><span class="line">                <span class="string">&quot;type&quot;</span> =&gt; <span class="string">&quot;filebeat&quot;</span>,</span><br><span class="line">            <span class="string">&quot;hostname&quot;</span> =&gt; <span class="string">&quot;elk01&quot;</span>,</span><br><span class="line">             <span class="string">&quot;version&quot;</span> =&gt; <span class="string">&quot;7.17.23&quot;</span>,</span><br><span class="line">        <span class="string">&quot;ephemeral_id&quot;</span> =&gt; <span class="string">&quot;9a1e6795-8fe4-476b-ba6b-9d91b41f282c&quot;</span>,</span><br><span class="line">                  <span class="string">&quot;id&quot;</span> =&gt; <span class="string">&quot;1b86f9d4-c41a-4c30-8b3c-c921ed07d026&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">         <span class="string">&quot;input&quot;</span> =&gt; &#123;</span><br><span class="line">        <span class="string">&quot;type&quot;</span> =&gt; <span class="string">&quot;filestream&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">      <span class="string">&quot;@version&quot;</span> =&gt; <span class="string">&quot;1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;@timestamp&quot;</span> =&gt; 2024-10-29T16:40:45.156Z,</span><br><span class="line">          <span class="string">&quot;host&quot;</span> =&gt; &#123;</span><br><span class="line">        <span class="string">&quot;name&quot;</span> =&gt; <span class="string">&quot;elk01&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">           <span class="string">&quot;ecs&quot;</span> =&gt; &#123;</span><br><span class="line">        <span class="string">&quot;version&quot;</span> =&gt; <span class="string">&quot;1.12.0&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">           <span class="string">&quot;log&quot;</span> =&gt; &#123;</span><br><span class="line">        <span class="string">&quot;offset&quot;</span> =&gt; 27088,</span><br><span class="line">          <span class="string">&quot;file&quot;</span> =&gt; &#123;</span><br><span class="line">            <span class="string">&quot;path&quot;</span> =&gt; <span class="string">&quot;/opt/access.log&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">#移除字段后展示</span></span><br><span class="line">    <span class="string">&quot;@timestamp&quot;</span> =&gt; 2024-10-29T16:40:45.156Z,</span><br><span class="line">       <span class="string">&quot;message&quot;</span> =&gt; <span class="string">&quot;150.109.253.34 - - [04/Oct/2024:10:01:27 +0800] \&quot;GET /app HTTP/1.1\&quot; 404 197 \&quot;-\&quot; \&quot;Mozilla/5.0 (Linux; Android 8.0.0; SM-G955U Build/R16NW) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Mobile Safari/537.36 Edg/129.0.0.0\&quot;&quot;</span></span><br></pre></td></tr></table></figure><p><strong>4. 正常操作优化,并输出到es集群</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:0 ~]# <span class="built_in">cat</span> /etc/logstash/conf.d/17-kafka-to-logstash.conf</span><br><span class="line">input &#123;</span><br><span class="line">  kafka &#123;</span><br><span class="line">    <span class="comment"># 指定kafka集群的地址</span></span><br><span class="line">    bootstrap_servers =&gt; <span class="string">&quot;10.0.0.211:9092,10.0.0.212:9092,10.0.0.213:9092&quot;</span></span><br><span class="line">    <span class="comment"># 指定topic列表</span></span><br><span class="line">    topics =&gt; [<span class="string">&quot;linux-study&quot;</span>]</span><br><span class="line">    <span class="comment"># 指定消费者组  (每次启动logstash，都需要换个组，因为同一个组的采集了不会再次采集，你也可以不用这个)</span></span><br><span class="line">    group_id =&gt; [<span class="string">&quot;filebeat01&quot;</span>]</span><br><span class="line">    <span class="comment"># 指定从offset开始读取数据的位置，earliest表示最早的数据开始读，latest表示从最新的位置读取。</span></span><br><span class="line">    auto_offset_reset =&gt; <span class="string">&quot;earliest&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#对message字段进行json格式化</span></span><br><span class="line">filter &#123;</span><br><span class="line">  json &#123;</span><br><span class="line">    <span class="built_in">source</span> =&gt; <span class="string">&quot;message&quot;</span></span><br><span class="line">    <span class="comment">#移除不需要的字段</span></span><br><span class="line">    remove_field =&gt; [ <span class="string">&quot;input&quot;</span>,<span class="string">&quot;host&quot;</span>,<span class="string">&quot;agent&quot;</span>,<span class="string">&quot;@version&quot;</span>,<span class="string">&quot;log&quot;</span>, <span class="string">&quot;ecs&quot;</span> ]</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment"># 基于正则匹配任意文本，grok内置了120种匹配模式</span></span><br><span class="line">  grok &#123;</span><br><span class="line">    match =&gt; &#123;</span><br><span class="line">      <span class="string">&quot;message&quot;</span> =&gt; <span class="string">&quot;%&#123;HTTPD_COMBINEDLOG&#125;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  useragent &#123;</span><br><span class="line">    <span class="built_in">source</span> =&gt; <span class="string">&quot;agent&quot;</span></span><br><span class="line">    target =&gt; <span class="string">&quot;agent-kind&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">  geoip &#123;</span><br><span class="line">    <span class="built_in">source</span> =&gt; <span class="string">&quot;clientip&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">date</span> &#123;</span><br><span class="line">    match =&gt; [ <span class="string">&quot;timestamp&quot;</span>, <span class="string">&quot;dd/MMM/yyyy:HH:mm:ss Z&quot;</span> ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">output &#123;</span><br><span class="line">  stdout &#123;</span><br><span class="line">  &#125;</span><br><span class="line">  elasticsearch&#123;</span><br><span class="line">     hosts =&gt; [<span class="string">&quot;10.0.0.211:9200&quot;</span>,<span class="string">&quot;10.0.0.212:9200&quot;</span>,<span class="string">&quot;10.0.0.213:9200&quot;</span>]</span><br><span class="line">     index =&gt; <span class="string">&quot;kafka-elk-%&#123;+yyyy.MM.dd&#125;&quot;</span></span><br><span class="line">     user =&gt; <span class="string">&quot;elastic&quot;</span></span><br><span class="line">     password =&gt; <span class="string">&quot;123456&quot;</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241030013045764.png" alt="image-20241030013045764"></p>]]></content>
      
      
      <categories>
          
          <category> ELK日志收集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ELK </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>13.使用supervisor管理服务</title>
      <link href="/posts/1267bcfa.html"/>
      <url>/posts/1267bcfa.html</url>
      
        <content type="html"><![CDATA[<h2 id="使用supervisor管理服务">使用supervisor管理服务</h2><p><strong>1. 下载supervisor</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@elk02:0 ~]#  apt -y install supervisor</span><br></pre></td></tr></table></figure><p><strong>2. 启动服务并设置开机自启</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@elk02:0 ~]#  systemctl start supervisor</span><br><span class="line">[root@elk02:0 ~]#  systemctl <span class="built_in">enable</span> supervisor</span><br></pre></td></tr></table></figure><p><strong>3.修改supervisor配置</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:2 ~]# vim /etc/supervisor/supervisord.conf</span><br><span class="line">···</span><br><span class="line"><span class="comment"># 以后需要配置的服务只需要放在/etc/supervisor/下，以.ini结尾的都可被supervisor管理</span></span><br><span class="line">[include]</span><br><span class="line">files = /etc/supervisor/*.ini</span><br></pre></td></tr></table></figure><p><strong>4.编辑ini配置文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:2 ~]# <span class="built_in">cat</span> /etc/supervisor/zk.ini </span><br><span class="line">[program:zookeeper]</span><br><span class="line"><span class="built_in">command</span>=/app/zookeeper/bin/zkServer.sh start-foreground</span><br><span class="line">autostart=<span class="literal">true</span></span><br><span class="line">autorestart=<span class="literal">true</span></span><br><span class="line">stderr_logfile=/var/log/zookeeper.err.log</span><br><span class="line">stdout_logfile=/var/log/zookeeper.out.log</span><br><span class="line">user=root</span><br><span class="line">priority=1</span><br><span class="line">environment=JAVA_HOME=<span class="string">&quot;/usr/share/elasticsearch/jdk/&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#注意修改zookeeper的安装路径，以及javahome路径   （使用  echo $JAVA_HOME 查看java环境 ）</span></span><br><span class="line">[root@elk01:2 ~]# <span class="built_in">echo</span> <span class="variable">$JAVA_HOME</span></span><br><span class="line">/usr/share/elasticsearch/jdk</span><br></pre></td></tr></table></figure><p><strong>5. 更新supervisor配置</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:2 ~]# supervisorctl update</span><br><span class="line"></span><br><span class="line">注意：每次跟新服务配置都需要update</span><br></pre></td></tr></table></figure><p><strong>6.supervisor管理命令</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#启动服务</span></span><br><span class="line">[root@elk01:2 ~]# supervisorctl start zookeeper</span><br><span class="line"></span><br><span class="line"><span class="comment">#停止服务</span></span><br><span class="line">[root@elk01:2 ~]# supervisorctl stop zookeeper</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动或者停止所有服务</span></span><br><span class="line">[root@elk01:2 ~]# supervisorctl start/stop all</span><br><span class="line"></span><br><span class="line">友情提示：</span><br><span class="line">  如果你的zookeeper是使用zkServer.sh start 启动的，要先使用zkServer.sh stop关闭服务，不能使用zkServer启动服务，使用supervisor去关闭服务</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ELK日志收集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ELK </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>12.kafka的脚本管理及数据延迟、丢失分析</title>
      <link href="/posts/70dc5443.html"/>
      <url>/posts/70dc5443.html</url>
      
        <content type="html"><![CDATA[<h2 id="kafka的脚本管理">kafka的脚本管理</h2><h3 id="topic管理">topic管理</h3><p><strong>1.查看topic列表</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:1 ~]# kafka-topics.sh --bootstrap-server 10.0.0.211:9092 --list </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>**2.创建topic **</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:1 ~]# kafka-topics.sh --bootstrap-server 10.0.0.211:9092 --topic luay --partitions 3 --replication-factor 2 --create</span><br><span class="line">Created topic luay.</span><br><span class="line"></span><br><span class="line"><span class="comment">#注释：</span></span><br><span class="line">--topic  luay           <span class="comment">#指定topic为luay</span></span><br><span class="line">--partitions 3          <span class="comment">#创建3个分区</span></span><br><span class="line">--replication-factor 2  <span class="comment">#创建2个副本</span></span><br><span class="line">--create                <span class="comment">#动作--创建</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#其它选项</span></span><br><span class="line">--delete                <span class="comment">#删除</span></span><br><span class="line">--alter                 <span class="comment">#修改</span></span><br><span class="line">--describe              <span class="comment">#输出详细信息</span></span><br></pre></td></tr></table></figure><p><img src="C:/Users/Dell/AppData/Roaming/Typora/typora-user-images/image-20241029180717295.png" alt="image-20241029180717295"></p><p><strong>3.修改分区数量【只能由小变大，不能由大变小】</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:1 ~]# kafka-topics.sh --bootstrap-server 10.0.0.211:9092 --topic luay --partitions 5 --alter</span><br></pre></td></tr></table></figure><p><img src="C:/Users/Dell/AppData/Roaming/Typora/typora-user-images/image-20241029180957289.png" alt="image-20241029180957289"></p><p><strong>4.查看指定topic的详细信息</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:1 ~]# kafka-topics.sh kafka-topics.sh --bootstrap-server 10.0.0.211:9092 --topic luay --describe</span><br></pre></td></tr></table></figure><p><img src="C:/Users/Dell/AppData/Roaming/Typora/typora-user-images/image-20241029181157071.png" alt="image-20241029181157071"></p><p><strong>5.删除topic</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:1 ~]# kafka-topics.sh kafka-topics.sh --bootstrap-server 10.0.0.211:9092 --topic luay --delete</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#kafka数据目录里topic会被标记-delete，等待一会便会自动删除</span></span><br><span class="line">[root@elk01:1 ~]# ll /app/data/kafka/</span><br><span class="line">drwxr-xr-x 2 root root 4096 Oct 29 18:15 luay-1.2baa4b610f314befbfbed58aaad84052-delete/</span><br><span class="line">drwxr-xr-x 2 root root 4096 Oct 29 18:15 luay-2.0f44f4821a1849ccb7e0e37e1fe65ff4-delete/</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="producer管理">producer管理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:5 ~]# kafka-console-producer.sh --bootstrap-server 10.0.0.211:9092 --topic <span class="built_in">test</span></span><br><span class="line">&gt;999999</span><br><span class="line">[2024-10-29 20:49:30,357] WARN [Producer clientId=console-producer] Error <span class="keyword">while</span> fetching metadata with correlation <span class="built_in">id</span> 7 : &#123;<span class="built_in">test</span>=LEADER_NOT_AVAILABLE&#125; (org.apache.kafka.clients.NetworkClient)</span><br><span class="line"></span><br><span class="line"><span class="comment">#首次写入时，若topic不存在，则kafka集群默认会自动创建。</span></span><br><span class="line">[root@elk02:1 ~]# kafka-topics.sh --bootstrap-server 10.0.0.211:9092 --list</span><br><span class="line"><span class="built_in">test</span></span><br></pre></td></tr></table></figure><h2 id="kafka的consumer管理">kafka的consumer管理</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#生产者发送消息</span></span><br><span class="line">[root@elk01:5 ~]# kafka-console-producer.sh --bootstrap-server 10.0.0.211:9092 --topic <span class="built_in">test</span></span><br><span class="line">&gt;12112112</span><br><span class="line">&gt;666666</span><br><span class="line"></span><br><span class="line"><span class="comment">#消费者接收消息---接收现在开始的消息</span></span><br><span class="line">[root@elk01:4 ~]# kafka-console-consumer.sh --bootstrap-server 10.0.0.211:9092 --topic <span class="built_in">test</span></span><br><span class="line">666666</span><br><span class="line"></span><br><span class="line"><span class="comment">#消费者接收消息---从头接收消息    --from-beginning </span></span><br><span class="line">[root@elk01:4 ~]# kafka-console-consumer.sh --bootstrap-server 10.0.0.211:9092 --topic <span class="built_in">test</span> --from-beginning </span><br><span class="line">999999</span><br><span class="line">12112112</span><br><span class="line">666666</span><br></pre></td></tr></table></figure><h2 id="消费者组理念">消费者组理念</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">- kafka的消费者组概念</span><br><span class="line">1.kafka的offset存储位置</span><br><span class="line">kafka早期版本 0.9-版本，offset记录存储在zookeeper集群。</span><br><span class="line">从kafka 0.10+版本，默认的offset存储在kafka集群，存储在一个名为<span class="string">&quot;__consumer_offsets&quot;</span>内置的topic。(当消费者出现宕机，当前当前组里的其它消费者会从_consumer_offsets记录的偏移量里，找到已经取到哪里的数据，从此点继续往后取数据，而不是从新取所有数据，避免数据重复采集)</span><br><span class="line"></span><br><span class="line">2.相关术语</span><br><span class="line">consumer group：    消费者组，任意一个消费者都隶属于一个消费者组。</span><br><span class="line"></span><br><span class="line">1.而<span class="string">&quot;__consumer_offsets&quot;</span>内置的topic记录的偏移量并不属于某个消费者，而是基于消费者进行记录的。</span><br><span class="line">2.当消费者组的消费者数量发生变化时，会触发重平衡(Rebalance);</span><br><span class="line">  1.比如消费者组的消费者（C1/C2）新增或者下线，所谓的重平衡指的是该消费者组的消费者重新分配分区（0分区,1分区,2分区过程。</span><br><span class="line">  2.该消费者组若新增了消费者，也会触发重平衡;</span><br><span class="line">  3.当消费者组的数量多余partition数量时，则会导致该消费者组有空闲的消费者;（假设5个消费者，但是只有3个分区)</span><br></pre></td></tr></table></figure><p><img src="C:/Users/Dell/AppData/Roaming/Typora/typora-user-images/consumer_group.png" alt="consumer_group"></p><h2 id="kafka消费者组数据延迟分析">kafka消费者组数据延迟分析</h2><p>由图解，kafka的消费者是logstash，怎么会出现数据延迟呢？</p><p><img src="C:/Users/Dell/AppData/Roaming/Typora/typora-user-images/ElasticStack_MQ.png" alt="ElasticStack_MQ"></p><blockquote><p>当生产者过多，logstash忙不过来时候收集，就会出现数据延迟可能</p></blockquote><p>理论存在，分析实践</p><p><strong>1. 查看现有的消费者组列表</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@elk03:0 ~]# kafka-consumer-groups.sh --bootstrap-server  10.0.0.211:9092 --list</span><br><span class="line">console-consumer-10558</span><br><span class="line">console-consumer-73547</span><br><span class="line">console-consumer-4558</span><br></pre></td></tr></table></figure><p><strong>2.创建topic指定分区和副本</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@elk03:0 ~]# kafka-topics.sh --bootstrap-server 10.0.0.211:9092 --topic new --partitions 3 --replication-factor 2 --create</span><br><span class="line">Created topic new.</span><br></pre></td></tr></table></figure><p><strong>3.启动生产者</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:5 ~]# kafka-console-producer.sh --bootstrap-server 10.0.0.211:9092 --topic new</span><br><span class="line">&gt;999999</span><br></pre></td></tr></table></figure><p><strong>4.启动消费者</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1. 启动第一个消费者，指定消费者组</span></span><br><span class="line">[root@elk01:4 ~]# kafka-console-consumer.sh --bootstrap-server 10.0.0.211:9092 --topic new --from-beginning --group dev</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.查看消费者列表</span></span><br><span class="line">[root@elk03:0 ~]# kafka-consumer-groups.sh --bootstrap-server  10.0.0.211:9092 --list</span><br><span class="line">dev</span><br><span class="line">console-consumer-10558</span><br><span class="line">console-consumer-73547</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.查看指定消费者的详细信息</span></span><br><span class="line">[root@elk03:0 ~]# kafka-consumer-groups.sh --bootstrap-server  10.0.0.211:9092 --group dev --describe</span><br><span class="line">GROUP           TOPIC           PARTITION  CURRENT-OFFSET  LOG-END-OFFSET  LAG</span><br><span class="line">dev             new             0          0               0               0  </span><br><span class="line">dev             new             1          0               0               0  </span><br><span class="line">dev             new             2          1               0               0  </span><br></pre></td></tr></table></figure><p><img src="C:/Users/Dell/AppData/Roaming/Typora/typora-user-images/image-20241029224849054.png" alt="image-20241029224849054"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 4.生产者继续写入测试数据</span></span><br><span class="line">[root@elk01:5 ~]# kafka-console-producer.sh --bootstrap-server 10.0.0.211:9092 --topic new</span><br><span class="line">&gt;999999999</span><br><span class="line">&gt;aaaaaaaa</span><br><span class="line">&gt;vbbbbbb</span><br><span class="line">&gt;ccccc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5. 启动新的消费者</span></span><br><span class="line">[root@elk02:1 ~]# kafka-console-consumer.sh --bootstrap-server 10.0.0.211:9092 --topic new --from-beginning --group dev</span><br><span class="line"></span><br><span class="line">此时没有新的数据，因为被同一个组（dev）的第一个消费者已经采集过了</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6. 写入测试数据</span></span><br><span class="line">[root@elk01:5 ~]# kafka-console-producer.sh --bootstrap-server 10.0.0.211:9092 --topic new</span><br><span class="line">&gt;999999999</span><br><span class="line">&gt;aaaaaaaa</span><br><span class="line">&gt;vbbbbbb</span><br><span class="line">&gt;ccccc</span><br><span class="line">&gt;9999999999</span><br><span class="line">&gt;69696969696</span><br></pre></td></tr></table></figure><p><strong>停止所有消费者，只写入数据</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:5 ~]# kafka-console-producer.sh --bootstrap-server 10.0.0.211:9092 --topic new</span><br><span class="line">&gt;h</span><br><span class="line">&gt;h</span><br><span class="line">&gt;asasasasasasas</span><br><span class="line"></span><br><span class="line"><span class="comment"># 再次查看详细数据</span></span><br><span class="line">[root@elk03:0 ~]# kafka-consumer-groups.sh --bootstrap-server  10.0.0.211:9092 --group dev --describe</span><br></pre></td></tr></table></figure><p><img src="C:/Users/Dell/AppData/Roaming/Typora/typora-user-images/image-20241029230457830.png" alt="image-20241029230457830"></p><h2 id="kafka数据丢失分析">kafka数据丢失分析</h2><blockquote><p>见图解</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">kafka的ISR列表导致数据丢失的原因：</span><br><span class="line">ISR:</span><br><span class="line">和leader副本同步的所有副本集合。</span><br><span class="line">OSR:</span><br><span class="line">和leader副本不同步所有副本集合。</span><br><span class="line">AR:</span><br><span class="line">所有副本，指的是leader  + follower，即AR = ISR + OSR </span><br><span class="line">LEO:</span><br><span class="line">英文全称为: LOG-END-OFFSET，表示每个partition最后一个Offset。</span><br><span class="line">HW:</span><br><span class="line">表示在ISR列表中所有LEO中最小的LEO。</span><br></pre></td></tr></table></figure><p><img src="C:/Users/Dell/AppData/Roaming/Typora/typora-user-images/kafka-ISR.png" alt="kafka-ISR"></p>]]></content>
      
      
      <categories>
          
          <category> ELK日志收集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ELK </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>11.kafka介绍及部署</title>
      <link href="/posts/35ea5361.html"/>
      <url>/posts/35ea5361.html</url>
      
        <content type="html"><![CDATA[<h2 id="kafka介绍">kafka介绍</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Kafka 被称为下一代分布式消息系统，由 Scala 和 Java编写，是非营利性组织ASF(Apache Software Foundation)基金会中的一个开源项目，比如:HTTP Server、Tomcat、Hadoop、ActiveMQ等开源软件都属于 Apache基金会的开源软件，类似的消息系统还有RabbitMQ、ActiveMQ、ZeroMQ。</span><br><span class="line">Kafka用于构建实时数据管道和流应用程序。 它具有水平可伸缩性，容错性，快速性，可在数千家组织中同时投入生产协同工作。</span><br></pre></td></tr></table></figure><h2 id="kafka常见术语">kafka常见术语</h2><p>:dango:  <strong>1.</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">- topic:</span><br><span class="line">表示是主题，对应是逻辑存储单元，一般用于区分业务类型。可以和ES的索引对应。</span><br><span class="line">- partition</span><br><span class="line">分区，一个topic对应一个或多个partition。</span><br><span class="line">- replica:</span><br><span class="line">是数据的实际载体，真正存储数据的资源，分为leader和follower，其中leader对外提供读写，而follower负责数据的同步。</span><br><span class="line">- producer:</span><br><span class="line">生产者，往kafka集群写数据的一方。</span><br><span class="line">- consumer:</span><br><span class="line">消费者，从kafka读取数据的一方。</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/topic.png" alt="topic"></p><blockquote><p>读取数据只能去leader读取，follow值负责同步数据</p></blockquote><p>:dango:<strong>2. 角色介绍</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">（1）Producer：Producer即生产者，消息的产生者，是消息的入口。负责发布消息到Kafka broker</span><br><span class="line">（2）Consumer：消费者，用于消费消息，即处理消息</span><br><span class="line"></span><br><span class="line">Broker：Broker是kafka实例，每个服务器上可以有一个或多个kafka的实例，假设每个broker对应一台服务器。每个kafka集群内的broker都有一个不重复的编号，如: broker-0、broker-1等……</span><br><span class="line"></span><br><span class="line">（3）Topic ：消息的主题，可以理解为消息的分类，一个Topic相当于数据库中的一张表,一条消息相当于关系数据库的一条记录，一个Topic或者相当于Redis中列表类型的一个Key，一条消息即为列表中的一个元素。kafka的数据就保存在topic。在每个broker上都可以创建多个topic。物理上不同 topic 的消息分开存储在不同的文件夹，逻辑上一个 topic的消息虽然保存于一个或多个broker 上, 但用户只需指定消息的topic即可生产或消费数据而不必关心数据存于何处，topic 在逻辑上对record(记录、日志)进行分组保存，消费者需要订阅相应的topic 才能消费topic中的消息</span><br><span class="line"></span><br><span class="line">（4）Consumer group: 每个consumer 属于一个特定的consumer group（可为每个consumer 指定 group name，若不指定 group name 则属于默认的group），同一topic的一条消息只能被同一个consumer group 内的一个consumer 消费，类似于一对一的单播机制，但多个consumer group 可同时消费这一消息，类似于一对多的多播机制</span><br><span class="line"></span><br><span class="line">（5）Partition ：是物理上的概念，每个topic 分割为一个或多个partition，即一个topic切分为多份.创建 topic时可指定 partition 数量，partition的表现形式就是一个一个的文件夹,该文件夹下存储该partition的数据和索引文件，分区的作用还可以实现负载均衡，提高kafka的吞吐量。同一个topic在不同的分区的数据是不重复的,一般Partition数不要超过节点数，注意同一个partition数据是有顺序的，但不同的partition则是无序的</span><br><span class="line"></span><br><span class="line">（6）Replication: 同样数据的副本，包括leader和follower的副本数,基本于数据安全,建议至少2个,是Kafka的高可靠性的保障，和ES的副本有所不同，Kafka中的副本数包括主分片数,而ES中的副本数不包括主分片数</span><br><span class="line"></span><br><span class="line">为了实现数据的高可用，比如将分区 0 的数据分散到不同的kafka 节点，每一个分区都有一个 broker 作为 Leader 和一个 broker 作为Follower，类似于ES中的主分片和副本分片。</span><br><span class="line"></span><br><span class="line">假设分区为 3, 即分三个分区0-2，副本为3，即每个分区都有一个 leader，再加两个follower，分区 0 的leader为服务器A，则服务器 B 和服务器 C 为 A 的follower，而分区 1 的leader为服务器B，则服务器 A 和C 为服务器B 的follower，而分区 2 的leader 为C，则服务器A 和 B 为C 的follower。</span><br><span class="line"></span><br><span class="line">AR： Assigned Replicas，分区中的所有副本的统称，包括leader和 follower，AR= lSR+ OSR</span><br><span class="line">lSR：<span class="built_in">ln</span> Sync Replicas，所有与leader副本保持同步的副本 follower和leader本身组成的集合，包括leader和 follower，是AR的子集</span><br><span class="line">OSR：out-of-Sync Replied，所有与leader副本同步不能同步的 follower的集合，是AR的子集</span><br></pre></td></tr></table></figure><p>:dango: 3. 分区和副本的优势</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">实现存储空间的横向扩容，即将多个kafka服务器的空间组合利用</span><br><span class="line">提升性能，多服务器并行读写</span><br><span class="line">实现高可用，每个分区都有一个主分区即 leader 分布在不同的kafka 服务器，并且有对应follower 分布在和leader不同的服务器上</span><br></pre></td></tr></table></figure><p>:dango: <strong>4. kafka写入消息流程</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">生产者（producter）先从kafka集群获取分区的leader</span><br><span class="line">生产者（producter）将消息发送给leader</span><br><span class="line">leader将消息写入本地文件</span><br><span class="line">followers从leader pull消息</span><br><span class="line">followers将消息写入本地后向leader发送ACK</span><br><span class="line">leader收到所有副本的ACK后向producter发送ACK</span><br></pre></td></tr></table></figure><p>:dango:  <strong>5. kafka特点和优势</strong></p><blockquote><p><code>特点：</code><br>分布式: 多机实现,不允许单机<br>分区: 一个消息.可以拆分出多个，分别存储在多个位置<br>多副本: 防止信息丢失，可以多来几个备份<br>多订阅者: 可以有很多应用连接kafka<br>Zookeeper: 早期版本的Kafka依赖于zookeeper， 2021年4月19日Kafka 2.8.0正式发布，此版本包括了很多重要改动，最主要的是kafka通过自我管理的仲裁来替代ZooKeeper，即Kafka将不再需要ZooKeeper！！！</p></blockquote><blockquote><p><code>优势：</code><br>高吞吐量：即使是非常普通的硬件Kafka也可以支持每秒数百万的消息。支持通过Kafka 服务器分区消息。<br>分布式： Kafka 基于分布式集群实现高可用的容错机制，可以实现自动的故障转移。<br>顺序保证：在大多数使用场景下，数据处理的顺序都很重要。大部分消息队列本来就是排序的，并且能保证数据会按照特定的顺序来处理。 Kafka保证一个Partiton内的消息的有序性（分区间数据是无序的，如果对数据的顺序有要求，应将在创建主题时将分区数partitions设置为1）。<br>支持 Hadoop 并行数据加载。<br>通常用于大数据场合,传递单条消息比较大，而Rabbitmq 消息主要是传输业务的指令数据,单条数据较小。</p></blockquote><h2 id="单点部署kafka">单点部署kafka</h2><p><strong>1.下载kafka</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01 ~]#wget https://downloads.apache.org/kafka/3.8.0/kafka_2.13-3.8.0.tgz</span><br></pre></td></tr></table></figure><p><strong>2.解压kafka</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01 ~]# tar xf kafka_2.13-3.8.0.tgz -C /app/</span><br></pre></td></tr></table></figure><p><strong>3.修改kafka的配置文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:3 ~]# vim /app/kafka_2.13-3.8.0/config/server.properties </span><br><span class="line">···</span><br><span class="line"><span class="comment"># 修改kafka的broker的ID信息</span></span><br><span class="line">broker.id=211</span><br><span class="line"><span class="comment"># 修改数据目录</span></span><br><span class="line">log.dirs=/app/data/kafka</span><br><span class="line"><span class="comment"># 修改元数据存储zookeeper集群地址</span></span><br><span class="line">zookeeper.connect=10.0.0.211:2181,10.0.0.212:2181,10.0.0.213:2181/kafka380</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;注释：&#x27;</span></span><br><span class="line">/kafka380   是将以后的znode都放在kafka380下，不指定则默认都在zookeeper的 / 下</span><br></pre></td></tr></table></figure><p><strong>4.配置环境变量</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01 ~]# <span class="built_in">cat</span>  /etc/profile.d/kafka.sh</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="built_in">export</span> KAFKA_HOME=/app/kafka_2.13-3.8.0</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$KAFKA_HOME</span>/bin</span><br><span class="line"></span><br><span class="line"><span class="comment">#加载环境变量</span></span><br><span class="line">[root@elk01:4 ~]# <span class="built_in">source</span> /etc/profile.d/kafka.sh </span><br></pre></td></tr></table></figure><p><strong>5.启动kafka节点</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:4 ~]# kafka-server-start.sh -daemon <span class="variable">$KAFKA_HOME</span>/config/server.properties</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241029000747486.png" alt="image-20241029000747486"></p><h2 id="kafka配置文件详解">kafka配置文件详解</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Licensed to the Apache Software Foundation (ASF) under one or more</span></span><br><span class="line"><span class="comment"># contributor license agreements.  See the NOTICE file distributed with</span></span><br><span class="line"><span class="comment"># this work for additional information regarding copyright ownership.</span></span><br><span class="line"><span class="comment"># The ASF licenses this file to You under the Apache License, Version 2.0</span></span><br><span class="line"><span class="comment"># (the &quot;License&quot;); you may not use this file except in compliance with</span></span><br><span class="line"><span class="comment"># the License.  You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#    http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment"># distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></span><br><span class="line"><span class="comment"># WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment"># See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment"># limitations under the License.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This configuration file is intended for use in ZK-based mode, where Apache ZooKeeper is required.</span></span><br><span class="line"><span class="comment"># See kafka.server.KafkaConfig for additional details and defaults</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment">############################# Server Basics #############################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># broker 的全局唯一编号，不能重复，只能是数字。</span></span><br><span class="line">broker.id=0</span><br><span class="line"></span><br><span class="line"><span class="comment">############################# Socket Server Settings #############################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 套接字服务器侦听的地址。如果未配置，主机名将等于的值</span></span><br><span class="line"><span class="comment"># java.net.InetAddress.getCanonicalHostName(), with PLAINTEXT listener name, and port 9092.</span></span><br><span class="line"><span class="comment">#   FORMAT:</span></span><br><span class="line"><span class="comment">#     listeners = listener_name://host_name:port</span></span><br><span class="line"><span class="comment">#   EXAMPLE:</span></span><br><span class="line"><span class="comment">#     listeners = PLAINTEXT://your.host.name:9092</span></span><br><span class="line"><span class="comment">#listeners=PLAINTEXT://:9092</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 侦听器名称、主机名和代理将向客户端公布的端口。</span></span><br><span class="line"><span class="comment"># 如果未设置，则使用“listeners”的值。</span></span><br><span class="line"><span class="comment">#advertised.listeners=PLAINTEXT://your.host.name:9092</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将侦听器名称映射到安全协议，默认情况下它们是相同的。有关更多详细信息，请参阅配置文档</span></span><br><span class="line"><span class="comment">#listener.security.protocol.map=PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 处理网络请求的线程数量(服务器用于从网络接收请求并向网络发送响应的线程数)</span></span><br><span class="line">num.network.threads=3</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用来处理磁盘 IO 的线程数量</span></span><br><span class="line">num.io.threads=8</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送套接字的缓冲区大小</span></span><br><span class="line">socket.send.buffer.bytes=102400</span><br><span class="line"></span><br><span class="line"><span class="comment"># 接收套接字的缓冲区大小</span></span><br><span class="line">socket.receive.buffer.bytes=102400</span><br><span class="line"></span><br><span class="line"><span class="comment"># 请求套接字的缓冲区最大大小</span></span><br><span class="line">socket.request.max.bytes=104857600</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">############################# Log Basics #############################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># kafka 运行日志(数据)存放的路径,路径不需要提前创建,kafka 自动帮你创建,可以配置多个磁盘路径,路径与路径之间可以用&quot;,&quot;分隔</span></span><br><span class="line">log.dirs=/usr/kafka/kafka_2.13-3.6.1/datas</span><br><span class="line"></span><br><span class="line"><span class="comment"># 每个topic在当前 broker上的默认分区数。更多的分区允许更大的并行性以供使用，但这也会导致代理之间有更多的文件。</span></span><br><span class="line">num.partitions=1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动时用于日志恢复和关闭时用于刷新的每个数据目录的线程数。(用来恢复和清理 data 下数据的线程数量)对于数据目录位于RAID阵列中的安装，建议增加此值。</span></span><br><span class="line">num.recovery.threads.per.data.dir=1</span><br><span class="line"></span><br><span class="line"><span class="comment">############################# Internal Topic Settings  #############################</span></span><br><span class="line"><span class="comment"># 每个 topic 创建时的副本数，默认时 1 个副本,对于开发测试以外的环境，建议使用大于1的值以确保可用性，如3</span></span><br><span class="line">offsets.topic.replication.factor=1</span><br><span class="line">transaction.state.log.replication.factor=1</span><br><span class="line">transaction.state.log.min.isr=1</span><br><span class="line"></span><br><span class="line"><span class="comment">############################# Log Flush Policy #############################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Messages are immediately written to the filesystem but by default we only fsync() to sync</span></span><br><span class="line"><span class="comment"># the OS cache lazily. The following configurations control the flush of data to disk.</span></span><br><span class="line"><span class="comment"># There are a few important trade-offs here:</span></span><br><span class="line"><span class="comment">#    1. Durability: Unflushed data may be lost if you are not using replication.</span></span><br><span class="line"><span class="comment">#    2. Latency: Very large flush intervals may lead to latency spikes when the flush does occur as there will be a lot of data to flush.</span></span><br><span class="line"><span class="comment">#    3. Throughput: The flush is generally the most expensive operation, and a small flush interval may lead to excessive seeks.</span></span><br><span class="line"><span class="comment"># The settings below allow one to configure the flush policy to flush data after a period of time or</span></span><br><span class="line"><span class="comment"># every N messages (or both). This can be done globally and overridden on a per-topic basis.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 强制将数据刷新到磁盘之前要接受的消息数</span></span><br><span class="line"><span class="comment">#log.flush.interval.messages=10000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在强制刷新之前，消息可以在日志中停留的最长时间</span></span><br><span class="line"><span class="comment">#log.flush.interval.ms=1000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">############################# Log Retention Policy #############################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The following configurations control the disposal of log segments. The policy can</span></span><br><span class="line"><span class="comment"># be set to delete segments after a period of time, or after a given size has accumulated.</span></span><br><span class="line"><span class="comment"># A segment will be deleted whenever *either* of these criteria are met. Deletion always happens</span></span><br><span class="line"><span class="comment"># from the end of the log.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># segment 文件保留的最长时间，超时将被删除</span></span><br><span class="line">log.retention.hours=168</span><br><span class="line"></span><br><span class="line"><span class="comment"># 基于大小的日志保留策略。除非剩余的</span></span><br><span class="line"><span class="comment"># segments下降到 log.retention.bytes 以下。独立于log.retention.hours的函数.</span></span><br><span class="line"><span class="comment">#log.retention.bytes=1073741824</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 每个 segment 文件的最大大小，默认最大 1G ，当达到此大小时，将创建一个新的segment。</span></span><br><span class="line">log.segment.bytes=1073741824</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查日志段以查看是否可以根据保留策略删除它们的间隔(检查过期数据的时间，默认 5 分钟检查一次是否数据过期)</span></span><br><span class="line">log.retention.check.interval.ms=300000</span><br><span class="line"></span><br><span class="line"><span class="comment">############################# Zookeeper #############################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Zookeeper集群连接字符串,一个以逗号分隔的&#x27;主机:端口&#x27;对，每个对对应一个zk服务器。可以在url中附加一个可选的chroot字符串，以指定所有kafka-znode的根目录。</span></span><br><span class="line">zookeeper.connect=10.0.0.211:2181,10.0.0.212:2181,10.0.0.213:2181</span><br><span class="line"></span><br><span class="line"><span class="comment"># 连接到zookeeper 的超时时间（毫秒）</span></span><br><span class="line">zookeeper.connection.timeout.ms=18000</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">############################# Group Coordinator Settings #############################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 以下配置指定GroupCoordinator将延迟初始使用者重新平衡的时间（以毫秒为单位）。</span></span><br><span class="line"><span class="comment"># 随着新成员加入组，再平衡将进一步延迟group.initial.rebalance.delay.ms的值，最大值为max.poll.interval.ms。</span></span><br><span class="line"><span class="comment"># 默认值为3秒。</span></span><br><span class="line"><span class="comment"># 我们在这里将其覆盖为0，因为它为开发和测试提供了更好的开箱即用体验。</span></span><br><span class="line"><span class="comment"># 但是，在生产环境中，默认值3秒更合适，因为这将有助于避免在应用程序启动期间进行不必要的、可能代价高昂的重新平衡。</span></span><br><span class="line">group.initial.rebalance.delay.ms=3</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="部署kafka集群">部署kafka集群</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">重复单点部署的1-6步骤，不过需要注意的是，配置文件的broker.id=211/212/213  根据你的ip后尾自行修改(三个节点不相同，且为正整数就行)</span><br></pre></td></tr></table></figure><blockquote><p>温馨提示：三个  节点做hosts解析,将主机名解析到你的ip上，巨坑，一开始忘记反向解析这个问题了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@elk211 ~]# <span class="built_in">cat</span> &gt;&gt; /etc/hosts &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">10.0.0.211 elk01</span></span><br><span class="line"><span class="string">10.0.0.212 elk02</span></span><br><span class="line"><span class="string">10.0.0.213 elk03</span></span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241029185857776.png" alt="image-20241029185857776"></p><p>以此为戒。。。。。。巨坑</p></blockquote><p><img src="https://cos.lukme.top/Pic/image-20241029002841827.png" alt="image-20241029002841827"></p><blockquote><p>我们配置文件里没有指定每个kafka的地址，那它们是如何找到彼此的呢？</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:4 ~]# grep -Ev <span class="string">&#x27;^#|^$&#x27;</span> /app/kafka_2.13-3.8.0/config/server.properties </span><br><span class="line">broker.id=211</span><br><span class="line">num.network.threads=3</span><br><span class="line">num.io.threads=8</span><br><span class="line">socket.send.buffer.bytes=102400</span><br><span class="line">socket.receive.buffer.bytes=102400</span><br><span class="line">socket.request.max.bytes=104857600</span><br><span class="line">log.dirs=/app/data/kafka</span><br><span class="line">num.partitions=1</span><br><span class="line">num.recovery.threads.per.data.dir=1</span><br><span class="line">offsets.topic.replication.factor=1</span><br><span class="line">transaction.state.log.replication.factor=1</span><br><span class="line">transaction.state.log.min.isr=1</span><br><span class="line">log.retention.hours=168</span><br><span class="line">log.retention.check.interval.ms=300000</span><br><span class="line">zookeeper.connect=10.0.0.211:2181,10.0.0.212:2181,10.0.0.213:2181/kafka380</span><br><span class="line">zookeeper.connection.timeout.ms=18000</span><br><span class="line">group.initial.rebalance.delay.ms=0</span><br></pre></td></tr></table></figure><p><font color=red>kafka通过连接zookeeper，去找到各个kafka</font></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> ELK日志收集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ELK </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>10.zookeeper的图形化管理</title>
      <link href="/posts/da2b0f43.html"/>
      <url>/posts/da2b0f43.html</url>
      
        <content type="html"><![CDATA[<h2 id="zookeeper的类型">zookeeper的类型</h2><ol><li>临时znode类型</li></ol><p>当客户端会话断开连接，若在规定时间(默认是30s)内没有重新连接则该客户端创建的所有znode都会被删除。</p><ol start="2"><li>永久znode</li></ol><p>当客户端会话断开连接，znode不会被删除。</p><blockquote><p>默认创建的znode都是永久的，如果想要创建临时znode，则需要指定&quot;-e&quot;参数。</p></blockquote><p><strong>验证测试</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">[zk: localhost:2181(CONNECTED) 0] <span class="built_in">ls</span> /</span><br><span class="line">[luay, zookeeper]</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看znode状态信息</span></span><br><span class="line">[zk: localhost:2181(CONNECTED) 1] <span class="built_in">stat</span> /luay</span><br><span class="line">cZxid = 0x400000002</span><br><span class="line">ctime = Mon Oct 28 13:09:07 UTC 2024</span><br><span class="line">mZxid = 0x40000000e</span><br><span class="line">mtime = Mon Oct 28 13:11:34 UTC 2024</span><br><span class="line">pZxid = 0x40000000b</span><br><span class="line">cversion = 5</span><br><span class="line">dataVersion = 3</span><br><span class="line">aclVersion = 0</span><br><span class="line">ephemeralOwner = 0x0</span><br><span class="line">dataLength = 4</span><br><span class="line">numChildren = 1</span><br><span class="line"></span><br><span class="line"><span class="comment">#临时创建znode</span></span><br><span class="line"></span><br><span class="line">[zk: localhost:2181(CONNECTED) 2] create -e /abc</span><br><span class="line">Created /abc</span><br><span class="line"></span><br><span class="line">[zk: localhost:2181(CONNECTED) 6] <span class="built_in">stat</span> /abc</span><br><span class="line">cZxid = 0xf00000002</span><br><span class="line">ctime = Mon Oct 28 14:23:04 UTC 2024</span><br><span class="line">mZxid = 0xf00000002</span><br><span class="line">mtime = Mon Oct 28 14:23:04 UTC 2024</span><br><span class="line">pZxid = 0xf00000002</span><br><span class="line">cversion = 0</span><br><span class="line">dataVersion = 0</span><br><span class="line">aclVersion = 0</span><br><span class="line">ephemeralOwner = 0xd500028c8caa0000</span><br><span class="line">dataLength = 0</span><br><span class="line">numChildren = 0</span><br><span class="line"></span><br><span class="line">`注意：ephemeralOwner这一行，不是和上面永久znode状态一样，上面永久的是0x0`</span><br><span class="line"></span><br><span class="line"><span class="comment">#退出连接等待30s再次连接查看--没了</span></span><br><span class="line">[zk: localhost:2181(CONNECTED) 0] <span class="built_in">ls</span> /</span><br><span class="line">[luay, zookeeper]</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;重新建立链接，默认30s后数据就自动删除！&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="zookeeper的JVM调优">zookeeper的JVM调优</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.zookeeper的堆内存调优思路（这里调试128m测试）</span><br><span class="line">生成环境中，建议配置2GB-4GB即可。默认是1GB。</span><br><span class="line"></span><br><span class="line">2.查看默认的堆内存大小</span><br><span class="line">[root@elk03:1 ~]#  ps -ef | grep zookeeper | grep -i xmx</span><br></pre></td></tr></table></figure><p><img src="C:/Users/Dell/AppData/Roaming/Typora/typora-user-images/image-20241028223011825.png" alt="image-20241028223011825"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">3.修改官方的环境变量脚本</span><br><span class="line">[root@elk03:1 ~]# <span class="built_in">cat</span> /app/zookeeper/bin/zkEnv.sh </span><br><span class="line">···</span><br><span class="line"><span class="comment"># default heap for zookeeper server</span></span><br><span class="line">ZK_SERVER_HEAP=<span class="string">&quot;<span class="variable">$&#123;ZK_SERVER_HEAP:-128&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># default heap for zookeeper client</span></span><br><span class="line">ZK_CLIENT_HEAP=<span class="string">&quot;<span class="variable">$&#123;ZK_CLIENT_HEAP:-128&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">4. 同步到其它节点</span><br><span class="line">[root@elk03 ~]# scp /app/zookeeper/bin/zkEnv.sh 10.0.0.211:/app/zookeeper/bin/  </span><br><span class="line">[root@elk03 ~]# scp /app/zookeeper/bin/zkEnv.sh 10.0.0.212:/app/zookeeper/bin/</span><br><span class="line"></span><br><span class="line">5.重启zookeeper集群（所有节点）</span><br><span class="line">[root@elk03:1 ~]# zkServer.sh restart</span><br><span class="line"></span><br><span class="line">6.再次查看占用内存大小</span><br><span class="line">[root@elk03 ~]# ps -ef | grep zookeeper | grep -i xmx</span><br></pre></td></tr></table></figure><h2 id="zookeeper的图形化管理">zookeeper的图形化管理</h2><p><strong>了解</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#依赖1.8版本jdk</span></span><br><span class="line">https://github.com/zhitom/zkweb/releases/download/zkWeb-v1.2.1/zkWeb-v1.2.1.jar</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">1.解压jdk</span><br><span class="line">[root@elk01 ~]#tar xf jdk-8u291-linux-x64.tar.gz -C /app/</span><br><span class="line"></span><br><span class="line">2.前台启动zkweb</span><br><span class="line">[root@elk01 ~]# /app/jdk1.8.0_291/bin/java -jar /app/zkWeb-v1.2.1.jar </span><br><span class="line"></span><br><span class="line">后台启动：</span><br><span class="line">[root@elk01 ~]# <span class="built_in">nohup</span> /app/jdk1.8.0_291/bin/java -jar /app/zkWeb-v1.2.1.jar &amp;&gt; /tmp/zkweb.log</span><br><span class="line"></span><br><span class="line">3.浏览器访问</span><br><span class="line">10.0.0.211:8099/</span><br></pre></td></tr></table></figure><blockquote><p>注：多个节点直接以   ,  分开  10.0.0.211:2181,10.0.0.212:2181,10.0.0.213:2181</p></blockquote><p><img src="C:/Users/Dell/AppData/Roaming/Typora/typora-user-images/image-20241028231813958.png" alt="image-20241028231813958"></p><p><img src="C:/Users/Dell/AppData/Roaming/Typora/typora-user-images/image-20241028232321533.png" alt="image-20241028232321533"></p>]]></content>
      
      
      <categories>
          
          <category> ELK日志收集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ELK </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>09.zookeeper集群部署</title>
      <link href="/posts/1c1f467f.html"/>
      <url>/posts/1c1f467f.html</url>
      
        <content type="html"><![CDATA[<h2 id="zookeeper作用和应用场景">zookeeper作用和应用场景</h2><p><strong>1.zookeeper存储什么数据</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">存储的主要是一些配置信息，可以用于服务注册，服务发现等常见。</span><br><span class="line">zookeeper的存储结构和Linux文件系统很相似，有多级目录。</span><br><span class="line"></span><br><span class="line">和Linux的根文件系统和类似，分为目录和文件，zookeeper也类似，只不过没有文件和目录的区别，而是都称之为zookeeper node，简称znode。</span><br><span class="line"></span><br><span class="line">znode不适合存储大量数据，一个znode默认最大存储2MB的数据。</span><br></pre></td></tr></table></figure><p><strong>2.zookeeper的应用场景</strong></p><p>和kafka，hbase，HDFS，YARN，Dubbo，Solr等服务，提供了配置信息，注册中心等辅助功能。</p><p><strong>ElasticStack架构升级–MQ</strong></p><blockquote><p>filebeat数据采集交给Kafka消息队列，logstash去拉取Kafka里的数据处理交给ES集群</p></blockquote><p><img src="https://cos.lukme.top/Pic/ElasticStack_MQ.png" alt="ElasticStack_MQ"></p><p>消息队列产品</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Rocket MQ</span><br><span class="line">Active MQ</span><br><span class="line">Kafka</span><br><span class="line">Rebbit MQ</span><br></pre></td></tr></table></figure><h2 id="zookeeper单点部署">zookeeper单点部署</h2><p><code>这里仅为测试，可跳过步骤 4,5 直接部署集群，避免单点故障</code></p><blockquote><p>官方版本选择：<a href="https://zookeeper.apache.org/releases.html">https://zookeeper.apache.org/releases.html</a></p><p>zookeeper集群的节点数量选择</p><p>当每秒请求量低于6w/s，读取数据占据70%，大多数是读的场景，官方测试数据建议选择3台集群。</p></blockquote><p><strong>1.下载zookeeper</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:3 ~]# wget https://dlcdn.apache.org/zookeeper/zookeeper-3.8.4/apache-zookeeper-3.8.4-bin.tar.gz</span><br></pre></td></tr></table></figure><p>**2.解压软件包 **</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:3 ~]# tar xf apache-zookeeper-3.8.4-bin.tar.gz -C /app/</span><br><span class="line"></span><br><span class="line"><span class="comment">#做软链接</span></span><br><span class="line">[root@elk01:3 ~]# <span class="built_in">ln</span> -s /app/apache-zookeeper-3.8.4-bin/ /app/zookeeper</span><br></pre></td></tr></table></figure><p><strong>3.配置环境变量</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:3 ~]# <span class="built_in">cat</span> /etc/profile.d/zk.sh</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/share/elasticsearch/jdk</span><br><span class="line"><span class="built_in">export</span> ZK_HOME=/app/zookeeper</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$ZK_HOME</span>/bin:<span class="variable">$JAVA_HOME</span>/bin</span><br><span class="line"></span><br><span class="line"><span class="comment">#加载环境变量</span></span><br><span class="line">[root@elk01:3 ~]# <span class="built_in">source</span> /etc/profile.d/zk.sh</span><br></pre></td></tr></table></figure><p><strong>4.准备配置文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:3 ~]#  <span class="built_in">cp</span> /app/zookeeper/conf/zoo&#123;_sample,&#125;.cfg </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#这里只是对配置文件的解读，未修改配置文件，复制出来默认即可</span></span><br><span class="line">[root@elk01:3 ~]# <span class="built_in">cat</span> /app/zookeeper/conf/zoo.cfg </span><br><span class="line"><span class="comment"># 指定最小的时间单位tick，默认单位是毫秒，此处最小单位是1  tick=2s</span></span><br><span class="line">tickTime=2000</span><br><span class="line"><span class="comment"># 在集群初始化时的时间默认是10 tick，则表示20s</span></span><br><span class="line">initLimit=10</span><br><span class="line"><span class="comment"># 数据同步时间5 tick，则表示10s</span></span><br><span class="line">syncLimit=5</span><br><span class="line"><span class="comment"># 数据的存储目录</span></span><br><span class="line">dataDir=/tmp/zookeeper</span><br><span class="line"><span class="comment"># 服务监听的端口</span></span><br><span class="line">clientPort=2181</span><br></pre></td></tr></table></figure><p><strong>5.启动测试</strong></p><blockquote><p>注意，zookeeper启动会监听8080端口，启动失败注意查看端口冲突</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#排错看日志</span></span><br><span class="line">[root@elk01:3 ~]# ll /app/zookeeper/logs/</span><br><span class="line">-rw-r--r-- 1 root root 16469 Oct 28 17:12 zookeeper-root-server-elk01.out</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:3 ~]# zkServer.sh start</span><br><span class="line">ZooKeeper JMX enabled by default</span><br><span class="line">Using config: /app/zookeeper/bin/../conf/zoo.cfg</span><br><span class="line">Starting zookeeper ... STARTED</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看状态</span></span><br><span class="line">[root@elk01:3 ~]# zkServer.sh status</span><br><span class="line">ZooKeeper JMX enabled by default</span><br><span class="line">Using config: /app/zookeeper/bin/../conf/zoo.cfg</span><br><span class="line">Client port found: 2181. Client address: localhost. Client SSL: <span class="literal">false</span>.</span><br><span class="line">Mode: standalone</span><br><span class="line"></span><br><span class="line"><span class="comment">#standalone  单点状态</span></span><br></pre></td></tr></table></figure><p><strong>连接测试</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:3 ~]# zkCli.sh      或者</span><br><span class="line">[root@elk01:3 ~]# zkCli.sh -server 10.0.0.211</span><br><span class="line"></span><br><span class="line">2024-10-28 17:06:31,811 [myid:localhost:2181] - INFO  [main-SendThread(localhost:2181):o.a.z.ClientCnxn<span class="variable">$SendThread</span>@1453] - Session establishment complete on server localhost/127.0.0.1:2181, session <span class="built_in">id</span> = 0x10001704a360000, negotiated <span class="built_in">timeout</span> = 30000</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">WatchedEvent state:SyncConnected <span class="built_in">type</span>:None path:null</span><br><span class="line">[zk: localhost:2181(CONNECTED) 1] <span class="built_in">ls</span> /      <span class="comment">#ls命令测试下</span></span><br><span class="line">[zookeeper]</span><br><span class="line"></span><br><span class="line"><span class="comment">#出现它的session id  即为部署成功</span></span><br></pre></td></tr></table></figure><h2 id="zookeeper集群部署">zookeeper集群部署</h2><blockquote><p>如果zookeeper单点未做，步骤1,3可跳过</p></blockquote><p><strong>1. 停止服务</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:3 ~]# zkServer.sh stop</span><br><span class="line">ZooKeeper JMX enabled by default</span><br><span class="line">Using config: /app/zookeeper/bin/../conf/zoo.cfg</span><br><span class="line">Stopping zookeeper ... STOPPED</span><br></pre></td></tr></table></figure><p><strong>2.修改配置文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01 ~]# <span class="built_in">cat</span> /app/zookeeper/conf/zoo.cfg </span><br><span class="line"><span class="comment"># 定义最小单元的时间范围tick。</span></span><br><span class="line">tickTime=2000</span><br><span class="line"><span class="comment"># 启动时最长等待tick数量。</span></span><br><span class="line">initLimit=5</span><br><span class="line"><span class="comment"># 数据同步时最长等待的tick时间进行响应ACK</span></span><br><span class="line">syncLimit=2</span><br><span class="line"><span class="comment"># 指定数据目录</span></span><br><span class="line">dataDir=/app/data/zk</span><br><span class="line"><span class="comment"># 监听端口</span></span><br><span class="line">clientPort=2181</span><br><span class="line"><span class="comment"># 开启四字命令允许所有的节点访问。</span></span><br><span class="line">4lw.commands.whitelist=*</span><br><span class="line"><span class="comment"># server.ID=A:B:C[:D]</span></span><br><span class="line"><span class="comment"># ID:</span></span><br><span class="line"><span class="comment">#    zk的唯一编号。</span></span><br><span class="line"><span class="comment"># A:</span></span><br><span class="line"><span class="comment">#    zk的主机地址。</span></span><br><span class="line"><span class="comment"># B:</span></span><br><span class="line"><span class="comment">#    leader的选举端口，是谁leader角色，就会监听该端口。</span></span><br><span class="line"><span class="comment"># C: </span></span><br><span class="line"><span class="comment">#    数据通信端口。</span></span><br><span class="line"><span class="comment"># D:</span></span><br><span class="line"><span class="comment">#    可选配置，指定角色。</span></span><br><span class="line">server.91=10.0.0.211:2888:3888</span><br><span class="line">server.92=10.0.0.212:2888:3888</span><br><span class="line">server.93=10.0.0.213:2888:3888</span><br><span class="line"></span><br><span class="line"><span class="comment">## Metrics Providers</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># https://prometheus.io Metrics Exporter</span></span><br><span class="line"><span class="comment">#metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider</span></span><br><span class="line"><span class="comment">#metricsProvider.httpHost=0.0.0.0</span></span><br><span class="line"><span class="comment">#metricsProvider.httpPort=7000</span></span><br><span class="line"><span class="comment">#metricsProvider.exportJvmInfo=true</span></span><br></pre></td></tr></table></figure><p><strong>3.恢复原环境</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:3 ~]# <span class="built_in">rm</span> -fr /app/zookeeper/logs/*</span><br><span class="line">[root@elk01:3 ~]# <span class="built_in">rm</span> -fr tmp/zookeeper/*</span><br></pre></td></tr></table></figure><p><strong>4. 同步数据</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#拷贝环境变量文件</span></span><br><span class="line">[root@elk01 ~]# scp /etc/profile.d/zk.sh 10.0.0.212:/etc/profile.d/</span><br><span class="line">[root@elk01 ~]# scp /etc/profile.d/zk.sh 10.0.0.213:/etc/profile.d/</span><br><span class="line"></span><br><span class="line"><span class="comment">#拷贝zookeeper文件</span></span><br><span class="line">[root@elk01 ~]# scp apache-zookeeper-3.8.4-bin.tar.gz 10.0.0.212:/root</span><br><span class="line">[root@elk01 ~]# scp apache-zookeeper-3.8.4-bin.tar.gz 10.0.0.213:/root</span><br><span class="line"></span><br><span class="line"><span class="comment">#在对端解压zookeeper，做软链接（两个节点同步操做）</span></span><br><span class="line">[root@elk02 ~]# tar xf apache-zookeeper-3.8.4-bin.tar.gz -C /app/</span><br><span class="line"></span><br><span class="line">[root@elk02 ~]# <span class="built_in">ln</span> -s /app/apache-zookeeper-3.8.4-bin/ /app/zookeeper</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#拷贝zookeeper配置文件</span></span><br><span class="line">[root@elk01 ~]# scp /app/zookeeper/conf/zoo.cfg 10.0.0.212:/app/zookeeper/conf/</span><br><span class="line">[root@elk01 ~]# scp /app/zookeeper/conf/zoo.cfg 10.0.0.213:/app/zookeeper/conf/</span><br></pre></td></tr></table></figure><p><strong>5.生成myid文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建数据目录（配置文件里声明的目录）  </span></span><br><span class="line">`这里使用循环是因为三台机器我已两两做了免密,另外两个节点也可使用命令  <span class="built_in">mkdir</span> /app/data/zk -p`</span><br><span class="line">[root@elk01:3 ~]# <span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> 211 213` ;<span class="keyword">do</span> ssh 10.0.0.<span class="variable">$i</span> <span class="built_in">mkdir</span> /app/data/zk -p ;<span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#生成myid文件</span></span><br><span class="line">[root@elk01:3 ~]# <span class="keyword">for</span> n <span class="keyword">in</span> `<span class="built_in">seq</span> 211 213` ;<span class="keyword">do</span> ssh 10.0.0.<span class="variable">$n</span> <span class="string">&quot;echo <span class="variable">$n</span> &gt; /app/data/zk/myid&quot;</span>;<span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#myid文件作用</span></span><br><span class="line">如果首次启动时候没有事务文件，则会比较myid文件里，谁最大谁就是master</span><br></pre></td></tr></table></figure><p><strong>6.启动服务</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01 ~]# zkServer.sh start</span><br><span class="line">[root@elk02 ~]# zkServer.sh start</span><br><span class="line">[root@elk03 ~]# zkServer.sh start</span><br><span class="line"></span><br><span class="line"><span class="comment">#如果报错找不到命令，可能是配置的环境变量没有生效，执行如下</span></span><br><span class="line">[root@elk03 ~]# <span class="built_in">source</span> /etc/profile.d/zk.sh </span><br><span class="line"></span><br><span class="line"><span class="comment">#查看状态</span></span><br><span class="line">[root@elk03:1 ~]# zkServer.sh status</span><br><span class="line">ZooKeeper JMX enabled by default</span><br><span class="line">Using config: /app/zookeeper/bin/../conf/zoo.cfg</span><br><span class="line">Client port found: 2181. Client address: localhost. Client SSL: <span class="literal">false</span>.</span><br><span class="line">Mode: leader</span><br></pre></td></tr></table></figure><p><strong>7.避坑指南</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">我所遇到的坑：</span><br><span class="line"> 1.如果做集群，三个节点的配置文件一样，否则会有zookeeper起不来情况</span><br><span class="line"> 2.删除如果你想清空环境重新启动zookeeper，记得日志和数据目录一起清除，否则服务起不来</span><br></pre></td></tr></table></figure><h2 id="验证zookeeper集群高可用">验证zookeeper集群高可用</h2><p><strong>1.连接测试</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01 ~]# zkCli.sh -server 10.0.0.212:2181</span><br><span class="line">[root@elk01 ~]# zkCli.sh -server 10.0.0.213:2181</span><br><span class="line">···</span><br><span class="line">ablishment complete on server elk03/10.0.0.213:2181, session <span class="built_in">id</span> = 0xd40001f2a52b0000, negotiated <span class="built_in">timeout</span> = 30000</span><br></pre></td></tr></table></figure><p><strong>2. 将leader节点挂掉，集群会自动选举出新的leader，集群正常对外提供服务</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#当前leader节点是elk03</span></span><br><span class="line">[root@elk03 ~]# zkServer.sh status</span><br><span class="line">ZooKeeper JMX enabled by default</span><br><span class="line">Using config: /app/zookeeper/bin/../conf/zoo.cfg</span><br><span class="line">Client port found: 2181. Client address: localhost. Client SSL: <span class="literal">false</span>.</span><br><span class="line">Mode: leader</span><br><span class="line"></span><br><span class="line"><span class="comment">#停止elk03的zookeeper</span></span><br><span class="line">[root@elk03 ~]# zkServer.sh stop</span><br><span class="line">ZooKeeper JMX enabled by default</span><br><span class="line">Using config: /app/zookeeper/bin/../conf/zoo.cfg</span><br><span class="line">Stopping zookeeper ... STOPPED</span><br><span class="line"></span><br><span class="line"><span class="comment">#经查看leader在elk02节点上</span></span><br><span class="line">[root@elk02 ~]# zkServer.sh status</span><br><span class="line">ZooKeeper JMX enabled by default</span><br><span class="line">Using config: /app/zookeeper/bin/../conf/zoo.cfg</span><br><span class="line">Client port found: 2181. Client address: localhost. Client SSL: <span class="literal">false</span>.</span><br><span class="line">Mode: leader</span><br><span class="line"></span><br><span class="line"><span class="comment">#如果此时再次停止leader节点，那还会不会再选举？</span></span><br><span class="line">`经测试，停掉elk02节点的zookeeper时候，elk01节点不会选举为leader，而是会停止zookeeper服务`</span><br><span class="line">这也是我前面猜的坑，只有一台zookeeper时候是起不来服务的</span><br><span class="line"></span><br><span class="line"><span class="comment">#恢复  两个节点停止的服务重新启用即可</span></span><br></pre></td></tr></table></figure><blockquote><p>总结：</p><p>1.zookeeper分布式集群的特点，半数以上节点存活才能对外提供服务;<br>2.zookeeper一个集群中仅有一个leader和多个follower;<br>3.如果一个zookeeper集群想要容忍N台故障，该集群最少要有2N+1个节点</p></blockquote><h2 id="zookeeper基础命令">zookeeper基础命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#连接zookeeper</span></span><br><span class="line">[root@elk02:1 ~]# zkCli.sh</span><br><span class="line">WatchedEvent state:SyncConnected <span class="built_in">type</span>:None path:null</span><br><span class="line"></span><br><span class="line"><span class="comment">#1. 查看znode列表</span></span><br><span class="line">[zk: localhost:2181(CONNECTED) 1] <span class="built_in">ls</span> /</span><br><span class="line">[zookeeper]</span><br><span class="line"></span><br><span class="line"><span class="comment">#2. 创建znode</span></span><br><span class="line">[zk: localhost:2181(CONNECTED) 2] create /luay</span><br><span class="line">Created /luay</span><br><span class="line">[zk: localhost:2181(CONNECTED) 3] <span class="built_in">ls</span> /</span><br><span class="line">[luay, zookeeper]</span><br><span class="line"></span><br><span class="line"><span class="comment">#3. 创建znode时指定数据</span></span><br><span class="line">[zk: localhost:2181(CONNECTED) 4] create /test abc</span><br><span class="line">Created /test</span><br><span class="line"></span><br><span class="line"><span class="comment">#4. 查看znode的数据</span></span><br><span class="line">[zk: localhost:2181(CONNECTED) 5] get /test</span><br><span class="line">abc</span><br><span class="line"></span><br><span class="line"><span class="comment">#5. 修改znode的值</span></span><br><span class="line">[zk: localhost:2181(CONNECTED) 7] get /luay</span><br><span class="line">null</span><br><span class="line">[zk: localhost:2181(CONNECTED) 8] <span class="built_in">set</span> /luay new</span><br><span class="line">[zk: localhost:2181(CONNECTED) 9] get /luay</span><br><span class="line">new</span><br><span class="line"></span><br><span class="line"><span class="comment">#6. 创建子znode</span></span><br><span class="line">[zk: localhost:2181(CONNECTED) 10] <span class="built_in">ls</span> /luay </span><br><span class="line">[]</span><br><span class="line">[zk: localhost:2181(CONNECTED) 11] create /luay/happy xixi</span><br><span class="line">Created /luay/happy</span><br><span class="line">[zk: localhost:2181(CONNECTED) 12] get /luay/happy</span><br><span class="line">xixi</span><br><span class="line"></span><br><span class="line"><span class="comment">#7. 删除znode，前提是该znode没有子节点</span></span><br><span class="line">[zk: localhost:2181(CONNECTED) 13] <span class="built_in">ls</span> /test</span><br><span class="line">[] </span><br><span class="line">[zk: localhost:2181(CONNECTED) 14] delete /test</span><br><span class="line">[zk: localhost:2181(CONNECTED) 15] <span class="built_in">ls</span> /test</span><br><span class="line">Node does not exist: /test</span><br><span class="line">[zk: localhost:2181(CONNECTED) 16] <span class="built_in">ls</span> /</span><br><span class="line">[luay, zookeeper]</span><br><span class="line"></span><br><span class="line"><span class="comment">#8. 删除非空znode，该znode有子节点，会报错</span></span><br><span class="line">[zk: localhost:2181(CONNECTED) 17] delete /luay</span><br><span class="line">Node not empty: /luay</span><br><span class="line">[zk: localhost:2181(CONNECTED) 18] </span><br></pre></td></tr></table></figure><blockquote><p>你会发现我连接zookeeper时候是还有本地连接方式，当我使用远程方式连接elk01时候也会有数据，因为zookeeper做了集群</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@elk03 ~]# zkCli.sh -server 10.0.0.211:2181</span><br><span class="line"></span><br><span class="line">[zk: localhost:2181(CONNECTED) 3] <span class="built_in">ls</span> /</span><br><span class="line">[luay, zookeeper]</span><br></pre></td></tr></table></figure></blockquote><h2 id="zookeeper的watch机制（了解）">zookeeper的watch机制（了解）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">开两个终端，其中一个终端使用watch，另一个终端创建子znode</span><br><span class="line"></span><br><span class="line"><span class="comment">#1. 监控一个znode下子节点的变化</span></span><br><span class="line">[zk: 10.0.0.211:2181(CONNECTED) 0] <span class="built_in">ls</span> -w /luay</span><br><span class="line">[]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#发起创建动作</span></span><br><span class="line">[zk: 10.0.0.211:2181(CONNECTED) 11] create /luay/abc</span><br><span class="line">Created /luay/abc</span><br><span class="line"></span><br><span class="line"><span class="comment">#监控终端则输出</span></span><br><span class="line">[zk: 10.0.0.211:2181(CONNECTED) 1] </span><br><span class="line">WATCHER::</span><br><span class="line">WatchedEvent state:SyncConnected <span class="built_in">type</span>:NodeChildrenChanged path:/luay</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 监控znode的数据是否发生变化 （另一个终端只需要修改znode值即可监控到）</span></span><br><span class="line">[zk: 10.0.0.211:2181(CONNECTED) 0] get -w /luay</span><br><span class="line">[]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 注意：</span></span><br><span class="line">- 1.watch事件是一次性的，只记录第一次创建或者修改动作;</span><br><span class="line">- 2.watch事件一旦触发，就会通知监控者程序，由该程序去负责相应的逻辑处理;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ELK日志收集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ELK </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>08.文档读写流程</title>
      <link href="/posts/cfedfcaa.html"/>
      <url>/posts/cfedfcaa.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="ce8649610c701f3708bbd23f88d3c1e9008927ca3698c07b84a347bc963191c5"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> ELK日志收集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ELK </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>07.Elasticsearch参数调优</title>
      <link href="/posts/793b821e.html"/>
      <url>/posts/793b821e.html</url>
      
        <content type="html"><![CDATA[<h2 id="Elasticsearch参数调优">Elasticsearch参数调优</h2><h3 id="1-系统层面的调优">1. 系统层面的调优</h3><p>系统层面的调优主要是<code>内存的设定</code>与<code>避免交换内存</code>。</p><p>ES 安装后默认设置的堆内存是 <code>1GB</code>，这很明显是不够的，那么接下来就会有一个问题出现：我们要设置多少内存给 ES 呢？</p><p>其实这是要看我们集群节点的内存大小，还取决于我们是否在服务器节点上还是否要部署其他服务。</p><ul><li>如果内存相对很大，如 64G 及以上，并且我们不在 ES 集群上部署其他服务，那么我建议 ES 内存可以设置为 31G-32G，因为这里有一个 32G 性能瓶颈问题，直白的说就是即使你给了 ES 集群大于 32G 的内存，其性能也不一定会更加优良，甚至会不如设置为 31G-32G 时候的性能。<br>以我调优的集群为例，我所调优的服务器节点内存为 64G，服务器节点上也基本不跑其他服务，所以我把 ES 集群内存大小设置为了 31G，以充分发挥集群性能。</li><li>设置 ES 集群内存的时候，还有一点就是确保堆内存最小值（Xms）与最大值（Xmx）的大小是相同的，防止程序在运行时改变堆内存大小，这是一个很耗系统资源的过程。</li><li>还有一点就是避免交换内存，可以在配置文件中对内存进行锁定，以避免交换内存（也可以在操作系统层面进行关闭内存交换）。对应的参数：<code>bootstrap.mlockall: true</code></li></ul><h3 id="2-分片与副本">2. 分片与副本</h3><ul><li><code>分片 (shard)</code>：ES 是一个分布式的搜索引擎, 索引通常都会分解成不同部分, 分布在不同节点的部分数据就是分片。ES 自动管理和组织分片, 并在必要的时候对分片数据进行再平衡分配, 所以用户基本上不用担心分片的处理细节。创建索引时默认的分片数为 5 个，并且一旦创建不能更改。</li><li><code>副本 (replica)</code>：ES 默认创建一份副本，就是说在 5 个主分片的基础上，每个主分片都相应的有一个副本分片。额外的副本有利有弊，有副本可以有更强的故障恢复能力，但也占了相应副本倍数的磁盘空间。</li></ul><p>那我们在创建索引的时候，应该创建多少个分片与副本数呢？</p><ul><li>对于副本数，比较好确定，可以根据我们集群节点的多少与我们的存储空间决定，我们的集群服务器多，并且有足够大多存储空间，可以多设置副本数，一般是 1-3 个副本数，如果集群服务器相对较少并且存储空间没有那么宽松，则可以只设定一份副本以保证容灾（副本数可以动态调整）。</li><li>对于分片数，是比较难确定的。因为一个索引分片数一旦确定，就不能更改，所以我们在创建索引前，要充分的考虑到，以后我们创建的索引所存储的数据量，否则创建了不合适的分片数，会对我们的性能造成很大的影响。</li></ul><h3 id="3-参数调优">3. 参数调优</h3><p>下面我会介绍一些 ES 关键参数的调优。</p><p>有很多场景是，我们的 ES 集群占用了多大的 cpu 使用率，该如何调节呢。cpu 使用率高，有可能是写入导致的，也有可能是查询导致的，那要怎么查看呢？</p><p>可以先通过 <code>GET _nodes/&#123;node&#125;/hot_threads</code> 查看线程栈，查看是哪个线程占用 <code>cpu</code> 高，如果是 <code>elasticsearch[&#123;node&#125;][search][T#10]</code> 则是查询导致的，如果是 <code>elasticsearch[&#123;node&#125;][bulk][T#1]</code> 则是数据写入导致的。</p><p>在实际调优中，cpu 使用率很高，如果不是 SSD，建议把 <code>index.merge.scheduler.max_thread_count: 1</code> 索引 merge 最大线程数设置为 1 个，该参数可以有效调节写入的性能。因为在存储介质上并发写，由于寻址的原因，写入性能不会提升，只会降低。</p><p>还有几个重要参数可以进行设置，各位同学可以视自己的集群情况与数据情况而定。</p><ul><li><code>index.refresh_interval</code>：这个参数的意思是数据写入后几秒可以被搜索到，默认是 1s。每次索引的 refresh 会产生一个新的 lucene 段, 这会导致频繁的合并行为，如果业务需求对实时性要求没那么高，可以将此参数调大，实际调优告诉我，该参数确实很给力，cpu 使用率直线下降。</li><li><code>indices.memory.index_buffer_size</code>：如果我们要进行非常重的高并发写入操作，那么最好将 <code>indices.memory.index_buffer_size</code> 调大一些，index buffer 的大小是所有的 shard 公用的，一般建议（看的大牛博客），对于每个 shard 来说，最多给 <code>512mb</code>，因为再大性能就没什么提升了。ES 会将这个设置作为每个 shard 共享的 index buffer，那些特别活跃的 shard 会更多的使用这个 buffer。默认这个参数的值是 10%，也就是 jvm heap 的 10%。</li><li><code>translog</code>：ES 为了保证数据不丢失，每次 index、bulk、delete、update 完成的时候，一定会触发刷新 translog 到磁盘上。在提高数据安全性的同时当然也降低了一点性能。如果你不在意这点可能性，还是希望性能优先，可以设置如下参数：</li></ul><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;index.translog&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;sync_interval&quot;</span>: <span class="string">&quot;120s&quot;</span>,     <span class="comment">--sync间隔调高</span></span><br><span class="line">        <span class="string">&quot;durability&quot;</span>: <span class="string">&quot;async&quot;</span>,       -– 异步更新</span><br><span class="line">        <span class="string">&quot;flush_threshold_size&quot;</span>:<span class="string">&quot;1g&quot;</span>  <span class="comment">--log文件大小</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li>这样设定的意思是开启异步写入磁盘，并设定写入的时间间隔与大小，有助于写入性能的提升。</li></ul><p><strong>还有一些超时参数的设置：</strong></p><ul><li><code>discovery.zen.ping_timeout</code> 判断 master 选举过程中，发现其他 node 存活的超时设置</li><li><code>discovery.zen.fd.ping_interval</code> 节点被 ping 的频率，检测节点是否存活</li><li><code>discovery.zen.fd.ping_timeout</code> 节点存活响应的时间，默认为 30s，如果网络可能存在隐患，可以适当调大</li><li><code>discovery.zen.fd.ping_retries ping</code> 失败/超时多少导致节点被视为失败，默认为 3</li></ul><h3 id="4-其他建议">4. 其他建议</h3><p>还有一些零碎的优化建议喔。</p><ul><li><code>插入索引自动生成 id</code>：当写入端使用特定的 id 将数据写入 ES 时，ES 会检查对应的索引下是否存在相同的 id，这个操作会随着文档数量的增加使消耗越来越大，所以如果业务上没有硬性需求建议使用 ES 自动生成的 id，加快写入速率。</li><li><code>避免稀疏索引</code>：索引稀疏之后，会导致索引文件增大。ES 的 keyword，数组类型采用 doc_values 结构，即使字段是空值，每个文档也会占用一定的空间，所以稀疏索引会造成磁盘增大，导致查询和写入效率降低。</li></ul><h2 id="jvm调优">jvm调优</h2><blockquote><p>仅提供思路，生产环境建议给到物理机内存一半，上限32G即可</p></blockquote><p>1.JVM调优策略</p><p>推荐设置是物理机的一半内存，但是当物理机的内存大于32GB的时候，若内存是64GB，则就是32GB内存。默认就是物理机内存的一半。</p><p>但是当大于64GB时，比如物理机是256GB内存，此时不应该设置内存为宿主机的一半，应该最大上限设置为32GB。</p><p>2.修改堆内存大小</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看当前内存使用状态</span></span><br><span class="line">[root@elk01:0 ~]# free -h</span><br><span class="line">               total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:           3.8Gi       2.2Gi       1.2Gi       0.0Ki       388Mi       1.4Gi</span><br><span class="line">Swap:          2.7Gi       736Mi       2.0Gi</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看java程序已占用内存</span></span><br><span class="line">[root@elk92 ~]# ps -ef | grep java | grep -i xms</span><br><span class="line"></span><br><span class="line"><span class="comment">#我给的是4G内存，占用一半内存</span></span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241027215156903.png" alt="image-20241027215156903"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#修改内存大小</span></span><br><span class="line">[root@elk01:0 ~]# vim /etc/elasticsearch/jvm.options</span><br><span class="line">···</span><br><span class="line">-Xms256m</span><br><span class="line">-Xmx256m</span><br></pre></td></tr></table></figure><p><strong>拷贝文件到其他2个节点</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:0 ~]# scp /etc/elasticsearch/jvm.options 10.0.0.212:/etc/elasticsearch/</span><br><span class="line">[root@elk01:0 ~]# scp /etc/elasticsearch/jvm.options 10.0.0.213:/etc/elasticsearch/</span><br></pre></td></tr></table></figure><p><strong>重启ES集群</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:0 ~]#  systemctl restart elasticsearch</span><br><span class="line"></span><br><span class="line"><span class="comment">#注意：生产环境最好滚动重启，当前重启完毕后再重启其它节点（防止所有集群宕机）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看集群状态是否OK</span></span><br><span class="line">[root@elk01:2 ~]# curl 10.0.0.211:9200/_cat/nodes</span><br><span class="line">10.0.0.213 42 97 0 0.25 0.30 0.28 cdfhilmrstw * elk03</span><br><span class="line">10.0.0.211 75 48 3 1.38 0.81 0.64 cdfhilmrstw - elk01</span><br><span class="line">10.0.0.212 52 97 0 0.34 0.31 0.28 cdfhilmrstw - elk02</span><br></pre></td></tr></table></figure><p><strong>再次查看内存占用</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:2 ~]# free -h</span><br><span class="line">               total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:           3.8Gi       1.1Gi       2.0Gi       0.0Ki       771Mi       2.5Gi</span><br><span class="line">Swap:          2.7Gi        60Mi       2.7Gi</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ELK日志收集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ELK </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>06.ES集群加密</title>
      <link href="/posts/de7fd46f.html"/>
      <url>/posts/de7fd46f.html</url>
      
        <content type="html"><![CDATA[<h2 id="ES集群加密">ES集群加密</h2><p><strong>未加密前</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@elk91 ~]# curl 10.0.0.211:9200/_cat/nodes?v</span><br><span class="line">ip        heap.percent ram.percent cpu load_1m load_5m load_15m node.role   master name</span><br><span class="line">10.0.0.92           78          66   0    0.01    0.02     0.03 cdfhilmrstw -      elk01</span><br><span class="line">10.0.0.93           44          47   1    0.02    0.02     0.01 cdfhilmrstw -      elk02</span><br><span class="line">10.0.0.91           54          68   1    0.22    0.17     0.12 cdfhilmrstw *      elk03</span><br></pre></td></tr></table></figure><p><strong>1. 生成证书文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@elk91 ~]# /usr/share/elasticsearch/bin/elasticsearch-certutil cert --days 3650 -out /etc/elasticsearch/elastic-certificates.p12 -pass <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#修改证书权限（否则es没有权限读取证书）</span></span><br><span class="line">[root@elk91 ~]# <span class="built_in">chown</span> elasticsearch:elasticsearch /etc/elasticsearch/elastic-certificates.p12</span><br><span class="line"></span><br><span class="line">`注释:`</span><br><span class="line">[root@elk01:1 ~]# /usr/share/elasticsearch/bin/elasticsearch-certutil cert -h 查看帮助</span><br><span class="line">--days   指定证书有效期多久</span><br><span class="line">--out    指定证书存放路径</span><br><span class="line">--pass   指定证书密码（为空即可）</span><br></pre></td></tr></table></figure><p><strong>2. 同步证书文件到其他节点</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:1 ~]# scp /etc/elasticsearch/elastic-certificates.p12 10.0.0.212:/etc/elasticsearch/</span><br><span class="line">[root@elk01:1 ~]# scp /etc/elasticsearch/elastic-certificates.p12 10.0.0.213:/etc/elasticsearch/</span><br><span class="line"></span><br><span class="line"><span class="comment">#注：注意检查其它节点的证书权限是否是elasticsearch，若不是则修改（见上一步）</span></span><br></pre></td></tr></table></figure><p><strong>4. 修改ES配置文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:1 ~]# vim /etc/elasticsearch/elasticsearch.yml </span><br><span class="line"></span><br><span class="line"><span class="comment">#同步配置文件到其它节点</span></span><br><span class="line">[root@elk01:1 ~]# scp /etc/elasticsearch/elasticsearch.yml 10.0.0.212:/etc/elasticsearch/</span><br><span class="line">[root@elk01:1 ~]# scp /etc/elasticsearch/elasticsearch.yml 10.0.0.213:/etc/elasticsearch/</span><br></pre></td></tr></table></figure><p><strong>5. 所有节点重启elasticsearch</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:1 ~]#  systemctl restart elasticsearch</span><br><span class="line"></span><br><span class="line"><span class="comment">#注意：生产环境最好滚动重启，当前重启完毕后再重启其它节点（防止所有集群宕机）</span></span><br></pre></td></tr></table></figure><p><strong>6. 测试访问</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:1 ~]# curl 10.0.0.211:9200/_cat/nodes</span><br><span class="line">&#123;<span class="string">&quot;error&quot;</span>:&#123;<span class="string">&quot;root_cause&quot;</span>:[&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;security_exception&quot;</span>,<span class="string">&quot;reason&quot;</span>:<span class="string">&quot;missing authentication credentials for REST request [/_cat/nodes]&quot;</span>,<span class="string">&quot;header&quot;</span>:&#123;<span class="string">&quot;WWW-Authenticate&quot;</span>:<span class="string">&quot;Basic realm=\&quot;security\&quot; charset=\&quot;UTF-8\&quot;&quot;</span>&#125;&#125;],<span class="string">&quot;type&quot;</span>:<span class="string">&quot;security_exception&quot;</span>,<span class="string">&quot;reason&quot;</span>:<span class="string">&quot;missing authentication credentials for REST request [/_cat/nodes]&quot;</span>,<span class="string">&quot;header&quot;</span>:&#123;<span class="string">&quot;WWW-Authenticate&quot;</span>:<span class="string">&quot;Basic realm=\&quot;security\&quot; charset=\&quot;UTF-8\&quot;&quot;</span>&#125;&#125;,<span class="string">&quot;status&quot;</span>:401&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#没有权限访问即为成功</span></span><br></pre></td></tr></table></figure><h2 id="生成密码">生成密码</h2><p><strong>注意保存密码</strong></p><blockquote><p>auto  非交互式，自动生成随机密码</p><p>interactive 交互式，自己输入密码（有7项）</p><p><code>注意保存密码</code></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:1 ~]# /usr/share/elasticsearch/bin/elasticsearch-setup-passwords auto</span><br><span class="line">Initiating the setup of passwords <span class="keyword">for</span> reserved <span class="built_in">users</span> elastic,apm_system,kibana,kibana_system,logstash_system,beats_system,remote_monitoring_user.</span><br><span class="line">The passwords will be randomly generated and printed to the console.</span><br><span class="line">Please confirm that you would like to <span class="built_in">continue</span> [y/N]y</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Changed password <span class="keyword">for</span> user apm_system</span><br><span class="line">PASSWORD apm_system = ZY6QTWFDqGv64uVzB2PR</span><br><span class="line"></span><br><span class="line">Changed password <span class="keyword">for</span> user kibana_system</span><br><span class="line">PASSWORD kibana_system = BtaZLprbzzF1tYXSaCld</span><br><span class="line"></span><br><span class="line">Changed password <span class="keyword">for</span> user kibana</span><br><span class="line">PASSWORD kibana = BtaZLprbzzF1tYXSaCld</span><br><span class="line"></span><br><span class="line">Changed password <span class="keyword">for</span> user logstash_system</span><br><span class="line">PASSWORD logstash_system = ykztlETUjj9bu7zDF9Fw</span><br><span class="line"></span><br><span class="line">Changed password <span class="keyword">for</span> user beats_system</span><br><span class="line">PASSWORD beats_system = Fe075On7ZgmleYNkS9in</span><br><span class="line"></span><br><span class="line">Changed password <span class="keyword">for</span> user remote_monitoring_user</span><br><span class="line">PASSWORD remote_monitoring_user = J7bkmxKsrhUKhLJyksMD</span><br><span class="line"></span><br><span class="line">Changed password <span class="keyword">for</span> user elastic</span><br><span class="line">PASSWORD elastic = pNcoJpSv0j1Qp9ZZ4N5G</span><br></pre></td></tr></table></figure><p><strong>测试连接</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#加上用户和密码测试</span></span><br><span class="line">[root@elk01:1 ~]# curl -u elastic:pNcoJpSv0j1Qp9ZZ4N5G 10.0.0.211:9200/_cat/nodes</span><br><span class="line">10.0.0.212 19 97 3 0.23 0.50 0.71 cdfhilmrstw * elk02</span><br><span class="line">10.0.0.211 12 91 3 0.31 0.46 0.53 cdfhilmrstw - elk01</span><br><span class="line">10.0.0.213 43 90 3 0.27 0.61 0.89 cdfhilmrstw - elk03</span><br></pre></td></tr></table></figure><h2 id="kibana集成ES加密集群">kibana集成ES加密集群</h2><p><strong>1. 修改配置文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:2 ~]# vim /etc/kibana/kibana.yml </span><br><span class="line">···</span><br><span class="line">elasticsearch.username: <span class="string">&quot;kibana_system&quot;</span></span><br><span class="line">elasticsearch.password: <span class="string">&quot;BtaZLprbzzF1tYXSaCld&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#密码见上面生成的</span></span><br></pre></td></tr></table></figure><p>**2. 重启kibana服务 **</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:2 ~]#  systemctl restart kibana</span><br></pre></td></tr></table></figure><p><strong>3. 访问kibana的webUI登录</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">10.0.0.211:5601</span><br><span class="line"></span><br><span class="line">使用elastic用户登录</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241027222304410.png" alt="image-20241027222304410"></p><p><img src="https://cos.lukme.top/Pic/image-20241027222417898.png" alt="image-20241027222417898"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 登录后如果没有出现右上角e标志，尝试清除缓存，或者使用无痕模式登录</span></span><br><span class="line">这里修改密码为   123456</span><br></pre></td></tr></table></figure><h2 id="filebeat写入ES加密集群">filebeat写入ES加密集群</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:2 ~]# <span class="built_in">cat</span> /etc/filebeat/19-tcp_es_secret.yaml </span><br><span class="line"><span class="comment"># 数据从监听的指定tcp端口来</span></span><br><span class="line">filebeat.inputs:</span><br><span class="line">- <span class="built_in">type</span>: tcp</span><br><span class="line">  host: <span class="string">&quot;0.0.0.0:9000&quot;</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">#数据到终点</span></span><br><span class="line">output:</span><br><span class="line">  elasticsearch:</span><br><span class="line">    hosts:</span><br><span class="line">    - <span class="string">&quot;http://10.0.0.211:9200&quot;</span></span><br><span class="line">    - <span class="string">&quot;http://10.0.0.212:9200&quot;</span></span><br><span class="line">    - <span class="string">&quot;http://10.0.0.213:9200&quot;</span></span><br><span class="line">    index: <span class="string">&quot;linux-tcp-secret-%&#123;+yyyy.MM.dd&#125;&quot;</span></span><br><span class="line">    username: elastic</span><br><span class="line">    password: <span class="string">&quot;123456&quot;</span></span><br><span class="line"></span><br><span class="line">setup.ilm.enabled: <span class="literal">false</span></span><br><span class="line">setup.template.name: <span class="string">&quot;linux-tcp-secret&quot;</span></span><br><span class="line">setup.template.pattern: <span class="string">&quot;linux-tcp-secret*&quot;</span></span><br><span class="line">setup.template.overwrite: <span class="literal">false</span></span><br><span class="line">setup.template.settings:</span><br><span class="line">  index.number_of_shards: 5</span><br><span class="line">  index.number_of_replicas: 0</span><br><span class="line">  </span><br><span class="line"><span class="comment">#启动实例</span></span><br><span class="line">[root@elk01:2 ~]# filebeat -e -c /etc/filebeat/19-tcp_es_secret.yaml </span><br><span class="line"></span><br><span class="line"><span class="comment">#测试实例</span></span><br><span class="line">[root@elk01:2 ~]#  <span class="built_in">echo</span> 7890 |nc 10.0.0.211 9000</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241027224350997.png" alt="image-20241027224350997"></p><p><strong>使用开发工具简单查看数据</strong></p><p><img src="https://cos.lukme.top/Pic/image-20241027224929276.png" alt="image-20241027224929276"></p><h2 id="logstash写入ES加密集群">logstash写入ES加密集群</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:1 ~]# <span class="built_in">cat</span> /etc/logstash/conf.d/16-tcp-es-secret.conf</span><br><span class="line">input &#123;</span><br><span class="line">  tcp &#123;</span><br><span class="line">    port =&gt; 8888</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output &#123;</span><br><span class="line">   elasticsearch&#123;</span><br><span class="line">      hosts =&gt; [<span class="string">&quot;10.0.0.211:9200&quot;</span>,<span class="string">&quot;10.0.0.212:9200&quot;</span>,<span class="string">&quot;10.0.0.213:9200&quot;</span>]</span><br><span class="line">      index =&gt; <span class="string">&quot;logstach-tcp-secret-%&#123;+yyyy.MM.dd&#125;&quot;</span></span><br><span class="line">      user =&gt; <span class="string">&quot;elastic&quot;</span></span><br><span class="line">      password =&gt; <span class="string">&quot;123456&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动实例</span></span><br><span class="line">[root@elk01:0 ~]# logstash -rf /etc/logstash/conf.d/16-tcp-es-secret.conf </span><br><span class="line"></span><br><span class="line"><span class="comment">#写入数据测试</span></span><br><span class="line">[root@elk02:0 ~]# <span class="built_in">echo</span> 666666 |nc 10.0.0.211 8888</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241027225729785.png" alt="image-20241027225729785"></p><h2 id="角色访问">角色访问</h2><p><strong>创建角色，给开发或者运维不同权限</strong></p><p><img src="https://cos.lukme.top/Pic/image-20241027231430903.png" alt="image-20241027231430903"></p><p><img src="https://cos.lukme.top/Pic/image-20241027232332394.png" alt="image-20241027232332394"></p><p><img src="https://cos.lukme.top/Pic/image-20241027232500498.png" alt="image-20241027232500498"></p><p><strong>创建运维角色</strong></p><p><img src="https://cos.lukme.top/Pic/image-20241027232645991.png" alt="image-20241027232645991"></p><p><strong>还有kibana的权限选择all完事</strong>  <em><strong>图略</strong></em></p><p><strong>创建用户</strong></p><p><img src="https://cos.lukme.top/Pic/image-20241027232837646.png" alt="image-20241027232837646"></p><p><strong>登录李星星用户   权限确实少</strong></p><p><img src="https://cos.lukme.top/Pic/image-20241027233121133.png" alt="image-20241027233121133"></p>]]></content>
      
      
      <categories>
          
          <category> ELK日志收集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ELK </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>05.logstash对接filebeat</title>
      <link href="/posts/4a11ec3f.html"/>
      <url>/posts/4a11ec3f.html</url>
      
        <content type="html"><![CDATA[<h2 id="logstash对接filebeat">logstash对接filebeat</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1.编写logstash实例</span></span><br><span class="line">[root@elk01:1 ~]# <span class="built_in">cat</span> /etc/logstash/conf.d/03_filebeat_input.conf</span><br><span class="line">input &#123;</span><br><span class="line">  beats &#123;</span><br><span class="line">    port =&gt; 9999</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">output &#123;</span><br><span class="line">  stdout &#123;</span><br><span class="line">  codec =&gt; rubydebug</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动logstash实例</span></span><br><span class="line">[root@elk01:4 ~]# logstash -rf /etc/logstash/conf.d/03_filebeat_input.conf </span><br><span class="line"></span><br><span class="line"><span class="comment">#查看是否有9999端口</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:4 ~]# <span class="built_in">cat</span> /etc/filebeat/14-logstash.yaml </span><br><span class="line">filebeat.inputs:</span><br><span class="line">- <span class="built_in">type</span>: filestream</span><br><span class="line">  paths:</span><br><span class="line">    - /tmp/test.conf</span><br><span class="line">  parsers:</span><br><span class="line">  - ndjson:</span><br><span class="line">      target: <span class="string">&quot;&quot;</span></span><br><span class="line">      message_key: message</span><br><span class="line"></span><br><span class="line">output.logstash:</span><br><span class="line">  hosts: [<span class="string">&quot;10.0.0.211:9999&quot;</span>]</span><br><span class="line">  </span><br><span class="line"><span class="comment">#2.启动filebeat实例</span></span><br><span class="line">[root@elk01:4 ~]# filebeat -e -c /etc/filebeat/14-logstash.yaml </span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#检查logstash是否有标准输出  （message字段里输出new是/tmp/test.conf里的内容,证明对接filebeat成功）</span></span><br><span class="line">&#123;</span><br><span class="line">          <span class="string">&quot;host&quot;</span> =&gt; &#123;</span><br><span class="line">        <span class="string">&quot;name&quot;</span> =&gt; <span class="string">&quot;elk01&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">         <span class="string">&quot;agent&quot;</span> =&gt; &#123;</span><br><span class="line">        <span class="string">&quot;ephemeral_id&quot;</span> =&gt; <span class="string">&quot;b923603a-d451-4c18-b9d4-f7aa0e034000&quot;</span>,</span><br><span class="line">            <span class="string">&quot;hostname&quot;</span> =&gt; <span class="string">&quot;elk01&quot;</span>,</span><br><span class="line">                <span class="string">&quot;name&quot;</span> =&gt; <span class="string">&quot;elk01&quot;</span>,</span><br><span class="line">             <span class="string">&quot;version&quot;</span> =&gt; <span class="string">&quot;7.17.23&quot;</span>,</span><br><span class="line">                  <span class="string">&quot;id&quot;</span> =&gt; <span class="string">&quot;4f19d0b0-5ed5-4c21-82ef-6f001fb850b3&quot;</span>,</span><br><span class="line">                <span class="string">&quot;type&quot;</span> =&gt; <span class="string">&quot;filebeat&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;@timestamp&quot;</span> =&gt; 2024-10-05T05:29:42.250Z,</span><br><span class="line">      <span class="string">&quot;@version&quot;</span> =&gt; <span class="string">&quot;1&quot;</span>,</span><br><span class="line">           <span class="string">&quot;ecs&quot;</span> =&gt; &#123;</span><br><span class="line">        <span class="string">&quot;version&quot;</span> =&gt; <span class="string">&quot;1.12.0&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">          <span class="string">&quot;tags&quot;</span> =&gt; [</span><br><span class="line">        [0] <span class="string">&quot;beats_input_codec_plain_applied&quot;</span></span><br><span class="line">    ],</span><br><span class="line">       <span class="string">&quot;message&quot;</span> =&gt; <span class="string">&quot;new&quot;</span>,</span><br><span class="line">         <span class="string">&quot;input&quot;</span> =&gt; &#123;</span><br><span class="line">        <span class="string">&quot;type&quot;</span> =&gt; <span class="string">&quot;filestream&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">           <span class="string">&quot;log&quot;</span> =&gt; &#123;</span><br><span class="line">          <span class="string">&quot;file&quot;</span> =&gt; &#123;</span><br><span class="line">            <span class="string">&quot;path&quot;</span> =&gt; <span class="string">&quot;/tmp/test.conf&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;offset&quot;</span> =&gt; 14</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="filter处理字段">filter处理字段</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">filter &#123;</span><br><span class="line">  mutate &#123;</span><br><span class="line">    remove_field =&gt; [ <span class="string">&quot;@version&quot;</span>,<span class="string">&quot;input&quot;</span>,<span class="string">&quot;agent&quot;</span>,<span class="string">&quot;tags&quot;</span>, <span class="string">&quot;log&quot;</span> , <span class="string">&quot;host&quot;</span>,<span class="string">&quot;ecs&quot;</span>]</span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">#remove_field可以过滤不需要的顶级字段</span></span><br><span class="line"></span><br><span class="line">示例：</span><br><span class="line">[root@elk01:1 ~]# <span class="built_in">cat</span> /etc/logstash/conf.d/04_filebeat_input.conf</span><br><span class="line">input &#123;</span><br><span class="line">  beats &#123;</span><br><span class="line">    port =&gt; 9999</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">filter &#123;</span><br><span class="line">  mutate &#123;</span><br><span class="line">    remove_field =&gt; [ <span class="string">&quot;@version&quot;</span>,<span class="string">&quot;input&quot;</span>,<span class="string">&quot;agent&quot;</span>,<span class="string">&quot;tags&quot;</span>, <span class="string">&quot;log&quot;</span> , <span class="string">&quot;host&quot;</span>,<span class="string">&quot;ecs&quot;</span>]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">output &#123;</span><br><span class="line">  stdout &#123;</span><br><span class="line">  codec =&gt; rubydebug</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#效果如下  （如果想要message里每个字段加入到顶级字段里，详情见上一篇修改nginx配置文件）</span></span><br><span class="line">&#123;</span><br><span class="line">          <span class="string">&quot;timestamp&quot;</span> =&gt; <span class="string">&quot;2024-10-05T16:16:29+08:00&quot;</span>,</span><br><span class="line">                <span class="string">&quot;uri&quot;</span> =&gt; <span class="string">&quot;/index.nginx-debian.html&quot;</span>,</span><br><span class="line">             <span class="string">&quot;status&quot;</span> =&gt; <span class="string">&quot;304&quot;</span>,</span><br><span class="line">          <span class="string">&quot;SendBytes&quot;</span> =&gt; 0,</span><br><span class="line">            <span class="string">&quot;referer&quot;</span> =&gt; <span class="string">&quot;-&quot;</span>,</span><br><span class="line">            <span class="string">&quot;tcp_xff&quot;</span> =&gt; <span class="string">&quot;-&quot;</span>,</span><br><span class="line">         <span class="string">&quot;@timestamp&quot;</span> =&gt; 2024-10-05T08:16:30.048Z,</span><br><span class="line">              <span class="string">&quot;vhost&quot;</span> =&gt; <span class="string">&quot;10.0.0.211&quot;</span>,</span><br><span class="line">       <span class="string">&quot;responsetime&quot;</span> =&gt; 0,</span><br><span class="line">             <span class="string">&quot;domain&quot;</span> =&gt; <span class="string">&quot;10.0.0.211&quot;</span>,</span><br><span class="line">       <span class="string">&quot;upstreamtime&quot;</span> =&gt; <span class="string">&quot;-&quot;</span>,</span><br><span class="line">          <span class="string">&quot;http_host&quot;</span> =&gt; <span class="string">&quot;10.0.0.211&quot;</span>,</span><br><span class="line">           <span class="string">&quot;clientip&quot;</span> =&gt; <span class="string">&quot;10.0.0.1&quot;</span>,</span><br><span class="line">       <span class="string">&quot;upstreamhost&quot;</span> =&gt; <span class="string">&quot;-&quot;</span>,</span><br><span class="line">    <span class="string">&quot;http_user_agent&quot;</span> =&gt; <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36 Edg/129.0.0.0&quot;</span>,</span><br><span class="line">                <span class="string">&quot;xff&quot;</span> =&gt; <span class="string">&quot;-&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="useragent-filter插件">useragent filter插件</h3><blockquote><p>分析分析设备的类型及操作系统</p></blockquote><p><strong>编写logstash实例文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:3 ~]# <span class="built_in">cat</span> /etc/logstash/conf.d/05_filebeat_filter_es.yaml </span><br><span class="line">input &#123;</span><br><span class="line">  beats &#123;</span><br><span class="line">    port =&gt; <span class="string">&quot;9999&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">filter &#123;</span><br><span class="line">  mutate &#123;</span><br><span class="line">    remove_field =&gt; [ <span class="string">&quot;@version&quot;</span>,<span class="string">&quot;input&quot;</span>,<span class="string">&quot;agent&quot;</span>,<span class="string">&quot;tags&quot;</span>, <span class="string">&quot;log&quot;</span> , <span class="string">&quot;host&quot;</span>,<span class="string">&quot;ecs&quot;</span>]</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment"># 分析用户的设备类型</span></span><br><span class="line">  useragent &#123;</span><br><span class="line">  <span class="comment"># 对哪个字段进行分析</span></span><br><span class="line">    <span class="built_in">source</span> =&gt; <span class="string">&quot;http_user_agent&quot;</span></span><br><span class="line">    <span class="comment"># 指定解析的设备信息放在哪个字段中，若不指定则默认放在顶级字段中</span></span><br><span class="line">    target =&gt; <span class="string">&quot;agent-kind&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output &#123;</span><br><span class="line">  stdout &#123;</span><br><span class="line">   codec =&gt; rubydebug</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">#写入es集群（可以先只用上面的标准输出，测试输出无误在使用下面的写入集群）</span></span><br><span class="line">  elasticsearch&#123;</span><br><span class="line">    hosts =&gt; [<span class="string">&quot;10.0.0.211:9200&quot;</span>,<span class="string">&quot;10.0.0.212:9200&quot;</span>,<span class="string">&quot;10.0.0.213:9200&quot;</span>]</span><br><span class="line">    index =&gt; <span class="string">&quot;logstash-nginx-%&#123;+yyyy.MM.dd&#125;&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动logstash实例</span></span><br><span class="line">[root@elk01:4 ~]# logstash -rf /etc/logstash/conf.d/05_filebeat_filter_es.yaml</span><br></pre></td></tr></table></figure><p><strong>filebeat实例</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:4 ~]# <span class="built_in">cat</span> /etc/filebeat/15-nginx_logstash.yaml </span><br><span class="line">filebeat.inputs:</span><br><span class="line">- <span class="built_in">type</span>: filestream</span><br><span class="line">  paths:</span><br><span class="line">    - /var/log/nginx/access.log</span><br><span class="line">  parsers:</span><br><span class="line">  - ndjson:</span><br><span class="line">      target: <span class="string">&quot;&quot;</span></span><br><span class="line">      message_key: message</span><br><span class="line"></span><br><span class="line">output.logstash:</span><br><span class="line">  hosts: [<span class="string">&quot;10.0.0.211:9999&quot;</span>]</span><br><span class="line">  </span><br><span class="line"><span class="comment">#启动filebeat实例</span></span><br><span class="line">[root@elk01:4 ~]# filebeat -e -c /etc/filebeat/15-nginx_logstash.yaml </span><br></pre></td></tr></table></figure><p><strong>浏览器访问：10.0.0.211:5601</strong></p><p><img src="https://cos.lukme.top/Pic/image-20241005170328290.png" alt="image-20241005170328290"></p><blockquote><p>在创建索引模板时候发现多出一个时间戳字段</p></blockquote><p><img src="https://cos.lukme.top/Pic/image-20241005170803108.png" alt="image-20241005170803108"></p><h3 id="时间格式处理">时间格式处理</h3><p><a href="https://www.elastic.co/guide/en/logstash/7.17/plugins-filters-date.html#plugins-filters-date-match">官方</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">filter &#123;</span><br><span class="line">  mutate &#123;</span><br><span class="line">    remove_field =&gt; [ <span class="string">&quot;@version&quot;</span>,<span class="string">&quot;input&quot;</span>,<span class="string">&quot;agent&quot;</span>,<span class="string">&quot;tags&quot;</span>, <span class="string">&quot;log&quot;</span> , <span class="string">&quot;host&quot;</span>,<span class="string">&quot;ecs&quot;</span>]</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment"># 分析用户的设备类型</span></span><br><span class="line">  useragent &#123;</span><br><span class="line">    <span class="comment"># 对哪个字段进行分析</span></span><br><span class="line">    <span class="built_in">source</span> =&gt; <span class="string">&quot;http_user_agent&quot;</span></span><br><span class="line">    <span class="comment"># 指定解析的设备信息放在哪个字段中，若不指定则默认放在顶级字段中</span></span><br><span class="line">    target =&gt; <span class="string">&quot;linux_agent&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment"># 处理日期的插件 #AccessTime是用户实际访问时间</span></span><br><span class="line">  <span class="built_in">date</span> &#123;</span><br><span class="line">    <span class="comment"># &quot;[29/Aug/2024:08:46:59 +0000]&quot;</span></span><br><span class="line">    match =&gt; [ <span class="string">&quot;AccessTime&quot;</span>, <span class="string">&quot;[dd/MMM/yyyy:HH:mm:ss Z]&quot;</span> ]</span><br><span class="line">    <span class="comment"># 将解析的字符串存储到指定字段，若不指定则默认覆盖&quot;@timestamp&quot;</span></span><br><span class="line">    target =&gt; <span class="string">&quot;accesstime&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="geoip-filter插件">geoip filter插件</h3><blockquote><p>分析用户的地理位置,前提是日志里的ip需要是公网地址，可以手动更改模拟</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">1.获取自己的公网地址</span><br><span class="line">[root@elk01:1 ~]# curl ifconfig.io</span><br><span class="line">101.82.161.6</span><br><span class="line"></span><br><span class="line">2.修改nginx日志文件模拟公网地址访问  （替换后里面ip数字随便改改）  （10.0.0.1是日志里客户端访问的ip）</span><br><span class="line">[root@elk01:1 ~]# sed -i s#10.0.0.1#101.82.161.6#g /var/log/nginx/access.log</span><br><span class="line"></span><br><span class="line">3.重启nginx</span><br><span class="line">[root@elk01:1 ~]# systemctl restart nginx</span><br><span class="line"></span><br><span class="line">4.删除filebeat采集缓存</span><br><span class="line">[root@elk01:1 ~]# <span class="built_in">rm</span> -fr /var/lib/filebeat/*</span><br><span class="line"></span><br><span class="line">5.重新启动logstash实例和filebeat实例</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241005181444001.png" alt="image-20241005181444001"></p><blockquote><p>添加map数据提示不包含任何字段？    logstash创建的索引的地理坐标点类型默认是float，修改为geoip.location</p><p>做一个模板映射location的type类型</p></blockquote><p><img src="https://cos.lukme.top/Pic/image-20241005181708936.png" alt="image-20241005181708936"></p><p><img src="https://cos.lukme.top/Pic/image-20241005181759172.png" alt="image-20241005181759172"></p><h2 id="grok插件">grok插件</h2><blockquote><p><a href="https://www.elastic.co/guide/en/logstash/7.17/plugins-filters-grok.html">官方grok指导–点击直达</a></p><p><a href="https://github.com/logstash-plugins/logstash-patterns-core/tree/main/patterns/ecs-v1">grok匹配支持项–github</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查找内置的匹配模式（以httpd为例）</span></span><br><span class="line">[root@elk01:0 conf.d]# find / -name httpd</span><br><span class="line">/usr/share/logstash/vendor/bundle/jruby/2.5.0/gems/logstash-patterns-core-4.3.4/patterns/legacy/httpd</span><br><span class="line"></span><br><span class="line"><span class="comment">#在httpd这个匹配规则里尝试搜索clientip字段，即可找到  HTTPD_COMMONLOG  这个匹配项</span></span><br><span class="line">[root@elk01:0 conf.d]# grep clientip /usr/share/logstash/vendor/bundle/jruby/2.5.0/gems/logstash-patterns-core-4.3.4/patterns/legacy/httpd</span><br><span class="line">HTTPD_COMMONLOG %&#123;IPORHOST:clientip&#125; %&#123;HTTPDUSER:ident&#125; %&#123;HTTPDUSER:auth&#125; \[%&#123;HTTPDATE:timestamp&#125;\] <span class="string">&quot;(?:%&#123;WORD:verb&#125; %&#123;NOTSPACE:request&#125;(?: HTTP/%&#123;NUMBER:httpversion&#125;)?|%&#123;DATA:rawrequest&#125;)&quot;</span> (?:-|%&#123;NUMBER:response&#125;) (?:-|%&#123;NUMBER:bytes&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">#下面就以clientip为例，展示grok匹配</span></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.编辑logstash实例</span></span><br><span class="line">[root@elk01:2 ~]# <span class="built_in">cat</span> /etc/logstash/conf.d/07_filter_grok.conf </span><br><span class="line">input &#123;</span><br><span class="line">  beats &#123;</span><br><span class="line">    port =&gt; <span class="string">&quot;7777&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">filter &#123;</span><br><span class="line">  mutate &#123;</span><br><span class="line">    remove_field =&gt; [ <span class="string">&quot;@version&quot;</span>,<span class="string">&quot;input&quot;</span>,<span class="string">&quot;agent&quot;</span>,<span class="string">&quot;tags&quot;</span>, <span class="string">&quot;log&quot;</span> , <span class="string">&quot;host&quot;</span>,<span class="string">&quot;ecs&quot;</span>]</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment"># 基于正则匹配任意文本，grok内置了120种匹配模式</span></span><br><span class="line">  grok &#123;</span><br><span class="line">    match =&gt; &#123;</span><br><span class="line">      <span class="string">&quot;message&quot;</span> =&gt; <span class="string">&quot;%&#123;HTTPD_COMBINEDLOG&#125;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">#分析设备类型</span></span><br><span class="line">  useragent &#123;</span><br><span class="line">    <span class="built_in">source</span> =&gt; <span class="string">&quot;agent&quot;</span></span><br><span class="line">    target =&gt; <span class="string">&quot;agent-kind&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">#分析用户的经纬度，位置信息（ip要为公网ip才有效）</span></span><br><span class="line">  geoip &#123;</span><br><span class="line">    <span class="built_in">source</span> =&gt; [<span class="string">&quot;clientip&quot;</span>]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">output &#123;</span><br><span class="line">  stdout &#123;</span><br><span class="line">   codec =&gt; rubydebug</span><br><span class="line">  &#125;</span><br><span class="line">  elasticsearch&#123;</span><br><span class="line">    hosts =&gt; [<span class="string">&quot;10.0.0.211:9200&quot;</span>,<span class="string">&quot;10.0.0.212:9200&quot;</span>,<span class="string">&quot;10.0.0.213:9200&quot;</span>]</span><br><span class="line">    index =&gt; <span class="string">&quot;logstash-nginx-%&#123;+yyyy.MM.dd&#125;&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动实例</span></span><br><span class="line">[root@elk01:0 conf.d]# logstash -rf /etc/logstash/conf.d/07_filter_grok.conf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.编辑filebeat实例</span></span><br><span class="line"><span class="built_in">cat</span> /etc/filebeat/16-nginx_logstash_grok.yaml</span><br><span class="line">filebeat:</span><br><span class="line">  inputs:</span><br><span class="line">  - <span class="built_in">type</span>: filestream</span><br><span class="line">    paths:</span><br><span class="line">      - /var/log/nginx/access.log*</span><br><span class="line"></span><br><span class="line">output.logstash:</span><br><span class="line">  hosts: [<span class="string">&quot;10.0.0.93:7777&quot;</span>]</span><br><span class="line">  </span><br><span class="line"><span class="comment"># 启动实例</span></span><br><span class="line">[root@elk01:1 ~]# filebeat -e -c /etc/filebeat/16-nginx_logstash_grok.yaml </span><br></pre></td></tr></table></figure><p><strong>输出展示</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#展示结果可以看出，用户ip以clientip字段作为顶级字段，展示出ip</span></span><br><span class="line"><span class="string">&quot;timestamp&quot;</span> =&gt; <span class="string">&quot;20/Oct/2024:16:36:12 +0800&quot;</span>,</span><br><span class="line">      <span class="string">&quot;clientip&quot;</span> =&gt; <span class="string">&quot;87.120.127.103&quot;</span>,</span><br><span class="line">          <span class="string">&quot;verb&quot;</span> =&gt; <span class="string">&quot;GET&quot;</span>,</span><br><span class="line">         <span class="string">&quot;geoip&quot;</span> =&gt; &#123;</span><br><span class="line">             <span class="string">&quot;timezone&quot;</span> =&gt; <span class="string">&quot;Europe/Sofia&quot;</span>,</span><br><span class="line">            <span class="string">&quot;longitude&quot;</span> =&gt; 23.332,</span><br><span class="line">       <span class="string">&quot;continent_code&quot;</span> =&gt; <span class="string">&quot;EU&quot;</span>,</span><br><span class="line">             <span class="string">&quot;latitude&quot;</span> =&gt; 42.696,</span><br><span class="line">                   <span class="string">&quot;ip&quot;</span> =&gt; <span class="string">&quot;87.120.127.103&quot;</span>,</span><br><span class="line">         <span class="string">&quot;country_name&quot;</span> =&gt; <span class="string">&quot;Bulgaria&quot;</span>,</span><br><span class="line">        <span class="string">&quot;country_code3&quot;</span> =&gt; <span class="string">&quot;BG&quot;</span>,</span><br><span class="line">             <span class="string">&quot;location&quot;</span> =&gt; &#123;</span><br><span class="line">           <span class="string">&quot;lon&quot;</span> =&gt; 23.332,</span><br><span class="line">           <span class="string">&quot;lat&quot;</span> =&gt; 42.696</span><br><span class="line">           </span><br><span class="line"> <span class="comment">#分析用户的经纬度，位置信息，同时也展示出用户ip的一些信息包括时区，城市名字等</span></span><br><span class="line"> geoip &#123;</span><br><span class="line">   <span class="built_in">source</span> =&gt; [<span class="string">&quot;clientip&quot;</span>]</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h3 id="自定义正则提取字段">自定义正则提取字段</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#自定义正则</span></span><br><span class="line">[root@elk93 ~]# <span class="built_in">cat</span> /tmp/parttern/xixi.re</span><br><span class="line">YEAR \d&#123;4&#125;</span><br><span class="line">school [A-z]&#123;5&#125;</span><br><span class="line">Class [A-z]&#123;5&#125;\d&#123;2&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#编写logstash实例</span></span><br><span class="line">[root@elk93 ~]# <span class="built_in">cat</span> /etc/logstash/conf.d/05-tcp-grok-stdout.conf</span><br><span class="line">[root@elk01:1 ~]# vim /etc/logstash/conf.d/08_pattern.conf </span><br><span class="line"></span><br><span class="line">input &#123;</span><br><span class="line">  tcp &#123;</span><br><span class="line">    port =&gt; 6666</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">filter &#123;</span><br><span class="line">  grok &#123;</span><br><span class="line">    <span class="comment"># 加载自定义正则（存放自定义正则目录）</span></span><br><span class="line">    patterns_dir =&gt; [<span class="string">&quot;/tmp/pattern/&quot;</span>]</span><br><span class="line">    match =&gt; &#123;</span><br><span class="line">       <span class="string">&quot;message&quot;</span> =&gt; <span class="string">&quot;xixi %&#123;YEAR:year&#125;-%&#123;school:school&#125;-%&#123;Class:class&#125; haha&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">output &#123;</span><br><span class="line"> stdout &#123;</span><br><span class="line">  codec =&gt; rubydebug</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">Class [A-z]&#123;5&#125;\d&#123;2&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#如果匹配规则未达到则如下（规则是Class [A-z]&#123;5&#125;\d&#123;2&#125;   字母后应该是2数字）</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;@timestamp&quot;</span> =&gt; 2024-10-20T12:33:19.642Z,</span><br><span class="line">          <span class="string">&quot;port&quot;</span> =&gt; 49454,</span><br><span class="line">          <span class="string">&quot;host&quot;</span> =&gt; <span class="string">&quot;elk01&quot;</span>,</span><br><span class="line">      <span class="string">&quot;@version&quot;</span> =&gt; <span class="string">&quot;1&quot;</span>,</span><br><span class="line">          <span class="string">&quot;tags&quot;</span> =&gt; [</span><br><span class="line">        [0] <span class="string">&quot;_grokparsefailure&quot;</span></span><br><span class="line">    ],</span><br><span class="line">       <span class="string">&quot;message&quot;</span> =&gt; <span class="string">&quot;xixi 2024-BJedu-Linux666 haha&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#达到匹配规则    xixi %&#123;YEAR:year&#125;-%&#123;school:school&#125;-%&#123;Class:class&#125; haha  才能如此</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;@timestamp&quot;</span> =&gt; 2024-10-20T12:31:16.265Z,</span><br><span class="line">       <span class="string">&quot;message&quot;</span> =&gt; <span class="string">&quot;xixi 2024-BJedu-Linux01 haha&quot;</span>,</span><br><span class="line">        <span class="string">&quot;school&quot;</span> =&gt; <span class="string">&quot;BJedu&quot;</span>,</span><br><span class="line">          <span class="string">&quot;host&quot;</span> =&gt; <span class="string">&quot;elk01&quot;</span>,</span><br><span class="line">          <span class="string">&quot;year&quot;</span> =&gt; <span class="string">&quot;2024&quot;</span>,</span><br><span class="line">          <span class="string">&quot;port&quot;</span> =&gt; 34950,</span><br><span class="line">      <span class="string">&quot;@version&quot;</span> =&gt; <span class="string">&quot;1&quot;</span>,</span><br><span class="line">         <span class="string">&quot;class&quot;</span> =&gt; <span class="string">&quot;Linux01&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出年份是2024-2030</span></span><br><span class="line">[root@elk01:2 ~]# <span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> 2024 2030`; <span class="keyword">do</span> <span class="built_in">echo</span> <span class="string">&quot;xixi <span class="variable">$i</span>-BJedu-Linux01 haha&quot;</span> | nc 10.0.0.211 6666 &amp; <span class="keyword">done</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="mutate插件">mutate插件</h2><h3 id="自定义日志格式提取">自定义日志格式提取</h3><p><strong>1. 使用python脚本创建自定义日志</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:0 ~]# <span class="built_in">cat</span> generate_log.py </span><br><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="comment"># @author : Jason Yin</span></span><br><span class="line"></span><br><span class="line">import datetime</span><br><span class="line">import random</span><br><span class="line">import logging</span><br><span class="line">import time</span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line">LOG_FORMAT = <span class="string">&quot;%(levelname)s %(asctime)s [com.linux.%(module)s] - %(message)s &quot;</span></span><br><span class="line">DATE_FORMAT = <span class="string">&quot;%Y-%m-%d %H:%M:%S&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置root的logging.Logger实例的基本配置</span></span><br><span class="line">logging.basicConfig(level=logging.INFO, format=LOG_FORMAT, datefmt=DATE_FORMAT, filename=sys.argv[1]</span><br><span class="line">, filemode=<span class="string">&#x27;a&#x27;</span>,)</span><br><span class="line">actions = [<span class="string">&quot;浏览页面&quot;</span>, <span class="string">&quot;评论商品&quot;</span>, <span class="string">&quot;加入收藏&quot;</span>, <span class="string">&quot;加入购物车&quot;</span>, <span class="string">&quot;提交订单&quot;</span>, <span class="string">&quot;使用优惠券&quot;</span>, <span class="string">&quot;领取优惠券&quot;</span>,</span><br><span class="line"> <span class="string">&quot;搜索&quot;</span>, <span class="string">&quot;查看订单&quot;</span>, <span class="string">&quot;付款&quot;</span>, <span class="string">&quot;清空购物车&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> True:</span><br><span class="line">    time.sleep(random.randint(1, 5))</span><br><span class="line">    user_id = random.randint(1, 10000)</span><br><span class="line">    <span class="comment"># 对生成的浮点数保留2位有效数字.</span></span><br><span class="line">    price = round(random.uniform(15000, 30000),2)</span><br><span class="line">    action = random.choice(actions)</span><br><span class="line">    svip = random.choice([0,1,2])</span><br><span class="line">    logging.info(<span class="string">&quot;DAU|&#123;0&#125;|&#123;1&#125;|&#123;2&#125;|&#123;3&#125;&quot;</span>.format(user_id, action,svip,price))</span><br><span class="line">    </span><br></pre></td></tr></table></figure><p><strong>2. 启动脚本-生成日志</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@elk91 ~]# python3 generate_log.py /tmp/apps.log</span><br><span class="line"></span><br><span class="line"><span class="comment">#生成类似格式的日志文件</span></span><br><span class="line">[root@elk01:1 ~]# <span class="built_in">tail</span> -f /tmp/apps.log </span><br><span class="line">INFO 2024-10-27 09:23:50 [com.linux.generate_log] - DAU|5164|领取优惠券|2|18464.33 </span><br><span class="line">INFO 2024-10-27 09:23:51 [com.linux.generate_log] - DAU|2615|搜索|1|21874.88 </span><br><span class="line">INFO 2024-10-27 09:23:56 [com.linux.generate_log] - DAU|8097|查看订单|1|23759.47 </span><br><span class="line">INFO 2024-10-27 09:23:57 [com.linux.generate_log] - DAU|795|加入购物车|2|21097.98 </span><br><span class="line">INFO 2024-10-27 09:24:00 [com.linux.generate_log] - DAU|1577|清空购物车|0|16636.14</span><br></pre></td></tr></table></figure><p><strong>3. 编写logstash实例</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:2 ~]# <span class="built_in">cat</span> /etc/logstash/conf.d/10.beats-mutate.conf </span><br><span class="line">input &#123;</span><br><span class="line">  beats &#123;</span><br><span class="line">    port =&gt; 5555</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">filter &#123;</span><br><span class="line">  mutate &#123;</span><br><span class="line">    remove_field =&gt; [ <span class="string">&quot;@version&quot;</span>,<span class="string">&quot;input&quot;</span>,<span class="string">&quot;agent&quot;</span>,<span class="string">&quot;tags&quot;</span>, <span class="string">&quot;log&quot;</span> , <span class="string">&quot;host&quot;</span>,<span class="string">&quot;ecs&quot;</span>]</span><br><span class="line">  &#125;</span><br><span class="line">  mutate &#123;</span><br><span class="line">    <span class="comment">#分割字段</span></span><br><span class="line">    <span class="built_in">split</span> =&gt; &#123; <span class="string">&quot;message&quot;</span> =&gt; <span class="string">&quot;|&quot;</span> &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output &#123;</span><br><span class="line">  stdout &#123;</span><br><span class="line">    codec =&gt; rubydebug</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动logstash实例</span></span><br><span class="line">[root@elk01:2 ~]# logstash -rf /etc/logstash/conf.d/10.beats-mutate.conf </span><br></pre></td></tr></table></figure><p><strong>4. 编写filebeat实例</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:1 ~]# <span class="built_in">cat</span> /etc/filebeat/18-apps-to-logstash.yaml</span><br><span class="line">filebeat:</span><br><span class="line">  inputs:</span><br><span class="line">  - <span class="built_in">type</span>: filestream</span><br><span class="line">    paths:</span><br><span class="line">      - /tmp/apps.log </span><br><span class="line"></span><br><span class="line">output.logstash:</span><br><span class="line">  hosts: [<span class="string">&quot;10.0.0.211:7777&quot;</span>]</span><br><span class="line">  </span><br><span class="line"><span class="comment">#启动实例</span></span><br><span class="line">[root@elk01:0 ~]# filebeat -e -c /etc/filebeat/18-apps-to-logstash.yaml</span><br></pre></td></tr></table></figure><p><strong>5. 输出展示</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">       <span class="string">&quot;message&quot;</span> =&gt; [</span><br><span class="line">        [0] <span class="string">&quot;INFO 2024-10-27 09:46:03 [com.linux.generate_log] - DAU&quot;</span>,</span><br><span class="line">        [1] <span class="string">&quot;3013&quot;</span>,</span><br><span class="line">        [2] <span class="string">&quot;评论商品&quot;</span>,</span><br><span class="line">        [3] <span class="string">&quot;2&quot;</span>,</span><br><span class="line">        [4] <span class="string">&quot;25853.85 &quot;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;@timestamp&quot;</span> =&gt; 2024-10-27T01:58:28.229Z</span><br></pre></td></tr></table></figure><h3 id="添加字段">添加字段</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#为[0-4]添加顶级字段</span></span><br><span class="line">&#123;</span><br><span class="line">       <span class="string">&quot;message&quot;</span> =&gt; [</span><br><span class="line">        [0] <span class="string">&quot;INFO 2024-10-27 09:46:03 [com.linux.generate_log] - DAU&quot;</span>,</span><br><span class="line">        [1] <span class="string">&quot;3013&quot;</span>,</span><br><span class="line">        [2] <span class="string">&quot;评论商品&quot;</span>,</span><br><span class="line">        [3] <span class="string">&quot;2&quot;</span>,</span><br><span class="line">        [4] <span class="string">&quot;25853.85 &quot;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;@timestamp&quot;</span> =&gt; 2024-10-27T01:58:28.229Z</span><br></pre></td></tr></table></figure><p><strong>修改logstash实例</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:0 ~]# <span class="built_in">cat</span> /etc/logstash/conf.d/10.beats-mutate.conf </span><br><span class="line">input &#123;</span><br><span class="line">  beats &#123;</span><br><span class="line">    port =&gt; 5555</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">filter &#123;</span><br><span class="line">  mutate &#123;</span><br><span class="line">    remove_field =&gt; [ <span class="string">&quot;@version&quot;</span>,<span class="string">&quot;input&quot;</span>,<span class="string">&quot;agent&quot;</span>,<span class="string">&quot;tags&quot;</span>, <span class="string">&quot;log&quot;</span> , <span class="string">&quot;host&quot;</span>,<span class="string">&quot;ecs&quot;</span>]</span><br><span class="line">  &#125;</span><br><span class="line">  mutate &#123;</span><br><span class="line">      <span class="comment">#分割message字段，以 | 为分隔符</span></span><br><span class="line">      <span class="built_in">split</span> =&gt; &#123; <span class="string">&quot;message&quot;</span> =&gt; <span class="string">&quot;|&quot;</span> &#125;</span><br><span class="line">      <span class="comment">#添加字段</span></span><br><span class="line">      add_field =&gt; &#123;</span><br><span class="line">       <span class="string">&quot;other&quot;</span> =&gt; <span class="string">&quot;%&#123;[message][0]&#125;&quot;</span></span><br><span class="line">       <span class="string">&quot;userId&quot;</span> =&gt; <span class="string">&quot;%&#123;[message][1]&#125;&quot;</span></span><br><span class="line">       <span class="string">&quot;action&quot;</span> =&gt; <span class="string">&quot;%&#123;[message][2]&#125;&quot;</span></span><br><span class="line">       <span class="string">&quot;svip&quot;</span> =&gt; <span class="string">&quot;%&#123;[message][3]&#125;&quot;</span></span><br><span class="line">       <span class="string">&quot;price&quot;</span> =&gt; <span class="string">&quot;%&#123;[message][4]&#125;&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output &#123;</span><br><span class="line">  stdout &#123;</span><br><span class="line">    codec =&gt; rubydebug</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>输出展示</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">      <span class="string">&quot;svip&quot;</span> =&gt; <span class="string">&quot;2&quot;</span>,</span><br><span class="line">     <span class="string">&quot;other&quot;</span> =&gt; <span class="string">&quot;INFO 2024-10-27 09:46:03 [com.linux.generate_log] - DAU&quot;</span>,</span><br><span class="line"><span class="string">&quot;@timestamp&quot;</span> =&gt; 2024-10-27T02:17:55.199Z,</span><br><span class="line">    <span class="string">&quot;userId&quot;</span> =&gt; <span class="string">&quot;3013&quot;</span>,</span><br><span class="line">    <span class="string">&quot;action&quot;</span> =&gt; <span class="string">&quot;评论商品&quot;</span></span><br></pre></td></tr></table></figure><h3 id="多次切割">多次切割</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">我们发现某个字段内容多（例如本案例的other字段），可实现多次切割输出我们需要的字段</span><br><span class="line">          <span class="string">&quot;svip&quot;</span> =&gt; <span class="string">&quot;2&quot;</span>,</span><br><span class="line">         <span class="string">&quot;other&quot;</span> =&gt; <span class="string">&quot;INFO 2024-10-27 09:46:03 [com.linux.generate_log] - DAU&quot;</span>,</span><br><span class="line">    <span class="string">&quot;@timestamp&quot;</span> =&gt; 2024-10-27T02:17:55.199Z,</span><br><span class="line">        <span class="string">&quot;userId&quot;</span> =&gt; <span class="string">&quot;3013&quot;</span>,</span><br><span class="line">        <span class="string">&quot;action&quot;</span> =&gt; <span class="string">&quot;评论商品&quot;</span></span><br><span class="line"></span><br><span class="line">对other字段切割，以空格为分隔符，输出如下</span><br><span class="line">         <span class="string">&quot;other&quot;</span> =&gt; [</span><br><span class="line">        [0] <span class="string">&quot;INFO&quot;</span>,</span><br><span class="line">        [1] <span class="string">&quot;2024-10-27&quot;</span>,</span><br><span class="line">        [2] <span class="string">&quot;10:46:33&quot;</span>,</span><br><span class="line">        [3] <span class="string">&quot;[com.linux.generate_log]&quot;</span>,</span><br><span class="line">        [4] <span class="string">&quot;-&quot;</span>,</span><br><span class="line">        [5] <span class="string">&quot;DAU&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#修改logstash实例，在filter里再次分割，将时间和网站信息都放在顶级字段里</span></span><br><span class="line">  mutate &#123;</span><br><span class="line">    <span class="comment">#分割other字段，空格为分隔符</span></span><br><span class="line">    <span class="built_in">split</span> =&gt; &#123; <span class="string">&quot;other&quot;</span> =&gt; <span class="string">&quot; &quot;</span> &#125;</span><br><span class="line">    add_field =&gt; &#123;</span><br><span class="line">      <span class="comment">#将日期和时间添加到datetime字段中</span></span><br><span class="line">      <span class="string">&quot;datetime&quot;</span> =&gt; <span class="string">&quot;%&#123;[other][1]&#125; %&#123;[other][2]&#125;&quot;</span></span><br><span class="line">      <span class="comment">#将访问的网站添加到www字段中</span></span><br><span class="line">      <span class="string">&quot;www&quot;</span> =&gt; <span class="string">&quot;%&#123;[other][3]&#125;&quot;</span>              </span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p><strong>输出展示</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">        <span class="string">&quot;userId&quot;</span> =&gt; <span class="string">&quot;9928&quot;</span>,</span><br><span class="line">           <span class="string">&quot;www&quot;</span> =&gt; <span class="string">&quot;[com.linux.generate_log]&quot;</span>,</span><br><span class="line">      <span class="string">&quot;datetime&quot;</span> =&gt; <span class="string">&quot;2024-10-27 10:58:19&quot;</span>,</span><br><span class="line">        <span class="string">&quot;action&quot;</span> =&gt; <span class="string">&quot;领取优惠券&quot;</span>,</span><br><span class="line">          <span class="string">&quot;svip&quot;</span> =&gt; <span class="string">&quot;2&quot;</span>,</span><br><span class="line">         <span class="string">&quot;other&quot;</span> =&gt; [</span><br><span class="line">        [0] <span class="string">&quot;INFO&quot;</span>,</span><br><span class="line">        [1] <span class="string">&quot;2024-10-27&quot;</span>,</span><br><span class="line">        [2] <span class="string">&quot;10:58:19&quot;</span>,</span><br><span class="line">        [3] <span class="string">&quot;[com.linux.generate_log]&quot;</span>,</span><br><span class="line">        [4] <span class="string">&quot;-&quot;</span>,</span><br><span class="line">        [5] <span class="string">&quot;DAU&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#再次多次切割实现网页字段没有 [ ]</span></span><br><span class="line">  mutate &#123;</span><br><span class="line">    <span class="built_in">split</span> =&gt; &#123;<span class="string">&quot;www&quot;</span> =&gt; <span class="string">&quot;[&quot;</span>&#125;</span><br><span class="line">    add_field =&gt; &#123;</span><br><span class="line">      <span class="string">&quot;www2&quot;</span> =&gt; <span class="string">&quot;%&#123;[www][1]&#125;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  mutate &#123;</span><br><span class="line">    <span class="built_in">split</span> =&gt; &#123;<span class="string">&quot;www2&quot;</span> =&gt;<span class="string">&quot;]&quot;</span>&#125;</span><br><span class="line">    add_field =&gt; &#123;</span><br><span class="line">      website =&gt; <span class="string">&quot;%&#123;[www2][0]&#125;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="comment">#输出展示</span></span><br><span class="line">        <span class="string">&quot;userId&quot;</span> =&gt; <span class="string">&quot;3837&quot;</span>,</span><br><span class="line">          <span class="string">&quot;www2&quot;</span> =&gt; [</span><br><span class="line">        [0] <span class="string">&quot;com.linux.generate_log&quot;</span></span><br><span class="line">    ],</span><br><span class="line">        <span class="string">&quot;action&quot;</span> =&gt; <span class="string">&quot;浏览页面&quot;</span>,</span><br><span class="line">          <span class="string">&quot;svip&quot;</span> =&gt; <span class="string">&quot;0&quot;</span>,</span><br><span class="line">       <span class="string">&quot;website&quot;</span> =&gt; <span class="string">&quot;com.linux.generate_log&quot;</span>,</span><br><span class="line">    <span class="string">&quot;@timestamp&quot;</span> =&gt; 2024-10-27T03:03:39.620Z</span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">           <span class="string">&quot;www&quot;</span> =&gt; [</span><br><span class="line">        [0] <span class="string">&quot;&quot;</span>,</span><br><span class="line">        [1] <span class="string">&quot;com.linux.generate_log]&quot;</span></span><br><span class="line">    ],</span><br><span class="line">      <span class="string">&quot;datetime&quot;</span> =&gt; <span class="string">&quot;2024-10-27 11:03:40&quot;</span>,</span><br><span class="line">         <span class="string">&quot;other&quot;</span> =&gt; [</span><br><span class="line">        [0] <span class="string">&quot;INFO&quot;</span>,</span><br><span class="line">        [1] <span class="string">&quot;2024-10-27&quot;</span>,</span><br><span class="line">        [2] <span class="string">&quot;11:03:40&quot;</span>,</span><br><span class="line">        [3] <span class="string">&quot;[com.linux.generate_log]&quot;</span>,</span><br><span class="line">        [4] <span class="string">&quot;-&quot;</span>,</span><br><span class="line">        [5] <span class="string">&quot;DAU&quot;</span></span><br><span class="line">    ],</span><br><span class="line">         <span class="string">&quot;price&quot;</span> =&gt; <span class="string">&quot;16570.26 &quot;</span>,</span><br><span class="line">       <span class="string">&quot;message&quot;</span> =&gt; [</span><br><span class="line">        [0] <span class="string">&quot;INFO 2024-10-27 11:03:40 [com.linux.generate_log] - DAU&quot;</span>,</span><br><span class="line">        [1] <span class="string">&quot;8129&quot;</span>,</span><br><span class="line">        [2] <span class="string">&quot;使用优惠券&quot;</span>,</span><br><span class="line">        [3] <span class="string">&quot;1&quot;</span>,</span><br><span class="line">        [4] <span class="string">&quot;16570.26 &quot;</span></span><br><span class="line">    ],</span><br></pre></td></tr></table></figure><h3 id="删除多余字段">删除多余字段</h3><blockquote><p>移除如message，other，www等字段（已经都做了提取切割，所有不需要再展示了）</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#修改logstash实例</span></span><br><span class="line">  mutate &#123;</span><br><span class="line">    remove_field =&gt; [ <span class="string">&quot;message&quot;</span>,<span class="string">&quot;other&quot;</span>,<span class="string">&quot;www&quot;</span>,<span class="string">&quot;www2&quot;</span>]</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#最终效果</span></span><br><span class="line">&#123;</span><br><span class="line">      <span class="string">&quot;datetime&quot;</span> =&gt; <span class="string">&quot;2024-10-27 11:09:12&quot;</span>,</span><br><span class="line">         <span class="string">&quot;price&quot;</span> =&gt; <span class="string">&quot;18005.57 &quot;</span>,</span><br><span class="line">        <span class="string">&quot;userId&quot;</span> =&gt; <span class="string">&quot;5897&quot;</span>,</span><br><span class="line">        <span class="string">&quot;action&quot;</span> =&gt; <span class="string">&quot;提交订单&quot;</span>,</span><br><span class="line">          <span class="string">&quot;svip&quot;</span> =&gt; <span class="string">&quot;1&quot;</span>,</span><br><span class="line">       <span class="string">&quot;website&quot;</span> =&gt; <span class="string">&quot;com.linux.generate_log&quot;</span>,</span><br><span class="line">    <span class="string">&quot;@timestamp&quot;</span> =&gt; 2024-10-27T03:09:13.875Z</span><br></pre></td></tr></table></figure><h3 id="最终logstash实例-并输出到ES集群">最终logstash实例,并输出到ES集群</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:2 ~]# <span class="built_in">cat</span> /etc/logstash/conf.d/10.beats-mutate.conf </span><br><span class="line">input &#123;</span><br><span class="line">  beats &#123;</span><br><span class="line">    port =&gt; 5555</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">filter &#123;</span><br><span class="line">  mutate &#123;</span><br><span class="line">    remove_field =&gt; [ <span class="string">&quot;@version&quot;</span>,<span class="string">&quot;input&quot;</span>,<span class="string">&quot;agent&quot;</span>,<span class="string">&quot;tags&quot;</span>, <span class="string">&quot;log&quot;</span> , <span class="string">&quot;host&quot;</span>,<span class="string">&quot;ecs&quot;</span>]</span><br><span class="line">  &#125;</span><br><span class="line">  mutate &#123;</span><br><span class="line">      <span class="comment">#分割message字段（以|为分隔符）</span></span><br><span class="line">      <span class="built_in">split</span> =&gt; &#123; <span class="string">&quot;message&quot;</span> =&gt; <span class="string">&quot;|&quot;</span> &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">#添加字段</span></span><br><span class="line">      add_field =&gt; &#123; </span><br><span class="line">       <span class="string">&quot;other&quot;</span> =&gt; <span class="string">&quot;%&#123;[message][0]&#125;&quot;</span></span><br><span class="line">       <span class="string">&quot;userId&quot;</span> =&gt; <span class="string">&quot;%&#123;[message][1]&#125;&quot;</span></span><br><span class="line">       <span class="string">&quot;action&quot;</span> =&gt; <span class="string">&quot;%&#123;[message][2]&#125;&quot;</span></span><br><span class="line">       <span class="string">&quot;svip&quot;</span> =&gt; <span class="string">&quot;%&#123;[message][3]&#125;&quot;</span></span><br><span class="line">       <span class="string">&quot;price&quot;</span> =&gt; <span class="string">&quot;%&#123;[message][4]&#125;&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  mutate &#123;</span><br><span class="line">    <span class="comment">#分割other字段，空格为分隔符</span></span><br><span class="line">    <span class="built_in">split</span> =&gt; &#123; <span class="string">&quot;other&quot;</span> =&gt; <span class="string">&quot; &quot;</span> &#125;</span><br><span class="line">    add_field =&gt; &#123;</span><br><span class="line">      <span class="string">&quot;datetime&quot;</span> =&gt; <span class="string">&quot;%&#123;[other][1]&#125; %&#123;[other][2]&#125;&quot;</span></span><br><span class="line">      <span class="string">&quot;www&quot;</span> =&gt; <span class="string">&quot;%&#123;[other][3]&#125;&quot;</span> </span><br><span class="line">    &#125;  </span><br><span class="line">  &#125;</span><br><span class="line">  mutate &#123;</span><br><span class="line">    <span class="built_in">split</span> =&gt; &#123;<span class="string">&quot;www&quot;</span> =&gt; <span class="string">&quot;[&quot;</span>&#125;</span><br><span class="line">    add_field =&gt; &#123;</span><br><span class="line">      <span class="string">&quot;www2&quot;</span> =&gt; <span class="string">&quot;%&#123;[www][1]&#125;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  mutate &#123;</span><br><span class="line">    <span class="built_in">split</span> =&gt; &#123;<span class="string">&quot;www2&quot;</span> =&gt;<span class="string">&quot;]&quot;</span>&#125;</span><br><span class="line">    add_field =&gt; &#123;</span><br><span class="line">      website =&gt; <span class="string">&quot;%&#123;[www2][0]&#125;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  mutate &#123;</span><br><span class="line">    <span class="comment">#转换类型</span></span><br><span class="line">    convert =&gt; &#123;</span><br><span class="line">       <span class="comment">#将字段price类型转为浮点型（默认是字符串，在ES集群里kibana出图无法做到求和等操作）</span></span><br><span class="line">      <span class="string">&quot;price&quot;</span> =&gt; <span class="string">&quot;float&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">#移除多余字段</span></span><br><span class="line">  mutate &#123;</span><br><span class="line">    remove_field =&gt; [ <span class="string">&quot;message&quot;</span>,<span class="string">&quot;other&quot;</span>,<span class="string">&quot;www&quot;</span>,<span class="string">&quot;www2&quot;</span>]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output &#123;</span><br><span class="line">  stdout &#123;</span><br><span class="line">    codec =&gt; rubydebug</span><br><span class="line">  &#125;</span><br><span class="line"> elasticsearch&#123;</span><br><span class="line">   hosts =&gt; [<span class="string">&quot;10.0.0.211:9200&quot;</span>,<span class="string">&quot;10.0.0.212:9200&quot;</span>,<span class="string">&quot;10.0.0.213:9200&quot;</span>]</span><br><span class="line">   index =&gt; <span class="string">&quot;auto_logs-apps-%&#123;+yyyy.MM.dd&#125;&quot;</span></span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="logstash多分支语句">logstash多分支语句</h2><p><strong>1. 多分枝语句     --基础类型</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:2 ~]# <span class="built_in">cat</span> /etc/logstash/conf.d/11-multiple_input.conf </span><br><span class="line">input &#123;</span><br><span class="line">  beats &#123;</span><br><span class="line">    port =&gt; 5555</span><br><span class="line">    <span class="built_in">type</span> =&gt; beats</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  tcp &#123;</span><br><span class="line">    port =&gt; 6666</span><br><span class="line">    <span class="built_in">type</span> =&gt; tcp</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  file &#123;</span><br><span class="line">    path =&gt; [<span class="string">&quot;/tmp/luay.log&quot;</span>]</span><br><span class="line">    start_position =&gt; <span class="string">&quot;beginning&quot;</span></span><br><span class="line">    <span class="built_in">type</span> =&gt; file</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output &#123;</span><br><span class="line">  stdout &#123;</span><br><span class="line">   codec =&gt; rubydebug</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#测试</span></span><br><span class="line">[root@elk01:0 ~]# <span class="built_in">echo</span> 999 |nc 10.0.0.211 6666</span><br><span class="line">[root@elk01:2 ~]# <span class="built_in">echo</span> 7989 &gt;/tmp/luay.log</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出</span></span><br><span class="line">&#123;</span><br><span class="line">      <span class="string">&quot;@version&quot;</span> =&gt; <span class="string">&quot;1&quot;</span>,</span><br><span class="line">          <span class="string">&quot;type&quot;</span> =&gt; <span class="string">&quot;tcp&quot;</span>,</span><br><span class="line">          <span class="string">&quot;port&quot;</span> =&gt; 56998,</span><br><span class="line">    <span class="string">&quot;@timestamp&quot;</span> =&gt; 2024-10-27T08:53:35.394Z,</span><br><span class="line">          <span class="string">&quot;host&quot;</span> =&gt; <span class="string">&quot;elk01&quot;</span>,</span><br><span class="line">       <span class="string">&quot;message&quot;</span> =&gt; <span class="string">&quot;999&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">      <span class="string">&quot;@version&quot;</span> =&gt; <span class="string">&quot;1&quot;</span>,</span><br><span class="line">          <span class="string">&quot;type&quot;</span> =&gt; <span class="string">&quot;file&quot;</span>,</span><br><span class="line">          <span class="string">&quot;path&quot;</span> =&gt; <span class="string">&quot;/tmp/luay.log&quot;</span>,</span><br><span class="line">    <span class="string">&quot;@timestamp&quot;</span> =&gt; 2024-10-27T08:54:44.088Z,</span><br><span class="line">          <span class="string">&quot;host&quot;</span> =&gt; <span class="string">&quot;elk01&quot;</span>,</span><br><span class="line">       <span class="string">&quot;message&quot;</span> =&gt; <span class="string">&quot;7989&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2. 多分枝语句   --复杂类形</strong></p><blockquote><p><a href="https://www.elastic.co/guide/en/logstash/7.17/plugins-outputs-elasticsearch.html">官方案例</a></p><p>添加  if  判断</p></blockquote><h3 id="input多分支">input多分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;要求&#x27;</span>：</span><br><span class="line">1.删除tcp类型的version和port字段</span><br><span class="line">2.删除file类型的version和host字段，将path字段改为filepath字段</span><br><span class="line">3.beat类型同案例10.beats-mutate.conf（往上翻）</span><br><span class="line"></span><br><span class="line">[root@elk01:2 ~]# <span class="built_in">cat</span> /etc/logstash/conf.d/11-multiple_input.conf </span><br><span class="line">input &#123;</span><br><span class="line">  beats &#123;</span><br><span class="line">    port =&gt; 5555</span><br><span class="line">    <span class="built_in">type</span> =&gt; beats</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  tcp &#123;</span><br><span class="line">    port =&gt; 6666</span><br><span class="line">    <span class="built_in">type</span> =&gt; tcp</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  file &#123;</span><br><span class="line">    path =&gt; [<span class="string">&quot;/tmp/luay.log&quot;</span>]</span><br><span class="line">    start_position =&gt; <span class="string">&quot;beginning&quot;</span></span><br><span class="line">    <span class="built_in">type</span> =&gt; file</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">filter &#123;</span><br><span class="line">  <span class="keyword">if</span> [<span class="built_in">type</span>] == <span class="string">&quot;tcp&quot;</span> &#123;</span><br><span class="line">    mutate &#123;</span><br><span class="line">      remove_field =&gt; [ <span class="string">&quot;@version&quot;</span>,<span class="string">&quot;port&quot;</span> ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;<span class="keyword">else</span> <span class="keyword">if</span> [<span class="built_in">type</span>] == <span class="string">&quot;file&quot;</span> &#123;</span><br><span class="line">    mutate &#123;</span><br><span class="line">      rename =&gt; &#123; <span class="string">&quot;path&quot;</span> =&gt; <span class="string">&quot;filepath&quot;</span> &#125;</span><br><span class="line">      remove_field =&gt; [ <span class="string">&quot;@version&quot;</span>,<span class="string">&quot;host&quot;</span> ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">     mutate &#123;</span><br><span class="line">       <span class="built_in">split</span> =&gt; &#123;<span class="string">&quot;message&quot;</span> =&gt; <span class="string">&quot;|&quot;</span>&#125;</span><br><span class="line">       add_field =&gt; &#123;</span><br><span class="line">         <span class="string">&quot;userId&quot;</span> =&gt; <span class="string">&quot;%&#123;[message][1]&#125;&quot;</span></span><br><span class="line">         <span class="string">&quot;action&quot;</span> =&gt; <span class="string">&quot;%&#123;[message][2]&#125;&quot;</span></span><br><span class="line">         <span class="string">&quot;svip&quot;</span>  =&gt; <span class="string">&quot;%&#123;[message][3]&#125;&quot;</span></span><br><span class="line">         <span class="string">&quot;price&quot;</span> =&gt; <span class="string">&quot;%&#123;[message][4]&#125;&quot;</span></span><br><span class="line">       &#125;</span><br><span class="line">     &#125; </span><br><span class="line">   &#125;</span><br><span class="line">   mutate &#123;</span><br><span class="line">     remove_field =&gt; [ <span class="string">&quot;@version&quot;</span>,<span class="string">&quot;input&quot;</span>,<span class="string">&quot;agent&quot;</span>,<span class="string">&quot;tags&quot;</span>, <span class="string">&quot;log&quot;</span> , <span class="string">&quot;host&quot;</span>,<span class="string">&quot;ecs&quot;</span>,<span class="string">&quot;message&quot;</span>]</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output &#123;</span><br><span class="line">  stdout &#123;</span><br><span class="line">   codec =&gt; rubydebug</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#测试</span></span><br><span class="line">[root@elk01:0 ~]# <span class="built_in">echo</span> 999999999 &gt;&gt;/tmp/luay.log </span><br><span class="line">[root@elk01:0 ~]# <span class="built_in">echo</span> 11111111 |nc 10.0.0.211 6666</span><br><span class="line">[root@elk01:0 ~]# filebeat -e -c /etc/filebeat/18-apps-to-logstash.yaml </span><br><span class="line"></span><br><span class="line"><span class="comment">#输出展示</span></span><br><span class="line">&#123;</span><br><span class="line">      <span class="string">&quot;filepath&quot;</span> =&gt; <span class="string">&quot;/tmp/luay.log&quot;</span>,</span><br><span class="line">          <span class="string">&quot;type&quot;</span> =&gt; <span class="string">&quot;file&quot;</span>,</span><br><span class="line">    <span class="string">&quot;@timestamp&quot;</span> =&gt; 2024-10-27T09:22:11.843Z</span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">          <span class="string">&quot;type&quot;</span> =&gt; <span class="string">&quot;tcp&quot;</span>,</span><br><span class="line">    <span class="string">&quot;@timestamp&quot;</span> =&gt; 2024-10-27T09:22:28.519Z</span><br><span class="line">    &#123;</span><br><span class="line">          <span class="string">&quot;svip&quot;</span> =&gt; <span class="string">&quot;0&quot;</span>,</span><br><span class="line">        <span class="string">&quot;action&quot;</span> =&gt; <span class="string">&quot;加入收藏&quot;</span>,</span><br><span class="line">          <span class="string">&quot;type&quot;</span> =&gt; <span class="string">&quot;beats&quot;</span>,</span><br><span class="line">    <span class="string">&quot;@timestamp&quot;</span> =&gt; 2024-10-27T09:23:57.599Z,</span><br><span class="line">         <span class="string">&quot;price&quot;</span> =&gt; <span class="string">&quot;27975.99 &quot;</span>,</span><br><span class="line">        <span class="string">&quot;userId&quot;</span> =&gt; <span class="string">&quot;6505&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="output-多分支">output 多分支</h3><blockquote><p>输出es集群，多分支索引</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:2 ~]# <span class="built_in">cat</span> /etc/logstash/conf.d/11-multiple_input.conf </span><br><span class="line">input &#123;</span><br><span class="line">  beats &#123;</span><br><span class="line">    port =&gt; 5555</span><br><span class="line">    <span class="built_in">type</span> =&gt; beats</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  tcp &#123;</span><br><span class="line">    port =&gt; 6666</span><br><span class="line">    <span class="built_in">type</span> =&gt; tcp</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  file &#123;</span><br><span class="line">    path =&gt; [<span class="string">&quot;/tmp/luay.log&quot;</span>]</span><br><span class="line">    start_position =&gt; <span class="string">&quot;beginning&quot;</span></span><br><span class="line">    <span class="built_in">type</span> =&gt; file</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">filter &#123;</span><br><span class="line">  <span class="keyword">if</span> [<span class="built_in">type</span>] == <span class="string">&quot;tcp&quot;</span> &#123;</span><br><span class="line">    mutate &#123;</span><br><span class="line">      remove_field =&gt; [ <span class="string">&quot;@version&quot;</span>,<span class="string">&quot;port&quot;</span> ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;<span class="keyword">else</span> <span class="keyword">if</span> [<span class="built_in">type</span>] == <span class="string">&quot;file&quot;</span> &#123;</span><br><span class="line">    mutate &#123;</span><br><span class="line">      rename =&gt; &#123; <span class="string">&quot;path&quot;</span> =&gt; <span class="string">&quot;filepath&quot;</span> &#125;</span><br><span class="line">      remove_field =&gt; [ <span class="string">&quot;@version&quot;</span>,<span class="string">&quot;host&quot;</span> ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">     mutate &#123;</span><br><span class="line">       <span class="built_in">split</span> =&gt; &#123;<span class="string">&quot;message&quot;</span> =&gt; <span class="string">&quot;|&quot;</span>&#125;</span><br><span class="line">       add_field =&gt; &#123;</span><br><span class="line">         <span class="string">&quot;userId&quot;</span> =&gt; <span class="string">&quot;%&#123;[message][1]&#125;&quot;</span></span><br><span class="line">         <span class="string">&quot;action&quot;</span> =&gt; <span class="string">&quot;%&#123;[message][2]&#125;&quot;</span></span><br><span class="line">         <span class="string">&quot;svip&quot;</span>  =&gt; <span class="string">&quot;%&#123;[message][3]&#125;&quot;</span></span><br><span class="line">         <span class="string">&quot;price&quot;</span> =&gt; <span class="string">&quot;%&#123;[message][4]&#125;&quot;</span></span><br><span class="line">       &#125;</span><br><span class="line">     &#125; </span><br><span class="line">   &#125;</span><br><span class="line">   mutate &#123;</span><br><span class="line">     remove_field =&gt; [ <span class="string">&quot;@version&quot;</span>,<span class="string">&quot;input&quot;</span>,<span class="string">&quot;agent&quot;</span>,<span class="string">&quot;tags&quot;</span>, <span class="string">&quot;log&quot;</span> , <span class="string">&quot;host&quot;</span>,<span class="string">&quot;ecs&quot;</span>,<span class="string">&quot;message&quot;</span>]</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output &#123;</span><br><span class="line">  <span class="comment">#stdout &#123;</span></span><br><span class="line">  <span class="comment"># codec =&gt; rubydebug</span></span><br><span class="line">  <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> [<span class="built_in">type</span>] == <span class="string">&quot;tcp&quot;</span> &#123;</span><br><span class="line">    elasticsearch&#123;</span><br><span class="line">      hosts =&gt; [<span class="string">&quot;10.0.0.211:9200&quot;</span>,<span class="string">&quot;10.0.0.212:9200&quot;</span>,<span class="string">&quot;10.0.0.213:9200&quot;</span>]</span><br><span class="line">      index =&gt; <span class="string">&quot;logstash-if-tcp-%&#123;+yyyy.MM.dd&#125;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> [<span class="built_in">type</span>] == <span class="string">&quot;file&quot;</span> &#123;</span><br><span class="line">    elasticsearch&#123;</span><br><span class="line">      hosts =&gt; [<span class="string">&quot;10.0.0.211:9200&quot;</span>,<span class="string">&quot;10.0.0.212:9200&quot;</span>,<span class="string">&quot;10.0.0.213:9200&quot;</span>]</span><br><span class="line">      index =&gt; <span class="string">&quot;logstash-if-file-%&#123;+yyyy.MM.dd&#125;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    elasticsearch&#123;</span><br><span class="line">      hosts =&gt; [<span class="string">&quot;10.0.0.211:9200&quot;</span>,<span class="string">&quot;10.0.0.212:9200&quot;</span>,<span class="string">&quot;10.0.0.213:9200&quot;</span>]</span><br><span class="line">      index =&gt; <span class="string">&quot;logstash-if-apps-%&#123;+yyyy.MM.dd&#125;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241027174748739.png" alt="image-20241027174748739"></p><h3 id="实操">实操</h3><blockquote><p>将/var/log/syslog，/var/log/auth.log，/var/log/vmware-vmsvc*.log这三文件写入ES不同的索引，要求使用if多分支语句完成。</p><ol><li>要求写入ES索引分别带有syslog,auth,vmware等关键词</li><li>含syslog关键词索引要求分片数量为3，副本数量为0</li><li>含auth关键词索引要求分片数量为5，副本数量为0</li><li>含vmware关键词索引要求分片数量为8，副本数量为0</li></ol></blockquote><p><strong>1. 编写logstash实例</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:1 ~]# <span class="built_in">cat</span> /etc/logstash/conf.d/12-if_test.conf</span><br><span class="line">input &#123;</span><br><span class="line">  file &#123;</span><br><span class="line">    path =&gt; [<span class="string">&quot;/var/log/syslog&quot;</span>]</span><br><span class="line">    start_position =&gt; <span class="string">&quot;beginning&quot;</span></span><br><span class="line">    <span class="built_in">type</span> =&gt; syslog</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  file &#123;</span><br><span class="line">    path =&gt; [<span class="string">&quot;/var/log/auth.log&quot;</span>]</span><br><span class="line">    start_position =&gt; <span class="string">&quot;beginning&quot;</span></span><br><span class="line">    <span class="built_in">type</span> =&gt; auth</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  file &#123;</span><br><span class="line">    path =&gt; [<span class="string">&quot;/var/log/vmware-vmsvc*.log&quot;</span>]</span><br><span class="line">    start_position =&gt; <span class="string">&quot;beginning&quot;</span></span><br><span class="line">    <span class="built_in">type</span> =&gt; vmware</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output &#123;</span><br><span class="line">  stdout &#123;</span><br><span class="line">   codec =&gt; rubydebug</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> [<span class="built_in">type</span>] == <span class="string">&quot;syslog&quot;</span> &#123;</span><br><span class="line">    elasticsearch&#123;</span><br><span class="line">      hosts =&gt; [<span class="string">&quot;10.0.0.211:9200&quot;</span>,<span class="string">&quot;10.0.0.212:9200&quot;</span>,<span class="string">&quot;10.0.0.213:9200&quot;</span>]</span><br><span class="line">      index =&gt; <span class="string">&quot;linux-syslog-%&#123;+yyyy.MM.dd&#125;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> [<span class="built_in">type</span>] == <span class="string">&quot;auth&quot;</span> &#123;</span><br><span class="line">    elasticsearch&#123;</span><br><span class="line">      hosts =&gt; [<span class="string">&quot;10.0.0.211:9200&quot;</span>,<span class="string">&quot;10.0.0.212:9200&quot;</span>,<span class="string">&quot;10.0.0.213:9200&quot;</span>]</span><br><span class="line">      index =&gt; <span class="string">&quot;linux-auth-%&#123;+yyyy.MM.dd&#125;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    elasticsearch&#123;</span><br><span class="line">      hosts =&gt; [<span class="string">&quot;10.0.0.211:9200&quot;</span>,<span class="string">&quot;10.0.0.212:9200&quot;</span>,<span class="string">&quot;10.0.0.213:9200&quot;</span>]</span><br><span class="line">      index =&gt; <span class="string">&quot;linux-vmware-%&#123;+yyyy.MM.dd&#125;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2. 设置单独副本</strong></p><blockquote><p>索引管理–&gt;索引模板–&gt;创建索引模板</p></blockquote><p><strong>3分片0副本</strong></p><p><img src="https://cos.lukme.top/Pic/image-20241027180916483.png" alt="image-20241027180916483"></p><p><img src="https://cos.lukme.top/Pic/image-20241027181113679.png" alt="image-20241027181113679"></p><p>“number_of_replicas”:0,<br>“number_of_shards”:3</p><p><strong>其它两个同理如上操作</strong></p><p><strong>3. 启动logstash实例</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:1 ~]# logstash -rf /etc/logstash/conf.d/12-if_test.conf</span><br><span class="line"></span><br><span class="line"><span class="comment">#注意：logstash采集文件也是有缓存的，重新采集记得删除缓存</span></span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241027181807970.png" alt="image-20241027181807970"></p><h2 id="logstash的pipeline语句">logstash的pipeline语句</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;Logstash的pipeline，多实例和多分支语句对比&#x27;</span></span><br><span class="line">1.多分支语句的优缺点</span><br><span class="line">优点:</span><br><span class="line">可以将多个input写入到同一个配置文件，运行一个Logstash实例，更加轻量级。</span><br><span class="line">缺点:</span><br><span class="line">修改一个配置就算是热加载配置，如果修改配置出错，则导致整个Logstash无法继续运行，会影响到其他input。</span><br><span class="line">2.logstash的多实例</span><br><span class="line">优点:</span><br><span class="line">每个实例互不影响，没有太强的逻辑性，理解简单。</span><br><span class="line">缺点:</span><br><span class="line">需要管理多个数据目录，相对而言更加重量级。</span><br><span class="line">3.pipeline</span><br><span class="line">优点:</span><br><span class="line">轻量级，一个Logstash实例，轻量级，相对而言配置没有那么复杂，而是将配置文件拆分成多个文件的思路。</span><br><span class="line">每个文件都有独立的input，filter和output，我们将其分为多个不同的pipeline。</span><br><span class="line">无需使用-f选项指定配置文件，而是直接启动Logstash，Logstash会自动加载pipeline文件。</span><br><span class="line">缺点:</span><br><span class="line">几乎完美，当Logstash挂掉，会影响到所有的配置。</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/logstash-pipeline.png" alt="logstash-pipeline.drawio"></p><h3 id="准备文件">准备文件</h3><p><strong>1. tcp</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:1 ~]# <span class="built_in">cat</span> /etc/logstash/conf.d/13-pipeline_tcp.conf</span><br><span class="line">input &#123;</span><br><span class="line">  tcp &#123;</span><br><span class="line">    port =&gt; 6666</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">filter &#123;</span><br><span class="line">  mutate &#123;</span><br><span class="line">    add_field =&gt; &#123;</span><br><span class="line">      <span class="string">&quot;address&quot;</span> =&gt; <span class="string">&quot;%&#123;host&#125;:%&#123;port&#125;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    remove_field =&gt; [ <span class="string">&quot;@version&quot;</span>, <span class="string">&quot;host&quot;</span>,<span class="string">&quot;port&quot;</span>]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output &#123;</span><br><span class="line">  elasticsearch&#123;</span><br><span class="line">    hosts =&gt; [<span class="string">&quot;10.0.0.211:9200&quot;</span>,<span class="string">&quot;10.0.0.212:9200&quot;</span>,<span class="string">&quot;10.0.0.213:9200&quot;</span>]</span><br><span class="line">    index =&gt; <span class="string">&quot;logstash-pipeline-tcp-%&#123;+yyyy.MM.dd&#125;&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2. file</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:1 ~]# <span class="built_in">cat</span> /etc/logstash/conf.d/14-pipeline_file.conf</span><br><span class="line">input &#123;</span><br><span class="line">  file &#123;</span><br><span class="line">    path =&gt; [<span class="string">&quot;/tmp/luay.log&quot;</span>]</span><br><span class="line">    start_position =&gt; <span class="string">&quot;beginning&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">filter &#123;</span><br><span class="line">  mutate &#123;</span><br><span class="line">    rename =&gt; &#123; <span class="string">&quot;path&quot;</span> =&gt; <span class="string">&quot;filepath&quot;</span> &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output &#123;</span><br><span class="line">  elasticsearch&#123;</span><br><span class="line">    hosts =&gt; [<span class="string">&quot;10.0.0.211:9200&quot;</span>,<span class="string">&quot;10.0.0.212:9200&quot;</span>,<span class="string">&quot;10.0.0.213:9200&quot;</span>]</span><br><span class="line">    index =&gt; <span class="string">&quot;logstash-pipeline-file-%&#123;+yyyy.MM.dd&#125;&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>3. beats</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:1 ~]# <span class="built_in">cat</span> /etc/logstash/conf.d/15-pipeline_beat.conf</span><br><span class="line">input &#123;</span><br><span class="line">  beats &#123;</span><br><span class="line">    port =&gt; 5555</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">filter &#123;</span><br><span class="line">  mutate &#123;</span><br><span class="line">    <span class="built_in">split</span> =&gt; &#123;<span class="string">&quot;message&quot;</span> =&gt; <span class="string">&quot;|&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">    add_field =&gt; &#123;</span><br><span class="line">      <span class="string">&quot;userId&quot;</span> =&gt; <span class="string">&quot;%&#123;[message][1]&#125;&quot;</span></span><br><span class="line">      <span class="string">&quot;action&quot;</span> =&gt; <span class="string">&quot;%&#123;[message][2]&#125;&quot;</span></span><br><span class="line">      <span class="string">&quot;svip&quot;</span>  =&gt; <span class="string">&quot;%&#123;[message][3]&#125;&quot;</span></span><br><span class="line">      <span class="string">&quot;price&quot;</span> =&gt; <span class="string">&quot;%&#123;[message][4]&#125;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  mutate &#123;</span><br><span class="line">    remove_field =&gt; [ <span class="string">&quot;@version&quot;</span>,<span class="string">&quot;input&quot;</span>,<span class="string">&quot;agent&quot;</span>,<span class="string">&quot;tags&quot;</span>, <span class="string">&quot;log&quot;</span> , <span class="string">&quot;host&quot;</span>,<span class="string">&quot;ecs&quot;</span>,<span class="string">&quot;message&quot;</span>]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output &#123;</span><br><span class="line">  elasticsearch&#123;</span><br><span class="line">    hosts =&gt; [<span class="string">&quot;10.0.0.211:9200&quot;</span>,<span class="string">&quot;10.0.0.212:9200&quot;</span>,<span class="string">&quot;10.0.0.213:9200&quot;</span>]</span><br><span class="line">    index =&gt; <span class="string">&quot;logstash-pipeline-apps-%&#123;+yyyy.MM.dd&#125;&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#filebeat实例（log文件自备）</span></span><br><span class="line">[root@elk01:0 ~]# <span class="built_in">cat</span> /etc/filebeat/18-apps-to-logstash.yaml </span><br><span class="line">filebeat:</span><br><span class="line">  inputs:</span><br><span class="line">  - <span class="built_in">type</span>: filestream</span><br><span class="line">    paths:</span><br><span class="line">      - /tmp/apps.log </span><br><span class="line"></span><br><span class="line">output.logstash:</span><br><span class="line">  hosts: [<span class="string">&quot;10.0.0.211:5555&quot;</span>]</span><br></pre></td></tr></table></figure><h3 id="修改pipeline文件">修改pipeline文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:1 ~]# <span class="built_in">cat</span> /etc/logstash/pipelines.yml </span><br><span class="line">···</span><br><span class="line">- pipeline.id: tcp-pipeline</span><br><span class="line">  path.config: <span class="string">&quot;/etc/logstash/conf.d/13-pipeline_tcp.conf&quot;</span></span><br><span class="line">- pipeline.id: file-pipeline</span><br><span class="line">  path.config: <span class="string">&quot;/etc/logstash/conf.d/14-pipeline_file.conf&quot;</span></span><br><span class="line">- pipeline.id: beat-pipeline</span><br><span class="line">  path.config: <span class="string">&quot;/etc/logstash/conf.d/15-pipeline_beat.conf&quot;</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">#  pipeline.id  名字可自定义</span></span><br></pre></td></tr></table></figure><h3 id="创建软链接文件">创建软链接文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:1 ~]# <span class="built_in">mkdir</span> /usr/share/logstash/config</span><br><span class="line"></span><br><span class="line">[root@elk01:1 ~]# <span class="built_in">ln</span> -svf /etc/logstash/pipelines.yml /usr/share/logstash/config/pipelines.yml</span><br><span class="line"><span class="string">&#x27;/usr/share/logstash/config/pipelines.yml&#x27;</span> -&gt; <span class="string">&#x27;/etc/logstash/pipelines.yml&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>启动logstash</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:1 ~]# logstash -r</span><br><span class="line"></span><br><span class="line"><span class="comment">#注意：pipeline语法 启动时候不需要指定文件</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#写入数据</span></span><br><span class="line">[root@elk01:0 ~]# <span class="built_in">echo</span> 898989 |nc 10.0.0.211 6666</span><br><span class="line">[root@elk01:0 ~]# <span class="built_in">echo</span> 9900 &gt;/tmp/luay.log</span><br><span class="line">[root@elk01:0 ~]# filebeat -e -c /etc/filebeat/18-apps-to-logstash.yaml</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241027185825270.png" alt="image-20241027185825270"></p><p><img src="https://cos.lukme.top/Pic/logstash-pipeline.png" alt="logstash-pipeline.drawio"></p>]]></content>
      
      
      <categories>
          
          <category> ELK日志收集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ELK </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>04.logstash部署及实操</title>
      <link href="/posts/9a6613a9.html"/>
      <url>/posts/9a6613a9.html</url>
      
        <content type="html"><![CDATA[<h2 id="部署logstash">部署logstash</h2><p>Logstash是免费且开放的服务器端数据处理管道，能够从多个来源采集数据，转换数据，然后将数据发送到您最喜欢的“存储库”中，Logstash的作用就是在于日志处理，转换操作。</p><p><strong>1.下载logstash</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:1 ~]#   wget https://artifacts.elastic.co/downloads/logstash/logstash-7.17.23-amd64.deb</span><br></pre></td></tr></table></figure><p><strong>2.安装logstash</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:1 ~]# dpkg -i logstash-7.17.23-amd64.deb</span><br></pre></td></tr></table></figure><p><strong>3.添加软链接</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:1 ~]# <span class="built_in">ln</span> -svf /usr/share/logstash/bin/logstash /usr/local/bin/</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看帮助</span></span><br><span class="line">[root@elk01:1 ~]# logstash -h</span><br></pre></td></tr></table></figure><p><strong>4.启动测试</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:1 ~]#  logstash -e <span class="string">&quot;input &#123; stdin &#123; type =&gt; stdin &#125; &#125; output &#123; stdout &#123; codec =&gt; rubydebug &#125; &#125;&quot;</span></span><br><span class="line">···</span><br><span class="line">The stdin plugin is now waiting <span class="keyword">for</span> input:</span><br><span class="line">111111</span><br><span class="line">&#123;</span><br><span class="line">          <span class="string">&quot;type&quot;</span> =&gt; <span class="string">&quot;stdin&quot;</span>,</span><br><span class="line">    <span class="string">&quot;@timestamp&quot;</span> =&gt; 2024-10-05T01:48:28.131Z,</span><br><span class="line">       <span class="string">&quot;message&quot;</span> =&gt; <span class="string">&quot;111111&quot;</span>,</span><br><span class="line">          <span class="string">&quot;host&quot;</span> =&gt; <span class="string">&quot;elk01&quot;</span>,</span><br><span class="line">      <span class="string">&quot;@version&quot;</span> =&gt; <span class="string">&quot;1&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>温馨提示：如果你出现了和我一样报错如下</p><p>[ERROR] 2024-10-05 01:25:25.226 [pool-3-thread-1] jvm - Unknown garbage collector name {:name=&gt;“G1 Concurrent GC”}</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">表示 Logstash 不识别 <span class="string">&quot;G1 Concurrent GC&quot;</span> 作为垃圾回收器的名称。这可能是因为在 `jvm.options` 配置文件中指定了错误的垃圾回收器名称。</span><br><span class="line"></span><br><span class="line">解决：编辑 jvm.options 文件：</span><br><span class="line">[root@elk01:1 ~]# vim /etc/logstash/jvm.options </span><br><span class="line"></span><br><span class="line"><span class="comment">#修改或添加 JVM 参数：</span></span><br><span class="line">在 jvm.options 文件中，应该设置 -XX:+UseG1GC 来启用 G1 垃圾回收器，而不是使用 <span class="string">&quot;G1 Concurrent GC&quot;</span> 这样的名称。找到任何提及垃圾回收器的行，没有就添加，之后重启logstash</span><br><span class="line"></span><br><span class="line">-XX:+UseG1GC</span><br></pre></td></tr></table></figure></blockquote><h2 id="logstash组件">logstash组件</h2><p>logstash有三个核心组件，分别为input，filter和output。其中，filter组件是可选组件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">logstash多实例及pipeline概念</span><br><span class="line">input：</span><br><span class="line">数据从哪里来，可以是stdin,tcp,file,kafka,redis,...</span><br><span class="line">推荐阅读:</span><br><span class="line">https://www.elastic.co/guide/en/logstash/7.17/input-plugins.html</span><br><span class="line"></span><br><span class="line">filter:</span><br><span class="line">对数据进行过滤操作，常用的插件有: grok,<span class="built_in">date</span>,mutate,user_agent,geoip,json,...</span><br><span class="line">推荐阅读:</span><br><span class="line">https://www.elastic.co/guide/en/logstash/7.17/filter-plugins.html</span><br><span class="line"></span><br><span class="line">output:</span><br><span class="line">数据到哪去，一般情况下都是写入elasticsearch或者stdout(测试)</span><br><span class="line">推荐阅读：</span><br><span class="line">https://www.elastic.co/guide/en/logstash/7.17/output-plugins.html</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">一个节点可以部署多个Logstash实例，每个Logstash实例可以有多个pipeline，每个pipeline可以有input，filter和output插件。</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/logstash.png" alt="logstash"></p><h2 id="logstash类型案例">logstash类型案例</h2><blockquote><p>yes的为必选参数</p></blockquote><p><img src="https://cos.lukme.top/Pic/image-20241005110046458.png" alt="image-20241005110046458"></p><h3 id="input-tcp类型">input-tcp类型</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1.编写logstash实例，标准输出stdout</span></span><br><span class="line">[root@elk01:2 ~]# <span class="built_in">cat</span> /etc/logstash/conf.d/01_tcp_stdout.conf</span><br><span class="line">input &#123;</span><br><span class="line">  tcp &#123;</span><br><span class="line">    port =&gt; <span class="string">&quot;8888&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">output &#123;</span><br><span class="line">  stdout &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.启动logstash实例   （  -r   热加载，-f  后要跟实例）</span></span><br><span class="line">[root@elk01:2 ~]# logstash -rf /etc/logstash/conf.d/01_tcp_stdout.conf </span><br><span class="line"></span><br><span class="line"><span class="comment">#3.别的节点发送测试数据</span></span><br><span class="line">[root@elk02:1 ~]# <span class="built_in">echo</span> 999|nc 10.0.0.211 8888</span><br><span class="line"></span><br><span class="line"><span class="comment">#终端输出</span></span><br><span class="line">&#123;</span><br><span class="line">       <span class="string">&quot;message&quot;</span> =&gt; <span class="string">&quot;999&quot;</span>,</span><br><span class="line">          <span class="string">&quot;host&quot;</span> =&gt; <span class="string">&quot;10.0.0.212&quot;</span>,</span><br><span class="line">    <span class="string">&quot;@timestamp&quot;</span> =&gt; 2024-10-05T03:22:38.582Z,</span><br><span class="line">      <span class="string">&quot;@version&quot;</span> =&gt; <span class="string">&quot;1&quot;</span>,</span><br><span class="line">          <span class="string">&quot;port&quot;</span> =&gt; 46720</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#标准输出的#，若不指定codec属性，则默认的解码器为rubydebug。</span></span><br><span class="line">output &#123;</span><br><span class="line">  stdout &#123;</span><br><span class="line">   <span class="comment"># codec =&gt; rubydebug</span></span><br><span class="line">   <span class="comment"># 此处指定的codec的解码器为json格式</span></span><br><span class="line">   codec =&gt; json </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#终端输出则为</span></span><br><span class="line">&#123;<span class="string">&quot;@timestamp&quot;</span>:<span class="string">&quot;2024-08-29T07:10:55.639Z&quot;</span>,<span class="string">&quot;@version&quot;</span>:<span class="string">&quot;1&quot;</span>,<span class="string">&quot;host&quot;</span>:<span class="string">&quot;10.0.0.91&quot;</span>,<span class="string">&quot;message&quot;</span>:<span class="string">&quot;9999&quot;</span>,<span class="string">&quot;port&quot;</span>:58096&#125;</span><br></pre></td></tr></table></figure><h3 id="input-file类型">input-file类型</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1.编写logstash实例，标准输出stdout（注意path类型是数组，详细看官网） </span></span><br><span class="line">[root@elk01:3 ~]# <span class="built_in">cat</span> /etc/logstash/conf.d/02_file_stdout.yaml </span><br><span class="line">input &#123;</span><br><span class="line">  file &#123;</span><br><span class="line">    path =&gt; [<span class="string">&quot;/tmp/test.conf&quot;</span>]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">output &#123;</span><br><span class="line">  stdout &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.启动logstash实例</span></span><br><span class="line">[root@elk01:2 ~]# logstash -rf /etc/logstash/conf.d/02_file_stdout.yaml </span><br><span class="line"></span><br><span class="line"><span class="comment">#3.发送测试数据</span></span><br><span class="line">[root@elk01:3 ~]# <span class="built_in">echo</span> <span class="string">&#x27;666&#x27;</span> &gt;&gt;/tmp/test.conf</span><br><span class="line"></span><br><span class="line"><span class="comment">#logstash的标准输出</span></span><br><span class="line">&#123;</span><br><span class="line">          <span class="string">&quot;host&quot;</span> =&gt; <span class="string">&quot;elk01&quot;</span>,</span><br><span class="line">      <span class="string">&quot;@version&quot;</span> =&gt; <span class="string">&quot;1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;@timestamp&quot;</span> =&gt; 2024-10-05T03:34:23.489Z,</span><br><span class="line">       <span class="string">&quot;message&quot;</span> =&gt; <span class="string">&quot;666&quot;</span>,</span><br><span class="line">          <span class="string">&quot;path&quot;</span> =&gt; <span class="string">&quot;/tmp/test.conf&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="logstash的采集缓存">logstash的采集缓存</h3><blockquote><p>​     当我们停掉实例2时候，再次往test.conf里写入新数据  7890 ，重新执行实例2时候，发现数据并不会重新采集，而是只采集新数据，这种现象同filebeat一样，将采集过的记录放在缓存文件里，下次采集前先读取这个文件，看看采集的偏移量，那这个文件在哪呢？</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">启动实例时候发现读取文件--&gt;/usr/share/logstash/data/plugins/inputs/file/.sincedb_387337cd9c394c04fb5a33c176cf8715<span class="string">&quot;, :path=&gt;[&quot;</span>/tmp/test.conf<span class="string">&quot;]&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#查看这个文件，里面记录了这个文件已经被采集的信息</span></span><br><span class="line"><span class="string">[root@elk01:3 ~]# cat /usr/share/logstash/data/plugins/inputs/file/.sincedb_387337cd9c394c04fb5a33c176cf8715 </span></span><br><span class="line"><span class="string">788369 0 64768 14 1728099475.853982 /tmp/test.conf</span></span><br></pre></td></tr></table></figure><blockquote><p>如何实现文件重新采集？</p><p>1.清空这个文件喽，直接清空这一级目录所有文件即可</p><p><code>rm -f /usr/share/logstash/data/plugins/inputs/file/.sincedb*</code></p><p>2.设置文件采集为从头采集</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:3 ~]# vim /etc/logstash/conf.d/02_file_stdout.yaml </span><br><span class="line">input &#123;</span><br><span class="line">file &#123;</span><br><span class="line"> path =&gt; [<span class="string">&quot;/tmp/test.conf&quot;</span>,<span class="string">&quot;/tmp/test2.log&quot;</span>]  <span class="comment">#path数组，支持采集多个文件</span></span><br><span class="line"> start_position =&gt; <span class="string">&quot;beginning&quot;</span></span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line">output &#123;</span><br><span class="line"> stdout &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>start_position  默认值end  从文件最后位置采集，有效值为 beginning  end</p></blockquote><h3 id="logstash的多实例">logstash的多实例</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">同filebeat一样，启动时候指定不同数据目录    --path.data</span><br><span class="line">logstash -rf /etc/logstash/conf.d/02-file-to-stdout.conf --path.data /tmp/logstash-data</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ELK日志收集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ELK </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建个人云盘</title>
      <link href="/posts/aca79867.html"/>
      <url>/posts/aca79867.html</url>
      
        <content type="html"><![CDATA[<h2 id="系统介绍">系统介绍</h2><p>ownCloud是一个基于云计算的开源文件共享和协作平台，它允许用户在多个设备上同步、共享和协作文件。</p><p><strong>主要特点</strong></p><ul><li>用户可以将ownCloud私有云盘与其他设备同步，随时随地访问和管理文件。</li><li>支持跨平台访问，包括Windows、Mac、Android、iOS、Linux等。</li><li>提供公共链接分享功能，可以设置密码和过期日期，确保文件分享的安全性。</li><li>团队成员可以在同一个ownCloud私有云盘中共享和协作文件，提高团队效率。</li><li>支持实时协作，如同时编辑文档、创建演示文稿等。</li><li>ownCloud可以作为一个备份解决方案，将用户的重要数据备份到私有云盘中。</li><li>提供版本控制功能，可以恢复之前的文件版本，防止数据丢失。</li><li>ownCloud可以与多种应用程序集成，如OnlyOffice、Microsoft 365、Collabora Online等，满足用户的个性化需求。</li><li>支持HTTPS和SSL加密，确保数据在传输过程中的安全性。</li><li>提供多因素认证、文件生命周期管理等安全功能。</li></ul><p><strong>使用场景</strong></p><ul><li>用于个人文件同步、备份和分享。跨平台访问，方便在不同设备之间切换。</li><li>用于团队协作、文件共享和版本控制。提高团队效率，降低IT成本。</li><li>用于学生作业提交、教师资源共享等。提供安全、可靠的文件存储和分享环境</li></ul><p><strong>技术架构</strong></p><p>ownCloud采用三层架构，将存储、后端和前端组件分离，通过安全、明确的API进行通信。这种架构使得ownCloud具有高可扩展性和灵活性。</p><p>如需了解更多信息，可以访问其官方网站或查阅相关的技术文档。</p><blockquote><p>官方网站</p><p><a href="https://owncloud.com/">https://owncloud.com/</a></p></blockquote><blockquote><p>Docker镜像</p><p><a href="https://hub.docker.com/_/owncloud">https://hub.docker.com/_/owncloud</a></p></blockquote><blockquote><p>GitHub地址</p><p><a href="https://github.com/owncloud/core">https://github.com/owncloud/core</a></p></blockquote><h2 id="安装教程">安装教程</h2><p>Docker部署操作步骤：安装Docker、拉取镜像、启动容器。本篇基于Centos7系统操作安装</p><h3 id="安装docker">安装docker</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1.添加官方docker源</span></span><br><span class="line">[root@docker01 ~]# vim /etc/yum.repos.d/docker-ce.repo </span><br><span class="line">[docker-ce-stable]</span><br><span class="line">name=Docker CE Stable - <span class="variable">$basearch</span></span><br><span class="line">baseurl=https://download.docker.com/linux/centos/<span class="variable">$releasever</span>/<span class="variable">$basearch</span>/stable</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=https://download.docker.com/linux/centos/gpg</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.替换华为源（docker官方众所周原因不能访问以及下载慢，这里使用华为镜像源）</span></span><br><span class="line"><span class="built_in">sudo</span> sed -i <span class="string">&#x27;s+download.docker.com+mirrors.huaweicloud.com/docker-ce+&#x27;</span> /etc/yum.repos.d/docker-ce.repo</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.安装docker</span></span><br><span class="line">[root@docker01 ~]# yum install -y docker-ce docker-ce-cli containerd.io</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#4.更改镜像加速（如果失效，也可往上找其他加速地址）</span></span><br><span class="line">[root@docker01 ~]# <span class="built_in">tee</span> /etc/docker/daemon.json &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;dns&quot;</span>: [<span class="string">&quot;8.8.8.8&quot;</span>, <span class="string">&quot;8.8.4.4&quot;</span>],</span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;https://docker.m.daocloud.io&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://dockerproxy.com&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://docker.mirrors.ustc.edu.cn&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://docker.nju.edu.cn&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://registry.docker-cn.com&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://docker.mirrors.ustc.edu.cn&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://hub-mirror.c.163.com&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://mirror.baidubce.com&quot;</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">[root@docker01 ~]# systemctl daemon-reload</span><br><span class="line">[root@docker01 ~]# systemctl restart docker</span><br></pre></td></tr></table></figure><h3 id="拉取镜像">拉取镜像</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 拉取数据库镜像</span></span><br><span class="line">[root@docker01 ~]# docker pull mysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拉取owncloud镜像</span></span><br><span class="line">[root@docker01 ~]# docker pull owncloud</span><br></pre></td></tr></table></figure><h3 id="启动容器">启动容器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.创建mysql服务（这里的数据库密码也是你访问云盘的密码）</span></span><br><span class="line">[root@docker01 ~]# docker run --name db --<span class="built_in">env</span> MYSQL_ROOT_PASSWORD=luay123 -d --restart=always mysql</span><br><span class="line"></span><br><span class="line">-name  db         给容器起个名字，可自定义</span><br><span class="line">--restart=always  docker每次重启都会启动这个容器</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.创建一个软件目录，方便管理owncloud的数据，包括但不限于你上传的图片，文件等</span></span><br><span class="line">[root@docker01 ~]# <span class="built_in">mkdir</span> /app/owncloud/ -p</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 创建owncloud服务</span></span><br><span class="line"><span class="comment"># --link mydb:mydb表示连接的另外一个容器mydb</span></span><br><span class="line">[root@docker01 ~]# docker run --name mycloud -p 8081:80 --<span class="built_in">link</span> mydb:mydb -d -v /app/owncloud/:/var/www/html --restart=always owncloud</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.查看运行状态  （是否都是up状态，不要有端口冲突）</span></span><br><span class="line">[root@web01 ~]# docker ps -a </span><br><span class="line">CONTAINER ID   IMAGE         CREATED          STATUS          PORTS                                   NAMES</span><br><span class="line">273ee893d887   owncloud    6 seconds ago    Up 4 seconds    0.0.0.0:8081-&gt;80/tcp, :::8081-&gt;80/tcp   mycloud</span><br><span class="line">a614a95ec067   mysql       33 minutes ago   Up 33 minutes   3306/tcp, 33060/tcp                     mydb</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.浏览器访问   你的ip:8081   例如我的ip是10.0.0.7     那就访问10.0.0.7:8081    </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#创建管理员账号</span></span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241015190649471.png" alt="image-20241015190649471"></p><p><strong>使用创建的管理员账号登录</strong></p><p><img src="https://cos.lukme.top/Pic/image-20241015191024034.png" alt="image-20241015191024034"></p><p><img src="https://cos.lukme.top/Pic/image-20241015191332027.png" alt="image-20241015191332027"></p><h3 id="管理文件">管理文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">还记得我们创建的数据文件目录吗？  看看我们上传的图片是不是就在这😎</span><br><span class="line"></span><br><span class="line">[root@web01 ~]# ll /app/owncloud/data/admin/files/</span><br><span class="line">-rw-r--r-- 1 33 tape  529735 May  6 14:09 8CE7E8A4D305671B267848D4E720CAE3.jpg</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 爱调研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 个人云盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>将hexo部署到博客上</title>
      <link href="/posts/7a77547d.html"/>
      <url>/posts/7a77547d.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>本篇是以windows本地已经部署好hexo之后操作，windows本地已经安装好git</p></blockquote><p><a href="https://blog.csdn.net/weixin_42242910/article/details/136297201">windows安装git</a></p><h4 id="创建git用户">创建git用户</h4><p>打开Git Bash，依次输入以下命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email &quot;xxx@xxx.com&quot;     # xxx@xxx.com改为邮箱</span><br><span class="line">git config --global user.name &quot;xxx&quot;              # xxx为用户名</span><br></pre></td></tr></table></figure><p>此处的邮箱和用户名用于标识是哪位用户提交的代码，起个自己喜欢的名称即可，邮箱最好是真实的邮箱</p><h4 id="连接服务器">连接服务器</h4><blockquote><p>使用Xshell或者其他软件连接服务器，我使用的是WindTerm，开源免费，在此放个链接<a href="https://winterm.org/">WindTerm官网 (winterm.org)</a>。</p></blockquote><h5 id="查看是否安装了Git">查看是否安装了Git</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure><p>若显示如下则无需再次安装GIt</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git version 1.8.3.1</span><br></pre></td></tr></table></figure><h5 id="若未安装则进行安装">若未安装则进行安装</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install -y git   # CentOS使用yum安装，Debian使用apt-get安装 请自行查找命令</span><br><span class="line">git --vesion         #显示git版本号，说明安装成功</span><br></pre></td></tr></table></figure><h5 id="添加git用户">添加git用户</h5><ol><li><p>root用户默认的权限过大，出于安全考虑，我们为服务器添加一个名为git的用户，用于将博客自动部署至服务器上（不需要主动切换到git用户，我们所有的操作都用root用户即可）。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">useradd git     #添加名为git的用户</span><br><span class="line">passwd git      #修改git用户的密码  </span><br></pre></td></tr></table></figure></li><li><p>为git用户授予sudo权限，用WindTerm打开 /etc 目录下的 sudoers 文件，在 root ALL=(ALL) ALL 语句下添加 git ALL=(ALL) ALL ，如图所示。</p><p><img src="https://cos.lukme.top/Pic/image-20241013170104029.png" alt="image-20241013170104029"></p><p>或者在/etc/sudoers.d目录下，新建usergit文件，添加<code>git ALL=(ALL) NOPASSWD:ALL</code>并保存,效果一样</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sudoers.d/usergit</span><br><span class="line">git ALL=(ALL) NOPASSWD:ALL</span><br></pre></td></tr></table></figure></li></ol><h5 id="为git用户添加SSH密钥">为git用户添加SSH密钥</h5><blockquote><p>若不添加SSH密钥，那么本地计算机对服务器的git仓库进行的所有操作都需要输入密码，我们可以通过为git用户添加SSH密钥的方式来实现免密登录。</p></blockquote><ol><li><p>本地计算机在任意位置打开<code>Git Bash</code>，输入以下命令生成密钥</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen</span><br></pre></td></tr></table></figure><p>按三次Enter即可生成密钥</p></li><li><p>进入<code>C:\Users\用户名</code>里面有.ssh目录，里面的id_rsa.pub就是我们需要的文件，例如我的如下</p></li></ol><p><img src="https://cos.lukme.top/Pic/image-20241013170251887.png" alt="image-20241013170251887"></p><ol><li><p>服务器中进入<code>/home/git</code>目录，创建.ssh目录，并新建名为authorized_keys的文件，将id_rsa.pub的内容复制进去并保存</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /home/git</span><br><span class="line">mkdir .ssh</span><br><span class="line">vim authorized_keys</span><br></pre></td></tr></table></figure></li><li><p>为公钥文件和文件夹设置读写权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod 600 /home/git/.ssh/authorized_keys</span><br><span class="line">chmod 700 /home/git/.ssh</span><br></pre></td></tr></table></figure></li><li><p>将.ssh文件夹及其内的文件所有权移交给git用户</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown -R git:git /home/git/.ssh</span><br></pre></td></tr></table></figure></li><li><p>在本地计算机测试是否可以用ssh免密登录服务器。打开Git Bash</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -v git@xxx.xxx.xxx.xxx     #git@后填写服务器的公网ip</span><br></pre></td></tr></table></figure><p>第一次免密登录会提示让你输入yes/no，输入yes即可，之后就不需要输入yes了，显示以下内容即免密登录成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Last login: Tue Jun 18 15:21:51 2024 from 111.194.209.107</span><br></pre></td></tr></table></figure></li></ol><h4 id="服务器创建Git仓库并配置自动部署">服务器创建Git仓库并配置自动部署</h4><blockquote><p>这里的Git仓库（repository）可以理解为一个存放着不同版本代码的代码库，包含了项目所有的源文件和版本控制信息。但我们在这里需要用到的是裸库，即仅包含版本控制信息的仓库。后者不保存文件，常用作服务器仓库，实现数据共享和同步。</p><p>自动部署的核心在于git-hooks（钩子），可以理解为一种脚本，在特定条件下触发时会调用钩子并执行钩子文件中的内容。</p></blockquote><ol><li><p>创建进入自己想初始化git仓库的目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /home/repo</span><br><span class="line">cd /home/repo</span><br><span class="line">git init --bare hexo-blog.git    #创建一个名为blog的仓库，--bare参数为创建裸库</span><br></pre></td></tr></table></figure></li><li><p>进入<code>/home/repo/hexo-blog.git/hooks</code>目录，找到<code>post-receive</code>文件（若无则创建），在里面输入<code>git --work-tree=/home/blog/hexo --git-dir=/home/repo/hexo-blog.git checkout -f</code>（work-tree为hexo的部署目录，git-dir为Git仓库的目录）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /home/repo/hexo-blog.git/hooks</span><br><span class="line">vim post-receive</span><br><span class="line">mkdir -p /home/blog/hexo</span><br></pre></td></tr></table></figure></li><li><p>这里我们使用的是 <code>post-receive</code>钩子，当Git收到push请求的时候就会调用这个钩子。这个钩子中添加的语句执行的操作为：删除hexo部署目录中原有的文件，然后将Git仓库中的内容clone至hexo部署目录下。这样我们在本地更新博客并且执行部署命令后，网页文件会被push至服务器的Git仓库内，钩子文件则会将Git仓库内的网页文件复制到hexo部署目录下，从而实现自动部署功能。</p></li><li><p>为钩子文件及Git仓库目录配置权限。这里需要将我们创建的仓库及部署目录的所有权移交给git用户，因为linux下创建文件时默认只有拥有者（即创建者）才具有读写权限，而Git进行push操作时登录的用户为git用户。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /home/repo/hexo-blog.git/hooks/post-receive     #为钩子文件授予可执行权限（+x）</span><br><span class="line">chown -R git:git /home/repo     #将仓库目录的所有权移交给git用户</span><br><span class="line">chown -R git:git /home/blog/hexo     #将hexo部署目录的所有权移交给git用户</span><br></pre></td></tr></table></figure></li><li><p>修改本地Hexo的配置文件_config.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">    <span class="attr">repo:</span> <span class="string">git@你的公网ip:/home/repo/hexo-blog.git</span></span><br><span class="line">    <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="安装Nginx">安装Nginx</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">1.Centos7使用yum安装</span><br><span class="line">[root@luay ~]# yum -y install nginx</span><br><span class="line"></span><br><span class="line">2.编写hexo的配置文件</span><br><span class="line">[root@luay ~]# vim /etc/nginx/conf.d/hexo.conf</span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    <span class="comment"># 服务器公网IP</span></span><br><span class="line">    server_name 123.123.123.123;</span><br><span class="line">    <span class="comment"># 项目的部署地址</span></span><br><span class="line">    root /home/blog/hexo;</span><br><span class="line">    location /&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 以下配置是绑定SSL证书时使用的，若域名没备案就先不填，使用上面的就行了</span></span><br><span class="line"><span class="comment"># listen 443 ssl;</span></span><br><span class="line">    <span class="comment"># 请填写绑定证书的域名</span></span><br><span class="line">    <span class="comment"># server_name huochairener-blog.cn;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 部署ssl使用的参数</span></span><br><span class="line">    <span class="comment"># if ($server_port !~ 443)&#123;</span></span><br><span class="line">    <span class="comment"># rewrite ^(/.*)$ https://$host$1 permanent;</span></span><br><span class="line">    <span class="comment"># &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 请填写证书文件的相对路径或绝对路径</span></span><br><span class="line">    <span class="comment"># ssl_certificate /xx/xx/xxxx.crt;</span></span><br><span class="line">    <span class="comment"># 请填写私钥文件的相对路径或绝对路径</span></span><br><span class="line">    <span class="comment"># ssl_certificate_key /xx/xx/xxx.key;</span></span><br><span class="line">    <span class="comment"># ssl_session_timeout 10m;</span></span><br><span class="line">    <span class="comment"># 请按照以下协议配置</span></span><br><span class="line">    <span class="comment"># ssl_protocols TLSv1.2 TLSv1.3;</span></span><br><span class="line">    <span class="comment"># 请按照以下套件配置，配置加密套件，写法遵循 openssl 标准。</span></span><br><span class="line">    <span class="comment"># ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;</span></span><br><span class="line">    <span class="comment"># ssl_prefer_server_ciphers on;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">3.检查nginx语法</span><br><span class="line">nginx -t  <span class="comment"># 一般报错信息很明确，翻译一下就行。若不知道就查查，或者看看文件里有没有多余的空格</span></span><br><span class="line"></span><br><span class="line">4.启动nginx</span><br><span class="line">[root@luay ~]# systemctl start nginx</span><br><span class="line"></span><br><span class="line">5.访问网站</span><br><span class="line">使用http://你的公网ip        </span><br><span class="line">默认情况下输入你的公网ip地址</span><br></pre></td></tr></table></figure><p>nginx常用命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nginx -s stop    # 停止nginx</span><br><span class="line">nginx -s reload  # 重载nginx，修改配置文件后使用</span><br><span class="line">nginx -t  # 检查配置文件语法是否有错误，常用于修改配置文件后的检查</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zabbix微信告警</title>
      <link href="/posts/96fcc157.html"/>
      <url>/posts/96fcc157.html</url>
      
        <content type="html"><![CDATA[<p>官方文档：<a href="https://developer.work.weixin.qq.com/document/path/99110">https://developer.work.weixin.qq.com/document/path/99110</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">在终端某个群组添加机器人之后，创建者可以在机器人详情页看到该机器人特有的webhookurl。开发者可以按以下说明向这个地址发起HTTP POST 请求，即可实现给该群组发送消息</span><br><span class="line"><span class="comment">#假设webhook是   https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=693a91f6-7xxx-4bc4-97a0-0ec2sifa5aaa</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#使用curl命令发消息</span></span><br><span class="line">curl <span class="string">&#x27;https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=693axxx6-7aoc-4bc4-97a0-0ec2sifa5aaa&#x27;</span> \</span><br><span class="line">   -H <span class="string">&#x27;Content-Type: application/json&#x27;</span> \</span><br><span class="line">   -d <span class="string">&#x27;</span></span><br><span class="line"><span class="string">   &#123;</span></span><br><span class="line"><span class="string">    &quot;msgtype&quot;: &quot;text&quot;,</span></span><br><span class="line"><span class="string">    &quot;text&quot;: &#123;</span></span><br><span class="line"><span class="string">        &quot;content&quot;: &quot;hello world&quot;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">   &#125;&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>文本类型</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;msgtype&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;content&quot;</span><span class="punctuation">:</span> <span class="string">&quot;广州今日天气：29度，大部分多云，降雨概率：60%&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;mentioned_list&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">&quot;wangqing&quot;</span><span class="punctuation">,</span><span class="string">&quot;@all&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;mentioned_mobile_list&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">&quot;13800001111&quot;</span><span class="punctuation">,</span><span class="string">&quot;@all&quot;</span><span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>是否必填</th><th>说明</th></tr></thead><tbody><tr><td>msgtype</td><td>是</td><td>消息类型，此时固定为text</td></tr><tr><td>content</td><td>是</td><td>文本内容，最长不超过2048个字节，必须是utf8编码</td></tr><tr><td>mentioned_list</td><td>否</td><td>userid的列表，提醒群中的指定成员(@某个成员)，@all表示提醒所有人，如果开发者获取不到userid，可以使用mentioned_mobile_list</td></tr><tr><td>mentioned_mobile_list</td><td>否</td><td>手机号列表，提醒手机号对应的群成员(@某个成员)，@all表示提醒所有人</td></tr></tbody></table><h3 id="使用python调用接口">使用python调用接口</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.安装python环境</span></span><br><span class="line">[root@zabbix5-server alertscripts]# yum install -y python36-devel</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.安装Python的requests模块</span></span><br><span class="line">[root@zabbix5-server alertscripts]# pip3 install requests -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.编写python脚本</span></span><br><span class="line">[root@web01 ~]# vim wechat.py</span><br><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"><span class="comment">#-*- coding: utf-8 -*-</span></span><br><span class="line">import requests</span><br><span class="line">import json</span><br><span class="line">import sys</span><br><span class="line">import os</span><br><span class="line">headers = &#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json;charset=utf-8&#x27;</span>&#125;</span><br><span class="line">api_url = <span class="string">&quot;webhook地址&quot;</span></span><br><span class="line">def msg(text):</span><br><span class="line">json_text= &#123;</span><br><span class="line"><span class="string">&quot;msgtype&quot;</span>: <span class="string">&quot;text&quot;</span>,</span><br><span class="line"><span class="string">&quot;text&quot;</span>: &#123;</span><br><span class="line"><span class="string">&quot;content&quot;</span>: text</span><br><span class="line">&#125;,</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print</span>(requests.post(api_url,json.dumps(json_text),headers=headers).content)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">text = sys.argv[1]</span><br><span class="line">msg(text)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.将脚本放在/usr/lib/zabbix/alertscripts</span></span><br><span class="line">[root@zabbix5-server ~]# vim /usr/lib/zabbix/alertscripts/wechat.py</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.授权执行权限</span></span><br><span class="line">[root@zabbix5-server ~]# <span class="built_in">chmod</span> +x /usr/lib/zabbix/alertscripts/wechat.py</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>添加报警媒介</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#web端配置</span></span><br><span class="line">管理&gt;报警媒介类型&gt;创建媒体类型</span><br><span class="line"></span><br><span class="line">脚本参数：&#123;ALERT.MESSAGE&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/QQ_1722843581583.png" alt="QQ_1722843581583"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722843667085.png" alt="QQ_1722843667085"></p><p><strong>添加动作</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1722843783104.png" alt="QQ_1722843783104"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722843908351.png" alt="QQ_1722843908351"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722844043228.png" alt="QQ_1722844043228"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722844217316.png" alt="QQ_1722844217316"></p><p><strong>添加收件人</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1722844455876.png" alt="QQ_1722844455876"></p><h3 id="使用shell脚本调用接口">使用shell脚本调用接口</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.编写shell脚本在指定目录下</span></span><br><span class="line">[root@zabbix5-server alertscripts]# vim /usr/lib/zabbix/alertscripts/wechat.sh</span><br><span class="line">[root@zabbix5-server alertscripts]# <span class="built_in">cat</span> wechat.sh</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">web_hook=<span class="string">&quot;https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=96462ac7-122d-4f51-946e-694a4c11d2ed&quot;</span></span><br><span class="line">headers=<span class="string">&quot;Content-Type: application/json&quot;</span></span><br><span class="line">json_file=<span class="string">&quot;/usr/lib/zabbix/alertscripts/msg.json&quot;</span></span><br><span class="line">/bin/cat &gt; <span class="variable">$&#123;json_file&#125;</span> &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">&quot;msgtype&quot;: &quot;text&quot;,</span></span><br><span class="line"><span class="string">&quot;text&quot;: &#123;</span></span><br><span class="line"><span class="string">&quot;content&quot;: &quot;$1&quot;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">/usr/bin/curl <span class="string">&quot;<span class="variable">$&#123;web_hook&#125;</span>&quot;</span> \</span><br><span class="line">-H <span class="string">&quot;<span class="variable">$&#123;headers&#125;</span>&quot;</span> \</span><br><span class="line">-d <span class="string">&quot;<span class="subst">$(cat $&#123;json_file&#125;)</span>&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#2.创建一个json文件</span></span><br><span class="line">[root@zabbix5 ~]#vim /usr/lib/zabbix/alertscripts/msg.json</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;msgtype&quot;</span>: <span class="string">&quot;text&quot;</span>,</span><br><span class="line"><span class="string">&quot;text&quot;</span>: &#123;</span><br><span class="line"><span class="string">&quot;content&quot;</span>: <span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.授权执行权限</span></span><br><span class="line"><span class="built_in">chmod</span> +x /usr/lib/zabbix/alertscripts/wechat.sh</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.更改属主属组（zabbix启动用户是zabbix，不改则没有权限调用）</span></span><br><span class="line"><span class="built_in">chown</span> zabbix.zabbix /usr/lib/zabbix/alertscripts/wechat.sh</span><br><span class="line"><span class="built_in">chown</span> zabbix.zabbix /usr/lib/zabbix/alertscripts/msg.json</span><br></pre></td></tr></table></figure><p><strong>web界面添加报警类型</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">管理&gt;报警媒介类型&gt;创建媒介类型</span><br><span class="line"></span><br><span class="line">脚本参数：&#123;ALERT.MESSAGE&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/QQ_1722845658579.png" alt="QQ_1722845658579"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722845826346.png" alt="QQ_1722845826346"></p><p><strong>添加动作</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">配置&gt;动作&gt;创建动作</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/QQ_1722845872056.png" alt="QQ_1722845872056"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722846012723.png" alt="QQ_1722846012723"></p><p><strong>添加保存</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1722846086534.png" alt="QQ_1722846086534"></p><p><strong>添加接收人</strong></p><p><code>添加完记得点更新</code></p><p><img src="https://cos.lukme.top/Pic/QQ_1722846168458.png" alt="QQ_1722846168458"></p>]]></content>
      
      
      <categories>
          
          <category> 监控 </category>
          
          <category> zabbix </category>
          
      </categories>
      
      
        <tags>
            
            <tag> zabbix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>filebeat模块化分析日志</title>
      <link href="/posts/907ae385.html"/>
      <url>/posts/907ae385.html</url>
      
        <content type="html"><![CDATA[<h2 id="filebeat采集docker日志">filebeat采集docker日志</h2><p><strong>1.运行一个nginx的docker容器</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:2 ~]# docker run --name nginx -d -p 88:80 nginx:alpine</span><br><span class="line"></span><br><span class="line"><span class="comment">#注：docker的安装不再赘述</span></span><br></pre></td></tr></table></figure><p><strong>2.访问测试</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:2 ~]# curl 10.0.0.211:88</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看是否返回nginx界面，注意端口是否有冲突</span></span><br></pre></td></tr></table></figure><p><strong>3.编写filebeat实例</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:0 ~]# <span class="built_in">cat</span> /etc/filebeat/08-docker-log.yaml </span><br><span class="line">filebeat.inputs:</span><br><span class="line">- <span class="built_in">type</span>: docker</span><br><span class="line">  tags: <span class="string">&#x27;docker&#x27;</span></span><br><span class="line">  <span class="comment">#下面写容器的id号，写*代表收集所有容器日志</span></span><br><span class="line">  containers.ids:   </span><br><span class="line">  - <span class="string">&quot;*&quot;</span></span><br><span class="line">output.elasticsearch:</span><br><span class="line">  hosts: [<span class="string">&quot;http://10.0.0.211:9200&quot;</span>,<span class="string">&quot;http://10.0.0.212:9200&quot;</span>,<span class="string">&quot;http://10.0.0.213:9200&quot;</span>]</span><br><span class="line">  indices:</span><br><span class="line">    - index: <span class="string">&quot;filebeat-docker-%&#123;+yyyy.MM.dd&#125;&quot;</span></span><br><span class="line">      when.contains:</span><br><span class="line">        tags: <span class="string">&quot;docker&quot;</span></span><br><span class="line"></span><br><span class="line">setup.ilm.enabled: <span class="literal">false</span></span><br><span class="line">setup.template.name: <span class="string">&quot;filebeat&quot;</span></span><br><span class="line">setup.template.pattern: <span class="string">&quot;filebeat*&quot;</span></span><br><span class="line">setup.template.overwrite: <span class="literal">false</span></span><br><span class="line">setup.template.settings:</span><br><span class="line">  index.number_of_shards: 5</span><br><span class="line">  index.number_of_replicas: 0</span><br><span class="line">  </span><br><span class="line"><span class="comment">#启动filebeat实例</span></span><br><span class="line">[root@elk01:2 ~]# filebeat -e -c /etc/filebeat/08-docker-log.yaml</span><br></pre></td></tr></table></figure><p><strong>3.访问nginx使之产生日志</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:2 ~]# curl 10.0.0.211:88</span><br><span class="line"><span class="comment">#docker已经映射本地88端口</span></span><br></pre></td></tr></table></figure><h2 id="filebeat模块">filebeat模块</h2><p>模块是filebeat内置的一些中间件日志监控方案，比如常见的nginx，tomcat，mysql，zookeeper等日志监控。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">filebeat内置模块在 /etc/filebeat/modules.d/下。</span><br><span class="line">被禁用的模块后缀带.disabled</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看模块列表</span></span><br><span class="line">[root@elk01:2 ~]#  filebeat modules list</span><br></pre></td></tr></table></figure><p><strong>启禁用模块</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:2 ~]# filebeat modules <span class="built_in">enable</span> nginx tomcat</span><br><span class="line"></span><br><span class="line">[root@elk01:2 ~]# filebeat modules <span class="built_in">disable</span> tomcat</span><br></pre></td></tr></table></figure><h2 id="模块分析nginx访问日志">模块分析nginx访问日志</h2><h3 id="前提准备">前提准备</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1.防止索引冲突，删除所有索引和索引模式</span><br><span class="line">2.还原nginx日志格式（如果之前你做过nginx输出格式为json格式的话就将nginx配置文件还原为原格式）</span><br><span class="line">3.检查nginx是否启用，配置文件是否OK（nginx -t），启用nginx模块（filebeat modules <span class="built_in">enable</span> nginx）</span><br><span class="line">4.如果你的nginx日志文件不在默认的目录则修改实例nginx文件，如果默认目录则跳过</span><br><span class="line">[root@elk01:2 ~]#  vim /etc/filebeat/modules.d/nginx.yml </span><br><span class="line">···#修改你的日志文件目录</span><br><span class="line">var.paths: [<span class="string">&quot;/yourpath/nginx/access.log*&quot;</span>]</span><br><span class="line">···</span><br></pre></td></tr></table></figure><h3 id="编写filebeat的配置文件">编写filebeat的配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:0 ~]# <span class="built_in">cat</span> /etc/filebeat/10-nginx-modules.yaml </span><br><span class="line"><span class="comment"># 配置filebeat的启用模块</span></span><br><span class="line">filebeat.config.modules:</span><br><span class="line">  <span class="comment"># 默认会去找filebeat安装目录下的&quot;modules.d&quot;所有以&quot;.yml&quot;结尾的文件</span></span><br><span class="line">  path: <span class="variable">$&#123;path.config&#125;</span>/modules.d/*.yml</span><br><span class="line">  <span class="comment"># 是否支持热加载</span></span><br><span class="line">  reload.enabled: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">output.elasticsearch:</span><br><span class="line">  hosts: [<span class="string">&quot;http://10.0.0.211:9200&quot;</span>,<span class="string">&quot;http://10.0.0.212:9200&quot;</span>,<span class="string">&quot;http://10.0.0.213:9200&quot;</span>] </span><br><span class="line">  index: <span class="string">&quot;filebeat-nginx-%&#123;+yyyy.MM.dd&#125;&quot;</span></span><br><span class="line"></span><br><span class="line">setup.ilm.enabled: <span class="literal">false</span></span><br><span class="line">setup.template.name: <span class="string">&quot;filebeat-nginx&quot;</span></span><br><span class="line">setup.template.pattern: <span class="string">&quot;filebeat-nginx*&quot;</span></span><br><span class="line">setup.template.overwrite: <span class="literal">false</span></span><br><span class="line">setup.template.settings:</span><br><span class="line">  index.number_of_shards: 5</span><br><span class="line">  index.number_of_replicas: 0</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动filebeat实例</span></span><br><span class="line">[root@elk01:1 ~]# filebeat -e -c /etc/filebeat/10-nginx-modules.yaml</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241004102923489.png" alt="image-20241004102923489"></p><blockquote><p>日后便可以在  菜单栏–&gt;Discover里查询分析nginx日志  如下图</p></blockquote><p><img src="https://cos.lukme.top/Pic/image-20241004103225591.png" alt="image-20241004103225591"></p><h3 id="统计网站日PV量">统计网站日PV量</h3><blockquote><p>可以理解为  一个页面就是一条PV，filebeat是按行统计，nginx的每个访问记录都为一行，以计数方式统计为日PV</p><p>点击保存即可保存可视化库</p></blockquote><p><img src="https://cos.lukme.top/Pic/image-20241004103908465.png" alt="image-20241004103908465"></p><h3 id="统计网站日UV">统计网站日UV</h3><blockquote><p>这个统计不太准确，获取的ip是日志里每行第一个的ip，这个ip其实是负载均衡的ip，如果想要获取每个用户真实ip，nginx配置文件需要设置获取用户真实ip才算是日UV量，保存uv库</p></blockquote><p><img src="https://cos.lukme.top/Pic/image-20241004111335927.png" alt="image-20241004111335927"></p><h3 id="统计带宽">统计带宽</h3><p><img src="https://cos.lukme.top/Pic/image-20241004112012078.png" alt="image-20241004112012078"></p><p><img src="https://cos.lukme.top/Pic/image-20241004112552478.png" alt="image-20241004112552478"></p><h3 id="统计设备类型">统计设备类型</h3><p><img src="https://cos.lukme.top/Pic/image-20241004112842696.png" alt="image-20241004112842696"></p><h3 id="统计设备操作系统">统计设备操作系统</h3><p><img src="https://cos.lukme.top/Pic/image-20241004120352348.png" alt="image-20241004120352348"></p><h3 id="全球流量统计">全球流量统计</h3><p><img src="https://cos.lukme.top/Pic/image-20241004115735265.png" alt="image-20241004115735265"></p><p><img src="https://cos.lukme.top/Pic/global-traffic.gif" alt="recording"></p><h3 id="创建仪表板">创建仪表板</h3><blockquote><p>菜单栏–&gt;Dashboard   新建仪表板，数据从前面保存的库中添加</p><p>刷新可显示在线实时数据</p></blockquote><p><img src="https://cos.lukme.top/Pic/image-20241004121524063.png" alt="image-20241004121524063"></p><h2 id="filebeat的多行处理">filebeat的多行处理</h2><blockquote><p>filestream文件流也是采集文件的，log的替代</p></blockquote><p><a href="https://www.elastic.co/guide/en/beats/filebeat/7.17/multiline-examples.html">官网</a></p><p><strong>multiline的count类型</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:0 ~]# <span class="built_in">cat</span> /etc/filebeat/11-filestream_multiline.yaml </span><br><span class="line">filebeat.inputs:</span><br><span class="line">- <span class="built_in">type</span>: filestream</span><br><span class="line">  paths:</span><br><span class="line">    - /tmp/student.info</span><br><span class="line">  parsers:</span><br><span class="line">  - multiline:</span><br><span class="line">      <span class="built_in">type</span>: count</span><br><span class="line">      count_lines: 4</span><br><span class="line">output.console:</span><br><span class="line">  pretty: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#注释</span></span><br><span class="line">      <span class="comment"># type指定类型，有效值为: pattern和count</span></span><br><span class="line">      <span class="comment">#  pattern:      基于正则匹配事件。</span></span><br><span class="line">      <span class="comment">#  count:         将几行数据作为一个事件</span></span><br><span class="line">      <span class="comment">#count_lines:  将指定的行数合并为一个事件</span></span><br><span class="line">      </span><br><span class="line"><span class="comment">#提示 ：count类型这种，需要被收集的信息格式是有规律的</span></span><br><span class="line">例如：   count: 2  （数据都是4行4行的或N行N行的）</span><br><span class="line">[root@elk01:0 ~]# <span class="built_in">cat</span> /tmp/student.info </span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;name&quot;</span>: <span class="string">&quot;张三&quot;</span>,</span><br><span class="line">  <span class="string">&quot;hobby&quot;</span>: [<span class="string">&quot;学习&quot;</span>,<span class="string">&quot;跑步&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;name&quot;</span>: <span class="string">&quot;李四&quot;</span>,</span><br><span class="line">  <span class="string">&quot;hobby&quot;</span>: [<span class="string">&quot;学习&quot;</span>,<span class="string">&quot;看书&quot;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"> [root@elk01:0 ~]# filebeat -e -c /etc/filebeat/11-filestream_multiline-.yaml</span><br><span class="line"> &#125;,</span><br><span class="line">  <span class="string">&quot;log&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;offset&quot;</span>: 384,</span><br><span class="line">    <span class="string">&quot;file&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;path&quot;</span>: <span class="string">&quot;/tmp/student.info&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;flags&quot;</span>: [</span><br><span class="line">      <span class="string">&quot;multiline&quot;</span></span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;message&quot;</span>: <span class="string">&quot;&#123;\n  \&quot;name\&quot;: \&quot;张三\&quot;,\n  \&quot;hobby\&quot;: [\&quot;学习\&quot;,\&quot;跑步\&quot;]\n&#125;&quot;</span>,</span><br><span class="line">  <span class="string">&quot;input&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;filestream&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#将多行数据采集为一行，但必须是有规律的，采集的是上面文件每4行为一组数据</span></span><br></pre></td></tr></table></figure><p><strong>multiline的pattern类型</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:0 ~]# <span class="built_in">cat</span> /etc/filebeat/12-filestream_multiline_pattern.yaml </span><br><span class="line">filebeat.inputs:</span><br><span class="line">- <span class="built_in">type</span>: filestream</span><br><span class="line">  paths:</span><br><span class="line">    - /tmp/student.info</span><br><span class="line">  parsers:</span><br><span class="line">  - multiline:</span><br><span class="line">      <span class="built_in">type</span>: pattern</span><br><span class="line">      pattern: <span class="string">&#x27;^\&#123;&#x27;</span></span><br><span class="line">      negate: <span class="literal">true</span></span><br><span class="line">      match: after</span><br><span class="line">output.console:</span><br><span class="line">  pretty: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#注释</span></span><br><span class="line">pattern： <span class="string">&#x27;^\&#123;&#x27;</span> 匹配以&#123;开头的</span><br><span class="line">negate: 匹配规则</span><br><span class="line">match: 匹配规则   见下图</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241004212526358.png" alt="image-20241004212526358"></p><h2 id="filebeat采集tomcat日志">filebeat采集tomcat日志</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">1.部署tomcat</span><br><span class="line">[root@elk01:0 app]# wget https://dlcdn.apache.org/tomcat/tomcat-10/v10.1.30/bin/apache-tomcat-10.1.30.tar.gz</span><br><span class="line"></span><br><span class="line">2.解压安装tomcat(提前创建安装目录)</span><br><span class="line">[root@elk01:0 app]# tar xf apache-tomcat-10.1.30.tar.gz -C /app</span><br><span class="line">[root@elk01:0 app]# <span class="built_in">ln</span> -s /app/apache-tomcat-10.1.30/ /app/tomcat</span><br><span class="line"></span><br><span class="line">3.配置tomato的jdk环境，使用elasticsearch的jdk即可，查看java版本</span><br><span class="line">[root@elk01:0 app]#  /usr/share/elasticsearch/jdk/bin/java --version</span><br><span class="line">openjdk 22.0.1 2024-04-16</span><br><span class="line">OpenJDK Runtime Environment (build 22.0.1+8-16)</span><br><span class="line">OpenJDK 64-Bit Server VM (build 22.0.1+8-16, mixed mode, sharing)</span><br><span class="line"></span><br><span class="line"><span class="comment">#配置环境变量</span></span><br><span class="line">[root@elk01:0 app]# <span class="built_in">cat</span> /etc/profile.d/jdk.sh</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/share/elasticsearch/jdk</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin</span><br><span class="line"></span><br><span class="line"><span class="comment">#重新加载环境变量</span></span><br><span class="line">[root@elk01:0 app]# <span class="built_in">source</span> /etc/profile.d/jdk.sh </span><br><span class="line">[root@elk01:0 app]# java --version</span><br><span class="line">openjdk 22.0.1 2024-04-16</span><br><span class="line">OpenJDK Runtime Environment (build 22.0.1+8-16)</span><br><span class="line">OpenJDK 64-Bit Server VM (build 22.0.1+8-16, mixed mode, sharing)</span><br><span class="line"></span><br><span class="line">4.启动tomcat</span><br><span class="line">[root@elk01:0 app]# /app/tomcat/bin/startup.sh </span><br></pre></td></tr></table></figure><p><strong>编写filebeat实例</strong>   使用tomcat采集日志</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">1.启用tomcat模块</span><br><span class="line">[root@elk01:0 app]# filebeat modules <span class="built_in">enable</span> tomcat</span><br><span class="line"></span><br><span class="line">2.修改tomcat模块里日志路径</span><br><span class="line">[root@elk01:0 app]# vim /etc/filebeat/modules.d/tomcat.yml </span><br><span class="line">···</span><br><span class="line">    <span class="comment">## 默认是udp类型，有效值: udp,tcp,file</span></span><br><span class="line">    <span class="comment"># 当类型为file时，下面定义的路径才会生效</span></span><br><span class="line">    var.input: file</span><br><span class="line">    var.paths:</span><br><span class="line">      - /app/tomcat/logs/localhost_access_log.* </span><br><span class="line">···</span><br><span class="line"></span><br><span class="line">3.编写filebeat实例</span><br><span class="line">[root@elk01:0 app]# <span class="built_in">cat</span> /etc/filebeat/13.modules_tomcat.yaml </span><br><span class="line">filebeat.config.modules:</span><br><span class="line">  path: <span class="variable">$&#123;path.config&#125;</span>/modules.d/*.yml</span><br><span class="line">  reload.enabled: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">output:</span><br><span class="line">  elasticsearch:</span><br><span class="line">    hosts: </span><br><span class="line">    - <span class="string">&quot;http://10.0.0.211:9200&quot;</span></span><br><span class="line">    - <span class="string">&quot;http://10.0.0.212:9200&quot;</span></span><br><span class="line">    - <span class="string">&quot;http://10.0.0.213:9200&quot;</span></span><br><span class="line">    index: <span class="string">&quot;modules-tomcat-%&#123;+yyyy.MM.dd&#125;&quot;</span></span><br><span class="line"></span><br><span class="line">setup.ilm.enabled: <span class="literal">false</span></span><br><span class="line">setup.template.name: <span class="string">&quot;modules-tomcat&quot;</span></span><br><span class="line">setup.template.pattern: <span class="string">&quot;modules-tomcat*&quot;</span></span><br><span class="line">setup.template.overwrite: <span class="literal">false</span></span><br><span class="line">setup.template.settings:</span><br><span class="line">  index.number_of_shards: 3</span><br><span class="line">  index.number_of_replicas: 0</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动实例</span></span><br><span class="line">[root@elk01:0 ~]# filebeat -e -c /etc/filebeat/13.modules_tomcat.yaml </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ELK日志收集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ELK </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>filebeat多实例</title>
      <link href="/posts/29cf1fa5.html"/>
      <url>/posts/29cf1fa5.html</url>
      
        <content type="html"><![CDATA[<h2 id="指定ES的分片和副本数量">指定ES的分片和副本数量</h2><p><strong>ES索引名称的创建规范</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.名称最好见名知意，最好和你实际写入的业务有关;</span><br><span class="line">2.名称不要以<span class="string">&quot;.&quot;</span>开头，以<span class="string">&quot;.&quot;</span>开头多索引我们称之为<span class="string">&quot;隐藏索引&quot;</span>;</span><br><span class="line">3.一般隐藏索引都是组件去创建，建议不要人为创建，默认kibana就隐藏了以<span class="string">&quot;.&quot;</span>开头的索引</span><br><span class="line">4.字符支持小写字母，数字及连字符(-)，和内置一些变量比如<span class="string">&quot;%&#123;...&#125;&quot;</span>;</span><br><span class="line">5.不要出现特殊字符;</span><br></pre></td></tr></table></figure><p><strong>1.通过ES的API操作副本和分片</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">curl -X PUT <span class="string">&#x27;http://10.0.0.211:9200/school&#x27;</span> \</span><br><span class="line">-H <span class="string">&#x27;Content-Type: application/json&#x27;</span> \</span><br><span class="line">-d <span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">  &quot;settings&quot;: &#123;</span></span><br><span class="line"><span class="string">      &quot;number_of_shards&quot;: 5,</span></span><br><span class="line"><span class="string">      &quot;number_of_replicas&quot;: 0</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#创建索引school，主分片5，副本0</span></span><br></pre></td></tr></table></figure><p><strong>2.通过索引模板操作副本和分片</strong></p><blockquote><p>索引模板：创建索引时，会自动匹配是否有对应的索引模板，若匹配则根据索引模板创建。</p></blockquote><p>​    <strong>2.1创建索引模板</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">curl -X PUT <span class="string">&#x27;http://10.0.0.211:9200/_index_template/linux-school&#x27;</span> \</span><br><span class="line">-H <span class="string">&#x27;Content-Type: application/json&#x27;</span> \</span><br><span class="line">-d <span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">  &quot;template&quot;: &#123;</span></span><br><span class="line"><span class="string">    &quot;settings&quot;: &#123;</span></span><br><span class="line"><span class="string">      &quot;number_of_replicas&quot;: 0,</span></span><br><span class="line"><span class="string">      &quot;number_of_shards&quot;: 5</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;,</span></span><br><span class="line"><span class="string">  &quot;index_patterns&quot;: [</span></span><br><span class="line"><span class="string">    &quot;linux-school*&quot;</span></span><br><span class="line"><span class="string">  ]</span></span><br><span class="line"><span class="string">&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#注释：index_patterns，这里是用于匹配索引的，凡是索引是linux-school的都会关联此模板</span></span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241002233116968.png" alt="image-20241002233116968"></p><p><strong>验证模板</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:2 ~]# curl -X PUT <span class="string">&#x27;http://10.0.0.211:9200/linux-school-01&#x27;</span></span><br><span class="line">&#123;<span class="string">&quot;acknowledged&quot;</span>:<span class="literal">true</span>,<span class="string">&quot;shards_acknowledged&quot;</span>:<span class="literal">true</span>,<span class="string">&quot;index&quot;</span>:<span class="string">&quot;linux-school-01&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#重新加载索引管理，发现创建的索引关联了模板，创建了5个分片</span></span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241002233631403.png" alt="image-20241002233631403"></p><p>2.2图形化创建索引模板</p><p><img src="https://cos.lukme.top/Pic/index.gif" alt="recording"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">验证索引模板：</span><br><span class="line">[root@elk01:2 ~]# curl -X PUT <span class="string">&#x27;http://10.0.0.211:9200/student01&#x27;</span></span><br><span class="line">&#123;<span class="string">&quot;acknowledged&quot;</span>:<span class="literal">true</span>,<span class="string">&quot;shards_acknowledged&quot;</span>:<span class="literal">true</span>,<span class="string">&quot;index&quot;</span>:<span class="string">&quot;student01&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">索引管理里查看新创建的student-01索引是否是  3分片，0副本 自然是OK的</span><br></pre></td></tr></table></figure><p><strong>3.通过filebeat组件操作副本和分片</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:2 ~]# <span class="built_in">cat</span> /etc/filebeat/06-nginx-es.yaml </span><br><span class="line">filebeat.inputs:</span><br><span class="line">- <span class="built_in">type</span>: <span class="built_in">log</span></span><br><span class="line">  json:</span><br><span class="line">    keys_under_root: <span class="literal">true</span></span><br><span class="line">    add_error_key: <span class="literal">true</span></span><br><span class="line">    overwirte_keys: <span class="literal">true</span></span><br><span class="line">  paths:</span><br><span class="line">    - /var/log/nginx/access.log* </span><br><span class="line"></span><br><span class="line">output.elasticsearch:</span><br><span class="line">  hosts: [<span class="string">&quot;http://10.0.0.211:9200&quot;</span>,<span class="string">&quot;http://10.0.0.212:9200&quot;</span>,<span class="string">&quot;http://10.0.0.213:9200&quot;</span>] </span><br><span class="line">  <span class="comment"># 自定义索引名称  ,前提是关闭索引的生命周期  </span></span><br><span class="line">  index: <span class="string">&quot;test-filebeat-%&#123;+yyyy.MM.dd&#125;&quot;</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">#关闭索引生命周期</span></span><br><span class="line">setup.ilm.enabled: <span class="literal">false</span></span><br><span class="line"><span class="comment">#定义索引模板的名称</span></span><br><span class="line">setup.template.name: <span class="string">&quot;test-filebeat&quot;</span></span><br><span class="line"><span class="comment">#定义模板的匹配模式</span></span><br><span class="line">setup.template.pattern: <span class="string">&quot;test-filebeat*&quot;</span></span><br><span class="line"><span class="comment">#若索引模式模板存在，是否覆盖  </span></span><br><span class="line">setup.template.overwrite: <span class="literal">false</span></span><br><span class="line"><span class="comment">#定义索引模板设置</span></span><br><span class="line">setup.template.settings:</span><br><span class="line">  index.number_of_shards: 5</span><br><span class="line">  index.number_of_replicas: 0</span><br><span class="line">  </span><br><span class="line"><span class="comment">#如下索引管理里便创建了一个名为test-filebeat的索引和test-filebeat的模板</span></span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241003002143618.png" alt="image-20241003002143618"></p><blockquote><p>提示：基于filebeat配置的ES集群的索引及分片，副本信息，本质上创建时会自动转换为ES的http请求进行创建索引。</p></blockquote><h2 id="多个intput写到不同索引">多个intput写到不同索引</h2><blockquote><p>需求：多个inputs写入到ES集群里的不同索引里</p></blockquote><p><strong>1.编写配置文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:1 ~]# <span class="built_in">cat</span> /etc/filebeat/07-nginx-es.yaml </span><br><span class="line">filebeat.inputs:</span><br><span class="line">- <span class="built_in">type</span>: <span class="built_in">log</span></span><br><span class="line">  <span class="comment">#给事件打标签为file</span></span><br><span class="line">  tags: <span class="string">&quot;file&quot;</span></span><br><span class="line">  paths:</span><br><span class="line">  - /tmp/test.log </span><br><span class="line">  </span><br><span class="line">- <span class="built_in">type</span>: tcp</span><br><span class="line">  tags: <span class="string">&quot;tcp&quot;</span></span><br><span class="line">  host: <span class="string">&quot;0.0.0.0:9000&quot;</span></span><br><span class="line">  </span><br><span class="line">- <span class="built_in">type</span>: <span class="built_in">log</span></span><br><span class="line">  tags: <span class="string">&quot;nginx&quot;</span></span><br><span class="line">  json:</span><br><span class="line">    keys_under_root: <span class="literal">true</span></span><br><span class="line">    add_error_key: <span class="literal">true</span></span><br><span class="line">    overwirte_keys: <span class="literal">true</span></span><br><span class="line">  paths:</span><br><span class="line">    - /var/log/nginx/access.log* </span><br><span class="line"></span><br><span class="line">output.elasticsearch:</span><br><span class="line">  hosts: [<span class="string">&quot;http://10.0.0.211:9200&quot;</span>,<span class="string">&quot;http://10.0.0.212:9200&quot;</span>,<span class="string">&quot;http://10.0.0.213:9200&quot;</span>]</span><br><span class="line">  <span class="comment">#index: &quot;student-%&#123;+yyyy.MM.dd&#125;&quot;</span></span><br><span class="line">  <span class="comment">#多个索引模式</span></span><br><span class="line">  indices:</span><br><span class="line">    - index: <span class="string">&quot;study-file-%&#123;+yyyy.MM.dd&#125;&quot;</span></span><br><span class="line">      when.contains:</span><br><span class="line">        tags: <span class="string">&quot;file&quot;</span></span><br><span class="line">    - index: <span class="string">&quot;study-tcp-%&#123;+yyyy.MM.dd&#125;&quot;</span></span><br><span class="line">      when.contains:</span><br><span class="line">        tags: <span class="string">&quot;tcp&quot;</span></span><br><span class="line">    - index: <span class="string">&quot;study-nginx-%&#123;+yyyy.MM.dd&#125;&quot;</span></span><br><span class="line">      when.contains:</span><br><span class="line">        tags: <span class="string">&quot;nginx&quot;</span></span><br><span class="line"></span><br><span class="line">setup.ilm.enabled: <span class="literal">false</span></span><br><span class="line">setup.template.name: <span class="string">&quot;study&quot;</span></span><br><span class="line">setup.template.pattern: <span class="string">&quot;study*&quot;</span></span><br><span class="line">setup.template.overwrite: <span class="literal">false</span></span><br><span class="line">setup.template.settings:</span><br><span class="line">  index.number_of_shards: 8</span><br><span class="line">  index.number_of_replicas: 0</span><br><span class="line"></span><br><span class="line"><span class="comment">#给每个事件打上专属标签，索引里根据标签判断写入哪里</span></span><br></pre></td></tr></table></figure><p><strong>2.启动filebeat实例</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:0 ~]# filebeat -e -c /etc/filebeat/07-nginx-es.yaml </span><br></pre></td></tr></table></figure><p><strong>3.测试tcp数据</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:0 ~]# <span class="built_in">echo</span> <span class="string">&quot;999&quot;</span> | nc 10.0.0.211 9000</span><br><span class="line">[root@elk01:0 ~]# <span class="built_in">echo</span> <span class="string">&quot;666&quot;</span> | nc 10.0.0.211 9000</span><br><span class="line">[root@elk01:0 ~]# <span class="built_in">echo</span> <span class="string">&quot;000&quot;</span> | nc 10.0.0.211 9000</span><br></pre></td></tr></table></figure><p><strong>4.测试nginx</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:0 ~]# <span class="keyword">while</span> <span class="literal">true</span>; <span class="keyword">do</span> curl 10.0.0.211;<span class="built_in">sleep</span> 0.5;<span class="keyword">done</span></span><br></pre></td></tr></table></figure><p><strong>5.测试本地文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:0 ~]# <span class="built_in">echo</span> ‘hello world<span class="string">&#x27; &gt;/tmp/test.log</span></span><br></pre></td></tr></table></figure><p><strong>6.kibana基于Discover分析数据</strong></p><p>​    6.1查看索引是否都创建完成</p><p><img src="https://cos.lukme.top/Pic/image-20241003114353521.png" alt="image-20241003114353521"></p><p>6.2创建索引模式为     study*</p><p>6.3 进入Discover，选择相应字段，查看分析数据</p><p><img src="https://cos.lukme.top/Pic/image-20241003114810243.png" alt="image-20241003114810243"></p><h2 id="控制多个input源的是否启用">控制多个input源的是否启用</h2><blockquote><p>使用enabled，控制inputs多个源是否启用，true / false</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">filebeat.inputs:</span><br><span class="line">- <span class="built_in">type</span>: <span class="built_in">log</span></span><br><span class="line">  <span class="comment"># 配置该代码块是否执行，默认值为true，若不想要加载，则设置为false即可</span></span><br><span class="line">  enabled: <span class="literal">false</span></span><br><span class="line">  tags: <span class="string">&quot;nginx&quot;</span></span><br><span class="line">  json:</span><br><span class="line">    keys_under_root: <span class="literal">true</span></span><br><span class="line">    add_error_key: <span class="literal">true</span></span><br><span class="line">    overwirte_keys: <span class="literal">true</span></span><br><span class="line">  paths:</span><br><span class="line">    - /var/log/nginx/access.log*</span><br></pre></td></tr></table></figure><h2 id="filebeat-多实例">filebeat 多实例</h2><p><strong>1.启动第一个实例</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:0 ~]# <span class="built_in">cat</span> /etc/filebeat/02-tcp-console.yaml </span><br><span class="line">filebeat.inputs:</span><br><span class="line">- <span class="built_in">type</span>: tcp</span><br><span class="line">  host: <span class="string">&quot;0.0.0.0:9000&quot;</span></span><br><span class="line"></span><br><span class="line">output.console:</span><br><span class="line">  pretty: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">[root@elk01:1 ~]# filebeat -e -c /etc/filebeat/02-tcp-console.yaml </span><br></pre></td></tr></table></figure><p><strong>2.启动第二个实例</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:2 ~]# <span class="built_in">cat</span> /etc/filebeat/04-nginx-console.yaml </span><br><span class="line">filebeat.inputs:</span><br><span class="line">- <span class="built_in">type</span>: <span class="built_in">log</span></span><br><span class="line">  json:</span><br><span class="line">    keys_under_root: <span class="literal">true</span></span><br><span class="line">    add_error_key: <span class="literal">true</span></span><br><span class="line">    overwirte_keys: <span class="literal">true</span></span><br><span class="line">  paths:</span><br><span class="line">    - /var/log/nginx/access.log* </span><br><span class="line"></span><br><span class="line">output.console:</span><br><span class="line">  pretty: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">[root@elk01:1 ~]# filebeat -e -c /etc/filebeat/04-nginx-console.yaml</span><br><span class="line">2024-10-03T12:15:44.735+0800    INFO    instance/beat.go:698    Home path: [/usr/share/filebeat] Config path: [/etc/filebeat] Data path: [/var/lib/filebeat] Logs path: [/var/log/filebeat] Hostfs Path: [/]</span><br><span class="line">2024-10-03T12:15:44.737+0800    ERROR   instance/beat.go:1027   Exiting: <span class="string">&#x27;data path already locked by another beat&#x27;</span>. Please make sure that multiple beats are not sharing the same data path (path.data).</span><br><span class="line">Exiting: data path already locked by another beat. Please make sure that multiple beats are not sharing the same data path (path.data).</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动第二个的实例时候提示，数据目录已经被其他的实例锁定了，查看/var/lib/filebeat/目录里存在一个锁文件</span></span><br><span class="line"><span class="comment">#不能共用数据目录，当退出这个实例，这个锁文件也会消失</span></span><br><span class="line">[root@elk01:1 ~]# ll /var/lib/filebeat/</span><br><span class="line">-rw------- 1 root root    0 Oct  3 12:15 filebeat.lock</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动第二个实例，需要指定数据目录</span></span><br><span class="line">[root@elk01:2 ~]# filebeat -e -c /etc/filebeat/04-nginx-console.yaml --path.data /tmp/nginx-filebeat</span><br></pre></td></tr></table></figure><p><strong>总结</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">总结:</span><br><span class="line">- 1.同一个节点可以启动多个filebeat实例，但需要指定不同的数据目录;</span><br><span class="line">- 2.如果filebeat采集多个数据源有两种常见的解决方案，要么配置多个input，要么使用多实例;</span><br><span class="line"></span><br><span class="line">如果所有配置都放在同一个filebeat优缺点:</span><br><span class="line">优点:</span><br><span class="line">部署方便，启动一个实例即可。</span><br><span class="line">缺点:</span><br><span class="line">-1.当多个input中有任意一个需要修改时，在重启期间，其他的input都会受到影响。</span><br><span class="line">-2.当配置多事，多个input配置比较繁琐;</span><br><span class="line"></span><br><span class="line">如果所有配置都使用不同filebeat，多实例优缺点:</span><br><span class="line">优点:</span><br><span class="line">- 1.实现了配置文件和程序的解耦，说白了，就是一个实例挂掉，不会影响到其他实例;</span><br><span class="line">- 2.配置简单</span><br><span class="line">缺点:</span><br><span class="line">- 1.部署不方便，要同时部署多个filebeat，且数据目录需要单独指定维护;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ELK日志收集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ELK </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EFK架构部署</title>
      <link href="/posts/fab536ab.html"/>
      <url>/posts/fab536ab.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>说明：全篇elastic是基于Ubuntu系统安装的，与Centos差别不是太大，下载软件连接可去官网下载</p></blockquote><h2 id="ElasitcStack概述">ElasitcStack概述</h2><h3 id="1-什么是ElasticStack？">1.什么是ElasticStack？</h3><p>所谓的ElasticStack别名为elk stack。</p><p>ELK指的是三个技术栈:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">- ElasticSearch，简称： es</span><br><span class="line">数据库，应用场景为数据的快速检索。但凡和搜索框相关的，都会用ES进行数据的查询。</span><br><span class="line"></span><br><span class="line">- Logstash:</span><br><span class="line">采集数据，日志聚合，处理数据，将数据写入到ES存储库。</span><br><span class="line"></span><br><span class="line">- Kibana:</span><br><span class="line">用于出图展示数据。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">由于Logstash比较重量级，采集日志时启动较慢，使用JRuby语言研发，启动时需要先启动虚拟机。因此官方开发了beats组件，beats组件是一系列beat的集合，比如filebeat就是一个常用的beat组件，多用于文本日志采集。</span><br></pre></td></tr></table></figure><h3 id="2-常用的架构">2.常用的架构</h3><p>EFK:<br>- ElasticSearch<br>- Filebeat:<br>采集数据写入ES集群。<br>- Kibana</p><p>ELFK:<br>- ElasticSearch<br>- Filebeat:<br>- Logstash<br>- Kibana</p><p>ELKF+KAFKA:<br>- zookeeper<br>- kafka</p><h2 id="ElasticSearch">ElasticSearch</h2><h3 id="1-什么是ElasticSearch">1.什么是ElasticSearch</h3><p>Elasticsearch 是一个分布式、RESTful 风格的搜索和数据分析引擎，能够解决不断涌现出的各种用例。作为 Elastic Stack 的核心，Elasticsearch 会集中存储您的数据，让您飞快完成搜索，微调相关性，进行强大的分析，并轻松缩放规模。ES的核心作用就是存储数据和快速进行模糊查询。</p><h3 id="2-安装部署ES">2.安装部署ES</h3><p><strong>单点部署ES</strong>   一般用于测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">`本机ip：10.0.0.211`</span><br><span class="line">1.下载ES</span><br><span class="line">[root@elk01 ~]# wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.17.23-amd64.deb</span><br><span class="line"></span><br><span class="line">2.安装ES</span><br><span class="line">[root@elk01 ~]# dpkg -i elasticsearch-7.17.23-amd64.deb</span><br><span class="line"></span><br><span class="line">3.修改配置文件</span><br><span class="line">[root@elk01 ~]# vim /etc/elasticsearch/elasticsearch.yml </span><br><span class="line">cluster.name: elk</span><br><span class="line">path.data: /var/lib/elasticsearch</span><br><span class="line">path.logs: /var/log/elasticsearch</span><br><span class="line">network.host: 0.0.0.0</span><br><span class="line">http.port: 9200</span><br><span class="line">transport.port: 9300</span><br><span class="line">discovery.type: single-node</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">`相关参数说明:`</span><br><span class="line">cluster.name: <span class="comment">#指定ES集群的名称</span></span><br><span class="line">path.data: <span class="comment">#指定数据目录</span></span><br><span class="line">path.logs: <span class="comment">#指定日志目录</span></span><br><span class="line">network.host: <span class="comment">#指定宿主机的监听IP。</span></span><br><span class="line">http.port: 9200<span class="comment">#对外提供http|https接口的端口。</span></span><br><span class="line">transport.port: 9300<span class="comment">#集群内部数据传输的端口，会优先启动该端口选举master后在启动9200端口。</span></span><br><span class="line">discovery.type: <span class="comment">#指定ES集群的类型，single-node表示的是单点。</span></span><br><span class="line"></span><br><span class="line">4.启动ES并设置开机自启</span><br><span class="line">[root@elk01 ~]# systemctl <span class="built_in">enable</span> --now elasticsearch</span><br><span class="line"></span><br><span class="line">5.检查监听的端口号</span><br><span class="line">[root@elk01 ~]# ss -lntup |egrep <span class="string">&#x27;9[23]00&#x27;</span></span><br><span class="line">tcp6       0      0 :::9200        :::*       LISTEN      6431/java</span><br><span class="line">tcp6       0      0 :::9300        :::*       LISTEN      6431/java</span><br><span class="line"></span><br><span class="line">6.测试访问</span><br><span class="line">[root@elk01:0 ~]# curl 10.0.0.211:9200</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;name&quot;</span> : <span class="string">&quot;elk01&quot;</span>,</span><br><span class="line">  <span class="string">&quot;cluster_name&quot;</span> : <span class="string">&quot;elk&quot;</span>,</span><br><span class="line">  <span class="string">&quot;cluster_uuid&quot;</span> : <span class="string">&quot;vV46E9vqRK-MxDs6I-3ceg&quot;</span>,</span><br><span class="line">  <span class="string">&quot;version&quot;</span> : &#123;</span><br><span class="line">    <span class="string">&quot;number&quot;</span> : <span class="string">&quot;7.17.23&quot;</span>,</span><br><span class="line">    <span class="string">&quot;build_flavor&quot;</span> : <span class="string">&quot;default&quot;</span>,</span><br><span class="line">    <span class="string">&quot;build_type&quot;</span> : <span class="string">&quot;deb&quot;</span>,</span><br><span class="line">    <span class="string">&quot;build_hash&quot;</span> : <span class="string">&quot;61d76462eecaf09ada684d1b5d319b5ff6865a83&quot;</span>,</span><br><span class="line">    <span class="string">&quot;build_date&quot;</span> : <span class="string">&quot;2024-07-25T14:37:42.448799567Z&quot;</span>,</span><br><span class="line">    <span class="string">&quot;build_snapshot&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">    <span class="string">&quot;lucene_version&quot;</span> : <span class="string">&quot;8.11.3&quot;</span>,</span><br><span class="line">    <span class="string">&quot;minimum_wire_compatibility_version&quot;</span> : <span class="string">&quot;6.8.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;minimum_index_compatibility_version&quot;</span> : <span class="string">&quot;6.0.0-beta1&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;tagline&quot;</span> : <span class="string">&quot;You Know, for Search&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看集群节点</span></span><br><span class="line">[root@elk01:0 ~]# curl 10.0.0.211:9200/_cat/nodes</span><br><span class="line">10.0.0.211 19 91 11 0.10 0.23 0.11 cdfhilmrstw * elk01</span><br><span class="line"></span><br><span class="line"><span class="comment">#显示表头信息    *代表master节点</span></span><br><span class="line">[root@elk01:0 ~]# curl 10.0.0.211:9200/_cat/nodes?v</span><br><span class="line">ip         heap.percent ram.percent cpu load_1m load_5m load_15m node.role   master name</span><br><span class="line">10.0.0.211           20          91   0    0.06    0.21     0.11 cdfhilmrstw *      elk01</span><br></pre></td></tr></table></figure><p><strong>如何卸载ES？</strong></p><pre><code>1.停止ES服务[root@elk91 ~]# systemctl disable --now elasticsearch.service 2.删除数据[root@elk91 ~]# \rm -rf  /var/&#123;lib,log&#125;/elasticsearch/ /tmp/*  /etc/elasticsearch3.删除软件[root@elk91 ~]# sudo yum remove elasticsearch[root@elk91 ~]# sudo rpm -e elasticsearch</code></pre><h3 id="3-部署ES集群">3.部署ES集群</h3><table><thead><tr><th>主机名</th><th>WanIP</th><th>LanIP</th></tr></thead><tbody><tr><td>elk01</td><td>10.0.0.211</td><td>172.16.1.211</td></tr><tr><td>elk02</td><td>10.0.0.222</td><td>172.16.1.222</td></tr><tr><td>elk03</td><td>10.0.0.233</td><td>172.16.1.233</td></tr></tbody></table><p><strong>1.所有节点安装ElasticSearch</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1.下载ES</span><br><span class="line">[root@elk01 ~]# wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.17.23-amd64.deb</span><br><span class="line">[root@elk01 ~]# <span class="keyword">for</span> i <span class="keyword">in</span> 212 213;<span class="keyword">do</span> scp elasticsearch-7.17.23-x86_64.rpm root@172.16.1.<span class="variable">$i</span>:/root ;<span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">2.安装ES</span><br><span class="line">[root@elk01 ~]#dpkg -i elasticsearch-7.17.23-amd64.deb</span><br></pre></td></tr></table></figure><p><strong>2.修改配置文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01 ~]# vim /etc/elasticsearch/elasticsearch.yml </span><br><span class="line">cluster.name: elk</span><br><span class="line">path.data: /var/lib/elasticsearch</span><br><span class="line">path.logs: /var/log/elasticsearch</span><br><span class="line">network.host: 0.0.0.0</span><br><span class="line">http.port: 9200</span><br><span class="line">transport.port: 9300</span><br><span class="line">discovery.seed_hosts: [<span class="string">&quot;10.0.0.211&quot;</span>, <span class="string">&quot;10.0.0.212&quot;</span>,<span class="string">&quot;10.0.0.213&quot;</span>]</span><br><span class="line">cluster.initial_master_nodes: [<span class="string">&quot;10.0.0.211&quot;</span>, <span class="string">&quot;10.0.0.212&quot;</span>,<span class="string">&quot;10.0.0.213&quot;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">`相关参数说明:`</span><br><span class="line">discovery.seed_hosts:<span class="comment">#当前ES集群的主机列表。</span></span><br><span class="line">cluster.initial_master_nodes:<span class="comment">#集群启动时首次参与master选举的节点列表。</span></span><br></pre></td></tr></table></figure><p><strong>3.将配置文件拷贝到其他节点</strong></p><pre><code>[root@elk01 ~]# scp /etc/elasticsearch/elasticsearch.yml root@172.16.1.212:/etc/elasticsearch/[root@elk01 ~]# scp /etc/elasticsearch/elasticsearch.yml root@172.16.1.213:/etc/elasticsearch/</code></pre><p>**4.启动ES集群 **</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01 ~]# systemctl <span class="built_in">enable</span> --now elasticsearch.service </span><br><span class="line">[root@elk02 ~]# systemctl <span class="built_in">enable</span> --now elasticsearch.service </span><br><span class="line">[root@elk03 ~]# systemctl <span class="built_in">enable</span> --now elasticsearch.service </span><br></pre></td></tr></table></figure><p><strong>5.查看端口是否监听集群</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01 ~]# ss -lntup |egrep <span class="string">&#x27;9[23]00&#x27;</span></span><br><span class="line">tcp6       0      0 :::9200        :::*       LISTEN      6431/java</span><br><span class="line">tcp6       0      0 :::9300        :::*       LISTEN      6431/java</span><br></pre></td></tr></table></figure><p><strong>6.查看集群节点信息</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:0 ~]# curl 10.0.0.213:9200/_cat/nodes</span><br><span class="line">10.0.0.212  9 94  8 0.46 0.49 0.31 cdfhilmrstw - elk02</span><br><span class="line">10.0.0.211 25 95 21 0.56 0.47 0.25 cdfhilmrstw * elk01</span><br><span class="line">10.0.0.213 28 90 25 1.21 0.78 0.43 cdfhilmrstw - elk03</span><br><span class="line"></span><br><span class="line"><span class="comment">#elk02是主节点</span></span><br><span class="line"><span class="comment">#查看name和uuid</span></span><br><span class="line">[root@elk01 ~]# curl -s 10.0.0.211:9200|egrep <span class="string">&#x27;_name|_uuid&#x27;</span></span><br><span class="line">  <span class="string">&quot;cluster_name&quot;</span> : <span class="string">&quot;my-elk&quot;</span>,</span><br><span class="line">  <span class="string">&quot;cluster_uuid&quot;</span> : <span class="string">&quot;pI91AngOTf2G4LYIUzd9FA&quot;</span></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"><span class="comment">#查看所有节点？</span></span><br><span class="line">[root@elk01 ~]# <span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> 211 213`;<span class="keyword">do</span> curl -s 10.0.0.<span class="variable">$i</span>:9200|egrep <span class="string">&#x27;_name|_uuid&#x27;</span>;<span class="keyword">done</span></span><br><span class="line">  <span class="string">&quot;cluster_name&quot;</span> : <span class="string">&quot;my-elk&quot;</span>,</span><br><span class="line">  <span class="string">&quot;cluster_uuid&quot;</span> : <span class="string">&quot;pI91AngOTf2G4LYIUzd9FA&quot;</span>,</span><br><span class="line">  <span class="string">&quot;cluster_name&quot;</span> : <span class="string">&quot;my-elk&quot;</span>,</span><br><span class="line">  <span class="string">&quot;cluster_uuid&quot;</span> : <span class="string">&quot;pI91AngOTf2G4LYIUzd9FA&quot;</span>,</span><br><span class="line">  <span class="string">&quot;cluster_name&quot;</span> : <span class="string">&quot;my-elk&quot;</span>,</span><br><span class="line">  <span class="string">&quot;cluster_uuid&quot;</span> : <span class="string">&quot;pI91AngOTf2G4LYIUzd9FA&quot;</span>,</span><br></pre></td></tr></table></figure><p><strong>7.ES集群写入和读取数据</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#写入数据  （test是索引，自定义）</span></span><br><span class="line">curl -X POST -H <span class="string">&quot;Content-Type:application/json&quot;</span> 10.0.0.211:9200/test/_doc -d <span class="string">&#x27;&#123;&quot;name&quot;:&quot;zhang3&quot;,&quot;age&quot;:&quot;18&quot;&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#读取数据（jq需要安装，格式化输出，212/213也能读取到数据，因为是es集群）</span></span><br><span class="line">[root@elk01 ~]# curl -s 10.0.0.211:9200/test/_search | jq .hits</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;total&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;value&quot;</span>: 1,</span><br><span class="line">    <span class="string">&quot;relation&quot;</span>: <span class="string">&quot;eq&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;max_score&quot;</span>: 1,</span><br><span class="line">  <span class="string">&quot;hits&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;_index&quot;</span>: <span class="string">&quot;test&quot;</span>,</span><br><span class="line">      <span class="string">&quot;_type&quot;</span>: <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">      <span class="string">&quot;_id&quot;</span>: <span class="string">&quot;ppKQ0ZEB6pCPlAoKbzPE&quot;</span>,</span><br><span class="line">      <span class="string">&quot;_score&quot;</span>: 1,</span><br><span class="line">      <span class="string">&quot;_source&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;name&quot;</span>: <span class="string">&quot;zhang3&quot;</span>,</span><br><span class="line">        <span class="string">&quot;age&quot;</span>: <span class="string">&quot;18&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="kibana读取数据">kibana读取数据</h2><h3 id="1-kibana概述">1.kibana概述</h3><p>使用 Kibana 针对大规模数据快速运行数据分析，以实现可观测性、安全和搜索。对来自任何来源的任何数据进行全面透彻的分析，从威胁情报到搜索分析，从日志到应用程序监测，不一而足。说白了，kibana就是从ES查询数据并展示数据。</p><h3 id="2-部署kibana">2.部署kibana</h3><p><strong>1.下载 &amp; 安装kibana</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01 ~]# wget https://artifacts.elastic.co/downloads/kibana/kibana-7.17.23-amd64.deb</span><br><span class="line"></span><br><span class="line">[root@elk01 ~]# dpkg -i kibana-7.17.23-amd64.deb </span><br></pre></td></tr></table></figure><p><strong>2.修改配置文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@elk91 ~]# vim /etc/kibana/kibana.yml </span><br><span class="line">server.port: 5601</span><br><span class="line">server.host: <span class="string">&quot;0.0.0.0&quot;</span></span><br><span class="line">server.name: <span class="string">&quot;kibana&quot;</span></span><br><span class="line">elasticsearch.hosts: [<span class="string">&quot;http://10.0.0.211:9200&quot;</span>,<span class="string">&quot;http://10.0.0.212:9200&quot;</span>,<span class="string">&quot;http://10.0.0.213:9200&quot;</span>]</span><br><span class="line">i18n.locale: <span class="string">&quot;zh-CN&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-启动kibana">3.启动kibana</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01 ~]# systemctl <span class="built_in">enable</span> --now kibana</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看端口是否启动</span></span><br><span class="line">[root@elk01 ~]# ss  -lntup|grep 5601</span><br><span class="line">tcp        0      0 0.0.0.0:5601      0.0.0.0:*     LISTEN      9696/node  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#浏览器访问</span></span><br><span class="line">10.0.0.211:5601</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/QQ_1725800433992.png" alt="QQ_1725800433992"></p><p><strong>索引管理就有我们之前创建的数据</strong></p><p><img src="https://cos.lukme.top/Pic/image-20241002121943290.png" alt="image-20241002121943290"></p><p><strong>如何查询那个数据呢？</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1725800690692.png" alt="QQ_1725800690692"></p><p><img src="https://cos.lukme.top/Pic/QQ_1725800736873.png" alt="QQ_1725800736873"></p><p><img src="https://cos.lukme.top/Pic/QQ_1725800780918.png" alt="QQ_1725800780918"></p><h3 id="4-kibana查询ES数据">4.kibana查询ES数据</h3><p><strong>1.准备测试数据</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">curl -X POST -H <span class="string">&quot;Content-Type:application/json&quot;</span> 10.0.0.211:9200/_bulk -d <span class="string">&#x27;</span></span><br><span class="line"><span class="string">&#123; &quot;index&quot; : &#123; &quot;_index&quot; : &quot;student1&quot;&#125; &#125;</span></span><br><span class="line"><span class="string">&#123;&quot;name&quot;:&quot;李四&quot;,&quot;hobby&quot;:[&quot;学习&quot;,&quot;玩手机&quot;,&quot;看美女&quot;]&#125;</span></span><br><span class="line"><span class="string">&#123; &quot;index&quot; : &#123; &quot;_index&quot; : &quot;student2&quot;&#125; &#125;</span></span><br><span class="line"><span class="string">&#123;&quot;name&quot;:&quot;张三&quot;,&quot;hobby&quot;:[&quot;大长腿&quot;,&quot;学习&quot;]&#125;</span></span><br><span class="line"><span class="string">&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#终端输出如下即OK</span></span><br><span class="line">&#123;<span class="string">&quot;took&quot;</span>:780,<span class="string">&quot;errors&quot;</span>:<span class="literal">false</span>,<span class="string">&quot;items&quot;</span>:[&#123;<span class="string">&quot;index&quot;</span>:&#123;<span class="string">&quot;_index&quot;</span>:<span class="string">&quot;student&quot;</span>,<span class="string">&quot;_type&quot;</span>:<span class="string">&quot;_doc&quot;</span>,<span class="string">&quot;_id&quot;</span>:<span class="string">&quot;YWacOJIBCijr5nh3GosC&quot;</span>,<span class="string">&quot;_version&quot;</span>:1,<span class="string">&quot;result&quot;</span>:<span class="string">&quot;created&quot;</span>,<span class="string">&quot;_shards&quot;</span>:&#123;<span class="string">&quot;total&quot;</span>:2,<span class="string">&quot;successful&quot;</span>:2,<span class="string">&quot;failed&quot;</span>:0&#125;,<span class="string">&quot;_seq_no&quot;</span>:0,<span class="string">&quot;_primary_term&quot;</span>:1,<span class="string">&quot;status&quot;</span>:201&#125;&#125;,&#123;<span class="string">&quot;index&quot;</span>:&#123;<span class="string">&quot;_index&quot;</span>:<span class="string">&quot;student&quot;</span>,<span class="string">&quot;_type&quot;</span>:<span class="string">&quot;_doc&quot;</span>,<span class="string">&quot;_id&quot;</span>:<span class="string">&quot;YmacOJIBCijr5nh3GosC&quot;</span>,<span class="string">&quot;_version&quot;</span>:1,<span class="string">&quot;result&quot;</span>:<span class="string">&quot;created&quot;</span>,<span class="string">&quot;_shards&quot;</span>:&#123;<span class="string">&quot;total&quot;</span>:2,<span class="string">&quot;successful&quot;</span>:2,<span class="string">&quot;failed&quot;</span>:0&#125;,<span class="string">&quot;_seq_no&quot;</span>:1,<span class="string">&quot;_primary_term&quot;</span>:1,<span class="string">&quot;status&quot;</span>:201&#125;&#125;]&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#api调取方法--官方文档：https://www.elastic.co/guide/en/elasticsearch/reference/7.17/docs-bulk.html</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#浏览器再次访问  kibana  ，发现索引管理会多出来一个我们创建的student索引</span></span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241002122102175.png" alt="image-20241002122102175"></p><p><strong>2.创建索引模式</strong></p><p>kibana的索引模式用于匹配ES集群的一个或多个索引。     student*</p><p><img src="https://cos.lukme.top/Pic/image-20241002122146329.png" alt="image-20241002122146329"></p><p><strong>3.kibana查询数据</strong></p><p><img src="https://cos.lukme.top/Pic/image-20241002122628647.png" alt="image-20241002122628647"></p><p><strong>以字段查询</strong></p><p><img src="https://cos.lukme.top/Pic/image-20241002122712583.png" alt="image-20241002122712583"></p><p><img src="https://cos.lukme.top/Pic/image-20241002122754986.png" alt="image-20241002122754986"></p><p><strong>使用json格式查询</strong></p><p><img src="https://cos.lukme.top/Pic/image-20241002122306868.png" alt="image-20241002122306868"></p><p><strong>其它方式查询集群颜色</strong></p><p>1.通过es-head组件查询（一个插件）</p><p>2.基于官方的API查询</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:1 ~]# curl -s 10.0.0.211:9200/_cat/indices?v</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241002122830955.png" alt="image-20241002122830955"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:1 ~]# curl -s 10.0.0.211:9200/_cat/indices|awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span></span><br><span class="line">green</span><br><span class="line">green</span><br><span class="line">green</span><br><span class="line">green</span><br><span class="line">green</span><br></pre></td></tr></table></figure><h2 id="Filebeat采集数据">Filebeat采集数据</h2><p><strong>filebeat</strong><br>无论您是从安全设备、云、容器、主机还是 OT 进行数据收集，Filebeat 都将为您提供一种轻量型方法，用于转发和汇总日志与文件，让简单的事情不再繁杂。说白了，filebeat的核心就是采集日志并将日志发送到我们期望的目的端。本质核心就是input(数据从哪来)和output(数据到哪去)。</p><p><strong>==filebeat默认是按行读取数据==</strong></p><p><img src="https://cos.lukme.top/Pic/elkmassage.png" alt="elkmassage"></p><h3 id="部署filebeat">部署filebeat</h3><p><a href="https://www.elastic.co/guide/en/beats/filebeat/7.17/configuring-howto-filebeat.html">Filebeat Reference 官方文档</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.下载filebeat包</span><br><span class="line">[root@elk01 ~]# wget https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-7.17.23-amd64.deb</span><br><span class="line"></span><br><span class="line">2.安装filebeat </span><br><span class="line">[root@elk01 ~]# dpkg -i filebeat-7.17.23-amd64.deb </span><br></pre></td></tr></table></figure><h3 id="采集数据终端到终端">采集数据终端到终端</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#写法见官方，直接复制使用  (在 inputs 和 Output 里选择相应的方式)</span></span><br><span class="line"><span class="string">&#x27;https://www.elastic.co/guide/en/beats/filebeat/7.17/configuring-howto-filebeat.html&#x27;</span></span><br><span class="line">1.编写filebeat的配置文件      （inputs&gt;Stdin  标准输入    output&gt;Console  终端输出）</span><br><span class="line">[root@elk01 ~]# <span class="built_in">cat</span> /etc/filebeat/01-stdin-stdout.yaml </span><br><span class="line"><span class="comment"># 数据从标准输入来</span></span><br><span class="line">filebeat.inputs:</span><br><span class="line">- <span class="built_in">type</span>: stdin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据到终点</span></span><br><span class="line">output.console:</span><br><span class="line">  pretty: <span class="literal">true</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">#2.启动filebeat实例</span></span><br><span class="line">相关参数说 ：</span><br><span class="line">-c &lt;config&gt;:</span><br><span class="line">指定的是配置文件 </span><br><span class="line">-e :</span><br><span class="line">开启调试模式，将日志输出到终端。</span><br><span class="line"></span><br><span class="line">[root@elk01:1 ~]# filebeat -e -c /etc/filebeat/01-stdin-stdout.yaml </span><br><span class="line"><span class="comment">#终端我输入的</span></span><br><span class="line">66666666666666666666666666666666</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出内容：很明显，数据被封装到了一个&quot;message&quot;字段中。</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;@timestamp&quot;</span>: <span class="string">&quot;2024-09-28T13:23:12.146Z&quot;</span>,</span><br><span class="line">  <span class="string">&quot;@metadata&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;beat&quot;</span>: <span class="string">&quot;filebeat&quot;</span>,</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">    <span class="string">&quot;version&quot;</span>: <span class="string">&quot;7.17.23&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;input&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;stdin&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;ecs&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;version&quot;</span>: <span class="string">&quot;1.12.0&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;host&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;elk01&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;agent&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;filebeat&quot;</span>,</span><br><span class="line">    <span class="string">&quot;version&quot;</span>: <span class="string">&quot;7.17.23&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hostname&quot;</span>: <span class="string">&quot;elk01&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ephemeral_id&quot;</span>: <span class="string">&quot;13686d12-e255-4c48-a609-dcc4b8331c44&quot;</span>,</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="string">&quot;9e9b0f4e-cbe0-4e5b-bab2-501e50f67620&quot;</span>,</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;elk01&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;log&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;offset&quot;</span>: 0,</span><br><span class="line">    <span class="string">&quot;file&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;path&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;message&quot;</span>: <span class="string">&quot;66666666666666666666666666666666&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">2024-09-28T21:23:13.147+0800    ERROR   file/states.go:125      State <span class="keyword">for</span>  should have been dropped, but couldn<span class="string">&#x27;t as state is not finished.</span></span><br></pre></td></tr></table></figure><h3 id="filebeat监听tcp端口">filebeat监听tcp端口</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1。编写filebeat配置文件       （inputs&gt;tcp   指定tcp端口）</span></span><br><span class="line">[root@elk01 ~]# <span class="built_in">cat</span> /etc/filebeat/02-tcp-console.yaml </span><br><span class="line"><span class="comment"># 数据从监听的指定tcp端口来</span></span><br><span class="line">filebeat.inputs:</span><br><span class="line">- <span class="built_in">type</span>: tcp</span><br><span class="line">  host: <span class="string">&quot;0.0.0.0:9000&quot;</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">#数据到终点</span></span><br><span class="line">output.console:</span><br><span class="line">  pretty: <span class="literal">true</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">#2.启动filebeat实例</span></span><br><span class="line">[root@elk01:1 ~]# filebeat -e -c /etc/filebeat/02-tcp-console.yaml </span><br><span class="line"></span><br><span class="line"><span class="comment">#3.发送测试数据</span></span><br><span class="line">[root@elk03:0 ~]# <span class="built_in">echo</span> <span class="string">&quot;hello world&quot;</span> | nc 10.0.0.211 9000</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#4.观察filebeat是否采集到数据</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;@timestamp&quot;</span>: <span class="string">&quot;2024-09-28T13:33:01.962Z&quot;</span>,</span><br><span class="line">  <span class="string">&quot;@metadata&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;beat&quot;</span>: <span class="string">&quot;filebeat&quot;</span>,</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">    <span class="string">&quot;version&quot;</span>: <span class="string">&quot;7.17.23&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;input&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;tcp&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;ecs&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;version&quot;</span>: <span class="string">&quot;1.12.0&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;host&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;elk01&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;agent&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;elk01&quot;</span>,</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;filebeat&quot;</span>,</span><br><span class="line">    <span class="string">&quot;version&quot;</span>: <span class="string">&quot;7.17.23&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hostname&quot;</span>: <span class="string">&quot;elk01&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ephemeral_id&quot;</span>: <span class="string">&quot;a43721b4-8160-4985-9f6f-67c0178affa7&quot;</span>,</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="string">&quot;9e9b0f4e-cbe0-4e5b-bab2-501e50f67620&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;message&quot;</span>: <span class="string">&quot;hello world&quot;</span>,</span><br><span class="line">  <span class="string">&quot;log&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;source&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;address&quot;</span>: <span class="string">&quot;10.0.0.213:47174&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="采集本地文件输出数据到终端">采集本地文件输出数据到终端</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">1.编写filebeat配置文件    （inputs&gt;<span class="built_in">log</span>）</span><br><span class="line">[root@elk01 ~]# <span class="built_in">cat</span> /etc/filebeat/03-log-console.yaml</span><br><span class="line"><span class="comment"># 数据从监听的指定文件来</span></span><br><span class="line">filebeat.inputs:</span><br><span class="line">- <span class="built_in">type</span>: <span class="built_in">log</span></span><br><span class="line">  paths:</span><br><span class="line">    - /tmp/test.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据到终点</span></span><br><span class="line">output.console:</span><br><span class="line">  pretty: <span class="literal">true</span></span><br><span class="line">  </span><br><span class="line">2.启动filebeat实例</span><br><span class="line">[root@elk01:1 ~]# filebeat -e -c /etc/filebeat/03-log-console.yaml</span><br><span class="line"></span><br><span class="line">3.写入测试数据(另开一个终端写入)</span><br><span class="line">[root@elk01:0 ~]# <span class="built_in">echo</span> <span class="string">&#x27;999&#x27;</span> &gt; /tmp/test.log</span><br><span class="line"></span><br><span class="line">4.观察终端输出</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;@timestamp&quot;</span>: <span class="string">&quot;2024-09-28T13:48:53.645Z&quot;</span>,</span><br><span class="line">  <span class="string">&quot;@metadata&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;beat&quot;</span>: <span class="string">&quot;filebeat&quot;</span>,</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">    <span class="string">&quot;version&quot;</span>: <span class="string">&quot;7.17.23&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;log&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;offset&quot;</span>: 0,           <span class="comment">#注意这个字段</span></span><br><span class="line">    <span class="string">&quot;file&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;path&quot;</span>: <span class="string">&quot;/tmp/test.log&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;message&quot;</span>: <span class="string">&quot;hello world&quot;</span>,</span><br><span class="line">  <span class="string">&quot;input&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;log&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;agent&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="string">&quot;9e9b0f4e-cbe0-4e5b-bab2-501e50f67620&quot;</span>,</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;elk01&quot;</span>,</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;filebeat&quot;</span>,</span><br><span class="line">    <span class="string">&quot;version&quot;</span>: <span class="string">&quot;7.17.23&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hostname&quot;</span>: <span class="string">&quot;elk01&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ephemeral_id&quot;</span>: <span class="string">&quot;10485e22-a3e8-40f0-bbb9-c194f9541bf4&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;ecs&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;version&quot;</span>: <span class="string">&quot;1.12.0&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;host&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;elk01&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5.验证filebeat采集数据是按行读取    (注意offset 字段变化)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#再次写入数据观察采集情况</span></span><br><span class="line">[root@elk01:0 ~]# <span class="built_in">echo</span> <span class="string">&#x27;hello world&#x27;</span> &gt;&gt; /tmp/test.log</span><br><span class="line"></span><br><span class="line"><span class="comment">#观察offset（偏移量）</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;@timestamp&quot;</span>: <span class="string">&quot;2024-09-28T13:54:03.721Z&quot;</span>,</span><br><span class="line">  <span class="string">&quot;@metadata&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;beat&quot;</span>: <span class="string">&quot;filebeat&quot;</span>,</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">    <span class="string">&quot;version&quot;</span>: <span class="string">&quot;7.17.23&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;log&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;offset&quot;</span>: 4,    <span class="comment">#为啥是四个偏移量？</span></span><br><span class="line">    <span class="string">&quot;file&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;path&quot;</span>: <span class="string">&quot;/tmp/test.log&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;message&quot;</span>: <span class="string">&quot;999hello world&quot;</span>,</span><br><span class="line">  <span class="string">&quot;input&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;log&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;agent&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;hostname&quot;</span>: <span class="string">&quot;elk01&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ephemeral_id&quot;</span>: <span class="string">&quot;10485e22-a3e8-40f0-bbb9-c194f9541bf4&quot;</span>,</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="string">&quot;9e9b0f4e-cbe0-4e5b-bab2-501e50f67620&quot;</span>,</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;elk01&quot;</span>,</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;filebeat&quot;</span>,</span><br><span class="line">    <span class="string">&quot;version&quot;</span>: <span class="string">&quot;7.17.23&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;ecs&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;version&quot;</span>: <span class="string">&quot;1.12.0&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;host&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;elk01&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#因为上次999三个之后有个特殊字符--换行符，所以offset之前采集的偏移量是4个</span></span><br></pre></td></tr></table></figure><p><strong>如何验证filebeat是按行采集数据的？</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@elk01:0 ~]# <span class="built_in">echo</span> -n <span class="string">&#x27;ABCD&#x27;</span> &gt;&gt; /tmp/test.log      -n 不换行</span><br><span class="line"></span><br><span class="line">观察终端是否有采集数据,很明显没有采集</span><br></pre></td></tr></table></figure><p><strong>6.重启filebeat实例</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">停止filebeat   Ctrl+c</span><br><span class="line">再次执行实例    filebeat -e -c /etc/filebeat/03-log-console.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment">#此时我们发现filebeat并不会采集数据，因为filebeat已经采集过了，</span></span><br><span class="line"><span class="comment">#filebeat是如何知道有没有采集过数据？往上翻看加载信息如下图</span></span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20241002105509955.png" alt="image-20241002105509955"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Finished loading transaction <span class="built_in">log</span> file <span class="keyword">for</span> <span class="string">&#x27;/var/lib/filebeat/registry/filebeat&#x27;</span>. Active transaction <span class="built_in">id</span>=63</span><br><span class="line"></span><br><span class="line">这个表示的是，在采集数据之前先加载<span class="string">&#x27;/var/lib/filebeat/registry/filebeat&#x27;</span>下的事务日志log.json，里面记录了已经采集过的信息，那么我们前去查看下，</span><br><span class="line"></span><br><span class="line">这里我们查看下最后一条数据</span><br><span class="line">[root@elk01:1 ~]# <span class="built_in">tail</span> -1 /var/lib/filebeat/registry/filebeat/log.json </span><br><span class="line">&#123;<span class="string">&quot;k&quot;</span>:<span class="string">&quot;filebeat::logs::native::788078-64768&quot;</span>,<span class="string">&quot;v&quot;</span>:&#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;native::788078-64768&quot;</span>,<span class="string">&quot;offset&quot;</span>:24,<span class="string">&quot;timestamp&quot;</span>:[2061673550511,1727837342],<span class="string">&quot;ttl&quot;</span>:-1,<span class="string">&quot;prev_id&quot;</span>:<span class="string">&quot;&quot;</span>,<span class="string">&quot;source&quot;</span>:<span class="string">&quot;/tmp/test.log&quot;</span>,<span class="string">&quot;type&quot;</span>:<span class="string">&quot;log&quot;</span>,<span class="string">&quot;FileStateOS&quot;</span>:&#123;<span class="string">&quot;inode&quot;</span>:788078,<span class="string">&quot;device&quot;</span>:64768&#125;,<span class="string">&quot;identifier_name&quot;</span>:<span class="string">&quot;native&quot;</span>&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#数据有个offset字段，这里记录的是上一次采集过的偏移量，那么我们就来查看下这个日志的偏移量是不是24</span></span><br><span class="line">[root@elk01:1 ~]# <span class="built_in">cat</span> /tmp/test.log </span><br><span class="line">999</span><br><span class="line">hello world</span><br><span class="line">ABCD666</span><br><span class="line"></span><br><span class="line"><span class="comment">#其中每个换行之后都有一个换行符占一个偏移量，所以总过是24，那么这个事务日志记录的是没有错的。当我们删除这个事务日志log.json时候，重新执行filebeat实例，便会重新采集数据</span></span><br></pre></td></tr></table></figure><p><strong>7.自定义采集</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#根据步骤6中重新filebeat实例所述，我们自定义采集便可以根据设置偏移量来达到自定义采集数据</span></span><br><span class="line"><span class="comment">#修改事务日志文件如下，只修改偏移量，需求是只采集ABCD666及以后的数据</span></span><br><span class="line">[root@elk01:1 ~]# <span class="built_in">cat</span> /tmp/test.log </span><br><span class="line">999</span><br><span class="line">hello world</span><br><span class="line">ABCD666  <span class="comment">#将offset设置为16，记得数换行符</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@elk01:1 ~]# vim /var/lib/filebeat/registry/filebeat/log.json </span><br><span class="line">&#123;<span class="string">&quot;op&quot;</span>:<span class="string">&quot;set&quot;</span>,<span class="string">&quot;id&quot;</span>:65&#125;</span><br><span class="line">&#123;<span class="string">&quot;k&quot;</span>:<span class="string">&quot;filebeat::logs::native::788078-64768&quot;</span>,<span class="string">&quot;v&quot;</span>:&#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;native::788078-64768&quot;</span>,<span class="string">&quot;offset&quot;</span>:16,<span class="string">&quot;timestamp&quot;</span>:[2061673550511,1727837342],<span class="string">&quot;ttl&quot;</span>:-1,<span class="string">&quot;prev_id&quot;</span>:<span class="string">&quot;&quot;</span>,<span class="string">&quot;source&quot;</span>:<span class="string">&quot;/tmp/test.log&quot;</span>,<span class="string">&quot;type&quot;</span>:<span class="string">&quot;log&quot;</span>,<span class="string">&quot;FileStateOS&quot;</span>:&#123;<span class="string">&quot;inode&quot;</span>:788078,<span class="string">&quot;device&quot;</span>:64768&#125;,<span class="string">&quot;identifier_name&quot;</span>:<span class="string">&quot;native&quot;</span>&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#重新执行实例</span></span><br><span class="line">[root@elk01:0 ~]# filebeat -e -c /etc/filebeat/03-log-console.yaml </span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;@timestamp&quot;</span>: <span class="string">&quot;2024-10-02T03:12:45.360Z&quot;</span>,</span><br><span class="line">  <span class="string">&quot;@metadata&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;beat&quot;</span>: <span class="string">&quot;filebeat&quot;</span>,</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;_doc&quot;</span>,</span><br><span class="line">    <span class="string">&quot;version&quot;</span>: <span class="string">&quot;7.17.23&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;agent&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;version&quot;</span>: <span class="string">&quot;7.17.23&quot;</span>,</span><br><span class="line">    <span class="string">&quot;hostname&quot;</span>: <span class="string">&quot;elk01&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ephemeral_id&quot;</span>: <span class="string">&quot;c8d05474-6175-4dd1-93e8-933cb7760b92&quot;</span>,</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="string">&quot;9e9b0f4e-cbe0-4e5b-bab2-501e50f67620&quot;</span>,</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;elk01&quot;</span>,</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;filebeat&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;log&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;offset&quot;</span>: 16,</span><br><span class="line">    <span class="string">&quot;file&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;path&quot;</span>: <span class="string">&quot;/tmp/test.log&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;message&quot;</span>: <span class="string">&quot;ABCD666&quot;</span>,</span><br><span class="line">  <span class="string">&quot;input&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;log&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;ecs&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;version&quot;</span>: <span class="string">&quot;1.12.0&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;host&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;elk01&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="案例">案例</h2><h3 id="采集nginx日志案例">采集nginx日志案例</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">1.安装nginx   （可以先尝试跳过2步骤，看看不修改配置文件的输出，和修改之后的区别）</span><br><span class="line">[root@elk01:1 ~]# apt -y install nginx</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2.将nginx采集的数据以json格式展示，修改nginx的配置文件（格式化展示，方便分析数据，访问ip，状态码等）</span><br><span class="line">[root@elk01:1 ~]# vim /etc/nginx/nginx.conf </span><br><span class="line"><span class="comment">#http模块里添加如下，注释官方的   access_log /var/log/nginx/access.log</span></span><br><span class="line">···</span><br><span class="line">  log_format nginx_json <span class="string">&#x27;&#123;&quot;timestamp&quot;:&quot;$time_iso8601&quot;,&#x27;</span></span><br><span class="line">       <span class="string">&#x27;&quot;vhost&quot;:&quot;$server_addr&quot;,&#x27;</span></span><br><span class="line">       <span class="string">&#x27;&quot;clientip&quot;:&quot;$remote_addr&quot;,&#x27;</span></span><br><span class="line">       <span class="string">&#x27;&quot;SendBytes&quot;:$body_bytes_sent,&#x27;</span></span><br><span class="line">       <span class="string">&#x27;&quot;responsetime&quot;:$request_time,&#x27;</span></span><br><span class="line">       <span class="string">&#x27;&quot;upstreamtime&quot;:&quot;$upstream_response_time&quot;,&#x27;</span></span><br><span class="line">       <span class="string">&#x27;&quot;upstreamhost&quot;:&quot;$upstream_addr&quot;,&#x27;</span></span><br><span class="line">       <span class="string">&#x27;&quot;http_host&quot;:&quot;$host&quot;,&#x27;</span></span><br><span class="line">       <span class="string">&#x27;&quot;uri&quot;:&quot;$uri&quot;,&#x27;</span></span><br><span class="line">       <span class="string">&#x27;&quot;domain&quot;:&quot;$host&quot;,&#x27;</span></span><br><span class="line">       <span class="string">&#x27;&quot;xff&quot;:&quot;$http_x_forwarded_for&quot;,&#x27;</span></span><br><span class="line">       <span class="string">&#x27;&quot;referer&quot;:&quot;$http_referer&quot;,&#x27;</span></span><br><span class="line">       <span class="string">&#x27;&quot;tcp_xff&quot;:&quot;$proxy_protocol_addr&quot;,&#x27;</span></span><br><span class="line">       <span class="string">&#x27;&quot;http_user_agent&quot;:&quot;$http_user_agent&quot;,&#x27;</span></span><br><span class="line">       <span class="string">&#x27;&quot;status&quot;:&quot;$status&quot;&#125;&#x27;</span>;</span><br><span class="line"> access_log /var/log/nginx/access.log nginx_json;</span><br><span class="line"><span class="comment">#2.1 检查nginx语法是否有问题</span></span><br><span class="line">[root@elk01:1 ~]# nginx -t </span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line"><span class="comment">#2.2 重新nginx</span></span><br><span class="line">[root@elk01:1 ~]# systemctl restart nginx</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3.编写filebeat配置文件    （inputs&gt;<span class="built_in">log</span>）</span><br><span class="line">[root@elk01:1 ~]# <span class="built_in">cat</span> /etc/filebeat/04-nginx-es.yaml </span><br><span class="line">filebeat.inputs:</span><br><span class="line">- <span class="built_in">type</span>: <span class="built_in">log</span></span><br><span class="line">  json:</span><br><span class="line">    <span class="comment">#当json.keys_under_root的值为true时，会自动解析json格式，并将字段放在顶级字段中</span></span><br><span class="line">    keys_under_root: <span class="literal">true</span></span><br><span class="line">    <span class="comment">#当json格式解析错误时，可以将错误信息写入到event事件(指的是filebeat采集的每一条数据)中。</span></span><br><span class="line">    add_error_key: <span class="literal">true</span></span><br><span class="line">    <span class="comment">#如果采集的字段和filebeat自己的字段冲突，则覆盖数据</span></span><br><span class="line">    overwirte_kes: <span class="literal">true</span></span><br><span class="line">  paths:</span><br><span class="line">    - /var/log/nginx/access.log* </span><br><span class="line"></span><br><span class="line">output.console:</span><br><span class="line">  pretty: <span class="literal">true</span></span><br><span class="line">  </span><br><span class="line">2.启动filebeat实例</span><br><span class="line">[root@elk01:1 ~]# filebeat -e -c /etc/filebeat/03-log-console.yaml</span><br><span class="line">3.另开一个终端测试</span><br><span class="line">[root@elk01:1 ~]# curl 10.0.0.211</span><br><span class="line"><span class="comment">#查看filebeat收集日志</span></span><br><span class="line">1.这是未配置  json.keys_under_root: <span class="literal">true</span>  的展示</span><br><span class="line">  <span class="string">&quot;message&quot;</span>: <span class="string">&quot;&#123;\&quot;timestamp\&quot;:\&quot;2024-10-02T11:40:24+08:00\&quot;,\&quot;vhost\&quot;:\&quot;10.0.0.211\&quot;,\&quot;clientip\&quot;:\&quot;10.0.0.211\&quot;,\&quot;SendBytes\&quot;:612,\&quot;responsetime\&quot;:0.000,\&quot;upstreamtime\&quot;:\&quot;-\&quot;,\&quot;upstreamhost\&quot;:\&quot;-\&quot;,\&quot;http_host\&quot;:\&quot;10.0.0.211\&quot;,\&quot;uri\&quot;:\&quot;/index.nginx-debian.html\&quot;,\&quot;domain\&quot;:\&quot;10.0.0.211\&quot;,\&quot;xff\&quot;:\&quot;-\&quot;,\&quot;referer\&quot;:\&quot;-\&quot;,\&quot;tcp_xff\&quot;:\&quot;-\&quot;,\&quot;http_user_agent\&quot;:\&quot;curl/7.81.0\&quot;,\&quot;status\&quot;:\&quot;200\&quot;&#125;&quot;</span>,</span><br><span class="line">  </span><br><span class="line">2.这是配置json.keys_under_root: <span class="literal">true</span>的展示  （ip，状态码，时间戳都以顶级字段展示了，更加方便读取分析数据）</span><br><span class="line">  <span class="string">&quot;json&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;clientip&quot;</span>: <span class="string">&quot;10.0.0.211&quot;</span>,</span><br><span class="line">    <span class="string">&quot;domain&quot;</span>: <span class="string">&quot;10.0.0.211&quot;</span>,</span><br><span class="line">    <span class="string">&quot;timestamp&quot;</span>: <span class="string">&quot;2024-10-02T11:55:24+08:00&quot;</span>,</span><br><span class="line">    <span class="string">&quot;referer&quot;</span>: <span class="string">&quot;-&quot;</span>,</span><br><span class="line">    <span class="string">&quot;vhost&quot;</span>: <span class="string">&quot;10.0.0.211&quot;</span>,</span><br><span class="line">    <span class="string">&quot;http_host&quot;</span>: <span class="string">&quot;10.0.0.211&quot;</span>,</span><br><span class="line">    <span class="string">&quot;tcp_xff&quot;</span>: <span class="string">&quot;-&quot;</span>,</span><br><span class="line">    <span class="string">&quot;xff&quot;</span>: <span class="string">&quot;-&quot;</span>,</span><br><span class="line">    <span class="string">&quot;uri&quot;</span>: <span class="string">&quot;/index.nginx-debian.html&quot;</span>,</span><br><span class="line">    <span class="string">&quot;http_user_agent&quot;</span>: <span class="string">&quot;curl/7.81.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;responsetime&quot;</span>: 0,</span><br><span class="line">    <span class="string">&quot;upstreamhost&quot;</span>: <span class="string">&quot;-&quot;</span>,</span><br><span class="line">    <span class="string">&quot;SendBytes&quot;</span>: 612,</span><br><span class="line">    <span class="string">&quot;upstreamtime&quot;</span>: <span class="string">&quot;-&quot;</span>,</span><br><span class="line">    <span class="string">&quot;status&quot;</span>: <span class="string">&quot;200&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ES架构采集nginx日志并分析">ES架构采集nginx日志并分析</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1.编写filebeat吸入ES集群配置文件   （选择output&gt;Elasticsearch复制官方案例修改）</span></span><br><span class="line">[root@elk01:1 ~]# <span class="built_in">cat</span> /etc/filebeat/05-nginx-es.yaml </span><br><span class="line">filebeat.inputs:</span><br><span class="line">- <span class="built_in">type</span>: <span class="built_in">log</span></span><br><span class="line">  json:</span><br><span class="line">    keys_under_root: <span class="literal">true</span></span><br><span class="line">    add_error_key: <span class="literal">true</span></span><br><span class="line">    overwirte_kes: <span class="literal">true</span></span><br><span class="line">  paths:</span><br><span class="line">    - /var/log/nginx/access.log* </span><br><span class="line"></span><br><span class="line">output.elasticsearch:</span><br><span class="line">  hosts: [<span class="string">&quot;http://10.0.0.211:9200&quot;</span>,<span class="string">&quot;http://10.0.0.212:9200&quot;</span>,<span class="string">&quot;http://10.0.0.213:9200&quot;</span>] </span><br><span class="line">  </span><br><span class="line"><span class="comment">#2.启动filebeat实例</span></span><br><span class="line">[root@elk01:1 ~]# filebeat -e -c /etc/filebeat/05-nginx-es.yaml </span><br><span class="line"></span><br><span class="line"><span class="comment">#3.访问nginx服务</span></span><br><span class="line">[root@elk01:1 ~]# <span class="keyword">while</span> <span class="literal">true</span>;<span class="keyword">do</span> curl 10.0.0.211; <span class="built_in">sleep</span> 1 ;<span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>浏览器访问：10.0.0.211:5601</p><p><img src="https://cos.lukme.top/Pic/image-20241002155103512.png" alt="image-20241002155103512"></p><p><strong>创建索引</strong></p><p><img src="https://cos.lukme.top/Pic/image-20241002160236505.png" alt="image-20241002160236505"></p><p><strong>进入菜单栏选择Discover</strong></p><p><strong>查看数据（支持多条件查询）</strong></p><p><img src="https://cos.lukme.top/Pic/image-20241002160129138.png" alt="image-20241002160129138"></p><p><img src="https://cos.lukme.top/Pic/image-20241002161758175.png" alt="image-20241002161758175"></p><h2 id="ES的常见术语-分片">ES的常见术语-分片</h2><p><img src="https://cos.lukme.top/Pic/image-20241002160849403.png" alt="image-20241002160849403"></p><p><strong>index</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- index: 索引</span><br><span class="line">索引是一个逻辑的存储单元，一般用于标识不同的业务类型，因此索引的名称大家可以自定义。</span><br><span class="line">用户基于索引进行数据的读写。</span><br></pre></td></tr></table></figure><p><strong>shard</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- shard: 分片</span><br><span class="line">一个索引最少有一个分片，数据存储在分片中。</span><br><span class="line">当索引的分片数量大于1时，ES集群自动将分片分散地存储在不同的数据节点，而是实现了数据的分布式存储。</span><br></pre></td></tr></table></figure><blockquote><p>​    一个 分片 是一个底层的 工作单元 ，它仅保存了全部数据中的一部分。 在分片内部机制中，我们将详细介绍分片是如何工作的，而现在我们只需知道一个分片是一个 Lucene 的实例，以及它本身就是一个完整的搜索引擎。 我们的文档被存储和索引到分片内，但是应用程序是直接与索引而不是与分片进行交互。<br>​     Elasticsearch 是利用分片将数据分发到集群内各处的。分片是数据的容器，文档保存在分片内，分片又被分配到集群内的各个节点里。 当你的集群规模扩大或者缩小时， Elasticsearch 会自动的在各节点中迁移分片，使得数据仍然均匀分布在集群里。</p><p>​    一个分片可以是 主 分片或者 副本 分片。 索引内任意一个文档都归属于一个主分片，所以主分片的数目决定着索引能够保存的最大数据量。</p></blockquote><p><strong>replica</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">- replica: 副本</span><br><span class="line">每个分片有0个或多个副本，若副本数量大于0时，则可以实现对主分片的备份。为了方便理解将其分片主分片(primary shard)和副本分片(replica shard)。</span><br><span class="line">主分片(primary shard)和副本分片(replica shard)不能在同一台节点。</span><br><span class="line">主分片负责数据的读写，而副本分片只负责数据的读取和同步。</span><br><span class="line">当主分片和副本分片较多时，默认的写入策略为： <span class="string">&quot;(主分片数量 + 副本分片数量) / 2 + 1&quot;</span>，说白了，就是半数以上写入机制。</span><br><span class="line"></span><br><span class="line">比如1个主分片，和1个副本分片总共2个分片的数据相同，其写入策略为： (1 + 1) / 2 + 1，结果为：2，表示主分片和副本分片都必须写入成功则判定成功。</span><br></pre></td></tr></table></figure><blockquote><p>​    一个副本分片只是一个主分片的拷贝。副本分片作为硬件故障时保护数据不丢失的冗余备份，并为搜索和返回文档等读操作提供服务。<br>副本分片的主要目的就是为了故障转移，如果持有主分片的节点挂掉了，一个副本分片就会晋升为主分片的角色。在索引写入时，副本分片做着与主分片相同的工作。新文档首先被索引进主分片然后再同步到其它所有的副本分片。</p><p>​    增加副本数并不会增加索引容量，在索引建立的时候就已经确定了主分片数，但是副本分片数可以随时修改</p></blockquote><p>通俗理解</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">分片数（number_of_shards）就是主分片个数</span><br><span class="line">副本数（number_of_replicas） 可以理解成主分片的拷贝个数</span><br><span class="line">如果主分片数是5，则每个副本都有5个分片</span><br><span class="line">因此ES集群总的分片数 = 分片数 * (副本数 + 1)</span><br></pre></td></tr></table></figure><p><strong>副本数分配算法：</strong></p><blockquote><p>副本数 &lt;= ES集群的服务器个数 - 1</p></blockquote><p>副本除了提升查询效率，主要目的为了容灾，数据冗余存储，保证数据安全，因此，副本数应跟据ES集群中的数据库数量（N-1）进行配置，如果ES集群中有3台服务器，则副本数设置为2，减 1 因为主分片本身也算一份。副本数设置为2，数据实际上有3份，分散到3台服务器中。</p><blockquote><p>预估要存入ES总数据量 * (副本数+1) &lt;= ES集群的总内存 / 2</p></blockquote><p>存入ES搜索引擎 的数据可以预估，比如预估存入的数据有 100G，则实际上会占用的内存为 100G * (副本数+1) 加 1 因为计入了主分片，数量里超限了也可以存入，只要磁盘够大，但是计算时就可能用到了磁盘，磁盘的IO性能会让整个ES集群性能大副下降。</p><p>ES集群的总内存只取了一半，因为考虚 ES 的 java. 程序本身占用的内存，数据聚合运算消耗的内存，如果实际项目中大量复杂运算，占用的内存需要更多。</p><p><strong>分片数分配算法：</strong></p><blockquote><p>分片数 * (副本数 + 1) &lt;= ES集群的总CPU核心个数</p></blockquote><p>分片内的检索运算聚合需要 CPU， 为了充分发挥多核CPU的性能，且又避免CPU频繁调度，因此，ES集群内总的分片数应小于等于总的CPU核心个数。</p><p><strong>document</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">- document: 文档</span><br><span class="line">ES本身就是一个文档型数据库，和mangoDB类似。</span><br><span class="line">每个文件的数据分为两个部分： 元数据和源数据。</span><br><span class="line"></span><br><span class="line">1.元数据(metadata):</span><br><span class="line">用于描述源数据的数据。</span><br><span class="line">常见的字段如下:</span><br><span class="line">_index:</span><br><span class="line">表示文档隶属于哪个索引。</span><br><span class="line">_id:</span><br><span class="line">表示文档的唯一标识。</span><br><span class="line">_source:</span><br><span class="line">代表用户实际存储的数据。</span><br><span class="line"></span><br><span class="line">2.源数据(<span class="built_in">source</span> data):</span><br><span class="line">用户实际写入的数据。</span><br><span class="line"></span><br><span class="line">- allocation(分配):</span><br><span class="line">  指的是将索引的不同分片和副本分配到整个ES集群的过程，这个分配过程由ES集群自己实现。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ELK日志收集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ELK </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>03-k8sPOD资源</title>
      <link href="/posts/df6c32c8.html"/>
      <url>/posts/df6c32c8.html</url>
      
        <content type="html"><![CDATA[<h2 id="k8s资源清单描述">k8s资源清单描述</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">ApiVersion:</span><br><span class="line">资源的版本，官方对每个资源规定了不同的版本，我们需要根据资源的版本进行书写。</span><br><span class="line">一般情况下，资源的版本很少变动，除非在升级过程中，随着功能的增强，版本可能也会微调。</span><br><span class="line"></span><br><span class="line">kind:</span><br><span class="line">资源的类型，K8S集群中一切皆资源。</span><br><span class="line"></span><br><span class="line">metadata:</span><br><span class="line">资源的元数据信息，包括但不限于： </span><br><span class="line">- 资源的名称;(常用)</span><br><span class="line">- 资源所属的名称空间;(常用)</span><br><span class="line">- 资源的标签;(常用)</span><br><span class="line">- 资源的注解;(早期版本常用)</span><br><span class="line">- 资源的创建时间;</span><br><span class="line">- ...</span><br><span class="line"></span><br><span class="line">spec:</span><br><span class="line">定义了用户对Pod的期望状态。用户可以做如下操作:</span><br><span class="line">- 指定节点调度;</span><br><span class="line">- 指定调度的亲和性或反亲和性;</span><br><span class="line">- 资源的数据是否进行持久化;</span><br><span class="line">- 资源的配置文件是否需要修改;</span><br><span class="line">- 资源的容器使用具体的镜像;</span><br><span class="line">- 资源的限制</span><br><span class="line">- 资源的认证信息</span><br><span class="line">- 资源的安全信息</span><br><span class="line">- ...</span><br><span class="line"></span><br><span class="line">status:</span><br><span class="line">资源实际的状态，比如调度到哪个worker节点，实际分配的IP地址，运行周期，重启次数等。</span><br><span class="line">该资源一般不需要人为定义，而是有K8S集群自身维护。</span><br></pre></td></tr></table></figure><h2 id="pod资源及资源清单">pod资源及资源清单</h2><p><strong>1.POD资源</strong></p><p><strong>kubernetes资源对象操作</strong></p><table><thead><tr><th>资源对象</th><th>增</th><th>删</th><th>改</th><th>查</th></tr></thead><tbody><tr><td>node</td><td></td><td>kubectl delete node</td><td></td><td>kubectl get nodes</td></tr><tr><td>namespace</td><td>kubectl create ns [资源名]</td><td>kubectl delete ns [资源名]</td><td>kubectl edit ns [资源名]</td><td>kubectl get ns</td></tr><tr><td>pod</td><td></td><td>kubectl delete pod [资源名]</td><td>kubectl edit pod[资源名]</td><td>kubectl get pod</td></tr></tbody></table><p><strong>查看集群节点状态</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# kubectl get nodes</span><br><span class="line">NAME     STATUS   ROLES    AGE     VERSION</span><br><span class="line">master   Ready    master   4d13h   v1.19.3</span><br><span class="line">node01   Ready    &lt;none&gt;   4d13h   v1.19.3</span><br><span class="line">node02   Ready    &lt;none&gt;   4d13h   v1.19.3</span><br><span class="line">node03   Ready    &lt;none&gt;   4d13h   v1.19.3</span><br></pre></td></tr></table></figure><p><strong>查看名称空间</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# kubectl get ns</span><br><span class="line">NAME              STATUS   AGE</span><br><span class="line">default           Active   4d13h</span><br><span class="line">kube-flannel      Active   4d12h</span><br><span class="line">kube-node-lease   Active   4d13h</span><br><span class="line">kube-public       Active   4d13h</span><br><span class="line">kube-system       Active   4d13h</span><br><span class="line">luay              Active   4h17m</span><br></pre></td></tr></table></figure><p><strong>查看pod  (默认default名称空间)</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# kubectl get pod</span><br><span class="line">NAME                     READY   STATUS    RESTARTS   AGE</span><br><span class="line">nginx-565785f75c-tpjmj   1/1     Running   0          6h8m</span><br><span class="line">nginx-pod                1/1     Running   0          5h43m</span><br></pre></td></tr></table></figure><p><strong>查看pod  (指定名称空间)</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# kubectl get pods -n luay</span><br><span class="line">NAME          READY   STATUS    RESTARTS   AGE</span><br><span class="line">busybox-pod   2/2     Running   0          3m30s</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@master ~]# kubectl get pod -n luay -o wide</span><br><span class="line">NAME          READY   STATUS    RESTARTS   AGE     IP         NODE     NOMINATED NODE   READINESS GATES</span><br><span class="line">busybox-pod   2/2     Running   0          4m14s   10.2.2.6   node03   &lt;none&gt;           &lt;none&gt;</span><br><span class="line"></span><br><span class="line">-n 指定命名空间</span><br><span class="line">-o 指定输出方式</span><br><span class="line">json：输出json格式</span><br><span class="line">yaml：输出yaml格式</span><br><span class="line">wide：输出详细信息</span><br></pre></td></tr></table></figure><p><strong>2.pod的资源清单</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[root@master01 ~]# vim nginx.yaml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-pod</span><br><span class="line">  namespace: default</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - image: nginx:alpine</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    name: nginx-containers</span><br><span class="line"></span><br><span class="line">`注释`</span><br><span class="line">apiVersion: v1       <span class="comment"># K8S资源接口</span></span><br><span class="line">kind: Pod            <span class="comment"># 资源类型</span></span><br><span class="line">metadata:            <span class="comment">#资源的元数据</span></span><br><span class="line">  name: nginx-pod    <span class="comment"># POD名字</span></span><br><span class="line">  namespace: default <span class="comment"># 指定资源启动在哪个名称空间，默认default</span></span><br><span class="line">spec:                <span class="comment">#容器相关信息</span></span><br><span class="line">  containers:        <span class="comment">#容器信息</span></span><br><span class="line">  - image: nginx:alpine           <span class="comment">#指定容器镜像</span></span><br><span class="line">    imagePullPolicy: IfNotPresent <span class="comment">#指定镜像拉取规则</span></span><br><span class="line">    name: nginx-containers        <span class="comment">#容器名字</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Always：总是拉取镜像，不管当前机器上是否有该镜像都拉取 nginx:latest</span><br><span class="line">Never：从不拉取镜像，需要提前docker pull</span><br><span class="line">IfNotPresent：如果镜像不存在，则拉取</span><br></pre></td></tr></table></figure><h2 id="pod报错及可能原因">pod报错及可能原因</h2><pre><code>1.ImagePullBackOff  问题原因:  镜像拉取失败。  可能原因：  1.可能是网络问题导致，检查Pod所在节点是否能够正常访问网络;  2.镜像名称写错，也可能会导致这个错误;  3.镜像是私有仓库，镜像无权限拉取;  2.ContainerCreating问题分析:容器正在创建阶段，等待容器创建，该过程包含拉取镜像的时间。3.Pending问题分析:任务已经被K8S集群接受，但是未调度到指定节点。可能原因:1.当前集群不正常工作，请检查集群状态，比如CNI组件未安装;2.指定的调度的节点不存在时也会出现这样的问题;3.端口冲突，无法完成调度;4.所有节点都被打上污点，且pod没有配置污点容忍也会导致该状态;4.CrashLoopBackOff问题分析:处于该状态，说明Pod内至少有一个容器正在重启。可能原因:1.可能是容器的守护进程运行命令结束导致的;5.Completed问题分析:容器正常退出，容器没有被强制中断。6.Running问题分析:至少有一个容器处于正常运行状态。7.Init:1/2 问题分析:当前的Pod处于初始化容器阶段，目前已经完成一个初始化容器，正在进行第二个容器初始化。8.PodInitializing问题分析:Pod正处于初始化阶段。9.ErrImageNeverPull 问题分析:将镜像下载策略设置为Never，且本地也没有缓存镜像，因此启动容器失败。10.OutOfcpu问题分析:一般情况下是由于CPU资源不足导致的。11.OutOfmemory问题分析:一般情况下是由于内存不足无法分配导致的。12.NodePorts问题分析:当前的worker节点的端口可能存在冲突。13.RunContainerError问题分析:运行容器时出错，可以通过kubectl describe pods &lt;POD_NAME&gt;查看详细的信息。14.ErrImagePull问题分析:拉取镜像是失败。可能原因:1.镜像名称写错了;2.没有访问权限;15.Terminating问题分析:Pod的容器正在删除，此过程可能需要等待一段时间，一般情况下不会超过30s。16.CreateContainerConfigError问题分析:运行容器出错，一般情下，是配置出错。17.ContainerStatusUnknown问题分析:容器重启策略为Nerver，且我们测试时将工作节点的容器直接删除啦。无法获取</code></pre><h2 id="资源清单编写案例">资源清单编写案例</h2><p><strong>基于一个pod部署wordpress</strong></p><p><strong>1.编写资源清单</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[root@master kubernetes]# <span class="built_in">cat</span> wordpress.yaml </span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: wordpress-pod</span><br><span class="line">spec:</span><br><span class="line"> <span class="comment"># 使用宿主机网络名称空间</span></span><br><span class="line">  hostNetwork: <span class="literal">true</span></span><br><span class="line">  containers:</span><br><span class="line">  - name: db</span><br><span class="line">    image: mysql:8.0</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    <span class="built_in">env</span>:</span><br><span class="line">    - name: MYSQL_ALLOW_EMPTY_PASSWORD</span><br><span class="line">      value: <span class="string">&quot;yes&quot;</span></span><br><span class="line">    - name: MYSQL_DATABASE</span><br><span class="line">      value: wp</span><br><span class="line">    - name: MYSQL_USER</span><br><span class="line">      value: wp_usre</span><br><span class="line">    - name: MYSQL_PASSWORD</span><br><span class="line">      value: <span class="string">&#x27;123&#x27;</span></span><br><span class="line">  - name: wp</span><br><span class="line">    image: wordpress:latest</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    <span class="built_in">env</span>:</span><br><span class="line">    - name: WORDPRESS_DB_HOST</span><br><span class="line">      value: <span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line">    - name: WORDPRESS_DB_NAME</span><br><span class="line">      value: wp</span><br><span class="line">    - name: WORDPRESS_DB_USER</span><br><span class="line">      value: wp_usre</span><br><span class="line">    - name: WORDPRESS_DB_PASSWORD</span><br><span class="line">      value: <span class="string">&#x27;123&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>2.根据资源清单创建pod</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@master kubernetes]# kubectl apply -f wordpress.yaml</span><br><span class="line"></span><br><span class="line">`因为使用的宿主机网络名称空间，需保证80端口不被占用`</span><br></pre></td></tr></table></figure><p><strong>3.查看pod节点信息</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@master kubernetes]# kubectl get pod -o wide</span><br><span class="line">NAME                     READY   STATUS    RESTARTS   AGE   IP           NODE    </span><br><span class="line">nginx-565785f75c-tpjmj   1/1     Running   0          8h    10.2.2.2     node03  </span><br><span class="line">nginx-pod                1/1     Running   0          8h    10.2.2.3     node03  </span><br><span class="line">wordpress-pod            2/2     Running   0          36m   10.0.0.203   node03  </span><br><span class="line"></span><br><span class="line"><span class="comment">#创建节点node03   ip 10.0.0.203</span></span><br><span class="line">浏览器访问10.0.0.203</span><br></pre></td></tr></table></figure><p><strong>基于一个pod起wordpress，做持久化</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">[root@master kubernetes]# <span class="built_in">cat</span> wordpress.yaml </span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: wordpress-pod</span><br><span class="line">  namespace: default</span><br><span class="line">  labels:</span><br><span class="line">    app: mysql</span><br><span class="line">    run: mysql</span><br><span class="line">spec:</span><br><span class="line"><span class="comment">#如果使用下面ports，这个可以不使用宿主机网络</span></span><br><span class="line">  hostNetwork: <span class="literal">true</span></span><br><span class="line">  volumes:</span><br><span class="line">  - name: mysql-data</span><br><span class="line">    hostPath:</span><br><span class="line">      path: /data/mysql</span><br><span class="line">  containers:</span><br><span class="line">  - name: db</span><br><span class="line">    image: mysql:8.0</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    <span class="built_in">env</span>:</span><br><span class="line">    - name: MYSQL_ALLOW_EMPTY_PASSWORD</span><br><span class="line">      value: <span class="string">&quot;yes&quot;</span></span><br><span class="line">    - name: MYSQL_DATABASE</span><br><span class="line">      value: wp</span><br><span class="line">    - name: MYSQL_USER</span><br><span class="line">      value: wp_usre</span><br><span class="line">    - name: MYSQL_PASSWORD</span><br><span class="line">      value: <span class="string">&#x27;123&#x27;</span></span><br><span class="line">    volumeMounts:</span><br><span class="line">    - name: mysql-data</span><br><span class="line">      mountPath: /var/lib/mysql</span><br><span class="line">      </span><br><span class="line">  - name: wp</span><br><span class="line">    image: wordpress:latest</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    <span class="comment">#相当于暴露端口，直接使用节点的宿主机ip访问即可·</span></span><br><span class="line">    ports:</span><br><span class="line">    - containerPort: 80</span><br><span class="line">      hostPort: 80</span><br><span class="line">    <span class="built_in">env</span>:</span><br><span class="line">    - name: WORDPRESS_DB_HOST</span><br><span class="line">      value: <span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line">    - name: WORDPRESS_DB_NAME</span><br><span class="line">      value: wp</span><br><span class="line">    - name: WORDPRESS_DB_USER</span><br><span class="line">      value: wp_usre</span><br><span class="line">    - name: WORDPRESS_DB_PASSWORD</span><br><span class="line">      value: <span class="string">&#x27;123&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="连接pod">连接pod</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 连接到POD</span></span><br><span class="line">[root@master01 kubernetes]# kubectl <span class="built_in">exec</span> -it nginx-pod -- /bin/sh</span><br><span class="line"></span><br><span class="line"><span class="comment">## 当一个POD中有多个容器时，使用-c指定容器名，连接到指定的容器</span></span><br><span class="line">[root@master01 kubernetes]# kubectl <span class="built_in">exec</span> -it nginx-busybox -c busybox-container -- /bin/sh</span><br></pre></td></tr></table></figure><h2 id="pod的网络共享">pod的网络共享</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.POD内的容器使用Container模式共享根容器的网络</span><br><span class="line">2.容器看到的网络设备信息和根容器完全相同</span><br><span class="line">3.POD内的多个容器可以使用localhost进行网络通讯</span><br><span class="line">4.POD内的多个容器不能绑定相同的端口</span><br><span class="line">5.POD的生命周期和根容器一样，如果根容器退出了，POD就退出了</span><br></pre></td></tr></table></figure><h2 id="pod的文件共享">pod的文件共享</h2><p><img src="C:/Users/Dell/AppData/Roaming/Typora/typora-user-images/image-20241002101149735.png" alt="image-20241002101149735"></p><h3 id="挂载方式hostPath">挂载方式hostPath</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">[root@master01 kubernetes]# <span class="built_in">cat</span> mysql.yaml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: mysql57-pod</span><br><span class="line">  namespace: default</span><br><span class="line">  labels:</span><br><span class="line">    app: mysql</span><br><span class="line">    run: mysql</span><br><span class="line">spec:</span><br><span class="line">  volumes:</span><br><span class="line">  - name: mysql-data</span><br><span class="line">  <span class="comment">#宿主机挂载的目录</span></span><br><span class="line">    hostPath:</span><br><span class="line">      path: /data/mysql</span><br><span class="line">  containers:</span><br><span class="line">  - name: mysql57-container</span><br><span class="line">    image: mysql:5.7</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">  <span class="built_in">env</span>:</span><br><span class="line">  - name: MYSQL_ROOT_PASSWORD</span><br><span class="line">    value: <span class="string">&#x27;123&#x27;</span></span><br><span class="line">  - name: MYSQL_DATABASE</span><br><span class="line">    value: <span class="string">&#x27;wordpress&#x27;</span></span><br><span class="line">  - name: MYSQL_USER</span><br><span class="line">    value: <span class="string">&#x27;wp_user&#x27;</span></span><br><span class="line">  - name: MYSQL_PASSWORD</span><br><span class="line">    value: <span class="string">&#x27;123&#x27;</span></span><br><span class="line">  <span class="comment">#传递命令指定字符集</span></span><br><span class="line">  args:</span><br><span class="line">  - --character-set-server=utf8mb4</span><br><span class="line">  - --collation-server=utf8mb4_unicode_ci</span><br><span class="line">  volumeMounts:</span><br><span class="line">  <span class="comment">#name要和上面挂载目录的name一致，mountPath是容器内的要挂载的目录</span></span><br><span class="line">  - name: mysql-data</span><br><span class="line">    mountPath: /var/lib/mysql</span><br></pre></td></tr></table></figure><h3 id="hostPath的type类型">hostPath的type类型</h3><blockquote><p>hostPath:<br>path: string<br>type : string</p><p>type 为空时为默认类型</p><p><code>官方：https://kubernetes.io/docs/concepts/storage/volumes/#hostpath</code></p></blockquote><table><thead><tr><th>type类型</th><th>说明</th></tr></thead><tbody><tr><td>“”</td><td>为空时   默认</td></tr><tr><td>DirectoryOrCreate</td><td>目录必须存在，权限必须是755</td></tr><tr><td>Directory</td><td>目录必须存在</td></tr><tr><td>FileOrCreate</td><td>文件必须存在，权限必须是644</td></tr><tr><td>File</td><td>文件必须存在</td></tr><tr><td>Socket</td><td>挂载socket文件</td></tr><tr><td>CharDevice</td><td>挂载字符设备文件（键盘，终端…）</td></tr><tr><td>BlockDevice</td><td>挂载快设备文件（磁盘，U盘，移动硬盘…）</td></tr></tbody></table><h3 id="挂载方式emptyDir">挂载方式emptyDir</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 将pod内容器目录映射到宿主机上的一个临时目录中，如果POD结束，目录也会被删除</span></span><br><span class="line">[root@master01 kubernetes]# <span class="built_in">cat</span> mysql.yaml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: mysql57-pod</span><br><span class="line">  namespace: default</span><br><span class="line">  labels:</span><br><span class="line">    app: mysql</span><br><span class="line">    run: mysql</span><br><span class="line">spec:</span><br><span class="line">  volumes:</span><br><span class="line">  - name: mysql-data</span><br><span class="line">    hostPath:</span><br><span class="line">      path: /data/mysql</span><br><span class="line">  - name: empty-data</span><br><span class="line">    emptyDir: &#123;&#125;</span><br><span class="line">  containers:</span><br><span class="line">  - name: mysql57-container</span><br><span class="line">    image: mysql:5.7</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">  <span class="built_in">env</span>:</span><br><span class="line">  - name: MYSQL_ROOT_PASSWORD</span><br><span class="line">    value: <span class="string">&#x27;123&#x27;</span></span><br><span class="line">  - name: MYSQL_DATABASE</span><br><span class="line">    value: <span class="string">&#x27;wordpress&#x27;</span></span><br><span class="line">  - name: MYSQL_USER</span><br><span class="line">    value: <span class="string">&#x27;wp_user&#x27;</span></span><br><span class="line">  - name: MYSQL_PASSWORD</span><br><span class="line">    value: <span class="string">&#x27;123&#x27;</span></span><br><span class="line">  args:</span><br><span class="line">  - --character-set-server=utf8mb4</span><br><span class="line">  - --collation-server=utf8mb4_unicode_ci</span><br><span class="line">  volumeMounts:</span><br><span class="line">  - name: empty-data</span><br><span class="line">    mountPath: /var/lib/mysql</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">## 将一个POD内的两个容器共享目录</span></span><br><span class="line">[root@master01 kubernetes]# <span class="built_in">cat</span> busybox.yaml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-busybox</span><br><span class="line">  namespace: default</span><br><span class="line">spec:</span><br><span class="line">  volumes:</span><br><span class="line">  - name: empty-data</span><br><span class="line">    emptyDir: &#123;&#125;</span><br><span class="line">  containers:</span><br><span class="line">  - name: nginx-container</span><br><span class="line">    image: nginx:alpine</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    volumeMounts:</span><br><span class="line">    - name: empty-data</span><br><span class="line">      mountPath: /usr/share/nginx/html</span><br><span class="line">  - name: c7-container</span><br><span class="line">    image: centos:7</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    <span class="built_in">command</span>: [<span class="string">&quot;/bin/sh&quot;</span>,<span class="string">&quot;-c&quot;</span>,<span class="string">&quot;tail -f /etc/hosts&quot;</span>]</span><br><span class="line">    volumeMounts:</span><br><span class="line">    - name: empty-data</span><br><span class="line">      mountPath: /opt/ html</span><br></pre></td></tr></table></figure><h2 id="标签的使用及设置">标签的使用及设置</h2><h3 id="node节点打标签">node节点打标签</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">kubectl get [资源] -n 名称空间 --show-labels</span><br><span class="line"><span class="comment">## 查看node标签</span></span><br><span class="line">[root@master01 ~]# kubectl get nodes --show-labels</span><br><span class="line"></span><br><span class="line"><span class="comment">#给node打标签</span></span><br><span class="line">[root@master01 ~]# kubectl label node node01 MEM=16g</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看node角色标签role</span></span><br><span class="line">[root@master kubernetes]# kubectl get nodes </span><br><span class="line">NAME     STATUS   ROLES    AGE     VERSION</span><br><span class="line">master   Ready    master   5d15h   v1.19.3</span><br><span class="line">node01   Ready    None     5d15h   v1.19.3</span><br><span class="line">node02   Ready    None     5d15h   v1.19.3</span><br><span class="line">node03   Ready    None     5d15h   v1.19.3</span><br><span class="line"></span><br><span class="line"><span class="comment">#给node角色标签role</span></span><br><span class="line">[root@master kubernetes]# kubectl label node node01 node-role.kubernetes.io/node=</span><br><span class="line">[root@master kubernetes]# kubectl get nodes</span><br><span class="line">NAME     STATUS   ROLES        AGE     VERSION</span><br><span class="line">master   Ready    master       5d15h   v1.19.3</span><br><span class="line">node01   Ready    node         5d15h   v1.19.3</span><br><span class="line">node02   Ready    None         5d15h   v1.19.3</span><br><span class="line">node03   Ready    None         5d15h   v1.19.3</span><br><span class="line"></span><br><span class="line">kubectl label node node01 node-role.kubernetes.io/node=</span><br><span class="line">                   节点名    调用接口             /roles标签名=</span><br><span class="line">                   </span><br><span class="line"><span class="comment">#删除node角色标签role</span></span><br><span class="line">[root@master kubernetes]# kubectl label node node01 node-role.kubernetes.io/node-</span><br></pre></td></tr></table></figure><h3 id="给pod打标签">给pod打标签</h3><p><strong>给pod打标签</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看pod标签</span></span><br><span class="line">[root@master kubernetes]# kubectl get pods --show-labels </span><br><span class="line">NAME                     READY   STATUS    RESTARTS   AGE     LABELS</span><br><span class="line">nginx-565785f75c-tpjmj   1/1     Running   2          33h     app=nginx</span><br><span class="line">nginx-pod                1/1     Running   2          33h     &lt;none&gt;</span><br><span class="line">wordpress-pod            2/2     Running   0          2m11s   &lt;none&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#打标签</span></span><br><span class="line">kubectl label 资源类型 资源名 标签</span><br><span class="line">[root@master kubernetes]# kubectl label pod nginx-pod name=nginx</span><br><span class="line"><span class="string">&#x27;pod/nginx-pod labeled</span></span><br><span class="line"><span class="string">[root@master kubernetes]# kubectl get pods --show-labels </span></span><br><span class="line"><span class="string">NAME                     READY   STATUS    RESTARTS   AGE     LABELS</span></span><br><span class="line"><span class="string">nginx-565785f75c-tpjmj   1/1     Running   2          33h     app=nginx</span></span><br><span class="line"><span class="string">nginx-pod                1/1     Running   2          33h     name=nginx</span></span><br></pre></td></tr></table></figure><p><strong>使用资源清单打标签</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">Kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-pod</span><br><span class="line">  namespace: default</span><br><span class="line">  labels:</span><br><span class="line">    run: nginx</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - name: nginx-container</span><br><span class="line">    image: nginx:alpine</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br></pre></td></tr></table></figure><p><strong>利用标签，启动pod在指定标签的node上</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@master01 kubernetes]# <span class="built_in">cat</span> nginx-2.yaml</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-pod-v2</span><br><span class="line">  namespace: default</span><br><span class="line">  labels:</span><br><span class="line">    run: nginx</span><br><span class="line">spec:</span><br><span class="line"><span class="comment">#这里是选择起在标签是MEM: 16g的node节点上，使用kubectl get nodes --show-labels 查看node标签</span></span><br><span class="line">  nodeSelector:</span><br><span class="line">  MEM: 16g</span><br><span class="line">  containers:</span><br><span class="line">  - name: nginx-container-v2</span><br><span class="line">    image: nginx:alpine</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br></pre></td></tr></table></figure><h3 id="删除pod标签">删除pod标签</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">kubectl label [资源] [资源名] [标签名、标签key]-</span><br><span class="line"><span class="comment">#查看当前pod有的标签</span></span><br><span class="line">[root@master kubernetes]# kubectl get pods --show-labels</span><br><span class="line">NAME                     READY   STATUS    RESTARTS   AGE   LABELS</span><br><span class="line">nginx-565785f75c-tpjmj   1/1     Running   2          35h   app=nginx,pod-template-hash=565785f75c</span><br><span class="line">nginx-pod                1/1     Running   2          34h   name=nginx</span><br><span class="line">wordpress-pod            2/2     Running   0          39m   &lt;none&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#删除pod标签</span></span><br><span class="line">[root@master kubernetes]# kubectl label pod nginx-pod name-</span><br><span class="line">pod/nginx-pod labeled</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看</span></span><br><span class="line">[root@master kubernetes]# kubectl get pods --show-labels</span><br><span class="line">NAME                     READY   STATUS    RESTARTS   AGE   LABELS</span><br><span class="line">nginx-565785f75c-tpjmj   1/1     Running   2          35h   app=nginx,pod-template-hash=565785f75c</span><br><span class="line">nginx-pod                1/1     Running   2          34h   &lt;none&gt;</span><br><span class="line">wordpress-pod            2/2     Running   0          39m   &lt;none&gt;</span><br></pre></td></tr></table></figure><h3 id="根据标签查找pod">根据标签查找pod</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@master kubernetes]# kubectl get pod --show-labels -l app</span><br><span class="line">NAME                     READY   STATUS    RESTARTS   AGE   LABELS</span><br><span class="line">nginx-565785f75c-tpjmj   1/1     Running   2          35h   app=nginx,pod-template-hash=565785f75c</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用  `-l`  查找指定的pod</span></span><br></pre></td></tr></table></figure><h3 id="根据标签删除pod">根据标签删除pod</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@master kubernetes]# kubectl delete pod -l app=nginx</span><br></pre></td></tr></table></figure><h2 id="kubectl用于排错命令">kubectl用于排错命令</h2><h3 id="describe">describe</h3><blockquote><p><code> kubectl describe pod</code></p><p>查看相关 Pod 的详细信息，帮助我们了解 Pod 的状态、配置和运行状况。尤其是Events可以帮助我们做一些故障排查。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# kubectl describe pod busybox-pod -n luay</span><br><span class="line"><span class="comment">#如果查看的pod的名称空间不是默认default，则需要指定 -n</span></span><br><span class="line">···</span><br><span class="line">Events:</span><br><span class="line">  Type    Reason     Age   From               Message</span><br><span class="line">  ----    ------     ----  ----               -------</span><br><span class="line">  Normal  Scheduled  18m   default-scheduler  Successfully assigned luay/busybox-pod to node03</span><br><span class="line">  Normal  Pulled     18m   kubelet            Container image <span class="string">&quot;busybox&quot;</span> already present on machine</span><br><span class="line">  Normal  Created    18m   kubelet            Created container busybox-container</span><br><span class="line">  Normal  Started    18m   kubelet            Started container busybox-container</span><br><span class="line">  Normal  Pulled     18m   kubelet            Container image <span class="string">&quot;nginx:alpine&quot;</span> already present on machine</span><br><span class="line">  Normal  Created    18m   kubelet            Created container nginx-container</span><br><span class="line">  Normal  Started    18m   kubelet            Started container nginx-container</span><br><span class="line">  </span><br><span class="line"><span class="comment">#查看node节点信息</span></span><br><span class="line">[root@master ~]# kubectl describe node master01</span><br></pre></td></tr></table></figure><h3 id="logs">logs</h3><blockquote><p><code> kubectl logs 资源名</code>   可以使用kubectl get pod  查看资源名</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;kubectl logs 资源名称&#x27;</span></span><br><span class="line">[root@master ~]# kubectl logs mysql80 </span><br><span class="line"></span><br><span class="line"><span class="comment">#实时查看日志</span></span><br><span class="line">[root@master ~]# kubectl logs -f mysql80 </span><br><span class="line"></span><br><span class="line"><span class="comment">#基于一个Pod内多个容器查看指的容器的日志   -c  指定容器名</span></span><br><span class="line">[root@master ~]# kubectl logs -f multiple-wordpress -c db</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;multiple-wordpress&#x27;</span> pod名</span><br><span class="line">-c 指定pod里的某一个容器名</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看pod上一个容器的日志（前提是该容器存在，若移除了则看不到）</span></span><br><span class="line"><span class="string">&#x27;这种情况存在于，杀掉了pod里某个容器，又被kubelet重新拉取了另一个新的容器,-p查看上个容器日志&#x27;</span></span><br><span class="line">[root@master ~]#  kubectl logs -f mysql80 -p</span><br><span class="line"><span class="string">&#x27;mysql80&#x27;</span> 容器名   ----待验证</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看5分钟内的日志信息， 默认是查看所有日志，可以自定义指定时间，例如: 5s, 2m, or 3h.</span></span><br><span class="line">[root@master ~]# kubectl logs -f mysql80 --since  5m</span><br></pre></td></tr></table></figure><h3 id="cp">cp</h3><p><strong>将本地的文件拷贝到Pod的容器中</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# kubectl <span class="built_in">cp</span> wordpress.yaml mysql80:/tmp</span><br><span class="line"></span><br><span class="line">如何查看？</span><br><span class="line">[root@master ~]# kubectl <span class="built_in">exec</span> -it mysql80 --<span class="built_in">ls</span> /tmp</span><br><span class="line">类似于docker <span class="built_in">exec</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#如果有多个容器，则需要使用-c指定 </span></span><br><span class="line">kubectl <span class="built_in">cp</span>  wordpress.yaml  -c wp multiple-wordpress:/</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;multiple-wordpress&#x27;</span>   <span class="comment">#pod名   ---待验证</span></span><br><span class="line"><span class="string">&#x27;wp&#x27;</span> <span class="comment">#容器名</span></span><br><span class="line"></span><br><span class="line">如果有多个容器，则需要使用-c指定容器的名称，若不指定，则默认Pod连接第一个容器</span><br></pre></td></tr></table></figure><h3 id="explain">explain</h3><p><strong>查看指定字段的帮助信息</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# kubectl explain pods.</span><br><span class="line">[root@master ~]# kubectl explain pods.metadata</span><br><span class="line">[root@master ~]# kubectl explain pods.metadata.name</span><br><span class="line">[root@master ~]# kubectl explain pods.spec.containers</span><br></pre></td></tr></table></figure><p><strong>常见的资源类型</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;string&gt;：</span><br><span class="line">表示一个字符串。</span><br><span class="line"></span><br><span class="line">&lt;Object&gt;:</span><br><span class="line">表示有下级字段。</span><br><span class="line"></span><br><span class="line"> &lt;[]Object&gt;:</span><br><span class="line">表示数组对象说可以有多个，每个对象的区分使用<span class="string">&quot;-&quot;</span>，同一个对象数组内的相关字段可以相互交换。</span><br><span class="line"></span><br><span class="line">&lt;boolean&gt;:</span><br><span class="line">只有<span class="literal">true</span>和<span class="literal">false</span>两个有效值。</span><br><span class="line"></span><br><span class="line">&lt;<span class="built_in">integer</span>&gt;:</span><br><span class="line">整型，表示的是一个整数。</span><br><span class="line"></span><br><span class="line">-required-</span><br><span class="line">表示该字段必须定义，不定义则会报错。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>02-k8s部署</title>
      <link href="/posts/24ecfc3b.html"/>
      <url>/posts/24ecfc3b.html</url>
      
        <content type="html"><![CDATA[<h2 id="环境准备">环境准备</h2><table><thead><tr><th>主机名</th><th>WanIP</th><th>LanIP</th><th>角色</th><th>应用</th><th>配置</th></tr></thead><tbody><tr><td>master01</td><td>10.0.0.200</td><td>172.16.1.200</td><td>master</td><td>kubectl、apiserver、 scheduler、controller、 etcd、kubelet、docker、 kube-proxy</td><td>1h2g</td></tr><tr><td>node01</td><td>10.0.0.201</td><td>172.16.1.201</td><td>node</td><td>kubelet、docker、kubeproxy、proxy</td><td>1h2g</td></tr><tr><td>node02</td><td>10.0.0.202</td><td>172.16.1.202</td><td>node</td><td>kubelet、docker、kubeproxy、proxy</td><td>1h2g</td></tr><tr><td>node03</td><td>10.0.0.203</td><td>172.16.1.203</td><td>node</td><td>kubelet、docker、kubeproxy、proxy</td><td>2h4g</td></tr></tbody></table><p><strong>IP规划</strong></p><table><thead><tr><th>三种Service</th><th>IP</th></tr></thead><tbody><tr><td>PodIP</td><td>10.2.0.0</td></tr><tr><td>ClusterIP</td><td>10.1.0.0</td></tr><tr><td>NodeIP</td><td>10.0.0.0</td></tr></tbody></table><h2 id="基础环境优化">基础环境优化</h2><blockquote><p>注意：四个节点都操作</p></blockquote><p><strong>1.配置kubelet配置文件，使用系统自带的Cgroup驱动和禁用swap</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# <span class="built_in">cat</span> &gt;/etc/sysconfig/kubelet &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">KUBELET_CGROUP_ARGS=&quot;--cgroup-driver=systemd&quot;</span></span><br><span class="line"><span class="string">KUBELET_EXTRA_ARGS=&quot;--fail-swap-on=false&quot;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">`注释`</span><br><span class="line"><span class="comment">## 让kubelet使用系统自带的Cgroup驱动</span></span><br><span class="line">KUBELET_CGROUP_ARGS=<span class="string">&quot;--cgroup-driver=systemd&quot;</span></span><br><span class="line"><span class="comment">## 让kubelet禁止使用swap（虚拟内存）</span></span><br><span class="line">KUBELET_EXTRA_ARGS=<span class="string">&quot;--fail-swap-on=false&quot;</span></span><br></pre></td></tr></table></figure><p><strong>2.内核参数调优</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]#  <span class="built_in">cat</span> &gt; /etc/sysctl.d/k8s.conf &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-iptables=1</span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-ip6tables=1</span></span><br><span class="line"><span class="string">net.ipv4.ip_forward=1</span></span><br><span class="line"><span class="string">vm.swappiness=0</span></span><br><span class="line"><span class="string">fs,file-max=52706963</span></span><br><span class="line"><span class="string">fs.nr_open=52706963</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">`注释`</span><br><span class="line"><span class="comment">## 开启iptables功能 ipv6</span></span><br><span class="line">net.bridge.bridge-nf-call-ip6tables=1</span><br><span class="line"><span class="comment">## 开启iptables功能 ipv4</span></span><br><span class="line">net.bridge.bridge-nf-call-iptables=1</span><br><span class="line"><span class="comment">## 开启内核转发</span></span><br><span class="line">net.ipv4.ip_forward=1</span><br><span class="line"><span class="comment">## 内核参数禁用swap</span></span><br><span class="line">vm.swappiness=0</span><br><span class="line"><span class="comment">## 文件描述符文件最大值</span></span><br><span class="line">fs,file-max=52706963</span><br><span class="line"><span class="comment">## 文件描述符开启数量</span></span><br><span class="line">fs.nr_open=52706963</span><br></pre></td></tr></table></figure><p><strong>3.更改docker源</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#添加docekr源</span></span><br><span class="line">[root@master ~]#  <span class="built_in">cat</span> &gt; /etc/yum.repos.d/docker-ce.repo &lt;&lt;<span class="string">&quot;EOF&quot;</span></span><br><span class="line">[docker-ce-stable]</span><br><span class="line">name=Docker CE Stable - <span class="variable">$basearch</span></span><br><span class="line">baseurl=https://download.docker.com/linux/centos/<span class="variable">$releasever</span>/<span class="variable">$basearch</span>/stable</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=https://download.docker.com/linux/centos/gpg</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#替换为华为源</span></span><br><span class="line">[root@master ~]# sed -i <span class="string">&#x27;s+download.docker.com+mirrors.huaweicloud.com/docker-ce+&#x27;</span> /etc/yum.repos.d/docker-ce.repo</span><br></pre></td></tr></table></figure><p><strong>4.安装时间同步服务</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# yum install -y chrony</span><br><span class="line">[root@master ~]# systemctl start chronyd</span><br><span class="line">[root@master ~]# systemctl <span class="built_in">enable</span> chronyd</span><br></pre></td></tr></table></figure><p><strong>5.关闭swap</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#临时关闭swap</span></span><br><span class="line">[root@master ~]#  swapoff -a &amp;&amp; sysctl -w vm.swappiness=0</span><br><span class="line"><span class="comment">#永久关闭</span></span><br><span class="line">[root@master ~]#  sed -i <span class="string">&#x27;/swap/d&#x27;</span> /etc/fstab</span><br><span class="line"><span class="comment">#查看是否关闭</span></span><br><span class="line">[root@master ~]# free -h</span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:           1.9G         95M        1.6G        9.5M        283M        1.7G</span><br><span class="line">Swap:            0B          0B          0B</span><br></pre></td></tr></table></figure><p><strong>6.加载ipvs模块</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# <span class="built_in">cat</span>  &gt; /etc/sysconfig/modules/ipvs.modules &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">#! /bin/bash</span></span><br><span class="line"><span class="string">modprobe -- ip_vs</span></span><br><span class="line"><span class="string">modprobe -- ip_vs_rr</span></span><br><span class="line"><span class="string">modprobe -- ip_vs_wrr</span></span><br><span class="line"><span class="string">modprobe -- ip_vs_sh</span></span><br><span class="line"><span class="string">modprobe -- nf_conntrack_ipv4</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#授权</span></span><br><span class="line">[root@master ~]# <span class="built_in">chmod</span> +x /etc/sysconfig/modules/ipvs.modules</span><br><span class="line"><span class="comment">#source使生效</span></span><br><span class="line">[root@master ~]# <span class="built_in">source</span> /etc/sysconfig/modules/ipvs.modules</span><br><span class="line"><span class="comment">#查看是否生效</span></span><br><span class="line">[root@master ~]# lsmod|grep -e <span class="string">&#x27;ip_vs&#x27;</span> -e <span class="string">&#x27;nf_conntrack_ipv&#x27;</span></span><br><span class="line">nf_conntrack_ipv4      15053  0 </span><br><span class="line">nf_defrag_ipv4         12729  1 nf_conntrack_ipv4</span><br><span class="line">ip_vs_sh               12688  0 </span><br><span class="line">ip_vs_wrr              12697  0 </span><br><span class="line">ip_vs_rr               12600  0 </span><br><span class="line">ip_vs                 145497  6 ip_vs_rr,ip_vs_sh,ip_vs_wrr</span><br><span class="line">nf_conntrack          133095  2 ip_vs,nf_conntrack_ipv4</span><br><span class="line">libcrc32c              12644  3 xfs,ip_vs,nf_conntrack</span><br><span class="line"></span><br><span class="line"><span class="comment">#了解下IPVS  LVS:ipvsadm</span></span><br></pre></td></tr></table></figure><h2 id="安装docker">安装docker</h2><blockquote><p>注意：所有节点执行</p></blockquote><p><strong>1.安装指定版本docekr和容器运行时</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# yum install -y docker-ce-19.03.15 docker-ce-cli-19.03.15 containerd.io</span><br><span class="line"></span><br><span class="line">`容器运行时，Docker、containerd、CRI-O`</span><br></pre></td></tr></table></figure><p><strong>2.启动和开机自启</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# systemctl start docker</span><br><span class="line">[root@master ~]# systemctl <span class="built_in">enable</span> docker</span><br></pre></td></tr></table></figure><p><strong>3.添加docker镜像加速</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# <span class="built_in">cat</span> &gt; /etc/docker/daemon.json &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    &quot;exec-opts&quot;: [&quot;native.cgroupdriver=systemd&quot;],</span></span><br><span class="line"><span class="string">    &quot;registry-mirrors&quot;: [</span></span><br><span class="line"><span class="string">    &quot;https://docker.1panel.live&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://dockercf.jsdelivr.fyi&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://docker-cf.registry.cyou&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://docker.chenby.cn&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://docker.jsdelivr.fyi&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://docker.m.daocloud.io&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://docker.m.daocloud.io&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://docker.mirrors.sjtug.sjtu.edu.cn&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://docker.mirrors.ustc.edu.cn&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://docker.nju.edu.cn&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://dockerproxy.com&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://docker.rainbond.cc&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://docker.registry.cyou&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://dockertest.jsdelivr.fyi&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://hub-mirror.c.163.com&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://hub.rat.dev/&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://mirror.aliyuncs.com&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://mirror.baidubce.com&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://mirror.iscas.ac.cn&quot;,</span></span><br><span class="line"><span class="string">    &quot;https://registry.docker-cn.com&quot;</span></span><br><span class="line"><span class="string">  ]</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">`<span class="string">&quot;exec-opts&quot;</span>: [<span class="string">&quot;native.cgroupdriver=systemd&quot;</span>], `#镜像加速使用系统Cgroup驱动</span><br></pre></td></tr></table></figure><p><strong>4.重启docerk</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# systemctl daemon-reload</span><br><span class="line">[root@master ~]# systemctl restart docker</span><br></pre></td></tr></table></figure><h2 id="安装kubeadm">安装kubeadm</h2><blockquote><p>注意：所有节点执行</p></blockquote><p><strong>1.更换kubernetes的yum源</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">&quot;EOF&quot;</span> &gt; /etc/yum.repos.d/kubernetes.repo</span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=https://mirrors.huaweicloud.com/kubernetes/yum/repos/kubernetes-el7-<span class="variable">$basearch</span></span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">repo_gpgcheck=0</span><br><span class="line">gpgkey=https://mirrors.huaweicloud.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.huaweicloud.com/kubernetes/yum/doc/rpm-package-key.gpg</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p><strong>2.下载指定版本kubernetes</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# yum install kubelet-1.19.3 kubeadm-1.19.3  kubectl-1.19.3  ipvsadm -y</span><br><span class="line"></span><br><span class="line">`kubelet`: node节点容器运行时的控制器 </span><br><span class="line">`kubeadm`: 做k8s集群 kubectl k8s的命令客户端</span><br><span class="line">`ipvsadm`: 加载ipvs模块</span><br></pre></td></tr></table></figure><p><strong>3.启动并加入开机自启</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# systemctl start kubelet</span><br><span class="line">[root@master ~]# systemctl <span class="built_in">enable</span> kubelet</span><br></pre></td></tr></table></figure><h2 id="初始化集群">初始化集群</h2><blockquote><p>:dango:注意：仅master节点执行</p><p>步骤1-3都是master节点执行</p></blockquote><p><strong>1.初始化集群</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# kubeadm init \</span><br><span class="line">--apiserver-advertise-address=10.0.0.200 \</span><br><span class="line">--image-repository registry.aliyuncs.com/google_containers  \</span><br><span class="line">--kubernetes-version=v1.19.3 \</span><br><span class="line">--service-cidr=10.1.0.0/16 \</span><br><span class="line">--pod-network-cidr=10.2.0.0/16 \</span><br><span class="line">--service-dns-domain=cluster.local \</span><br><span class="line">--ignore-preflight-errors=Swap \</span><br><span class="line">--ignore-preflight-errors=NumCPU</span><br><span class="line"></span><br><span class="line">`注释`</span><br><span class="line">`--apiserver-advertise-address=10.0.0.200`  <span class="comment">#当前master主机ip</span></span><br><span class="line">`--service-cidr=10.1.0.0/16` <span class="comment">#规划ClusterIP网段</span></span><br><span class="line">`--pod-network-cidr=10.2.0.0/16` <span class="comment">#规划的podIP</span></span><br><span class="line">`--service-dns-domain=cluster.local` <span class="comment">#使用本地DNS集群，k8会自己装Coredns</span></span><br><span class="line">`--ignore-preflight-errors=Swap`<span class="comment">#忽略Swap报错</span></span><br><span class="line">`--ignore-preflight-errors=NumCPU`<span class="comment">#忽略CPU报错</span></span><br><span class="line"></span><br><span class="line">`ClusterIP`: 用于构建容器化应用的内部通信网络，作为POD的负载均衡</span><br><span class="line"></span><br><span class="line"><span class="comment">###初始化时间比较长，没有报错等待即可</span></span><br></pre></td></tr></table></figure><p><strong>保存token</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">`初始化成功后会输入如下，你的和我的不一样，注意保存,24h后会消失`</span><br><span class="line">Your Kubernetes control-plane has initialized successfully!</span><br><span class="line">To start using your cluster, you need to run the following as a regular user:</span><br><span class="line">`#这个命令也保存，等一下直接复制执行`</span><br><span class="line">  <span class="built_in">mkdir</span> -p <span class="variable">$HOME</span>/.kube</span><br><span class="line">  <span class="built_in">sudo</span> <span class="built_in">cp</span> -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">  <span class="built_in">sudo</span> <span class="built_in">chown</span> $(<span class="built_in">id</span> -u):$(<span class="built_in">id</span> -g) <span class="variable">$HOME</span>/.kube/config</span><br><span class="line"></span><br><span class="line">You should now deploy a pod network to the cluster.</span><br><span class="line">Run <span class="string">&quot;kubectl apply -f [podnetwork].yaml&quot;</span> with one of the options listed at:</span><br><span class="line">  https://kubernetes.io/docs/concepts/cluster-administration/addons/</span><br><span class="line">Then you can <span class="built_in">join</span> any number of worker nodes by running the following on each as root:</span><br><span class="line">kubeadm <span class="built_in">join</span> 10.0.0.200:6443 --token ao4unc.i520imoy7frmmucj \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:77e1fdf379200e1e377304865da17a4f35212955eaf331d2df736c452a2e82f8 </span><br></pre></td></tr></table></figure><blockquote><p>!!!  到这一步前面没报错就可以打快照，万一后面出错方便回滚，建议所有节点都可以打一次，如果报错可以回滚到同一起始点</p></blockquote><blockquote><p>!! 如果时间太久忘记加入令牌的命令，执行命令</p><p><code>kubeadm token create --print-join-command</code></p><p>获取新的join令牌</p></blockquote><p><strong>2.创建配置文件目录</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]#   <span class="built_in">mkdir</span> -p <span class="variable">$HOME</span>/.kube</span><br><span class="line">[root@master ~]#   <span class="built_in">sudo</span> <span class="built_in">cp</span> -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">[root@master ~]#   <span class="built_in">sudo</span> <span class="built_in">chown</span> $(<span class="built_in">id</span> -u):$(<span class="built_in">id</span> -g) <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">`直接复制上面的三条输出`</span><br></pre></td></tr></table></figure><p><strong>3.查看k8s集群节点</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# kubectl get nodes</span><br><span class="line">NAME     STATUS     ROLES    AGE   VERSION</span><br><span class="line">master   NotReady   master   11m   v1.19.3</span><br></pre></td></tr></table></figure><p><strong>4.其他node节点加入集群</strong></p><blockquote><p>注意：这里是3个node节点执行  <code>复制自己的，含有token的命令，不要复制我的</code></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@node01 ~]# kubeadm <span class="built_in">join</span> 10.0.0.200:6443 --token ao4unc.i520imoy7frmmucj \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:77e1fdf379200e1e377304865da17a4f35212955eaf331d2df736c452a2e82f8 </span><br><span class="line">    </span><br><span class="line">[root@node02 ~]# kubeadm <span class="built_in">join</span> 10.0.0.200:6443 --token ao4unc.i520imoy7frmmucj \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:77e1fdf379200e1e377304865da17a4f35212955eaf331d2df736c452a2e82f8 </span><br><span class="line"></span><br><span class="line">[root@node03 ~]# kubeadm <span class="built_in">join</span> 10.0.0.200:6443 --token ao4unc.i520imoy7frmmucj \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:77e1fdf379200e1e377304865da17a4f35212955eaf331d2df736c452a2e82f8 </span><br><span class="line">···</span><br><span class="line">Run <span class="string">&#x27;kubectl get nodes&#x27;</span> on the control-plane to see this node <span class="built_in">join</span> the cluster.</span><br></pre></td></tr></table></figure><p><strong>5.查看k8s集群</strong></p><blockquote><p>去master节点看</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# kubectl get nodes</span><br><span class="line">NAME     STATUS     ROLES    AGE     VERSION</span><br><span class="line">master   NotReady   master   17m     v1.19.3</span><br><span class="line">node01   NotReady   &lt;none&gt;   3m12s   v1.19.3</span><br><span class="line">node02   NotReady   &lt;none&gt;   3m32s   v1.19.3</span><br><span class="line">node03   NotReady   &lt;none&gt;   3m27s   v1.19.3</span><br><span class="line">`看到四个节点NotReady即OK，因为还未配置网络，不能跨主机通信`</span><br></pre></td></tr></table></figure><p><strong>6.设置Kube-proxy使用ipvs模式</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">`k8s默认使用的是iptables防火墙，可以修改成性能更高的ipvs模式，该模式LVS也在使用`</span><br><span class="line">[root@master01 ~]# kubectl edit cm kube-proxy -n kube-system</span><br><span class="line">mode: <span class="string">&quot;&quot;</span> --&gt;  mode: <span class="string">&quot;ipvs&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#搜mode，添上ipvs即可</span></span><br></pre></td></tr></table></figure><p><strong>7.查看指定名称空间中pod相信信息</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# kubectl get pod -n kube-system</span><br><span class="line">NAME                             READY   STATUS    RESTARTS   AGE</span><br><span class="line">coredns-6d56c8448f-spslt         0/1     Pending   0          26m</span><br><span class="line">coredns-6d56c8448f-x5lqj         0/1     Pending   0          26m</span><br><span class="line">etcd-master                      1/1     Running   0          26m</span><br><span class="line">kube-apiserver-master            1/1     Running   0          26m</span><br><span class="line">kube-controller-manager-master   1/1     Running   0          26m</span><br><span class="line">kube-proxy-qmbtd                 1/1     Running   0          26m</span><br><span class="line">kube-proxy-sqnbb                 1/1     Running   0          12m</span><br><span class="line">kube-proxy-t7hcw                 1/1     Running   0          12m</span><br><span class="line">kube-proxy-xzv7f                 1/1     Running   0          12m</span><br><span class="line">kube-scheduler-master            1/1     Running   0          26m</span><br><span class="line"></span><br><span class="line">`状态没异常即可，除Pending和Running之外的状态都是不正常的，检查是否步骤出错`</span><br><span class="line"></span><br><span class="line">`coredns-6d56c8448f-spslt`<span class="comment">#dns服务器</span></span><br><span class="line">`coredns-6d56c8448f-x5lqj`<span class="comment">#dns服务器</span></span><br><span class="line">`etcd-master` <span class="comment">#数据库所有节点的存储</span></span><br><span class="line">`kube-apiserver-master`<span class="comment">#集群的控制中心--&#x27;司令部&#x27;</span></span><br><span class="line">`kube-controller-manager-master` <span class="comment">#维护集群的状态--&#x27;控制器&#x27;</span></span><br><span class="line">`kube-proxy-qmbtd`<span class="comment">#负责将网络流量转发到正确的Pod、端口映射</span></span><br><span class="line">`kube-proxy-sqnbb`</span><br><span class="line">`kube-proxy-t7hcw`</span><br><span class="line">`kube-proxy-xzv7f`</span><br><span class="line">`kube-scheduler-master`<span class="comment">#调度器</span></span><br></pre></td></tr></table></figure><p><strong>8.查看指定名称空间中pod详细信息</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# kubectl get pod -n kube-system -o wide</span><br><span class="line">NAME                             READY   STATUS    RESTARTS   AGE   IP        </span><br><span class="line">coredns-6d56c8448f-spslt         0/1     Pending   0          42m   &lt;none&gt;    </span><br><span class="line">coredns-6d56c8448f-x5lqj         0/1     Pending   0          42m   &lt;none&gt;    </span><br><span class="line">etcd-master                      1/1     Running   0          42m   10.0.0.200</span><br><span class="line">kube-apiserver-master            1/1     Running   0          42m   10.0.0.200</span><br><span class="line">kube-controller-manager-master   1/1     Running   0          42m   10.0.0.200</span><br><span class="line">kube-proxy-qmbtd                 1/1     Running   0          42m   10.0.0.200</span><br><span class="line">kube-proxy-sqnbb                 1/1     Running   0          28m   10.0.0.203</span><br><span class="line">kube-proxy-t7hcw                 1/1     Running   0          28m   10.0.0.201</span><br><span class="line">kube-proxy-xzv7f                 1/1     Running   0          28m   10.0.0.202</span><br><span class="line">kube-scheduler-master            1/1     Running   0          42m   10.0.0.200</span><br><span class="line"></span><br><span class="line">`检查状态是否都是Running，比对下是否步骤有出入`</span><br></pre></td></tr></table></figure><p><strong>9.查看名称空间</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# kubectl get namespace</span><br><span class="line">NAME              STATUS   AGE</span><br><span class="line">default           Active   45m</span><br><span class="line">kube-node-lease   Active   45m</span><br><span class="line">kube-public       Active   45m</span><br><span class="line">kube-system       Active   45m</span><br><span class="line"></span><br><span class="line">`namespace 可以简写为 ns`</span><br><span class="line">[root@master ~]# kubectl get ns</span><br></pre></td></tr></table></figure><p><strong>10.重启kube-proxy</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">`删除所有proxy`</span><br><span class="line">kubectl get pod -n kube-system|grep <span class="string">&#x27;kube-proxy&#x27;</span>|awk <span class="string">&#x27;&#123;print &quot;kubectl delete pod -n kube-system &quot;$1&#125;&#x27;</span>|bash</span><br><span class="line"></span><br><span class="line">`#删除单个proxy`</span><br><span class="line">kubectl delete pod -n kube-system kube-proxy名字 `例如kube-proxy-qmbtd`</span><br><span class="line"></span><br><span class="line">`#因为k8会自动拉起停掉的pod，所以删除即可重启`</span><br></pre></td></tr></table></figure><p><strong>11.再次检查状态</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# kubectl get pod -n kube-system -o wide</span><br><span class="line">NAME                             READY   STATUS    RESTARTS   AGE   IP        </span><br><span class="line">coredns-6d56c8448f-spslt         0/1     Pending   0          52m   &lt;none&gt;    </span><br><span class="line">coredns-6d56c8448f-x5lqj         0/1     Pending   0          52m   &lt;none&gt;    </span><br><span class="line">etcd-master                      1/1     Running   0          52m   10.0.0.200</span><br><span class="line">kube-apiserver-master            1/1     Running   0          52m   10.0.0.200</span><br><span class="line">kube-controller-manager-master   1/1     Running   0          52m   10.0.0.200</span><br><span class="line">kube-proxy-62xz4                 1/1     Running   0          47s   10.0.0.203</span><br><span class="line">kube-proxy-gxz9p                 1/1     Running   0          35s   10.0.0.202</span><br><span class="line">kube-proxy-sfzzf                 1/1     Running   0          37s   10.0.0.201</span><br><span class="line">kube-proxy-vjgc5                 1/1     Running   0          49s   10.0.0.200</span><br><span class="line">kube-scheduler-master            1/1     Running   0          52m   10.0.0.200</span><br><span class="line"></span><br><span class="line">`检查状态是否异常，如有异常，比对之前步骤，也可查看系统日志报错`</span><br></pre></td></tr></table></figure><h2 id="配置flannel">配置flannel</h2><p><strong>1.修改flannel资源清单</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">`kube-flannel.yml`</span><br><span class="line"><span class="comment">#下载链接 https://github.com/flannel-io/flannel/blob/master/Documentation/kube-flannel.yml</span></span><br><span class="line"></span><br><span class="line">[root@master ~]# vim kube-flannel.yml</span><br><span class="line"><span class="comment">#1.将Network网段改为10.2.0.0/16</span></span><br><span class="line">  net-conf.json: |</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;Network&quot;</span>: <span class="string">&quot;10.2.0.0/16&quot;</span>,</span><br><span class="line">      <span class="string">&quot;EnableNFTables&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="string">&quot;Backend&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;Type&quot;</span>: <span class="string">&quot;vxlan&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.将容器绑定网卡eth0   在`- --kube-subnet-mgr`  后面加上`- --iface=eth0` 如下</span></span><br><span class="line">containers:</span><br><span class="line">- args:</span><br><span class="line">- --ip-masq</span><br><span class="line">- --kube-subnet-mgr</span><br><span class="line">- --iface=eth0</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.删除如下三行（意思是，只有标签是app的节点才能下载flannel）</span></span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: flannel</span><br></pre></td></tr></table></figure><p><strong>2.应用flannel资源清单</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 应用flannel资源清单</span></span><br><span class="line">[root@master ~]# kubectl apply -f kube-flannel.yml</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#检查flannel的pod是否成功启动</span></span><br><span class="line">[root@master ~]# kubectl get pod -n kube-flannel</span><br><span class="line">NAME                    READY   STATUS                  RESTARTS   AGE</span><br><span class="line">kube-flannel-ds-g9drp   0/1     Running                 0          6m9s</span><br><span class="line">kube-flannel-ds-rcwkv   1/1     Running                 0          6m9s</span><br><span class="line">kube-flannel-ds-txcn2   1/1     Running                 0          6m9s</span><br><span class="line">kube-flannel-ds-whd7p   1/1     Running                 0          6m9s</span><br><span class="line"></span><br><span class="line"><span class="comment">#检查k8s集群节点状态</span></span><br><span class="line">[root@master ~]# kubectl get nodes</span><br><span class="line">NAME     STATUS   ROLES    AGE   VERSION</span><br><span class="line">master   Ready    master   17m   v1.19.3</span><br><span class="line">node01   Ready    &lt;none&gt;   14m   v1.19.3</span><br><span class="line">node02   Ready    &lt;none&gt;   14m   v1.19.3</span><br><span class="line">node03   Ready    &lt;none&gt;   14m   v1.19.3</span><br><span class="line"></span><br><span class="line"><span class="comment">## 检查coredns是否正常运行</span></span><br><span class="line">[root@master ~]# kubectl get pod -n kube-system</span><br><span class="line">NAME                             READY   STATUS    RESTARTS   AGE</span><br><span class="line">coredns-6d56c8448f-hxpjc         1/1     Running   0          17m</span><br><span class="line">coredns-6d56c8448f-lb5m4         1/1     Running   0          17m</span><br><span class="line">etcd-master                      1/1     Running   0          17m</span><br><span class="line">kube-apiserver-master            1/1     Running   0          17m</span><br><span class="line">kube-controller-manager-master   1/1     Running   0          17m</span><br><span class="line">kube-proxy-46jqn                 1/1     Running   0          12m</span><br><span class="line">kube-proxy-4bnmp                 1/1     Running   0          12m</span><br><span class="line">kube-proxy-5lc7l                 1/1     Running   0          12m</span><br><span class="line">kube-proxy-r8cll                 1/1     Running   0          12m</span><br><span class="line">kube-scheduler-master            1/1     Running   0          17m</span><br></pre></td></tr></table></figure><p><strong>k8s命令补全</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum install -y bash-completion</span><br><span class="line"><span class="built_in">source</span> /usr/share/bash-completion/bash_completion</span><br><span class="line"><span class="built_in">source</span> &lt;(kubectl completion bash)</span><br><span class="line">kubectl completion bash &gt; /etc/bash_completion.d/kubectl</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>01-k8s介绍</title>
      <link href="/posts/5b9896c9.html"/>
      <url>/posts/5b9896c9.html</url>
      
        <content type="html"><![CDATA[<h2 id="什么是容器">什么是容器</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">容器的本质是一种特殊的进程。</span><br></pre></td></tr></table></figure><p><strong>容器的三要素</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Namespace<span class="comment">#做隔离，让进程只能看到Namespace中的世界；</span></span><br><span class="line">Cgroups<span class="comment">#做限制，让这个“世界”围着一个看不见的墙。</span></span><br><span class="line">rootfs<span class="comment">#做文件系统，rootfs 只是一个操作系统所包含的文件、配置和目录，并不包括操作系统内核。</span></span><br><span class="line"></span><br><span class="line">Namespace将集群内部的资源进行隔离划分。在Namespace中，形成逻辑上的不同项目组或用户组。</span><br></pre></td></tr></table></figure><p><strong>rootfs</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">挂载在容器根目录上、用来为容器进程提供隔离后执行环境的文件系统，就是所谓的“容器镜像”。它还有一个更为专业的名字，</span><br><span class="line">叫作：rootfs（根文件系统）。</span><br><span class="line"></span><br><span class="line">容器的rootfs由三部分组成，1：只读层、2：可读写层、3：init层</span><br><span class="line">1.只读层:都以增量的方式分别包含了  操作系统的一部分。</span><br><span class="line"></span><br><span class="line">2.可读写：就是专门用来存放你修改 rootfs 后产生的增量，无论是增、删、改，都发生在这里。而当我们使用完了这个被修改过的容器之后，</span><br><span class="line">还可以使用 docker commit 和 push 指令，保存这个被修改过的可读写层，并上传到 Docker Hub 上，供其他人使用；而与此同时，原先的</span><br><span class="line">只读层里的内容则不会有任何变化。这就是增量 rootfs 的好处。</span><br><span class="line"></span><br><span class="line">3.Init 层：是 Docker 项目单独生成的一个内部层，专门用来存放 /etc/hosts、/etc/resolv.conf 等信息。</span><br></pre></td></tr></table></figure><h2 id="认识kubernetes">认识kubernetes</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Kubernetes 是一个可移植、可扩展的开源平台，用于管理容器化的工作负载和服务，方便进行声明式配置和自动化。可以自动部署</span><br><span class="line">(automating deployments)，伸缩(scaling)和运维容器化应用(operations of application containers)的开源平台。以下</span><br><span class="line">简称k8s</span><br><span class="line">  </span><br><span class="line">k8s参考网站</span><br><span class="line">`k8s官方`: https://kubernetes.io/zh-cn/docs/home/</span><br><span class="line">`阿里云k8s-ACK`：https://www.aliyun.com/product/kubernetes</span><br><span class="line">`亚马逊k8s-EKS`：https://aws.amazon.com/cn/eks/?nc2=h_ql_prod_ct_eks</span><br><span class="line">`使用ansible一键部署k8s`：https://github.com/easzlab/kubeasz</span><br></pre></td></tr></table></figure><h2 id="k8s组件">k8s组件</h2><p><img src="https://cos.lukme.top/Pic/components-of-kubernetes-1726291732343-3.svg" alt="components-of-kubernetes"></p><p><strong>核心组件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.控制平面组件（Control Plane Components）  master节点</span><br><span class="line">2.控制容器运行时（docker）启动指定的容器      node节点</span><br></pre></td></tr></table></figure><p><strong>k8s各个组件功能说明</strong></p><h3 id="1-UI-CLI">(1)UI,CLI</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">统称API用于发送请求给Kubernetes（K8S）集群。</span><br><span class="line"></span><br><span class="line"><span class="comment">## K8S三大接口API二次开发，调用接口</span></span><br><span class="line">CRI：runtime，容器操作接口</span><br><span class="line">CNI：network，网络操作接口</span><br><span class="line">CSI：storage，存储操作接口</span><br></pre></td></tr></table></figure><h3 id="2-Kubernetes-Master">(2)Kubernetes Master</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">用于处理客户端的发来的请求，根据需求调度后端节点运行任务,就是<span class="string">&#x27;老板&#x27;</span>存在。其内部核心组件分为：</span><br><span class="line">1.`API Server`(K8S内置组件) <span class="string">&#x27;秘书&#x27;</span></span><br><span class="line">      提供了资源操作的唯一入口，并提供认证、授权、访问控制、API注册和发现等机制;</span><br><span class="line">      提供API服务的组件，是一个独立的守护进程，是Kubernetes集群的唯一入口（无论是客户端还是内部组件都必须通过它来访</span><br><span class="line">      问);它提供基于https(RESTful风格)和rpc协议(grpc是据说是将来要取代Https的RESTful风格)来提供服务的。它用来处理</span><br><span class="line">      客户端传来的JSON格式的请求数据而非HTML格式哟。它也是K8S集群唯一能操作etcd的组件</span><br><span class="line">     </span><br><span class="line">  2.`Scheduler`（K8S内置组件）  <span class="string">&#x27;人事&#x27;</span></span><br><span class="line">      负责资源的调度，按照预定的调度策略将Pod调度到相应的机器上;</span><br><span class="line">      比如客户端通过API Server提交了一个新增容器的请求，该请求保存在etcd中，etcd通过API Server通知Scheduler，</span><br><span class="line">      Scheduler接收到通知后会在管理的资源中选择一个最佳运行的节点去创建容器;该指令依旧存放在etcd中（Scheduler不能直</span><br><span class="line">      接访问etcd，而是通过API Server间接访问etcd）。</span><br><span class="line">      </span><br><span class="line">   3.`Controller manager`(K8S内置组件)</span><br><span class="line">       负责维护集群的状态，比如故障检测、自动扩展、滚动更新等；</span><br><span class="line">       该组件会watch Api Server组件用于管理K8S集群的组件，确保我们所创建的容器能够按照期望的状态运行的核心组件</span><br><span class="line">       (比如：监控集群的所有容器运行，当某个容器挂掉后它可以迅速在另一个节点启动)，我们甚至可以说</span><br><span class="line">       Controller manager是K8s的大脑。</span><br><span class="line">       </span><br><span class="line">    4.`etcd`(并不是K8S内置组件,由CoreOS研发,被RedHat收购，最终又被IBM公司收购)</span><br><span class="line">      etcd只能被API Server直接访问。是整个集群的核心，负责存储K8S请求数据所有的数据。保存了整个集群的状态；</span><br><span class="line">    etcd基于raft协议使用Golang语言开发的分布式强一致的键值对（key/value）数据库存储系统。存储方式和redis很像，</span><br><span class="line">    但是功能却比redis要强大，因为它支持数据的强一致性，也支持leader选举等各种分布式协同功能。</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">kube-apiserver(apiserver)：#所有Master上的组件工作都要经过apiserver</span><br><span class="line">etcd：                     <span class="comment">#存储所有命令、资源清单、webUI操作及其他组件数据</span></span><br><span class="line">kube-scheduler(scheduler)：#资源计算、资源调度</span><br><span class="line">kube-controller-manager(controller)：#维护集群状态</span><br><span class="line"></span><br><span class="line">`当某个Node意外宕机时，Controller Manager会及时发现并执行自动化修复流程，确保集群始终处于预期的工作状态`</span><br></pre></td></tr></table></figure><h3 id="3-Kubernetes-Node">(3)Kubernetes Node</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">功能上有点类似于Hadoop中的DataNode节点,被Kubernetes调度的，即负责真正干活的节点（运行容器）。其内部核心组件分为：</span><br><span class="line">1.`kubelet`</span><br><span class="line">    负责维护容器的生命周期，同时也负责Volume（CVI）和网络（CNI）的管理;</span><br><span class="line">    该组件也会watch Api Server组件，即实时查看关于当前节点的任务，从而去执行创建或删除容器的任务</span><br><span class="line">    (以Docker为例，创建容器时就会调用docker的API去Image Registry去下载相应的容器并启动)。</span><br><span class="line">2.`Container runtime `</span><br><span class="line">    负责镜像管理以及Pod和容器的真正运行（CRI）；</span><br><span class="line">3.`kube-proxy`   <span class="string">&#x27;监工&#x27;</span></span><br><span class="line">    负责为Service提供cluster内部的服务发现和负载均衡；</span><br><span class="line">    kube-proxy说白了也是API Server的客户端,它实时监视(watch)着API Server上的资源变动(尤其是service资源变动),</span><br><span class="line">    它会把每个service资源变动在相应节点上定义为对外暴露相关规则(iptable或者ipvs)，比如对外暴露外网映射之类的。</span><br><span class="line"></span><br><span class="line">4.Pod   <span class="string">&#x27;Pod是K8S的最小单位&#x27;</span></span><br><span class="line">虽然我们说Kubernetes是容器编排系统,但是不得不说在K8S之上并不会直接运行容器,每个容器在K8S中都被重新封装成pod,说</span><br><span class="line">白了pod就是容器的外壳,但需要注意的是一个pod是可以存在多个容器的。每个pod被K8S当作一个原子单元进行管理;一个pod中</span><br><span class="line">有多个容器，这个pod里面的所有容器只能被调度到一台节点去执行，不能将同一个pod里面的多个容器拆分到不同的Node运行;</span><br><span class="line"></span><br><span class="line">1、Pod是K8S的最小单位</span><br><span class="line">2、Pod的IP地址是随机的，删除Pod会改变IP</span><br><span class="line">3、Pod都有一个根容器（一个pod至少有一个根容器）</span><br><span class="line">4、一个Pod内可以由一个容器或多个容器组成</span><br><span class="line">5、一个Pod内的容器共享根容器的网络、名称空间、和文件系统卷</span><br><span class="line">6、一个Pod内的网络地址由根容器提供</span><br><span class="line"></span><br><span class="line">5.`Fluentd`</span><br><span class="line">    如Fluentd-elasticsearch提供集群日志采集、存储与查询</span><br><span class="line"></span><br><span class="line">6.`Image Registry`</span><br><span class="line">    存放镜像文件的仓库，并不直接被Kubernetes集群管理，即并不算k8s原生组成部分，通常我们会自建私有的镜像仓库，</span><br><span class="line">    比如使用Harbor部署https高可用的镜像仓库</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">kubelet：控制容器运行时（docker）启动指定的容器</span><br><span class="line">容器运行时（Container runtime）：docker</span><br><span class="line">  - containerd</span><br><span class="line">  - CRI-O</span><br><span class="line">  - Docker Engine</span><br><span class="line">  - Mirantis Container Runtime</span><br><span class="line">kube-proxy：POD端口映射，网络相关</span><br></pre></td></tr></table></figure><h3 id="POD运行状态">POD运行状态</h3><table><thead><tr><th>状态</th><th>描述</th></tr></thead><tbody><tr><td>Pending（等待）</td><td>Pod已经被K8S系统接受，但是有一个或多个容器，尚未创建，亦未运行。此阶段包括等待Pod被调度的时间和通过网络下载镜像的时间</td></tr><tr><td>Running（运行）</td><td>Pod已经绑定到某个节点(node)，Pod中所有容器都已被创建，至少有一个容器仍在运行，或者处于启动或重启状态</td></tr><tr><td>Succeeded（成功）</td><td>Pod中所有容器都已成功终止，并且不会再重启</td></tr><tr><td>Failed（失败）</td><td>Pod中所有容器都已成功终止，并且有一个容器是因为失败而终止</td></tr><tr><td>Unknown（未知）</td><td>因为某些原因无法获取Pod状态，这种情况，通常是因为与Pod所在主机通信失败</td></tr></tbody></table><h2 id="k8s网络">k8s网络</h2><blockquote><p>Service也是K8S核心资源之一，Service定义了服务的入口地址，用来将后端的Pod服务暴露给外部的用户 访问。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">kubernetes的网络大致分为以下三类:</span><br><span class="line">  1.节点网络:</span><br><span class="line">      主要是指`Master`和各个`Node`之间进行通信的网络地址段。</span><br><span class="line">　2.pod网络:</span><br><span class="line">　　　　因为每个pod的<span class="string">&#x27;动态IP地址&#x27;</span>，所以每个pod并不知道想要访问的目的pod的IP地址，它们如果想要访问目的pod需要经过一</span><br><span class="line">　　　　个<span class="string">&#x27;service&#x27;</span>层。这个service有对每个pod的打了<span class="string">&#x27;标签&#x27;</span>，当任意一个节点的pod想要访问另外一个pod必须得过</span><br><span class="line">　　　　<span class="string">&#x27;service网络&#x27;</span>，service网络保存着<span class="string">&#x27;标签选择器&#x27;</span>，可以迅速匹配到pod想要范围另一个pod的真实IP地址，当pod拿到</span><br><span class="line">　　　　IP地址后就可以自行进行通信请求了。</span><br><span class="line">  3.service网络:</span><br><span class="line">　　　主要是为pod提供一个<span class="string">&#x27;标签选择器&#x27;</span>的功能，比如帮助一个pod去查询访问另外一个pod的label对应的真实IP地址。而</span><br><span class="line">　　　sevice网络在kubernetes1.11.x版本之前默认使用iptable实现的，在kubernetes 1.11.x版本之后引入了ipvs实现。</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;各个pod之间的通信过程概要&#x27;</span>:</span><br><span class="line">      每个pod都有被动态分配的IP地址，如果想要和另外一个pod进行通信，各个pod需要先和service网络进行通信，最终拿到</span><br><span class="line">      另一个想要访问pod的动态IP地址进行通信。</span><br></pre></td></tr></table></figure><h3 id="Service提供了两种网络资源">Service提供了两种网络资源</h3><p><img src="https://cos.lukme.top/Pic/image-20240916151114679.png" alt="image-20240916151114679"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">NodePort：宿主机端口映射ClusterIP端口对外提供服务</span><br><span class="line"></span><br><span class="line">ClusterIP：POD的负载均衡</span><br><span class="line">问题：POD的IP是随机的，如果一个POD宕机了，K8S会自动拉起一个新的POD，IP变化了如何加入到</span><br><span class="line">ClusterIP这个负载均衡集群中？</span><br><span class="line">解决方案：使用DNS解析POD的IP到一个<span class="string">&quot;字符串上&quot;</span>（标签）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">DNS：</span><br><span class="line">- coreDNS</span><br><span class="line">- bind9</span><br><span class="line">- dnsmsq</span><br></pre></td></tr></table></figure><h2 id="Label标签">Label标签</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">`Label标签`是K8S中非常重要的一个属性，Label标签就像身份证一样，可以用来识别K8S的对象。</span><br><span class="line">传统架构中，不同的服务应用之间通讯，都是通过IP和端口，但是在K8S中很多匹配关系都是通过标签来找。</span><br></pre></td></tr></table></figure><p><strong>Controller资源（控制器资源）</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Controller用来管理Pod。</span></span><br><span class="line"><span class="comment">## Pod控制器的种类有很多：</span></span><br><span class="line">- RC Replication Controller 控制Pod有多个副本</span><br><span class="line">- RS ReplicaSet RC控制器的升级版，可以自动拉起宕机的POD</span><br><span class="line">- Deployment 推荐使用，功能强大，包含了RS控制器，对镜像做版本管理</span><br><span class="line">- DaemonSet 保证所有的Node节点上，有且只有一个Pod运行</span><br><span class="line">- StatefulSet 有状态的应用，为Pod提供唯一标识，它可以保证部署和scale的顺序</span><br></pre></td></tr></table></figure><h2 id="创建一个pod流程">创建一个pod流程</h2><p><img src="https://cos.lukme.top/Pic/create-pod.png" alt="create-pod"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">`第一步：`</span><br><span class="line">    用户通过kubectl等接口提交创建Pod的yaml文件，向Kubernetes系统发起资源请求</span><br><span class="line">`第二步：`</span><br><span class="line">    Api-server接收到用户请求之后，会做出相应的认证，然后检查信息并且将元数据信息存储到etcd中，创建Pod资源初始化，</span><br><span class="line">    这是第一次写etcd动作</span><br><span class="line">`第三步：`</span><br><span class="line">    Scheduler通过list-watch的监听机制，查看要创建Pod资源，APIServer会立即把创建Pod的消息通知Scheduler，</span><br><span class="line">    Scheduler发现Pod的属性中Dest Node为空时（Dest Node=””），便会立即触发调度流程进行调度,而调度流程分为</span><br><span class="line">    以下几个步骤，如下图</span><br></pre></td></tr></table></figure><blockquote><p>‌<strong>kube-controller-manager</strong>‌：虽然不直接参与Pod的创建，但其内部的控制器（如ReplicaSet Controller）负责确保Pod的数量与预期一致，维护集群状态</p></blockquote><p><img src="https://cos.lukme.top/Pic/scheduler.jpeg" alt="scheduler"></p><blockquote><p>​    首先是kube-scheduler调度器用一组规则过滤掉不满足条件的主机，这个过程称为predicate，比如明确指定所需要的资源类型，这样就可以过滤掉不满足条件的主机</p></blockquote><blockquote><p>​    其次，对第一步筛选出的符合要求的主机进行打分，这个过程称为 priority，在此阶段，如果在 predicate过程中没有合适的节点，Pod 会一直处于pending状态，不断重试调度，直到有节点满足条件。</p></blockquote><blockquote><p><strong>选择优先级最高的节点</strong>：选择得分最高的主机，进行binding操作，结果存储到Etcd中</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">第四步：</span><br><span class="line">    kubelet根据调度结果执行Pod创建操作，绑定成功后，会启动容器运行时，container, docker run, scheduler会调用API</span><br><span class="line">    Server的API在etcd中创建一个bound Pod对象，它描述在一个工作节点上绑定运行的所有pod信息；</span><br><span class="line">    运行在每个工作节点上的kubelet也会定期与api-server同步bound Pod的信息，一旦发现在该工作节点上运行的bound Pod对</span><br><span class="line">    象没有更新，则调用Docker API创建并启动pod内的容器.</span><br><span class="line">    </span><br><span class="line">第五步：</span><br><span class="line">  kube-proxy为新创建的pod注册动态DNS到CoreOS，然后给pod的service添加对应的iptables规则，用于服务发现和负载均衡。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试</title>
      <link href="/posts/f007732d.html"/>
      <url>/posts/f007732d.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="ecc3b8954083c1c4265f5015a12da6fbb721d2f64e54cb4de0c849c9e0fa5522"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zabbix监控php和jvm</title>
      <link href="/posts/c6bfcf84.html"/>
      <url>/posts/c6bfcf84.html</url>
      
        <content type="html"><![CDATA[<h2 id="监控PHP">监控PHP</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.修改php配置文件</span></span><br><span class="line">[root@web01 ~]# vim /etc/php-fpm.d/www.conf</span><br><span class="line">pm.status_path = /php_status</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.修改nginx配置文件</span></span><br><span class="line">[root@web01 conf.d]# vim webapp.conf</span><br><span class="line">server&#123;</span><br><span class="line">listen 80;</span><br><span class="line">server_name _;</span><br><span class="line">location / &#123;</span><br><span class="line">root /code/webapp;</span><br><span class="line">index index.html;</span><br><span class="line">&#125;</span><br><span class="line">location /status &#123;</span><br><span class="line">stub_status on;</span><br><span class="line">&#125;</span><br><span class="line">location ~ ^/(php_status)$ &#123;</span><br><span class="line">include fastcgi_params;</span><br><span class="line">fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">fastcgi_param SCRIPT_FILENAME</span><br><span class="line">$document_root<span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 3.重启nginx和php</span></span><br><span class="line">[root@web01 conf.d]# systemctl restart nginx php-fpm</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20240807085016358.png" alt="image-20240807085016358"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line">pool: www</span><br><span class="line">process manager: dynamic</span><br><span class="line">start time: 02/Aug/2024:10:44:26 +0800</span><br><span class="line">start since: 44</span><br><span class="line">accepted conn: 1</span><br><span class="line">listen queue: 0</span><br><span class="line">max listen queue: 0</span><br><span class="line">listen queue len: 128</span><br><span class="line">idle processes: 4</span><br><span class="line">active processes: 1</span><br><span class="line">total processes: 5</span><br><span class="line">max active processes: 1</span><br><span class="line">max children reached: 0</span><br><span class="line">slow requests: 0</span><br><span class="line"></span><br><span class="line"><span class="comment">#PHP-FPM状态解释：</span></span><br><span class="line">pool <span class="comment">#fpm池名称,大多数为www</span></span><br><span class="line">process manager <span class="comment">#进程管理方式dynamic或者static</span></span><br><span class="line">start time <span class="comment">#启动日志,如果reload了fpm，时间会更新</span></span><br><span class="line">start since <span class="comment">#运行时间</span></span><br><span class="line">accepted conn <span class="comment">#当前池接受的请求数</span></span><br><span class="line">listen queue <span class="comment">#请求等待队列,如果这个值不为0,那么需要增加FPM的进程数量</span></span><br><span class="line">max listen queue <span class="comment">#请求等待队列最高的数量</span></span><br><span class="line">listen queue len <span class="comment">#socket等待队列长度</span></span><br><span class="line">idle processes <span class="comment">#空闲进程数量</span></span><br><span class="line">active processes <span class="comment">#活跃进程数量</span></span><br><span class="line">total processes <span class="comment">#总进程数量</span></span><br><span class="line">max active processes <span class="comment">#最大的活跃进程数量（FPM启动开始计算）</span></span><br><span class="line">max children reached <span class="comment">#程最大数量限制的次数，如果这个数量不为0，那说明你的最大进程数量过小,可以适当调整。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 监控脚本</span></span><br><span class="line">[root@web01 scripts]# <span class="built_in">cat</span> php_status.sh</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">PHPFPM_COMMAND=<span class="variable">$1</span></span><br><span class="line">PHPFPM_URL=<span class="string">&quot;http://172.16.1.7/php_status&quot;</span></span><br><span class="line"><span class="function"><span class="title">start_since</span></span>()&#123;</span><br><span class="line">/usr/bin/curl -s <span class="string">&quot;<span class="variable">$&#123;PHPFPM_URL&#125;</span>&quot;</span> |awk <span class="string">&#x27;/^start since:/ &#123;print $NF&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">accepted_conn</span></span>()&#123;</span><br><span class="line">/usr/bin/curl -s <span class="string">&quot;<span class="variable">$&#123;PHPFPM_URL&#125;</span>&quot;</span> |awk <span class="string">&#x27;/^accepted conn:/ &#123;print $NF&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">listen_queue</span></span>()&#123;</span><br><span class="line">/usr/bin/curl -s <span class="string">&quot;<span class="variable">$&#123;PHPFPM_URL&#125;</span>&quot;</span> |awk <span class="string">&#x27;/^listen queue:/ &#123;print $NF&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">max_listen_queue</span></span>()&#123;</span><br><span class="line">/usr/bin/curl -s <span class="string">&quot;<span class="variable">$&#123;PHPFPM_URL&#125;</span>&quot;</span> |awk <span class="string">&#x27;/^max listen queue:/ &#123;print $NF&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">listen_queue_len</span></span>()&#123;</span><br><span class="line">/usr/bin/curl -s <span class="string">&quot;<span class="variable">$&#123;PHPFPM_URL&#125;</span>&quot;</span> |awk <span class="string">&#x27;/^listen queue len:/ &#123;print $NF&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">idle_processes</span></span>()&#123;</span><br><span class="line">/usr/bin/curl -s <span class="string">&quot;<span class="variable">$&#123;PHPFPM_URL&#125;</span>&quot;</span> |awk <span class="string">&#x27;/^idle processes:/ &#123;print $NF&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">active_processes</span></span>()&#123;</span><br><span class="line">/usr/bin/curl -s <span class="string">&quot;<span class="variable">$&#123;PHPFPM_URL&#125;</span>&quot;</span> |awk <span class="string">&#x27;/^active processes:/ &#123;print $NF&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">total_processes</span></span>()&#123;</span><br><span class="line">/usr/bin/curl -s <span class="string">&quot;<span class="variable">$&#123;PHPFPM_URL&#125;</span>&quot;</span> |awk <span class="string">&#x27;/^total processes:/ &#123;print $NF&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">max_active_processes</span></span>()&#123;</span><br><span class="line">/usr/bin/curl -s <span class="string">&quot;<span class="variable">$&#123;PHPFPM_URL&#125;</span>&quot;</span> |awk <span class="string">&#x27;/^max active processes:/ &#123;print $NF&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">max_children_reached</span></span>()&#123;</span><br><span class="line">/usr/bin/curl -s <span class="string">&quot;<span class="variable">$&#123;PHPFPM_URL&#125;</span>&quot;</span> |awk <span class="string">&#x27;/^max children reached:/ &#123;print $NF&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">slow_requests</span></span>()&#123;</span><br><span class="line">/usr/bin/curl -s <span class="string">&quot;<span class="variable">$&#123;PHPFPM_URL&#125;</span>&quot;</span> |awk <span class="string">&#x27;/^slow requests:/ &#123;print $NF&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$PHPFPM_COMMAND</span> <span class="keyword">in</span></span><br><span class="line">start_since)</span><br><span class="line">start_since;</span><br><span class="line">;;</span><br><span class="line">accepted_conn)</span><br><span class="line">accepted_conn;</span><br><span class="line">;;</span><br><span class="line">listen_queue)</span><br><span class="line">listen_queue;</span><br><span class="line">;;</span><br><span class="line">max_listen_queue)</span><br><span class="line">max_listen_queue;</span><br><span class="line">;;</span><br><span class="line">listen_queue_len)</span><br><span class="line">listen_queue_len;</span><br><span class="line">;;</span><br><span class="line">idle_processes)</span><br><span class="line">idle_processes;</span><br><span class="line">;;</span><br><span class="line">active_processes)</span><br><span class="line">active_processes;</span><br><span class="line">;;</span><br><span class="line">total_processes)</span><br><span class="line">total_processes;</span><br><span class="line">;;</span><br><span class="line">max_active_processes)</span><br><span class="line">max_active_processes;</span><br><span class="line">;;</span><br><span class="line">max_children_reached)</span><br><span class="line">max_children_reached;</span><br><span class="line">;;</span><br><span class="line">slow_requests)</span><br><span class="line">slow_requests;</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">echo</span> $<span class="string">&quot;USAGE:<span class="variable">$0</span></span></span><br><span class="line"><span class="string">&#123;start_since|accepted_conn|listen_queue|max_listen_queue|listen_queue_len|idle_p</span></span><br><span class="line"><span class="string">rocesses|active_processes|total_processes|max_active_processes|max_children_reac</span></span><br><span class="line"><span class="string">hed&#125;&quot;</span></span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 授权执行权限</span></span><br><span class="line">[root@web01 scripts]# <span class="built_in">chmod</span> +x php_status.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改客户端配置文件</span></span><br><span class="line">[root@web01 zabbix_agentd.d]# vim php_status.conf</span><br><span class="line">UserParameter=php.status[*],/etc/zabbix/zabbix_agentd.d/scripts/php_status.sh <span class="variable">$1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启</span></span><br><span class="line">[root@web01 zabbix_agentd.d]# systemctl restart zabbix-agent</span><br></pre></td></tr></table></figure><h2 id="监控JAVA进程JVM">监控JAVA进程JVM</h2><p>在Zabbix中，JMX监控数据的获取由专门的代理程序来实现,即Zabbix-Java-Gateway来负责数据的采 集，Zabbix-Java-Gateway和JMX的Java程序之间通信获取数据</p><p><strong>JMX在Zabbix中的运行流程</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.Zabbix-Server找Zabbix-Java-Gateway获取Java数据</span><br><span class="line">2.Zabbix-Java-Gateway找Java程序(zabbix-agent)获取数据</span><br><span class="line">3.Java程序返回数据给Zabbix-Java-Gateway</span><br><span class="line">4.Zabbix-Java-Gateway返回数据给Zabbix-Server</span><br><span class="line">5.Zabbix-Server进行数据展示</span><br></pre></td></tr></table></figure><h3 id="安装JAVA-gateway">安装JAVA-gateway</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">https://mirrors.tuna.tsinghua.edu.cn/zabbix/zabbix/5.0/rhel/7/x86_64/</span><br><span class="line"><span class="comment"># 安装</span></span><br><span class="line">[root@web02 ~]# rpm -ivh https://mirrors.tuna.tsinghua.edu.cn/zabbix/zabbix/5.0/rhel/7/x86_64/zabbix-java-gateway-5.0.42-1.el7.x86_64.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动java-gateway</span></span><br><span class="line">[root@web02 ~]# systemctl start zabbix-java-gateway</span><br><span class="line"></span><br><span class="line"><span class="comment">#zabbix服务端</span></span><br><span class="line"><span class="comment"># 修改zabbix_server配置文件</span></span><br><span class="line">[root@zabbix5-server ~]# vim /etc/zabbix/zabbix_server.conf</span><br><span class="line">JavaGateway=172.16.1.8</span><br><span class="line">JavaGatewayPort=10052</span><br><span class="line">StartJavaPollers=5</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启zabbix-server</span></span><br><span class="line">[root@zabbix5-server ~]# systemctl restart zabbix-server</span><br></pre></td></tr></table></figure><h3 id="tomcat开启JMX">tomcat开启JMX</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改tomcat启动脚本</span></span><br><span class="line">[root@web02 ~]# vim /usr/libexec/tomcat/server</span><br><span class="line">CATALINA_OPTS=<span class="string">&quot;<span class="variable">$CATALINA_OPTS</span></span></span><br><span class="line"><span class="string">-Dcom.sun.management.jmxremote</span></span><br><span class="line"><span class="string">-Dcom.sun.management.jmxremote.port=12345</span></span><br><span class="line"><span class="string">-Dcom.sun.management.jmxremote.authenticate=false</span></span><br><span class="line"><span class="string">-Dcom.sun.management.jmxremote.ssl=false</span></span><br><span class="line"><span class="string">-Djava.rmi.server.hostname=172.16.1.8&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 完整脚本</span></span><br><span class="line">[root@web02 ~]# <span class="built_in">cat</span> /usr/libexec/tomcat/server</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">. /usr/libexec/tomcat/preamble</span><br><span class="line"></span><br><span class="line">MAIN_CLASS=org.apache.catalina.startup.Bootstrap</span><br><span class="line"></span><br><span class="line">FLAGS=<span class="string">&quot;<span class="variable">$JAVA_OPTS</span>&quot;</span></span><br><span class="line">OPTIONS=<span class="string">&quot;-Dcatalina.base=<span class="variable">$CATALINA_BASE</span> \</span></span><br><span class="line"><span class="string">-Dcatalina.home=<span class="variable">$CATALINA_HOME</span> \</span></span><br><span class="line"><span class="string">-Djava.endorsed.dirs=<span class="variable">$JAVA_ENDORSED_DIRS</span> \</span></span><br><span class="line"><span class="string">-Djava.io.tmpdir=<span class="variable">$CATALINA_TMPDIR</span> \</span></span><br><span class="line"><span class="string">-Djava.util.logging.config.file=<span class="variable">$&#123;LOGGING_PROPERTIES&#125;</span> \</span></span><br><span class="line"><span class="string">-Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager&quot;</span></span><br><span class="line"></span><br><span class="line">CATALINA_OPTS=<span class="string">&quot;<span class="variable">$CATALINA_OPTS</span></span></span><br><span class="line"><span class="string">-Dcom.sun.management.jmxremote</span></span><br><span class="line"><span class="string">-Dcom.sun.management.jmxremote.port=12345</span></span><br><span class="line"><span class="string">-Dcom.sun.management.jmxremote.authenticate=false</span></span><br><span class="line"><span class="string">-Dcom.sun.management.jmxremote.ssl=false</span></span><br><span class="line"><span class="string">-Djava.rmi.server.hostname=172.16.1.8&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;start&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">  FLAGS=<span class="string">&quot;<span class="variable">$&#123;FLAGS&#125;</span> <span class="variable">$CATALINA_OPTS</span>&quot;</span></span><br><span class="line">  <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$&#123;SECURITY_MANAGER&#125;</span>&quot;</span> = <span class="string">&quot;true&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">    OPTIONS=<span class="string">&quot;<span class="variable">$&#123;OPTIONS&#125;</span> \</span></span><br><span class="line"><span class="string">    -Djava.security.manager \</span></span><br><span class="line"><span class="string">    -Djava.security.policy==<span class="variable">$&#123;CATALINA_BASE&#125;</span>/conf/catalina.policy&quot;</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">  run start</span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;stop&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">  run stop</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启tomcat</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart tomcat</span><br></pre></td></tr></table></figure><p><strong>web界面设置-新建主机</strong></p><p><img src="https://cos.lukme.top/Pic/image-20240807103619686.png" alt="image-20240807103619686"></p><p><strong>链接模板</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">搜jmx选择两个模板--添加</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20240807102022640.png" alt="image-20240807102022640"></p><p><img src="https://cos.lukme.top/Pic/image-20240807104224895.png" alt="image-20240807104224895"></p>]]></content>
      
      
      <categories>
          
          <category> 监控 </category>
          
          <category> zabbix </category>
          
      </categories>
      
      
        <tags>
            
            <tag> zabbix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zabbix自动发现</title>
      <link href="/posts/4b865a3.html"/>
      <url>/posts/4b865a3.html</url>
      
        <content type="html"><![CDATA[<p><strong>主动模式与被动模式区别</strong></p><p>​1.被动模式 (Zabbix-server轮询检测zabbix-agent)</p><p>​2.主动模式 (Zabbix-agent主动上报给Zabbix-server)</p><p><strong>主动模式与被被动模式选择如何选择</strong></p><p>​1.当Queue里有大量延迟的监控项</p><p>​2.当监控主机超过300+, 建议使用主动模式。</p><p><img src="https://cos.lukme.top/Pic/QQ_1723279232118.png" alt="QQ_1723279232118"></p><p><strong>zabbix工作模式</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">agent主动模式（自动注册）</span><br><span class="line">agent启动后自动将主机信息注册到zabbix-server中</span><br><span class="line"></span><br><span class="line">agent被动模式（自动发现）</span><br><span class="line">agent启动后由zabbix-server扫描，将信息保存在zabbix-server中</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="zabbix自动发现">zabbix自动发现</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Zabbix-server开启自动发现功能：</span></span><br><span class="line">[root@zabbix5-server ~]# vim /etc/zabbix/zabbix_server.conf</span><br><span class="line">StartDiscoverers=20</span><br><span class="line"></span><br><span class="line"><span class="comment">#重启客户端</span></span><br><span class="line">systemctl restart zabbix-agent</span><br></pre></td></tr></table></figure><p><strong>创建自动发现规则</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1723276932546.png" alt="QQ_1723276932546"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">测试时候，</span><br><span class="line">更新间隔  10s 是扫描一轮之后经过10s开启下次扫描</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/QQ_1723277097140.png" alt="QQ_1723277097140"></p><p><strong>创建自动发现动作（关联自动发现规则）</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1723277868304.png" alt="QQ_1723277868304"></p><p><img src="https://cos.lukme.top/Pic/QQ_1723277947268.png" alt="QQ_1723277947268"></p><p><img src="https://cos.lukme.top/Pic/QQ_1723278202906.png" alt="QQ_1723278202906"></p><p><img src="https://cos.lukme.top/Pic/QQ_1723278289428.png" alt="QQ_1723278289428"></p><p><img src="https://cos.lukme.top/Pic/QQ_1723278495118.png" alt="QQ_1723278495118"></p><p><strong>自动发现缺陷</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.网络发现速度太慢</span><br><span class="line">2.轮询扫描网段</span><br><span class="line">3.如果网段中存在不通的主机，会出现卡顿并且造成哦后续新增的服务器无法加入节点</span><br><span class="line">4.会导致server性能变缓慢，影响server性能</span><br></pre></td></tr></table></figure><h3 id="自动注册">自动注册</h3><p><strong>修改每台客户端配置文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.修改agent配置文件</span></span><br><span class="line">[root@lb01 ~]# vim /etc/zabbix/zabbix_agentd.conf</span><br><span class="line">Server=172.16.1.71  <span class="comment">#被动模式</span></span><br><span class="line">ServerActive=172.16.1.71  <span class="comment">#主动模式</span></span><br><span class="line">Hostname=web03 <span class="comment">#指定主机名</span></span><br><span class="line"></span><br><span class="line">[root@lb01 ~]# systemctl restart zabbix-agent</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>创建动作</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1723278758673.png" alt="QQ_1723278758673"></p><p><img src="https://cos.lukme.top/Pic/QQ_1723278911425.png" alt="QQ_1723278911425"></p><p><img src="https://cos.lukme.top/Pic/QQ_1723278968991.png" alt="QQ_1723278968991"></p>]]></content>
      
      
      <categories>
          
          <category> 监控 </category>
          
          <category> zabbix </category>
          
      </categories>
      
      
        <tags>
            
            <tag> zabbix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小米监控open-falcon</title>
      <link href="/posts/459a9148.html"/>
      <url>/posts/459a9148.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-open-falcon基本介绍">1. open-falcon基本介绍</h2><blockquote><p>Open-Falcon作为一款开源的互联网企业级监控系统解决方案，以其高性能、易扩展、灵活配置等特点，在互联网公司和大规模IT基础设施中得到了广泛应用。无论是企业IT运维、开发团队还是DevOps，都可以通过Open-Falcon提升运维效率和故障排除能力</p><h3 id="设计原理">设计原理</h3><p>Open-Falcon的设计原理主要包括以下几个部分：</p><ol><li><strong>模块架构</strong>：<ul><li><strong>数据采集与上报</strong>：通过falcon-agent组件自动发现并采集服务器的各种数据和指标，支持用户主动push和用户自定义插件。</li><li><strong>告警</strong>：Judge组件负责判断采集到的数据是否触发告警规则，并生成告警事件。</li><li><strong>归档与绘图</strong>：Graph组件负责存储监控数据，并提供绘图所需的接口。</li><li><strong>报警策略配置</strong>：用户可以在系统中配置多种报警策略，以满足不同的监控需求。</li></ul></li><li><strong>执行过程</strong>：<ul><li>falcon-agent采集到数据后，通过长连接迅速转发给Transfer组件。</li><li>Transfer组件负责分发数据给Judge和Graph组件，分别用于告警判定和绘图。</li><li>Judge组件根据报警策略判断数据是否触发告警，并将告警事件写入Redis消息队列。</li><li>Alarm组件监听Redis中的消息队列，将告警事件转发给微信、短信或邮件等通知方式。</li></ul></li></ol><h3 id="主要功能">主要功能</h3><ol><li><strong>数据采集</strong>：<ul><li>支持多种数据采集方式，包括Agent采集、API采集、脚本采集等。</li><li>falcon-agent能够高效采集系统指标、应用指标和自定义指标。</li></ul></li><li><strong>数据存储与分析</strong>：<ul><li>支持多种数据存储后端，如Graphite、OpenTSDB、InfluxDB等。</li><li>提供高效的数据存储和压缩算法，确保大规模数据的高效存储。</li></ul></li><li><strong>告警管理</strong>：<ul><li>提供灵活的告警规则配置，支持多种告警触发条件和通知方式。</li><li>内置智能的告警策略引擎，支持自动收敛，避免误报和漏报。</li></ul></li><li><strong>数据可视化</strong>：<ul><li>提供Web管理界面（Dashboard），方便用户查看监控图表和配置告警规则23。</li><li>支持自定义仪表盘和报告，便于数据展示和分享。</li></ul></li><li><strong>可扩展性</strong>：<ul><li>设计为分布式架构，支持高可用性和横向扩展。</li><li>提供丰富的扩展接口，支持自定义数据源和插件。</li></ul></li></ol><h3 id="使用场景">使用场景</h3><p>Open-Falcon可以应用于多种场景，包括：</p><ul><li><strong>企业IT运维</strong>：对数据中心、云服务器、网络设备进行实时监控，及时发现并解决问题。</li><li><strong>开发团队</strong>：监控应用和服务的性能，为持续集成与交付提供决策依据。</li><li><strong>DevOps</strong>：自动化运维流程，通过告警快速定位问题，缩短故障恢复时间。</li></ul><p>监控项目分为CPU、Load、内存、磁盘、IO、网络相关、内核参数、ss 统计输出、端口采集、核心服务的进程存活信息采集、关键业务进程资源消耗、NTP offset采集、DNS解析采集，这些指标，都是open-falcon的agent组件直接支持的。</p></blockquote><h2 id="2-open-falcon与其他监控工具的区别">2. open-falcon与其他监控工具的区别</h2><p><img src="D:%5CTypora%5Cdevops%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4%E5%B7%A5%E5%85%B7%5C10.open-falcon.assets%5CQQ_1722697497676.png" alt="img"></p><h2 id="3-环境部署">3. 环境部署</h2><table><thead><tr><th><strong>主机名</strong></th><th><strong>WanIP</strong></th><th><strong>LanIP</strong></th><th><strong>角色</strong></th><th><strong>应用</strong></th></tr></thead><tbody><tr><td>open-falcon</td><td>10.0.0.200</td><td>172.16.1.200</td><td>open-falcon服务端</td><td>open-falcon-server、MySQL</td></tr><tr><td>open-falcon-agent</td><td>10.0.0.201</td><td>172.16.1.201</td><td>open-falcon的客户端</td><td>open-falcon-agent</td></tr></tbody></table><blockquote><ul><li>CentOs7.9</li><li>2核4G</li><li>内存分配20G</li><li>镜像源：阿里源</li></ul></blockquote><h2 id="4-服务端部署">4. 服务端部署</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 更换阿里源和epel源</span></span><br><span class="line">[root@falcon ~]# <span class="built_in">mv</span> /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</span><br><span class="line">[root@falcon ~]# wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line">--2024-08-03 23:17:34--  http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line">Resolving mirrors.aliyun.com (mirrors.aliyun.com)... 180.178.233.232, 180.178.233.233, 180.178.245.235, ...</span><br><span class="line">Connecting to mirrors.aliyun.com (mirrors.aliyun.com)|180.178.233.232|:80... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 2523 (2.5K) [application/octet-stream]</span><br><span class="line">Saving to: ‘/etc/yum.repos.d/CentOS-Base.repo’</span><br><span class="line"></span><br><span class="line">100%[=============================================================================&gt;] 2,523       --.-K/s   <span class="keyword">in</span> 0.001s  </span><br><span class="line"></span><br><span class="line">2024-08-03 23:17:34 (2.84 MB/s) - ‘/etc/yum.repos.d/CentOS-Base.repo’ saved [2523/2523]</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 下载常用软件</span></span><br><span class="line">[root@falcon ~]# yum install git telnet net-tools tree nmap sysstat lrzsz dos2unix tcpdump ntpdate  wget <span class="comment">## -y</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 配置时间同步</span></span><br><span class="line">[root@falcon ~]# ntpdate cn.pool.ntp.org</span><br><span class="line"> 3 Aug 23:24:22 ntpdate[20532]: adjust time server 119.28.183.184 offset -0.435286 sec</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#开启缓存</span></span><br><span class="line">[root@falcon ~]# sed -i <span class="string">&#x27;s#keepcache=0#keepcache=1#g&#x27;</span> /etc/yum.conf </span><br><span class="line">[root@falcon ~]# grep keepcache /etc/yum.conf</span><br><span class="line">keepcache=1</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#关闭selinux</span></span><br><span class="line">sed -i <span class="string">&#x27;s/SELINUX=enforcing/SELINUX=disabled/g&#x27;</span> /etc/selinux/config</span><br><span class="line">setenforce 0</span><br><span class="line"> </span><br><span class="line"><span class="comment">#关闭防火墙</span></span><br><span class="line">systemctl stop firewalld.service</span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld.service</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 安装 redis</span></span><br><span class="line">[root@falcon ~]# yum install redis -y</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 启动redis</span></span><br><span class="line">[root@falcon ~]# redis-server &amp;</span><br><span class="line">[1] 20863</span><br><span class="line">[root@falcon ~]# 20863:C 03 Aug 23:27:25.244 <span class="comment"># Warning: no config file specified, using the default config. In order to specify a config file use redis-server /path/to/redis.conf</span></span><br><span class="line">20863:M 03 Aug 23:27:25.244 * Increased maximum number of open files to 10032 (it was originally <span class="built_in">set</span> to 1024).</span><br><span class="line">                _._                                                  </span><br><span class="line">           _.-``__ <span class="string">&#x27;&#x27;</span>-._                                             </span><br><span class="line">      _.-``    `.  `_.  <span class="string">&#x27;&#x27;</span>-._           Redis 3.2.12 (00000000/0) 64 bit</span><br><span class="line">  .-`` .-```.  ```\/    _.,_ <span class="string">&#x27;&#x27;</span>-._                                   </span><br><span class="line"> (    <span class="string">&#x27;      ,       .-`  | `,    )     Running in standalone mode</span></span><br><span class="line"><span class="string"> |`-._`-...-` __...-.``-._|&#x27;</span>` _.-<span class="string">&#x27;|     Port: 6379</span></span><br><span class="line"><span class="string"> |    `-._   `._    /     _.-&#x27;</span>    |     PID: 20863</span><br><span class="line">  `-._    `-._  `-./  _.-<span class="string">&#x27;    _.-&#x27;</span>                                   </span><br><span class="line"> |`-._`-._    `-.__.-<span class="string">&#x27;    _.-&#x27;</span>_.-<span class="string">&#x27;|                                  </span></span><br><span class="line"><span class="string"> |    `-._`-._        _.-&#x27;</span>_.-<span class="string">&#x27;    |           http://redis.io        </span></span><br><span class="line"><span class="string">  `-._    `-._`-.__.-&#x27;</span>_.-<span class="string">&#x27;    _.-&#x27;</span>                                   </span><br><span class="line"> |`-._`-._    `-.__.-<span class="string">&#x27;    _.-&#x27;</span>_.-<span class="string">&#x27;|                                  </span></span><br><span class="line"><span class="string"> |    `-._`-._        _.-&#x27;</span>_.-<span class="string">&#x27;    |                                  </span></span><br><span class="line"><span class="string">  `-._    `-._`-.__.-&#x27;</span>_.-<span class="string">&#x27;    _.-&#x27;</span>                                   </span><br><span class="line">      `-._    `-.__.-<span class="string">&#x27;    _.-&#x27;</span>                                       </span><br><span class="line">          `-._        _.-<span class="string">&#x27;                                           </span></span><br><span class="line"><span class="string">              `-.__.-&#x27;</span>                                               </span><br><span class="line"></span><br><span class="line">20863:M 03 Aug 23:27:25.244 <span class="comment"># WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.</span></span><br><span class="line">20863:M 03 Aug 23:27:25.244 <span class="comment"># Server started, Redis version 3.2.12</span></span><br><span class="line">20863:M 03 Aug 23:27:25.244 <span class="comment"># WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add &#x27;vm.overcommit_memory = 1&#x27; to /etc/sysctl.conf and then reboot or run the command &#x27;sysctl vm.overcommit_memory=1&#x27; for this to take effect.</span></span><br><span class="line">20863:M 03 Aug 23:27:25.244 <span class="comment"># WARNING you have Transparent Huge Pages (THP) support enabled in your kernel. This will create latency and memory usage issues with Redis. To fix this issue run the command &#x27;echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled&#x27; as root, and add it to your /etc/rc.local in order to retain the setting after a reboot. Redis must be restarted after THP is disabled.</span></span><br><span class="line">20863:M 03 Aug 23:27:25.244 * The server is now ready to accept connections on port 6379</span><br><span class="line">^C</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 安装mysql并设置开机自启</span></span><br><span class="line"></span><br><span class="line">[root@falcon ~]# wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm</span><br><span class="line">--2024-08-03 23:41:44--  http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm</span><br><span class="line">Resolving repo.mysql.com (repo.mysql.com)... 96.7.105.231, 2600:1417:8400:ab8::1d68, 2600:1417:8400:a87::1d68</span><br><span class="line">Connecting to repo.mysql.com (repo.mysql.com)|96.7.105.231|:80... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 6140 (6.0K) [application/x-redhat-package-manager]</span><br><span class="line">Saving to: ‘mysql-community-release-el7-5.noarch.rpm’</span><br><span class="line"></span><br><span class="line">100%[=============================================================================&gt;] 6,140       --.-K/s   <span class="keyword">in</span> 0s      </span><br><span class="line"></span><br><span class="line">2024-08-03 23:41:44 (783 MB/s) - ‘mysql-community-release-el7-5.noarch.rpm’ saved [6140/6140]</span><br><span class="line"></span><br><span class="line">[root@falcon ~]# ll</span><br><span class="line">total 200</span><br><span class="line">-rw-------. 1 root root   1413 May 13 15:22 anaconda-ks.cfg</span><br><span class="line">-rw-r--r--. 1 root root 188754 Apr 23 11:13 main.sh</span><br><span class="line">-rw-r--r--  1 root root   6140 Nov 12  2015 mysql-community-release-el7-5.noarch.rpm</span><br><span class="line"></span><br><span class="line">[root@falcon ~]# rpm -ivh mysql-community-release-el7-5.noarch.rpm </span><br><span class="line">Preparing...                          <span class="comment">################################# [100%]</span></span><br><span class="line">Updating / installing...</span><br><span class="line">   1:mysql-community-release-el7-5    <span class="comment">################################# [100%]</span></span><br><span class="line">   </span><br><span class="line">[root@falcon ~]# ll /etc/yum.repos.d/</span><br><span class="line">total 44</span><br><span class="line">-rw-r--r--  1 root root 2523 Aug  4  2022 CentOS-Base.repo</span><br><span class="line">-rw-r--r--. 1 root root 1675 May 13 16:46 CentOS-Base.repo.backup</span><br><span class="line">-rw-r--r--. 1 root root 1312 May 13 16:46 CentOS-CR.repo</span><br><span class="line">-rw-r--r--. 1 root root  649 May 13 16:46 CentOS-Debuginfo.repo</span><br><span class="line">-rw-r--r--. 1 root root  292 May 13 16:46 CentOS-fasttrack.repo</span><br><span class="line">-rw-r--r--. 1 root root  629 May 13 16:46 CentOS-Media.repo</span><br><span class="line">-rw-r--r--. 1 root root 1347 May 13 16:46 CentOS-Sources.repo</span><br><span class="line">-rw-r--r--. 1 root root  921 May 13 16:46 epel.repo</span><br><span class="line">-rw-r--r--. 1 root root 1020 May 13 16:46 epel-testing.repo</span><br><span class="line">-rw-r--r--  1 root root 1209 Jan 29  2014 mysql-community.repo</span><br><span class="line">-rw-r--r--  1 root root 1060 Jan 29  2014 mysql-community-source.repo</span><br><span class="line"></span><br><span class="line">[root@falcon ~]# yum install -y mysql-server</span><br><span class="line"></span><br><span class="line">[root@falcon ~]# systemctl start mysqld.service</span><br><span class="line">[root@falcon ~]# systemctl <span class="built_in">enable</span> mysqld.service</span><br><span class="line"></span><br><span class="line">[root@falcon ~]# netstat -lntup</span><br><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    </span><br><span class="line">tcp        0      0 0.0.0.0:6379            0.0.0.0:*               LISTEN      20863/redis-server  </span><br><span class="line">tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      8960/sshd           </span><br><span class="line">tcp        0      0 127.0.0.1:25            0.0.0.0:*               LISTEN      9190/master         </span><br><span class="line">tcp6       0      0 :::3306                 :::*                    LISTEN      22084/mysqld        </span><br><span class="line">tcp6       0      0 :::6379                 :::*                    LISTEN      20863/redis-server  </span><br><span class="line">tcp6       0      0 :::22                   :::*                    LISTEN      8960/sshd           </span><br><span class="line">tcp6       0      0 ::1:25                  :::*                    LISTEN      9190/master </span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 初始化MySQL表结构，给用户设置密码，导入数据库表</span></span><br><span class="line"></span><br><span class="line">[root@falcon ~]# <span class="built_in">cd</span> /tmp/ &amp;&amp; git <span class="built_in">clone</span> https://github.com/open-falcon/falcon-plus.git </span><br><span class="line">Cloning into <span class="string">&#x27;falcon-plus&#x27;</span>...</span><br><span class="line">remote: Enumerating objects: 10196, <span class="keyword">done</span>.</span><br><span class="line">remote: Counting objects: 100% (279/279), <span class="keyword">done</span>.</span><br><span class="line">remote: Compressing objects: 100% (229/229), <span class="keyword">done</span>.</span><br><span class="line">remote: Total 10196 (delta 60), reused 229 (delta 36), pack-reused 9917</span><br><span class="line">Receiving objects: 100% (10196/10196), 16.95 MiB | 2.43 MiB/s, <span class="keyword">done</span>.</span><br><span class="line">Resolving deltas: 100% (5352/5352), <span class="keyword">done</span>.</span><br><span class="line">[root@falcon tmp]# <span class="built_in">cd</span> /tmp/falcon-plus/scripts/mysql/db_schema/</span><br><span class="line">[root@falcon db_schema]# ll</span><br><span class="line">total 24</span><br><span class="line">-rw-r--r-- 1 root root 1952 Aug  4 00:08 1_uic-db-schema.sql</span><br><span class="line">-rw-r--r-- 1 root root 7573 Aug  4 00:08 2_portal-db-schema.sql</span><br><span class="line">-rw-r--r-- 1 root root 3391 Aug  4 00:08 3_dashboard-db-schema.sql</span><br><span class="line">-rw-r--r-- 1 root root 1807 Aug  4 00:08 4_graph-db-schema.sql</span><br><span class="line">-rw-r--r-- 1 root root 2558 Aug  4 00:08 5_alarms-db-schema.sql</span><br><span class="line">[root@falcon db_schema]# mysqladmin -uroot password <span class="string">&quot;password&quot;</span></span><br><span class="line">Warning: Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">[root@falcon db_schema]# mysql -uroot -p</span><br><span class="line">Enter password: </span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection <span class="built_in">id</span> is 9</span><br><span class="line">Server version: 5.6.51 MySQL Community Server (GPL)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2021, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">&#x27;help;&#x27;</span> or <span class="string">&#x27;\h&#x27;</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">&#x27;\c&#x27;</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">+--------------------+</span><br><span class="line">3 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; \q</span><br><span class="line">Bye</span><br><span class="line">[root@falcon db_schema]# mysql -h 127.0.0.1 -u root -p &lt; 1_uic-db-schema.sql</span><br><span class="line">Enter password: </span><br><span class="line">[root@falcon db_schema]# mysql -h 127.0.0.1 -u root -p &lt; 2_portal-db-schema.sql</span><br><span class="line">Enter password: </span><br><span class="line">[root@falcon db_schema]# mysql -h 127.0.0.1 -u root -p &lt; 3_dashboard-db-schema.sql</span><br><span class="line">Enter password: </span><br><span class="line">[root@falcon db_schema]# mysql -h 127.0.0.1 -u root -p &lt; 4_graph-db-schema.sql</span><br><span class="line">Enter password: </span><br><span class="line">[root@falcon db_schema]# mysql -h 127.0.0.1 -u root -p &lt; 5_alarms-db-schema.sql</span><br><span class="line">Enter password: </span><br><span class="line"></span><br><span class="line">[root@falcon db_schema]# mysql -uroot -ppassword</span><br><span class="line">Warning: Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection <span class="built_in">id</span> is 15</span><br><span class="line">Server version: 5.6.51 MySQL Community Server (GPL)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2021, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">&#x27;help;&#x27;</span> or <span class="string">&#x27;\h&#x27;</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">&#x27;\c&#x27;</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| alarms             |</span><br><span class="line">| dashboard          |</span><br><span class="line">| falcon_portal      |</span><br><span class="line">| graph              |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| uic                |</span><br><span class="line">+--------------------+</span><br><span class="line">8 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; \q</span><br><span class="line">Bye</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 安装go语言开发环境，配置好环境变量</span></span><br><span class="line"></span><br><span class="line">[root@falcon db_schema]# yum install golang -y</span><br><span class="line"></span><br><span class="line">[root@falcon db_schema]# [root@falcon db_schema]# go version</span><br><span class="line">go version go1.20.12 linux/amd64</span><br><span class="line"></span><br><span class="line">[root@falcon db_schema]# find / -name go</span><br><span class="line">/usr/bin/go</span><br><span class="line">/usr/lib/golang/src/cmd/go</span><br><span class="line">/usr/lib/golang/src/cmd/vendor/golang.org/x/tools/go</span><br><span class="line">/usr/lib/golang/src/go</span><br><span class="line">/usr/lib/golang/bin/go</span><br><span class="line"></span><br><span class="line">[root@falcon db_schema]# <span class="built_in">export</span> GOROOT=/usr/lib/golang</span><br><span class="line">[root@falcon db_schema]# <span class="built_in">export</span> GOPATH=/home</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 安装open-falcon</span></span><br><span class="line"></span><br><span class="line">[root@falcon profile.d]# <span class="built_in">export</span> FALCON_HOME=/home/work</span><br><span class="line">[root@falcon profile.d]# <span class="built_in">export</span> WORKSPACE=<span class="variable">$FALCON_HOME</span>/open-falcon</span><br><span class="line">[root@falcon profile.d]# <span class="built_in">mkdir</span> -p <span class="variable">$WORKSPACE</span></span><br><span class="line">[root@falcon profile.d]# ll</span><br><span class="line">total 68</span><br><span class="line">-rw-r--r--. 1 root root  771 Oct 31  2018 256term.csh</span><br><span class="line">-rw-r--r--. 1 root root  841 Oct 31  2018 256term.sh</span><br><span class="line">-rw-r--r--. 1 root root  196 Mar 25  2017 colorgrep.csh</span><br><span class="line">-rw-r--r--. 1 root root  201 Mar 25  2017 colorgrep.sh</span><br><span class="line">-rw-r--r--. 1 root root 1741 Oct 30  2018 colorls.csh</span><br><span class="line">-rw-r--r--. 1 root root 1606 Oct 30  2018 colorls.sh</span><br><span class="line">-rw-r--r--. 1 root root   80 Oct 31  2018 csh.local</span><br><span class="line">-rw-r--r--  1 root root   50 Aug  4 00:29 go_env.sh</span><br><span class="line">-rw-r--r--. 1 root root 1706 Oct 31  2018 lang.csh</span><br><span class="line">-rw-r--r--. 1 root root 2703 Oct 31  2018 lang.sh</span><br><span class="line">-rw-r--r--. 1 root root  123 Jul 31  2015 less.csh</span><br><span class="line">-rw-r--r--. 1 root root  121 Jul 31  2015 less.sh</span><br><span class="line">-rw-r--r--. 1 root root   81 Oct 31  2018 sh.local</span><br><span class="line">-rw-r--r--. 1 root root  105 Dec 16  2020 vim.csh</span><br><span class="line">-rw-r--r--. 1 root root  269 Dec 16  2020 vim.sh</span><br><span class="line">-rw-r--r--. 1 root root  164 Jan 28  2014 which2.csh</span><br><span class="line">-rw-r--r--. 1 root root  169 Jan 28  2014 which2.sh</span><br><span class="line">[root@falcon profile.d]# <span class="built_in">cd</span></span><br><span class="line">[root@falcon ~]# ll</span><br><span class="line">total 200</span><br><span class="line">-rw-------. 1 root root   1413 May 13 15:22 anaconda-ks.cfg</span><br><span class="line">-rw-r--r--. 1 root root 188754 Apr 23 11:13 main.sh</span><br><span class="line">-rw-r--r--  1 root root   6140 Nov 12  2015 mysql-community-release-el7-5.noarch.rpm</span><br><span class="line"></span><br><span class="line">[root@falcon ~]# rz</span><br><span class="line">rz waiting to receive.**[root@falcon ~]# ll</span><br><span class="line">total 67276</span><br><span class="line">-rw-------. 1 root root     1413 May 13 15:22 anaconda-ks.cfg</span><br><span class="line">-rw-r--r--. 1 root root   188754 Apr 23 11:13 main.sh</span><br><span class="line">-rw-r--r--  1 root root     6140 Nov 12  2015 mysql-community-release-el7-5.noarch.rpm</span><br><span class="line">-r--r--r--  1 root root 68685265 Jul 31 21:23 open-falcon-v0.3.tar.gz</span><br><span class="line">[root@falcon ~]# tar xf open-falcon-v0.3.tar.gz -C <span class="variable">$WORKSPACE</span></span><br><span class="line">[root@falcon ~]# <span class="built_in">cd</span> <span class="variable">$WORKSPACE</span>/</span><br><span class="line">[root@falcon open-falcon]# ll</span><br><span class="line">total 4272</span><br><span class="line">drwxr-xr-x 7 czm_core czm_core      71 May 30  2019 agent</span><br><span class="line">drwxr-xr-x 5 czm_core czm_core      43 May 30  2019 aggregator</span><br><span class="line">drwxr-xr-x 5 czm_core czm_core      43 May 30  2019 alarm</span><br><span class="line">drwxr-xr-x 6 czm_core czm_core      55 May 30  2019 api</span><br><span class="line">drwxr-xr-x 5 czm_core czm_core      43 May 30  2019 gateway</span><br><span class="line">drwxr-xr-x 6 czm_core czm_core      55 May 30  2019 graph</span><br><span class="line">drwxr-xr-x 5 czm_core czm_core      43 May 30  2019 hbs</span><br><span class="line">drwxr-xr-x 5 czm_core czm_core      43 May 30  2019 judge</span><br><span class="line">drwxr-xr-x 5 czm_core czm_core      43 May 30  2019 nodata</span><br><span class="line">-rwxr-xr-x 1 czm_core czm_core 4370880 May 30  2019 open-falcon</span><br><span class="line">lrwxrwxrwx 1 czm_core czm_core      15 May 30  2019 plugin -&gt; ./agent/plugin/</span><br><span class="line">lrwxrwxrwx 1 czm_core czm_core      15 May 30  2019 public -&gt; ./agent/public/</span><br><span class="line">drwxr-xr-x 5 czm_core czm_core      43 May 30  2019 transfer</span><br><span class="line">[root@falcon open-falcon]# <span class="built_in">cd</span> /home/work</span><br><span class="line">[root@falcon work]# ll</span><br><span class="line">total 0</span><br><span class="line">drwxr-xr-x 12 czm_core czm_core 190 May 30  2019 open-falcon</span><br><span class="line">[root@falcon work]# <span class="built_in">cd</span> open-falcon/</span><br><span class="line">[root@falcon open-falcon]# ll</span><br><span class="line">total 4272</span><br><span class="line">drwxr-xr-x 7 czm_core czm_core      71 May 30  2019 agent</span><br><span class="line">drwxr-xr-x 5 czm_core czm_core      43 May 30  2019 aggregator</span><br><span class="line">drwxr-xr-x 5 czm_core czm_core      43 May 30  2019 alarm</span><br><span class="line">drwxr-xr-x 6 czm_core czm_core      55 May 30  2019 api</span><br><span class="line">drwxr-xr-x 5 czm_core czm_core      43 May 30  2019 gateway</span><br><span class="line">drwxr-xr-x 6 czm_core czm_core      55 May 30  2019 graph</span><br><span class="line">drwxr-xr-x 5 czm_core czm_core      43 May 30  2019 hbs</span><br><span class="line">drwxr-xr-x 5 czm_core czm_core      43 May 30  2019 judge</span><br><span class="line">drwxr-xr-x 5 czm_core czm_core      43 May 30  2019 nodata</span><br><span class="line">-rwxr-xr-x 1 czm_core czm_core 4370880 May 30  2019 open-falcon</span><br><span class="line">lrwxrwxrwx 1 czm_core czm_core      15 May 30  2019 plugin -&gt; ./agent/plugin/</span><br><span class="line">lrwxrwxrwx 1 czm_core czm_core      15 May 30  2019 public -&gt; ./agent/public/</span><br><span class="line">drwxr-xr-x 5 czm_core czm_core      43 May 30  2019 transfer</span><br><span class="line">[root@falcon open-falcon]# <span class="built_in">pwd</span></span><br><span class="line">/home/work/open-falcon</span><br></pre></td></tr></table></figure><p><strong>修改配置文件cfg.json(由于之前设置的root密码为password，底下配置文件要改)</strong></p><table><thead><tr><th>修改的文件</th><th>路径</th></tr></thead><tbody><tr><td>aggregator</td><td>/home/work/open-falcon/aggregator/config/cfg.json</td></tr><tr><td>graph</td><td>/home/work/open-falcon/graph/config/cfg.json</td></tr><tr><td>hbs</td><td>/home/work/open-falcon/hbs/config/cfg.json</td></tr><tr><td>nodata</td><td>/home/work/open-falcon/nodata/config/cfg.json</td></tr><tr><td>api</td><td>/home/work/open-falcon/api/config/cfg.json</td></tr><tr><td>alarm</td><td>/home/work/open-falcon/alarm/config/cfg.json</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 修改aggregator的配置文件</span></span><br><span class="line"></span><br><span class="line">[root@falcon open-falcon]# <span class="built_in">cd</span> aggregator/</span><br><span class="line">[root@falcon aggregator]# ll</span><br><span class="line">total 0</span><br><span class="line">drwxr-xr-x 2 czm_core czm_core 31 May 30  2019 bin</span><br><span class="line">drwxr-xr-x 2 czm_core czm_core 22 May 30  2019 config</span><br><span class="line">drwxr-xr-x 2 czm_core czm_core  6 May 30  2019 logs</span><br><span class="line">[root@falcon aggregator]# <span class="built_in">cd</span> config/</span><br><span class="line">[root@falcon config]# ll</span><br><span class="line">total 4</span><br><span class="line">-rw-r--r-- 1 czm_core czm_core 522 May 30  2019 cfg.json</span><br><span class="line">[root@falcon config]# <span class="built_in">pwd</span></span><br><span class="line">/home/work/open-falcon/aggregator/config</span><br><span class="line">[root@falcon config]# vim cfg.json</span><br></pre></td></tr></table></figure><p><img src="D:%5CTypora%5Cdevops%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4%E5%B7%A5%E5%85%B7%5C10.open-falcon.assets%5CQQ_1722703517483.png" alt="img"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 修改graph的配置文件</span></span><br><span class="line"></span><br><span class="line">[root@falcon open-falcon]# ll</span><br><span class="line">total 4272</span><br><span class="line">drwxr-xr-x 7 czm_core czm_core      71 May 30  2019 agent</span><br><span class="line">drwxr-xr-x 5 czm_core czm_core      43 May 30  2019 aggregator</span><br><span class="line">drwxr-xr-x 5 czm_core czm_core      43 May 30  2019 alarm</span><br><span class="line">drwxr-xr-x 6 czm_core czm_core      55 May 30  2019 api</span><br><span class="line">drwxr-xr-x 5 czm_core czm_core      43 May 30  2019 gateway</span><br><span class="line">drwxr-xr-x 6 czm_core czm_core      55 May 30  2019 graph</span><br><span class="line">drwxr-xr-x 5 czm_core czm_core      43 May 30  2019 hbs</span><br><span class="line">drwxr-xr-x 5 czm_core czm_core      43 May 30  2019 judge</span><br><span class="line">drwxr-xr-x 5 czm_core czm_core      43 May 30  2019 nodata</span><br><span class="line">-rwxr-xr-x 1 czm_core czm_core 4370880 May 30  2019 open-falcon</span><br><span class="line">lrwxrwxrwx 1 czm_core czm_core      15 May 30  2019 plugin -&gt; ./agent/plugin/</span><br><span class="line">lrwxrwxrwx 1 czm_core czm_core      15 May 30  2019 public -&gt; ./agent/public/</span><br><span class="line">drwxr-xr-x 5 czm_core czm_core      43 May 30  2019 transfer</span><br><span class="line">[root@falcon open-falcon]# <span class="built_in">pwd</span></span><br><span class="line">/home/work/open-falcon</span><br><span class="line">[root@falcon open-falcon]# <span class="built_in">cd</span> graph/</span><br><span class="line">[root@falcon graph]# <span class="built_in">cd</span> config</span><br><span class="line">[root@falcon config]# vim cfg.json </span><br></pre></td></tr></table></figure><p><img src="D:%5CTypora%5Cdevops%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4%E5%B7%A5%E5%85%B7%5C10.open-falcon.assets%5CQQ_1722703737785.png" alt="img"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 修改hbs的配置文件</span></span><br><span class="line"></span><br><span class="line">[root@falcon config]# vim /home/work/open-falcon/hbs/config/cfg.json </span><br></pre></td></tr></table></figure><p><img src="D:%5CTypora%5Cdevops%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4%E5%B7%A5%E5%85%B7%5C10.open-falcon.assets%5CQQ_1722703871384.png" alt="img"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 修改nodata的配置文件</span></span><br><span class="line">[root@falcon config]# vim /home/work/open-falcon/nodata/config/cfg.json</span><br></pre></td></tr></table></figure><p><img src="D:%5CTypora%5Cdevops%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4%E5%B7%A5%E5%85%B7%5C10.open-falcon.assets%5CQQ_1722703963223.png" alt="img"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 修改api的配置文件</span></span><br><span class="line">[root@falcon config]# vim /home/work/open-falcon/api/config/cfg.json</span><br></pre></td></tr></table></figure><p><img src="D:%5CTypora%5Cdevops%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4%E5%B7%A5%E5%85%B7%5C10.open-falcon.assets%5CQQ_1722704127654.png" alt="img"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 修改alarm的配置文件</span></span><br><span class="line">[root@falcon config]# vim /home/work/open-falcon/alarm/config/cfg.json</span><br></pre></td></tr></table></figure><p><img src="D:%5CTypora%5Cdevops%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4%E5%B7%A5%E5%85%B7%5C10.open-falcon.assets%5CQQ_1722704273423.png" alt="img"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 启动后端模块，检查启动状态</span></span><br><span class="line"></span><br><span class="line">[root@falcon work]# <span class="built_in">cd</span> /home/work/open-falcon/</span><br><span class="line">[root@falcon open-falcon]# ./open-falcon start</span><br><span class="line">[falcon-graph] 31555</span><br><span class="line">[falcon-hbs] 31567</span><br><span class="line">[falcon-judge] 31578</span><br><span class="line">[falcon-transfer] 31589</span><br><span class="line">[falcon-nodata] 31597</span><br><span class="line">[falcon-aggregator] 31616</span><br><span class="line">[falcon-agent] 31635</span><br><span class="line">[falcon-gateway] 31643</span><br><span class="line">[falcon-api] 31653</span><br><span class="line">[falcon-alarm] 31667</span><br><span class="line"></span><br><span class="line">[root@falcon open-falcon]# ./open-falcon check</span><br><span class="line">        falcon-graph         UP           31555 </span><br><span class="line">          falcon-hbs         UP           31567 </span><br><span class="line">        falcon-judge         UP           31578 </span><br><span class="line">     falcon-transfer         UP           31589 </span><br><span class="line">       falcon-nodata         UP           31597 </span><br><span class="line">   falcon-aggregator         UP           31616 </span><br><span class="line">        falcon-agent         UP           31635 </span><br><span class="line">      falcon-gateway         UP           31643 </span><br><span class="line">          falcon-api         UP           31653 </span><br><span class="line">        falcon-alarm         UP           31667 </span><br><span class="line">        </span><br><span class="line"><span class="comment">#更多的命令行工具用法</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ./open-falcon [start|stop|restart|check|monitor|reload] module</span></span><br><span class="line">./open-falcon start agent</span><br><span class="line"> </span><br><span class="line">./open-falcon check</span><br><span class="line">        falcon-graph         UP           53007</span><br><span class="line">          falcon-hbs         UP           53014</span><br><span class="line">        falcon-judge         UP           53020</span><br><span class="line">     falcon-transfer         UP           53026</span><br><span class="line">       falcon-nodata         UP           53032</span><br><span class="line">   falcon-aggregator         UP           53038</span><br><span class="line">        falcon-agent         UP           53044</span><br><span class="line">      falcon-gateway         UP           53050</span><br><span class="line">          falcon-api         UP           53056</span><br><span class="line">        falcon-alarm         UP           53063</span><br><span class="line"> </span><br><span class="line"><span class="comment">#For debugging , You can check $WorkDir/$moduleName/log/logs/xxx.log      </span></span><br><span class="line"></span><br><span class="line">[root@falcon open-falcon]# netstat -lntup</span><br><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    </span><br><span class="line">tcp        0      0 0.0.0.0:6379            0.0.0.0:*               LISTEN      20863/redis-server  </span><br><span class="line">tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      8960/sshd           </span><br><span class="line">tcp        0      0 127.0.0.1:25            0.0.0.0:*               LISTEN      9190/master         </span><br><span class="line">tcp6       0      0 :::6055                 :::*                    LISTEN      31616/falcon-aggreg </span><br><span class="line">tcp6       0      0 :::6090                 :::*                    LISTEN      31597/falcon-nodata </span><br><span class="line">tcp6       0      0 :::3306                 :::*                    LISTEN      22084/mysqld        </span><br><span class="line">tcp6       0      0 :::6379                 :::*                    LISTEN      20863/redis-server  </span><br><span class="line">tcp6       0      0 :::14444                :::*                    LISTEN      31643/falcon-gatewa </span><br><span class="line">tcp6       0      0 :::6060                 :::*                    LISTEN      31589/falcon-transf </span><br><span class="line">tcp6       0      0 :::6030                 :::*                    LISTEN      31567/falcon-hbs    </span><br><span class="line">tcp6       0      0 :::6031                 :::*                    LISTEN      31567/falcon-hbs    </span><br><span class="line">tcp6       0      0 :::8080                 :::*                    LISTEN      31653/falcon-api    </span><br><span class="line">tcp6       0      0 :::8433                 :::*                    LISTEN      31589/falcon-transf </span><br><span class="line">tcp6       0      0 :::6070                 :::*                    LISTEN      31555/falcon-graph  </span><br><span class="line">tcp6       0      0 :::22                   :::*                    LISTEN      8960/sshd           </span><br><span class="line">tcp6       0      0 :::6071                 :::*                    LISTEN      31555/falcon-graph  </span><br><span class="line">tcp6       0      0 :::9912                 :::*                    LISTEN      31667/falcon-alarm  </span><br><span class="line">tcp6       0      0 ::1:25                  :::*                    LISTEN      9190/master         </span><br><span class="line">tcp6       0      0 :::16060                :::*                    LISTEN      31643/falcon-gatewa </span><br><span class="line">tcp6       0      0 :::4444                 :::*                    LISTEN      31589/falcon-transf </span><br><span class="line">tcp6       0      0 :::6080                 :::*                    LISTEN      31578/falcon-judge  </span><br><span class="line">tcp6       0      0 :::18433                :::*                    LISTEN      31643/falcon-gatewa </span><br><span class="line">tcp6       0      0 :::6081                 :::*                    LISTEN      31578/falcon-judge  </span><br><span class="line">tcp6       0      0 :::1988                 :::*                    LISTEN      31635/falcon-agent  </span><br></pre></td></tr></table></figure><h2 id="5-客户端">5. 客户端</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 创建目录，导入组件代码</span></span><br><span class="line"></span><br><span class="line">[root@open-falcon-agent profile.d]# <span class="built_in">export</span> HOME=/home/work</span><br><span class="line">[root@open-falcon-agent profile.d]# <span class="built_in">export</span> WORKSPACE=<span class="variable">$HOME</span>/open-falcon</span><br><span class="line">[root@open-falcon-agent profile.d]# <span class="built_in">mkdir</span> -p <span class="variable">$WORKSPACE</span></span><br><span class="line">[root@open-falcon-agent profile.d]# <span class="built_in">cd</span> <span class="variable">$WORKSPACE</span></span><br><span class="line">[root@open-falcon-agent open-falcon]# ll</span><br><span class="line">total 0</span><br><span class="line"></span><br><span class="line">[root@open-falcon-agent open-falcon]# rz</span><br><span class="line">rz waiting to receive.**[root@open-falcon-agent open-falcon]# ll</span><br><span class="line">total 1516</span><br><span class="line">-r--r--r-- 1 root root 1550458 Jul 31 21:22 dashboard-master.zip</span><br><span class="line">[root@open-falcon-agent open-falcon]# unzip dashboard-master.zip </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@open-falcon-agent open-falcon]# ll</span><br><span class="line">total 1516</span><br><span class="line">drwxr-xr-x 5 root root     265 Jun 22  2020 dashboard-master</span><br><span class="line">-r--r--r-- 1 root root 1550458 Jul 31 21:22 dashboard-master.zip</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 安装依赖包</span></span><br><span class="line"></span><br><span class="line">yum install -y python-virtualenv</span><br><span class="line">yum install -y python-devel</span><br><span class="line">yum install -y openldap-devel</span><br><span class="line">yum install -y mysql-devel</span><br><span class="line">yum groupinstall <span class="string">&quot;Development tools&quot;</span> -y</span><br><span class="line"></span><br><span class="line">[root@open-falcon-agent dashboard-master]# <span class="built_in">cd</span> <span class="variable">$WORKSPACE</span>/dashboard-master</span><br><span class="line">[root@open-falcon-agent dashboard-master]# ll</span><br><span class="line">total 56</span><br><span class="line">-rw-r--r--  1 root root    97 Jun 22  2020 babel.cfg</span><br><span class="line">-rwxr-xr-x  1 root root  2653 Jun 22  2020 control</span><br><span class="line">-rw-r--r--  1 root root   510 Jun 22  2020 Dockerfile</span><br><span class="line">-rw-r--r--  1 root root   319 Jun 22  2020 entrypoint.sh</span><br><span class="line">-rw-r--r--  1 root root   170 Jun 22  2020 gunicorn.conf</span><br><span class="line">-rw-r--r--  1 root root  1235 Jun 22  2020 i18n.md</span><br><span class="line">-rw-r--r--  1 root root 11358 Jun 22  2020 LICENSE</span><br><span class="line">-rw-r--r--  1 root root   462 Jun 22  2020 NOTICE</span><br><span class="line">-rw-r--r--  1 root root   139 Jun 22  2020 pip_requirements.txt</span><br><span class="line">-rw-r--r--  1 root root  5296 Jun 22  2020 README.md</span><br><span class="line">drwxr-xr-x 10 root root   194 Jun 22  2020 rrd</span><br><span class="line">drwxr-xr-x  2 root root   101 Jun 22  2020 screenshots</span><br><span class="line">drwxr-xr-x  2 root root    65 Jun 22  2020 scripts</span><br><span class="line">-rwxr-xr-x  1 root root   979 Jun 22  2020 wsgi.py</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@open-falcon-agent dashboard-master]# virtualenv ./env</span><br><span class="line">New python executable <span class="keyword">in</span> /home/work/open-falcon/dashboard-master/env/bin/python2</span><br><span class="line">Also creating executable <span class="keyword">in</span> /home/work/open-falcon/dashboard-master/env/bin/python</span><br><span class="line">Installing setuptools, pip, wheel...done.</span><br><span class="line"></span><br><span class="line">[root@open-falcon-agent dashboard-master]# <span class="built_in">source</span> <span class="built_in">env</span>/bin/activate</span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent dashboard-master]# pip install -r pip_requirements.txt -i</span><br><span class="line"></span><br><span class="line">Usage:   </span><br><span class="line">  pip install [options] &lt;requirement specifier&gt; [package-index-options] ...</span><br><span class="line">  pip install [options] -r &lt;requirements file&gt; [package-index-options] ...</span><br><span class="line">  pip install [options] [-e] &lt;vcs project url&gt; ...</span><br><span class="line">  pip install [options] [-e] &lt;<span class="built_in">local</span> project path&gt; ...</span><br><span class="line">  pip install [options] &lt;archive url/path&gt; ...</span><br><span class="line"></span><br><span class="line">-i option requires an argument</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#如果安装了高版本pip，请先卸载pip uninstall pip   再按两次y</span></span><br><span class="line"><span class="comment">#指定源安装包（备注：这步如果安装不成功，请检查pip版本是否为pip-9.0.1） </span></span><br><span class="line">pip install -r pip_requirements.txt -i</span><br><span class="line">这里virtualenv ./env作用是创建一个新的python环境，详见：https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/001432712108300322c61f256c74803b43bfd65c6f8d0d0000</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 切换环境后，pip安装</span></span><br><span class="line"></span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent dashboard-master]# ./env/bin/pip install -r pip_requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple/</span><br><span class="line">Collecting Flask==1.0 (from -r pip_requirements.txt (line 1))</span><br><span class="line">  Downloading https://pypi.tuna.tsinghua.edu.cn/packages/55/b1/4365193655df97227ace49311365cc296e74b60c7f5c63d23cd30175e2f6/Flask-1.0-py2.py3-none-any.whl (97kB)</span><br><span class="line">    100% |████████████████████████████████| 102kB 1.6MB/s </span><br><span class="line">Collecting Flask-Babel==0.9 (from -r pip_requirements.txt (line 2))</span><br><span class="line">  Downloading https://pypi.tuna.tsinghua.edu.cn/packages/24/6b/dd9031c446e05600b740086274a9939799f26401b8b96e124ccf71e6a9b2/Flask-Babel-0.9.tar.gz</span><br><span class="line">Collecting Jinja2&gt;=2.10.1 (from -r pip_requirements.txt (line 3))</span><br><span class="line">  Downloading https://pypi.tuna.tsinghua.edu.cn/packages/7e/c2/1eece8c95ddbc9b1aeb64f5783a9e07a286de42191b7204d67b7496ddf35/Jinja2-2.11.3-py2.py3-none-any.whl (125kB)</span><br><span class="line">    100% |████████████████████████████████| 133kB 4.3MB/s </span><br><span class="line">Collecting Werkzeug==0.15.4 (from -r pip_requirements.txt (line 4))</span><br><span class="line">  Downloading https://pypi.tuna.tsinghua.edu.cn/packages/9f/57/92a497e38161ce40606c27a86759c6b92dd34fcdb33f64171ec559257c02/Werkzeug-0.15.4-py2.py3-none-any.whl (327kB)</span><br><span class="line">    100% |████████████████████████████████| 327kB 3.1MB/s </span><br><span class="line">Collecting gunicorn==19.9.0 (from -r pip_requirements.txt (line 5))</span><br><span class="line">  Downloading https://pypi.tuna.tsinghua.edu.cn/packages/8c/da/b8dd8deb741bff556db53902d4706774c8e1e67265f69528c14c003644e6/gunicorn-19.9.0-py2.py3-none-any.whl (112kB)</span><br><span class="line">    100% |████████████████████████████████| 122kB 4.6MB/s </span><br><span class="line">Collecting python-dateutil==2.2 (from -r pip_requirements.txt (line 6))</span><br><span class="line">  Downloading https://pypi.tuna.tsinghua.edu.cn/packages/75/c5/85d027471fa665f8c8b8eb0b925f9d84b4eee745a257b16de4957de99e81/python-dateutil-2.2.tar.gz (259kB)</span><br><span class="line">    100% |████████████████████████████████| 266kB 5.5MB/s </span><br><span class="line">Collecting requests==2.3.0 (from -r pip_requirements.txt (line 7))</span><br><span class="line">  Downloading https://pypi.tuna.tsinghua.edu.cn/packages/f7/51/7aa1e337862118bee783c0249debd64cb07b8fbdfef154b1e185754b02d5/requests-2.3.0-py2.py3-none-any.whl (452kB)</span><br><span class="line">    100% |████████████████████████████████| 460kB 2.8MB/s </span><br><span class="line">Collecting mysql-python (from -r pip_requirements.txt (line 8))</span><br><span class="line">  Downloading https://pypi.tuna.tsinghua.edu.cn/packages/a5/e9/51b544da85a36a68debe7a7091f068d802fc515a3a202652828c73453cad/MySQL-python-1.2.5.zip (108kB)</span><br><span class="line">    100% |████████████████████████████████| 112kB 9.3MB/s </span><br><span class="line">Collecting python-ldap (from -r pip_requirements.txt (line 9))</span><br><span class="line">  Downloading https://pypi.tuna.tsinghua.edu.cn/packages/9d/e2/deb47064d443344b708ffb5899ea269b201d7c22dcc653ebadcbb44c57d5/python-ldap-3.3.1.tar.gz (379kB)</span><br><span class="line">    100% |████████████████████████████████| 389kB 4.4MB/s </span><br><span class="line">Collecting itsdangerous&gt;=0.24 (from Flask==1.0-&gt;-r pip_requirements.txt (line 1))</span><br><span class="line">  Downloading https://pypi.tuna.tsinghua.edu.cn/packages/76/ae/44b03b253d6fade317f32c24d100b3b35c2239807046a4c953c7b89fa49e/itsdangerous-1.1.0-py2.py3-none-any.whl</span><br><span class="line">Collecting click&gt;=5.1 (from Flask==1.0-&gt;-r pip_requirements.txt (line 1))</span><br><span class="line">  Downloading https://pypi.tuna.tsinghua.edu.cn/packages/d2/3d/fa76db83bf75c4f8d338c2fd15c8d33fdd7ad23a9b5e57eb6c5de26b430e/click-7.1.2-py2.py3-none-any.whl (82kB)</span><br><span class="line">    100% |████████████████████████████████| 92kB 9.6MB/s </span><br><span class="line">Collecting Babel&gt;=1.0 (from Flask-Babel==0.9-&gt;-r pip_requirements.txt (line 2))</span><br><span class="line">  Downloading https://pypi.tuna.tsinghua.edu.cn/packages/aa/96/4ba93c5f40459dc850d25f9ba93f869a623e77aaecc7a9344e19c01942cf/Babel-2.9.1-py2.py3-none-any.whl (8.8MB)</span><br><span class="line">    100% |████████████████████████████████| 8.8MB 138kB/s </span><br><span class="line">Collecting speaklater&gt;=1.2 (from Flask-Babel==0.9-&gt;-r pip_requirements.txt (line 2))</span><br><span class="line">  Downloading https://pypi.tuna.tsinghua.edu.cn/packages/11/92/5ae1effe0ccb8561c034a0111d53c8788660ddb7ed4992f0da1bb5c525e5/speaklater-1.3.tar.gz</span><br><span class="line">Collecting MarkupSafe&gt;=0.23 (from Jinja2&gt;=2.10.1-&gt;-r pip_requirements.txt (line 3))</span><br><span class="line">  Downloading https://pypi.tuna.tsinghua.edu.cn/packages/fb/40/f3adb7cf24a8012813c5edb20329eb22d5d8e2a0ecf73d21d6b85865da11/MarkupSafe-1.1.1-cp27-cp27mu-manylinux1_x86_64.whl</span><br><span class="line">Collecting six (from python-dateutil==2.2-&gt;-r pip_requirements.txt (line 6))</span><br><span class="line">  Downloading https://pypi.tuna.tsinghua.edu.cn/packages/d9/5a/e7c31adbe875f2abbb91bd84cf2dc52d792b5a01506781dbcf25c91daf11/six-1.16.0-py2.py3-none-any.whl</span><br><span class="line">Collecting pyasn1&gt;=0.3.7 (from python-ldap-&gt;-r pip_requirements.txt (line 9))</span><br><span class="line">  Downloading https://pypi.tuna.tsinghua.edu.cn/packages/d1/75/4686d2872bf2fc0b37917cbc8bbf0dd3a5cdb0990799be1b9cbf1e1eb733/pyasn1-0.5.1-py2.py3-none-any.whl (84kB)</span><br><span class="line">    100% |████████████████████████████████| 92kB 9.6MB/s </span><br><span class="line">Collecting pyasn1_modules&gt;=0.1.5 (from python-ldap-&gt;-r pip_requirements.txt (line 9))</span><br><span class="line">  Downloading https://pypi.tuna.tsinghua.edu.cn/packages/cd/8e/bea464350e1b8c6ed0da3a312659cb648804a08af6cacc6435867f74f8bd/pyasn1_modules-0.3.0-py2.py3-none-any.whl (181kB)</span><br><span class="line">    100% |████████████████████████████████| 184kB 4.0MB/s </span><br><span class="line">Collecting pytz&gt;=2015.7 (from Babel&gt;=1.0-&gt;Flask-Babel==0.9-&gt;-r pip_requirements.txt (line 2))</span><br><span class="line">  Downloading https://pypi.tuna.tsinghua.edu.cn/packages/9c/3d/a121f284241f08268b21359bd425f7d4825cffc5ac5cd0e1b3d82ffd2b10/pytz-2024.1-py2.py3-none-any.whl (505kB)</span><br><span class="line">    100% |████████████████████████████████| 512kB 2.5MB/s </span><br><span class="line">Building wheels <span class="keyword">for</span> collected packages: Flask-Babel, python-dateutil, mysql-python, python-ldap, speaklater</span><br><span class="line">  Running setup.py bdist_wheel <span class="keyword">for</span> Flask-Babel ... <span class="keyword">done</span></span><br><span class="line">  Stored <span class="keyword">in</span> directory: /home/work/.cache/pip/wheels/ef/39/53/91220f10958c5110d839b0a9fa7ffaa0adb686067089eda64a</span><br><span class="line">  Running setup.py bdist_wheel <span class="keyword">for</span> python-dateutil ... <span class="keyword">done</span></span><br><span class="line">  Stored <span class="keyword">in</span> directory: /home/work/.cache/pip/wheels/03/2c/f1/9d772ba9eb2d4e0b583817de401202b1158140b8bd115e3f97</span><br><span class="line">  Running setup.py bdist_wheel <span class="keyword">for</span> mysql-python ... <span class="keyword">done</span></span><br><span class="line">  Stored <span class="keyword">in</span> directory: /home/work/.cache/pip/wheels/34/db/d9/39a931d72d59ffb68de9f85fe9ac2f02f47eef3fe142589db4</span><br><span class="line">  Running setup.py bdist_wheel <span class="keyword">for</span> python-ldap ... <span class="keyword">done</span></span><br><span class="line">  Stored <span class="keyword">in</span> directory: /home/work/.cache/pip/wheels/8c/9c/45/c563c2acb81523eae28c9e9a7cf4721b486829199c2278230b</span><br><span class="line">  Running setup.py bdist_wheel <span class="keyword">for</span> speaklater ... <span class="keyword">done</span></span><br><span class="line">  Stored <span class="keyword">in</span> directory: /home/work/.cache/pip/wheels/74/c5/f5/62413af6c8e6dbc120b9d9f8ea93bd179f07d3c993a5e4df22</span><br><span class="line">Successfully built Flask-Babel python-dateutil mysql-python python-ldap speaklater</span><br><span class="line">Installing collected packages: MarkupSafe, Jinja2, itsdangerous, Werkzeug, click, Flask, pytz, Babel, speaklater, Flask-Babel, gunicorn, six, python-dateutil, requests, mysql-python, pyasn1, pyasn1-modules, python-ldap</span><br><span class="line">Successfully installed Babel-2.9.1 Flask-1.0 Flask-Babel-0.9 Jinja2-2.11.3 MarkupSafe-1.1.1 Werkzeug-0.15.4 click-7.1.2 gunicorn-19.9.0 itsdangerous-1.1.0 mysql-python-1.2.5 pyasn1-0.5.1 pyasn1-modules-0.3.0 python-dateutil-2.2 python-ldap-3.3.1 pytz-2024.1 requests-2.3.0 six-1.16.0 speaklater-1.3</span><br><span class="line">You are using pip version 9.0.1, however version 24.2 is available.</span><br><span class="line">You should consider upgrading via the <span class="string">&#x27;pip install --upgrade pip&#x27;</span> <span class="built_in">command</span>.</span><br><span class="line"></span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent dashboard-master]# wget --no-check-certificate https://bootstrap.pypa.io/ez_setup.py</span><br><span class="line">--2024-08-04 01:42:54--  https://bootstrap.pypa.io/ez_setup.py</span><br><span class="line">Resolving bootstrap.pypa.io (bootstrap.pypa.io)... 146.75.112.175, 2a04:4e42:8c::175</span><br><span class="line">Connecting to bootstrap.pypa.io (bootstrap.pypa.io)|146.75.112.175|:443... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 12537 (12K) [text/x-python]</span><br><span class="line">Saving to: ‘ez_setup.py’</span><br><span class="line"></span><br><span class="line">100%[=============================================================================&gt;] 12,537      --.-K/s   <span class="keyword">in</span> 0.03s   </span><br><span class="line"></span><br><span class="line">2024-08-04 01:42:57 (422 KB/s) - ‘ez_setup.py’ saved [12537/12537]</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 先安装ez_setup.py,再安装pip</span></span><br><span class="line"></span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent dashboard-master]# wget --no-check-certificate https://bootstrap.pypa.io/ez_setup.py</span><br><span class="line">--2024-08-04 01:42:54--  https://bootstrap.pypa.io/ez_setup.py</span><br><span class="line">Resolving bootstrap.pypa.io (bootstrap.pypa.io)... 146.75.112.175, 2a04:4e42:8c::175</span><br><span class="line">Connecting to bootstrap.pypa.io (bootstrap.pypa.io)|146.75.112.175|:443... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 12537 (12K) [text/x-python]</span><br><span class="line">Saving to: ‘ez_setup.py’</span><br><span class="line"></span><br><span class="line">100%[=============================================================================&gt;] 12,537      --.-K/s   <span class="keyword">in</span> 0.03s   </span><br><span class="line"></span><br><span class="line">2024-08-04 01:42:57 (422 KB/s) - ‘ez_setup.py’ saved [12537/12537]</span><br><span class="line"></span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent dashboard-master]# python ez_setup.py --insecure</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 下载pip</span></span><br><span class="line"></span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent dashboard-master]# wget https://pypi.python.org/packages/11/b6/abcb525026a4be042b486df43905d6893fb04f05aac21c32c638e939e447/pip-9.0.1.tar.gz#md5=35f01da33009719497f01a4ba69d63c905d6893fb04f05aac21c32c638e939e447/pip-9.0.1.tar.gz</span><br><span class="line"><span class="comment">#md5=35f01da33009719497f01a4ba69d63c9</span></span><br><span class="line">--2024-08-04 01:43:34--  https://pypi.python.org/packages/11/b6/abcb525026a4be042b486df43905d6893fb04f05aac21c32c638e939e447/pip-9.0.1.tar.gz</span><br><span class="line">Resolving pypi.python.org (pypi.python.org)... 151.101.76.223, 2a04:4e42:8c::223</span><br><span class="line">Connecting to pypi.python.org (pypi.python.org)|151.101.76.223|:443... connected.</span><br><span class="line">HTTP request sent, awaiting response... 301 Redirect to Primary Domain</span><br><span class="line">Location: https://pypi.org/packages/11/b6/abcb525026a4be042b486df43905d6893fb04f05aac21c32c638e939e447/pip-9.0.1.tar.gz [following]</span><br><span class="line">--2024-08-04 01:43:34--  https://pypi.org/packages/11/b6/abcb525026a4be042b486df43905d6893fb04f05aac21c32c638e939e447/pip-9.0.1.tar.gz</span><br><span class="line">Resolving pypi.org (pypi.org)... 151.101.0.223, 151.101.64.223, 151.101.192.223, ...</span><br><span class="line">Connecting to pypi.org (pypi.org)|151.101.0.223|:443... connected.</span><br><span class="line">HTTP request sent, awaiting response... 301 Moved Permanently</span><br><span class="line">Location: https://files.pythonhosted.org/packages/11/b6/abcb525026a4be042b486df43905d6893fb04f05aac21c32c638e939e447/pip-9.0.1.tar.gz [following]</span><br><span class="line">--2024-08-04 01:43:35--  https://files.pythonhosted.org/packages/11/b6/abcb525026a4be042b486df43905d6893fb04f05aac21c32c638e939e447/pip-9.0.1.tar.gz</span><br><span class="line">Resolving files.pythonhosted.org (files.pythonhosted.org)... 146.75.112.223, 2a04:4e42:8c::223</span><br><span class="line">Connecting to files.pythonhosted.org (files.pythonhosted.org)|146.75.112.223|:443... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 1197370 (1.1M) [binary/octet-stream]</span><br><span class="line">Saving to: ‘pip-9.0.1.tar.gz’</span><br><span class="line"></span><br><span class="line">100%[=============================================================================&gt;] 1,197,370    836KB/s   <span class="keyword">in</span> 1.4s  </span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 解压并安装</span></span><br><span class="line"></span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent dashboard-master]# tar xf pip-9.0.1.tar.gz </span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent dashboard-master]# <span class="built_in">cd</span> pip-9.0.1</span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent pip-9.0.1]# python setup.py install</span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent pip-9.0.1]# <span class="built_in">cd</span> ..</span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent dashboard-master]# <span class="built_in">which</span> pip</span><br><span class="line">/home/work/open-falcon/dashboard-master/env/bin/pip</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#配置pip环境变量</span></span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent dashboard-master]# vim /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment">#pip path </span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;/home/work/open-falcon/dashboard-master/env/bin/pip/bin:<span class="variable">$PATH</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#使环境变量生效source /etc/profile</span></span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent dashboard-master]# <span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment">#测试是否可用</span></span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent dashboard-master]# pip</span><br><span class="line">Usage:   </span><br><span class="line">  pip &lt;<span class="built_in">command</span>&gt; [options]</span><br><span class="line"></span><br><span class="line">Commands:</span><br><span class="line">  install                     Install packages.</span><br><span class="line">  download                    Download packages.</span><br><span class="line">  uninstall                   Uninstall packages.</span><br><span class="line">  freeze                      Output installed packages <span class="keyword">in</span> requirements format.</span><br><span class="line">  list                        List installed packages.</span><br><span class="line">  show                        Show information about installed packages.</span><br><span class="line">  check                       Verify installed packages have compatible dependencies.</span><br><span class="line">  search                      Search PyPI <span class="keyword">for</span> packages.</span><br><span class="line">  wheel                       Build wheels from your requirements.</span><br><span class="line">  <span class="built_in">hash</span>                        Compute hashes of package archives.</span><br><span class="line">  completion                  A helper <span class="built_in">command</span> used <span class="keyword">for</span> <span class="built_in">command</span> completion.</span><br><span class="line">  <span class="built_in">help</span>                        Show <span class="built_in">help</span> <span class="keyword">for</span> commands.</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看需要安装的软件,并安装</span></span><br><span class="line"></span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent dashboard-master]# <span class="built_in">cat</span> pip_requirements.txt </span><br><span class="line">Flask==1.0</span><br><span class="line">Flask-Babel==0.9</span><br><span class="line">Jinja2&gt;=2.10.1</span><br><span class="line">Werkzeug==0.15.4</span><br><span class="line">gunicorn==19.9.0</span><br><span class="line">python-dateutil==2.2</span><br><span class="line">requests==2.3.0</span><br><span class="line">mysql-python</span><br><span class="line">python-ldap</span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent dashboard-master]# <span class="built_in">cd</span> /home/work/open-falcon/dashboard-master</span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent dashboard-master]# pip install -r pip_requirements.txt</span><br><span class="line">Requirement already satisfied: Flask==1.0 <span class="keyword">in</span> ./env/lib/python2.7/site-packages (from -r pip_requirements.txt (line 1))</span><br><span class="line">Requirement already satisfied: Flask-Babel==0.9 <span class="keyword">in</span> ./env/lib/python2.7/site-packages (from -r pip_requirements.txt (line 2))</span><br><span class="line">Requirement already satisfied: Jinja2&gt;=2.10.1 <span class="keyword">in</span> ./env/lib/python2.7/site-packages (from -r pip_requirements.txt (line 3))</span><br><span class="line">Requirement already satisfied: Werkzeug==0.15.4 <span class="keyword">in</span> ./env/lib/python2.7/site-packages (from -r pip_requirements.txt (line 4))</span><br><span class="line">Requirement already satisfied: gunicorn==19.9.0 <span class="keyword">in</span> ./env/lib/python2.7/site-packages (from -r pip_requirements.txt (line 5))</span><br><span class="line">Requirement already satisfied: python-dateutil==2.2 <span class="keyword">in</span> ./env/lib/python2.7/site-packages (from -r pip_requirements.txt (line 6))</span><br><span class="line">Requirement already satisfied: requests==2.3.0 <span class="keyword">in</span> ./env/lib/python2.7/site-packages (from -r pip_requirements.txt (line 7))</span><br><span class="line">Requirement already satisfied: mysql-python <span class="keyword">in</span> ./env/lib/python2.7/site-packages (from -r pip_requirements.txt (line 8))</span><br><span class="line">Requirement already satisfied: python-ldap <span class="keyword">in</span> ./env/lib/python2.7/site-packages (from -r pip_requirements.txt (line 9))</span><br><span class="line">Requirement already satisfied: itsdangerous&gt;=0.24 <span class="keyword">in</span> ./env/lib/python2.7/site-packages (from Flask==1.0-&gt;-r pip_requirements.txt (line 1))</span><br><span class="line">Requirement already satisfied: click&gt;=5.1 <span class="keyword">in</span> ./env/lib/python2.7/site-packages (from Flask==1.0-&gt;-r pip_requirements.txt (line 1))</span><br><span class="line">Requirement already satisfied: speaklater&gt;=1.2 <span class="keyword">in</span> ./env/lib/python2.7/site-packages (from Flask-Babel==0.9-&gt;-r pip_requirements.txt (line 2))</span><br><span class="line">Requirement already satisfied: Babel&gt;=1.0 <span class="keyword">in</span> ./env/lib/python2.7/site-packages (from Flask-Babel==0.9-&gt;-r pip_requirements.txt (line 2))</span><br><span class="line">Requirement already satisfied: MarkupSafe&gt;=0.23 <span class="keyword">in</span> ./env/lib/python2.7/site-packages (from Jinja2&gt;=2.10.1-&gt;-r pip_requirements.txt (line 3))</span><br><span class="line">Requirement already satisfied: six <span class="keyword">in</span> ./env/lib/python2.7/site-packages (from python-dateutil==2.2-&gt;-r pip_requirements.txt (line 6))</span><br><span class="line">Requirement already satisfied: pyasn1-modules&gt;=0.1.5 <span class="keyword">in</span> ./env/lib/python2.7/site-packages (from python-ldap-&gt;-r pip_requirements.txt (line 9))</span><br><span class="line">Requirement already satisfied: pyasn1&gt;=0.3.7 <span class="keyword">in</span> ./env/lib/python2.7/site-packages (from python-ldap-&gt;-r pip_requirements.txt (line 9))</span><br><span class="line">Requirement already satisfied: pytz&gt;=2015.7 <span class="keyword">in</span> ./env/lib/python2.7/site-packages (from Babel&gt;=1.0-&gt;Flask-Babel==0.9-&gt;-r pip_requirements.txt (line 2))</span><br><span class="line">You are using pip version 9.0.1, however version 24.2 is available.</span><br><span class="line">You should consider upgrading via the <span class="string">&#x27;pip install --upgrade pip&#x27;</span> <span class="built_in">command</span>.</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 先备份，后修改配置文件</span></span><br><span class="line"></span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent dashboard-master]# ll</span><br><span class="line">total 1932</span><br><span class="line">-rw-r--r--  1 root root       97 Jun 22  2020 babel.cfg</span><br><span class="line">-rwxr-xr-x  1 root root     2653 Jun 22  2020 control</span><br><span class="line">-rw-r--r--  1 root root      510 Jun 22  2020 Dockerfile</span><br><span class="line">-rw-r--r--  1 root root      319 Jun 22  2020 entrypoint.sh</span><br><span class="line">drwxr-xr-x  5 root root       82 Aug  4 01:38 <span class="built_in">env</span></span><br><span class="line">-rw-r--r--  1 root root    12537 Jul 29 06:47 ez_setup.py</span><br><span class="line">-rw-r--r--  1 root root      170 Jun 22  2020 gunicorn.conf</span><br><span class="line">-rw-r--r--  1 root root     1235 Jun 22  2020 i18n.md</span><br><span class="line">-rw-r--r--  1 root root    11358 Jun 22  2020 LICENSE</span><br><span class="line">-rw-r--r--  1 root root      462 Jun 22  2020 NOTICE</span><br><span class="line">drwxr-xr-x  7  501 games     217 Aug  4 01:44 pip-9.0.1</span><br><span class="line">-rw-r--r--  1 root root  1197370 Apr 10  2023 pip-9.0.1.tar.gz</span><br><span class="line">-rw-r--r--  1 root root      139 Jun 22  2020 pip_requirements.txt</span><br><span class="line">-rw-r--r--  1 root root     5296 Jun 22  2020 README.md</span><br><span class="line">drwxr-xr-x 10 root root      194 Jun 22  2020 rrd</span><br><span class="line">drwxr-xr-x  2 root root      101 Jun 22  2020 screenshots</span><br><span class="line">drwxr-xr-x  2 root root       65 Jun 22  2020 scripts</span><br><span class="line">-rw-r--r--  1 root root   702770 Aug  4 01:43 setuptools-33.1.1.zip</span><br><span class="line">-rwxr-xr-x  1 root root      979 Jun 22  2020 wsgi.py</span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent dashboard-master]# <span class="built_in">cd</span> rrd/</span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent rrd]# ll</span><br><span class="line">total 16</span><br><span class="line">-rwxr-xr-x  1 root root 2764 Jun 22  2020 config.py</span><br><span class="line">-rw-r--r--  1 root root  737 Jun 22  2020 consts.py</span><br><span class="line">drwxr-xr-x  2 root root   25 Jun 22  2020 corelib</span><br><span class="line">-rw-r--r--  1 root root 1539 Jun 22  2020 __init__.py</span><br><span class="line">drwxr-xr-x  3 root root  156 Jun 22  2020 model</span><br><span class="line">drwxr-xr-x  2 root root   49 Jun 22  2020 service</span><br><span class="line">drwxr-xr-x 13 root root  231 Jun 22  2020 static</span><br><span class="line">-rw-r--r--  1 root root 3911 Jun 22  2020 store.py</span><br><span class="line">drwxr-xr-x  8 root root  157 Jun 22  2020 templates</span><br><span class="line">drwxr-xr-x  4 root root   26 Jun 22  2020 translations</span><br><span class="line">drwxr-xr-x  2 root root  132 Jun 22  2020 utils</span><br><span class="line">drwxr-xr-x  7 root root  124 Jun 22  2020 view</span><br><span class="line"></span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent rrd]# <span class="built_in">cp</span> config.py config.py.bak</span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent rrd]# vim config.py</span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent rrd]# <span class="built_in">cat</span> config.py</span><br><span class="line"><span class="comment">#-*-coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Copyright 2017 Xiaomi, Inc.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></span><br><span class="line"><span class="comment"># you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment"># You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#     http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment"># distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></span><br><span class="line"><span class="comment"># WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment"># See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment"># limitations under the License.</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># app config</span></span><br><span class="line">import os</span><br><span class="line">LOG_LEVEL = os.environ.get(<span class="string">&quot;LOG_LEVEL&quot;</span>,<span class="string">&#x27;DEBUG&#x27;</span>)</span><br><span class="line">SECRET_KEY = os.environ.get(<span class="string">&quot;SECRET_KEY&quot;</span>,<span class="string">&quot;secret-key&quot;</span>)</span><br><span class="line">PERMANENT_SESSION_LIFETIME = os.environ.get(<span class="string">&quot;PERMANENT_SESSION_LIFETIME&quot;</span>,3600 * 24 * 30)</span><br><span class="line">SITE_COOKIE = os.environ.get(<span class="string">&quot;SITE_COOKIE&quot;</span>,<span class="string">&quot;open-falcon-ck&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Falcon+ API</span></span><br><span class="line">API_ADDR = os.environ.get(<span class="string">&quot;API_ADDR&quot;</span>,<span class="string">&quot;http://172.16.1.200:18080/api/v1&quot;</span>)</span><br><span class="line">API_USER = os.environ.get(<span class="string">&quot;API_USER&quot;</span>,<span class="string">&quot;admin&quot;</span>)</span><br><span class="line">API_PASS = os.environ.get(<span class="string">&quot;API_PASS&quot;</span>,<span class="string">&quot;password&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># portal database</span></span><br><span class="line"><span class="comment"># TODO: read from api instead of db</span></span><br><span class="line">PORTAL_DB_HOST = os.environ.get(<span class="string">&quot;PORTAL_DB_HOST&quot;</span>,<span class="string">&quot;172.16.1.200&quot;</span>)</span><br><span class="line">PORTAL_DB_PORT = int(os.environ.get(<span class="string">&quot;PORTAL_DB_PORT&quot;</span>,3306))</span><br><span class="line">PORTAL_DB_USER = os.environ.get(<span class="string">&quot;PORTAL_DB_USER&quot;</span>,<span class="string">&quot;root&quot;</span>)</span><br><span class="line">PORTAL_DB_PASS = os.environ.get(<span class="string">&quot;PORTAL_DB_PASS&quot;</span>,<span class="string">&quot;password&quot;</span>)</span><br><span class="line">PORTAL_DB_NAME = os.environ.get(<span class="string">&quot;PORTAL_DB_NAME&quot;</span>,<span class="string">&quot;falcon_portal&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># alarm database</span></span><br><span class="line"><span class="comment"># TODO: read from api instead of db</span></span><br><span class="line">ALARM_DB_HOST = os.environ.get(<span class="string">&quot;ALARM_DB_HOST&quot;</span>,<span class="string">&quot;172.16.1.200&quot;</span>)</span><br><span class="line">ALARM_DB_PORT = int(os.environ.get(<span class="string">&quot;ALARM_DB_PORT&quot;</span>,3306))</span><br><span class="line">ALARM_DB_USER = os.environ.get(<span class="string">&quot;ALARM_DB_USER&quot;</span>,<span class="string">&quot;root&quot;</span>)</span><br><span class="line">ALARM_DB_PASS = os.environ.get(<span class="string">&quot;ALARM_DB_PASS&quot;</span>,<span class="string">&quot;password&quot;</span>)</span><br><span class="line">ALARM_DB_NAME = os.environ.get(<span class="string">&quot;ALARM_DB_NAME&quot;</span>,<span class="string">&quot;alarms&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># ldap config</span></span><br><span class="line">LDAP_ENABLED = os.environ.get(<span class="string">&quot;LDAP_ENABLED&quot;</span>,False)</span><br><span class="line">LDAP_SERVER = os.environ.get(<span class="string">&quot;LDAP_SERVER&quot;</span>,<span class="string">&quot;ldap.forumsys.com:389&quot;</span>)</span><br><span class="line">LDAP_BASE_DN = os.environ.get(<span class="string">&quot;LDAP_BASE_DN&quot;</span>,<span class="string">&quot;dc=example,dc=com&quot;</span>)</span><br><span class="line">LDAP_BINDDN = os.environ.get(<span class="string">&quot;LDAP_BINDDN&quot;</span>,<span class="string">&quot;cn=manager,dc=example,dc=org&quot;</span>)</span><br><span class="line">LDAP_BIND_PASS = os.environ.get(<span class="string">&quot;LDAP_BIND_PASS&quot;</span>,<span class="string">&quot;password&quot;</span>)</span><br><span class="line">LDAP_SEARCH_FMT = os.environ.get(<span class="string">&quot;LDAP_SEARCH_FMT&quot;</span>,<span class="string">&quot;uid=%s&quot;</span>)</span><br><span class="line">LDAP_ATTRS = [<span class="string">&quot;cn&quot;</span>,<span class="string">&quot;mail&quot;</span>,<span class="string">&quot;telephoneNumber&quot;</span>]</span><br><span class="line">LDAP_TLS_START_TLS = False</span><br><span class="line">LDAP_TLS_CACERTDIR = <span class="string">&quot;&quot;</span></span><br><span class="line">LDAP_TLS_CACERTFILE = <span class="string">&quot;/etc/openldap/certs/ca.crt&quot;</span></span><br><span class="line">LDAP_TLS_CERTFILE = <span class="string">&quot;&quot;</span></span><br><span class="line">LDAP_TLS_KEYFILE = <span class="string">&quot;&quot;</span></span><br><span class="line">LDAP_TLS_REQUIRE_CERT = True</span><br><span class="line">LDAP_TLS_CIPHER_SUITE = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># i18n</span></span><br><span class="line">BABEL_DEFAULT_LOCALE   = <span class="string">&#x27;zh_CN&#x27;</span></span><br><span class="line">BABEL_DEFAULT_TIMEZONE = <span class="string">&#x27;Asia/Shanghai&#x27;</span></span><br><span class="line"><span class="comment"># available translations</span></span><br><span class="line">LANGUAGES   = &#123;</span><br><span class="line">    <span class="string">&#x27;en&#x27;</span>:  <span class="string">&#x27;English&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;zh_CN&#x27;</span>:  <span class="string">&#x27;Chinese-Simplified&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># portal site config</span></span><br><span class="line">MAINTAINERS = [<span class="string">&#x27;root&#x27;</span>]</span><br><span class="line">CONTACT = <span class="string">&#x27;root@open-falcon.com&#x27;</span></span><br><span class="line"></span><br><span class="line">DEBUG = True</span><br><span class="line"></span><br><span class="line">try:</span><br><span class="line">    from rrd.local_config import *</span><br><span class="line">except:</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;[warning] no local config file&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 启动服务</span></span><br><span class="line"></span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent rrd]# <span class="built_in">cd</span> ..</span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent dashboard-master]# ./control start</span><br><span class="line">falcon-dashboard started..., pid=25575</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 查看日志并退出环境</span></span><br><span class="line"></span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent dashboard-master]# ./control <span class="built_in">tail</span></span><br><span class="line">[2024-08-04 02:03:48 +0000] [25575] [INFO] Starting gunicorn 19.9.0</span><br><span class="line">[2024-08-04 02:03:48 +0000] [25575] [INFO] Listening at: http://0.0.0.0:8081 (25575)</span><br><span class="line">[2024-08-04 02:03:48 +0000] [25575] [INFO] Using worker: <span class="built_in">sync</span></span><br><span class="line">[2024-08-04 02:03:48 +0000] [25580] [INFO] Booting worker with pid: 25580</span><br><span class="line">[2024-08-04 02:03:48 +0000] [25585] [INFO] Booting worker with pid: 25585</span><br><span class="line">[2024-08-04 02:03:48 +0000] [25590] [INFO] Booting worker with pid: 25590</span><br><span class="line">[2024-08-04 02:03:48 +0000] [25591] [INFO] Booting worker with pid: 25591</span><br><span class="line">^C</span><br><span class="line">(<span class="built_in">env</span>) [root@open-falcon-agent dashboard-master]# deactivate</span><br><span class="line">[root@open-falcon-agent dashboard-master]# netstat -lntup</span><br><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    </span><br><span class="line">tcp        0      0 0.0.0.0:8081            0.0.0.0:*               LISTEN      25575/python2       </span><br><span class="line">tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      8951/sshd           </span><br><span class="line">tcp        0      0 127.0.0.1:25            0.0.0.0:*               LISTEN      9216/master         </span><br><span class="line">tcp6       0      0 :::22                   :::*                    LISTEN      8951/sshd           </span><br><span class="line">tcp6       0      0 ::1:25                  :::*                    LISTEN      9216/master</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>访问网站 10.0.0.201：8081</p><p><img src="D:%5CTypora%5Cdevops%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4%E5%B7%A5%E5%85%B7%5C10.open-falcon.assets%5CQQ_1722708400816.png" alt="img"></p><p><img src="D:%5CTypora%5Cdevops%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4%E5%B7%A5%E5%85%B7%5C10.open-falcon.assets%5CQQ_1722708830296.png" alt="img"></p><p><img src="D:%5CTypora%5Cdevops%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4%E5%B7%A5%E5%85%B7%5C10.open-falcon.assets%5CQQ_1722708967167.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> 监控 </category>
          
          <category> falcon </category>
          
      </categories>
      
      
        <tags>
            
            <tag> zabbix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zabbix分布式监控</title>
      <link href="/posts/715aec45.html"/>
      <url>/posts/715aec45.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cos.lukme.top/Pic/QQ_1723279401909.png" alt="QQ_1723279401909"></p><p><strong>应用场景</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.一台Server管理的agent过多</span><br><span class="line">2.需要管理的agent在不同的国家或者地区，有网络波动</span><br><span class="line"><span class="comment"># 重新加载缓存</span></span><br><span class="line">[root@zabbix5-server ~]# zabbix_server -R config_cache_reload</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="zabbix-proxy特征">zabbix-proxy特征</h3><table><thead><tr><th>proxy</th><th></th></tr></thead><tbody><tr><td>轻量级（Lightweight）</td><td>yes</td></tr><tr><td>图形界面（GUI）</td><td>no</td></tr><tr><td>独立工作（Works independently）</td><td>yes</td></tr><tr><td>易于维护（Easy maintenance）</td><td>yes</td></tr><tr><td>自动生成数据库（Automatic DB creation）1</td><td>yes</td></tr><tr><td>本地管理（Local administration）</td><td>no</td></tr><tr><td>准备嵌入式硬件 （Ready for embedded hardware）</td><td>yes</td></tr><tr><td>单向TCP连接（One way TCP connections）</td><td>yes</td></tr><tr><td>集中配置（Centralised configuration）</td><td>yes</td></tr><tr><td>生成通知（Generates notifications）</td><td>no</td></tr></tbody></table><blockquote><p>1.zabbix proxy 数据库必须和 server 分开,否则数据会被破坏。</p><p>2.从Zabbix server数据库直接更新最新配置的proxy可能会比Zabbix server新，而Zabbix server的 配置由于CacheUpdateFrequency 的原因而无法快速更新。因此，proxy收集发送Zabbix server数 据可能会被忽略。</p></blockquote><p>zabbix proxy 是一个数据收集器,它不计算触发器、不处理事件、不发送报警。</p><p>有关proxy功能的概述， 如下表：</p><p><img src="https://cos.lukme.top/Pic/QQ_1723280852820.png" alt="QQ_1723280852820"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.无法设置触发器</span><br><span class="line">2.无法处理事件</span><br><span class="line">3.无法发送告警</span><br><span class="line">4.无法使用自愈模式</span><br></pre></td></tr></table></figure><p><strong>代理场景</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1723280897596.png" alt="QQ_1723280897596"></p><h3 id="部署zabbix-proxy">部署zabbix-proxy</h3><table><thead><tr><th>主机名</th><th>WanIP</th><th>LanIP</th><th>角色</th><th>应用</th></tr></thead><tbody><tr><td>Zabbix5-server</td><td>10.0.0.71</td><td>172.16.1.71</td><td>服务端</td><td>Zabbix-server、 Zabbix-agent</td></tr><tr><td>web01</td><td>10.0.0.7</td><td>172.16.1.7</td><td>zabbix5客户端</td><td>Zabbix-agent</td></tr><tr><td>web02</td><td>10.0.0.8</td><td>172.16.1.8</td><td>zabbix5客户端</td><td>Zabbix-agent</td></tr><tr><td></td><td>10.0.0.7,10.0.0.8</td><td>172.16.1.7,172.16.1.8</td><td>Zabbix客户端 收集 Java监控数据</td><td>Zabbix-java-gateway</td></tr><tr><td>zabbix_proxy73</td><td>10.0.0.73</td><td>172.16.1.73</td><td>代理web01</td><td>zabbix-proxy</td></tr><tr><td>zabbix_proxy74</td><td>10.0.0.74</td><td>172.16.1.74</td><td>代理web02</td><td>zabbix-proxy</td></tr></tbody></table><p>下载链接：<a href="https://mirrors.tuna.tsinghua.edu.cn/zabbix/zabbix/5.0/rhel/7/x86_64/">https://mirrors.tuna.tsinghua.edu.cn/zabbix/zabbix/5.0/rhel/7/x86_64/</a></p><p><strong>配置proxy73和web01</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.安装zabbix-proxy</span></span><br><span class="line">[root@zabbix-proxy ~]# yum install -y https://mirrors.tuna.tsinghua.edu.cn/zabbix/zabbix/5.0/rhel/7/x86_64/zabbix-proxy-mysql-5.0.42-1.el7.x86_64.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.连接数据库   (zabbix -71执行  有数据库)</span></span><br><span class="line">[root@zabbix5-server ~]# mysql</span><br><span class="line">create database zabbix_proxy73 charset utf8;</span><br><span class="line">create database zabbix_proxy74 charset utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.导入数据</span></span><br><span class="line">zcat /usr/share/doc/zabbix-proxy-mysql-5.0.42//schema.sql.gz |mysql -uzabbix -p123 -h172.16.1.71 zabbix_proxy73</span><br><span class="line"></span><br><span class="line">zcat /usr/share/doc/zabbix-proxy-mysql-5.0.42//schema.sql.gz |mysql -uzabbix -p123 -h172.16.1.71 zabbix_proxy74</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.修改zabbix-proxy配置文件</span></span><br><span class="line">[root@zabbix-proxy ~]# vim /etc/zabbix/zabbix_proxy.conf</span><br><span class="line">Server=172.16.1.71</span><br><span class="line">Hostname=zabbix_proxy73</span><br><span class="line">DBHost=172.16.1.71</span><br><span class="line">DBName=zabbix_proxy73</span><br><span class="line">DBUser=zabbix</span><br><span class="line">DBPassword=123</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.配置agent指向proxy</span></span><br><span class="line">[root@web01 ~]# vim /etc/zabbix/zabbix_agentd.conf</span><br><span class="line">Server=172.16.1.73</span><br><span class="line">ServerActive=172.16.1.73</span><br><span class="line">Hostname=web01</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6.重启agent</span></span><br><span class="line">[root@web01 ~]# systemctl restart zabbix-agent</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#重启代理</span></span><br><span class="line"><span class="comment">#7.最后重启zabbix-proxy  （如果最后数据没有显示，重启zabbix-proxy）</span></span><br><span class="line">systemctl start zabbix-proxy</span><br><span class="line">systemctl <span class="built_in">enable</span> zabbix-proxy</span><br><span class="line"></span><br><span class="line"><span class="comment">#zabbix-proxy代理要在  zabbix服务端，客户端重启之后   最后重启</span></span><br></pre></td></tr></table></figure><p><strong>web界面操作</strong></p><p><strong>创建代理</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1723338047556.png" alt="QQ_1723338047556"></p><p><img src="https://cos.lukme.top/Pic/QQ_1723338284210.png" alt="QQ_1723338284210"></p><p><strong>停用自动注册动作，没有则忽略</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1723338342003.png" alt="QQ_1723338342003"></p><p><img src="https://cos.lukme.top/Pic/QQ_1723338415805.png" alt="QQ_1723338415805"></p><p><img src="https://cos.lukme.top/Pic/QQ_1723338495182.png" alt="QQ_1723338495182"></p><p><strong>回到主机，刷新</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1723338515005.png" alt="QQ_1723338515005"></p><p><strong>查看监控板里数据</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1723338699914.png" alt="QQ_1723338699914"></p><h3 id="调取zabbix的API">调取zabbix的API</h3><p>zabbix官方：<a href="https://www.zabbix.com/documentation/5.0/zh/manual/api">API (zabbix.com)</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">准备Postman，注册登录后用于调取zabbix接口使用</span><br></pre></td></tr></table></figure><p><strong>使用curl调取接口</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">curl -X POST http<span class="punctuation">:</span><span class="comment">//10.0.0.71/api_jsonrpc.php -H &#x27;Content-Type: application/json-rpc&#x27; -d &#x27;</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;jsonrpc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;method&quot;</span><span class="punctuation">:</span> <span class="string">&quot;user.login&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;params&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;user&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Admin&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;password&quot;</span><span class="punctuation">:</span> <span class="string">&quot;zabbix&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;auth&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line"><span class="punctuation">&#125;</span>&#x27;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#返回值，其中result值是token   每次token都不一样</span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;jsonrpc&quot;</span><span class="punctuation">:</span><span class="string">&quot;2.0&quot;</span><span class="punctuation">,</span><span class="attr">&quot;result&quot;</span><span class="punctuation">:</span><span class="string">&quot;17d3a8bddc03d4f6cdc752527e91d03b&quot;</span><span class="punctuation">,</span><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><strong>使用postman调取接口</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1723340719798.png" alt="QQ_1723340719798"></p><p><img src="https://cos.lukme.top/Pic/QQ_1723340820336.png" alt="QQ_1723340820336"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">http://10.0.0.71/api_jsonrpc.php</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;jsonrpc&quot;</span>: <span class="string">&quot;2.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;method&quot;</span>: <span class="string">&quot;user.login&quot;</span>,</span><br><span class="line">    <span class="string">&quot;params&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;user&quot;</span>: <span class="string">&quot;Admin&quot;</span>,</span><br><span class="line">        <span class="string">&quot;password&quot;</span>: <span class="string">&quot;zabbix&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: 1,</span><br><span class="line">    <span class="string">&quot;auth&quot;</span>: null</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">e4b67c3d6c13c9470c9ec56350552c2d</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#获得token后，每次查询带上token即可</span></span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/QQ_1723340900158.png" alt="QQ_1723340900158"></p><p><strong>获得主机组ID</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">#在Postman里查询</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">           <span class="attr">&quot;jsonrpc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">           <span class="attr">&quot;method&quot;</span><span class="punctuation">:</span> <span class="string">&quot;host.get&quot;</span><span class="punctuation">,</span></span><br><span class="line">           <span class="attr">&quot;params&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">               <span class="attr">&quot;output&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                   <span class="string">&quot;hostid&quot;</span><span class="punctuation">,</span></span><br><span class="line">                   <span class="string">&quot;host&quot;</span></span><br><span class="line">               <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">               <span class="attr">&quot;selectInterfaces&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                   <span class="string">&quot;interfaceid&quot;</span><span class="punctuation">,</span></span><br><span class="line">                   <span class="string">&quot;ip&quot;</span></span><br><span class="line">               <span class="punctuation">]</span></span><br><span class="line">           <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">           <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">           <span class="attr">&quot;auth&quot;</span><span class="punctuation">:</span> <span class="string">&quot;e4b67c3d6c13c9470c9ec56350552c2d&quot;</span></span><br><span class="line">       <span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#返回值</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;jsonrpc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;hostid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;10460&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;host&quot;</span><span class="punctuation">:</span> <span class="string">&quot;web01&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;interfaces&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;interfaceid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;22&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;ip&quot;</span><span class="punctuation">:</span> <span class="string">&quot;172.16.1.7&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">2</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><strong>获取模板ID</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">           <span class="attr">&quot;jsonrpc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">           <span class="attr">&quot;method&quot;</span><span class="punctuation">:</span> <span class="string">&quot;template.get&quot;</span><span class="punctuation">,</span></span><br><span class="line">           <span class="attr">&quot;params&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">               <span class="attr">&quot;output&quot;</span><span class="punctuation">:</span> <span class="string">&quot;extend&quot;</span><span class="punctuation">,</span></span><br><span class="line">               <span class="attr">&quot;filter&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                   <span class="attr">&quot;host&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                      <span class="string">&quot;Template OS Linux by Zabbix agent&quot;</span></span><br><span class="line">                   <span class="punctuation">]</span></span><br><span class="line">               <span class="punctuation">&#125;</span></span><br><span class="line">           <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">           <span class="attr">&quot;auth&quot;</span><span class="punctuation">:</span> <span class="string">&quot;e4b67c3d6c13c9470c9ec56350552c2d&quot;</span><span class="punctuation">,</span></span><br><span class="line">           <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line">       <span class="punctuation">&#125;</span></span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line">##返回值</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;jsonrpc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;proxy_hostid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;host&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Template OS Linux by Zabbix agent&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="string">&quot;3&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;disable_until&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;error&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;available&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;errors_from&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;lastaccess&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;ipmi_authtype&quot;</span><span class="punctuation">:</span> <span class="string">&quot;-1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;ipmi_privilege&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;ipmi_username&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;ipmi_password&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;ipmi_disable_until&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;ipmi_available&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;snmp_disable_until&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;snmp_available&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;maintenanceid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;maintenance_status&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;maintenance_type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;maintenance_from&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;ipmi_errors_from&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;snmp_errors_from&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;ipmi_error&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;snmp_error&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;jmx_disable_until&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;jmx_available&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;jmx_errors_from&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;jmx_error&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Template OS Linux by Zabbix agent&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;flags&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;templateid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;10001&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Official Linux template. Requires agent of Zabbix 3.0.14, 3.4.5 and 4.0.0 or newer.\r\n\r\nKnown Issues:\r\n\r\n  Description: Network discovery. Zabbix agent as of 4.2 doesn&#x27;t support items such as net.if.status, net.if.speed.\r\n\r\nYou can discuss this template or leave feedback on our forum https://www.zabbix.com/forum/zabbix-suggestions-and-feedback/387225-discussion-thread-for-official-zabbix-template-for-linux\r\n\r\nTemplate tooling version used: 0.39&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;tls_connect&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;tls_accept&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;tls_issuer&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;tls_subject&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;tls_psk_identity&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;tls_psk&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;proxy_address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;auto_compress&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><strong>添加主机</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">模板机ID，主机组ID（groupid）上面已获取</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">curl -X POST http://10.0.0.71/api_jsonrpc.php -H <span class="string">&#x27;Content-Type: application/json-rpc&#x27;</span> -d <span class="string">&#x27;</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">           &quot;jsonrpc&quot;: &quot;2.0&quot;,</span></span><br><span class="line"><span class="string">           &quot;method&quot;: &quot;host.create&quot;,</span></span><br><span class="line"><span class="string">           &quot;params&quot;: &#123;</span></span><br><span class="line"><span class="string">               &quot;host&quot;: &quot;Linux server&quot;,</span></span><br><span class="line"><span class="string">               &quot;interfaces&quot;: [</span></span><br><span class="line"><span class="string">                   &#123;</span></span><br><span class="line"><span class="string">                       &quot;type&quot;: 1,</span></span><br><span class="line"><span class="string">                       &quot;main&quot;: 1,</span></span><br><span class="line"><span class="string">                       &quot;useip&quot;: 1,</span></span><br><span class="line"><span class="string">                       &quot;ip&quot;: &quot;10.0.0.9&quot;,</span></span><br><span class="line"><span class="string">                       &quot;dns&quot;: &quot;&quot;,</span></span><br><span class="line"><span class="string">                       &quot;port&quot;: &quot;10050&quot;</span></span><br><span class="line"><span class="string">                   &#125;</span></span><br><span class="line"><span class="string">               ],</span></span><br><span class="line"><span class="string">               &quot;groups&quot;: [</span></span><br><span class="line"><span class="string">                   &#123;</span></span><br><span class="line"><span class="string">                       &quot;groupid&quot;: &quot;2&quot;</span></span><br><span class="line"><span class="string">                   &#125;</span></span><br><span class="line"><span class="string">               ],</span></span><br><span class="line"><span class="string">               &quot;tags&quot;: [</span></span><br><span class="line"><span class="string">                   &#123;</span></span><br><span class="line"><span class="string">                       &quot;tag&quot;: &quot;Host name&quot;,</span></span><br><span class="line"><span class="string">                       &quot;value&quot;: &quot;Linux server&quot;</span></span><br><span class="line"><span class="string">                   &#125;</span></span><br><span class="line"><span class="string">               ],</span></span><br><span class="line"><span class="string">               &quot;templates&quot;: [</span></span><br><span class="line"><span class="string">                   &#123;</span></span><br><span class="line"><span class="string">                       &quot;templateid&quot;: &quot;20045&quot;</span></span><br><span class="line"><span class="string">                   &#125;,</span></span><br><span class="line"><span class="string">                   &#123;</span></span><br><span class="line"><span class="string">                   &quot;templateid&quot;: &quot;10001&quot;</span></span><br><span class="line"><span class="string">                   &#125;</span></span><br><span class="line"><span class="string">               ],</span></span><br><span class="line"><span class="string">               &quot;macros&quot;: [</span></span><br><span class="line"><span class="string">                   &#123;</span></span><br><span class="line"><span class="string">                       &quot;macro&quot;: &quot;&#123;$USER_ID&#125;&quot;,</span></span><br><span class="line"><span class="string">                       &quot;value&quot;: &quot;123321&quot;</span></span><br><span class="line"><span class="string">                   &#125;,</span></span><br><span class="line"><span class="string">                   &#123;</span></span><br><span class="line"><span class="string">                       &quot;macro&quot;: &quot;&#123;$USER_LOCATION&#125;&quot;,</span></span><br><span class="line"><span class="string">                       &quot;value&quot;: &quot;0:0:0&quot;,</span></span><br><span class="line"><span class="string">                       &quot;description&quot;: &quot;latitude, longitude and altitude coordinates&quot;</span></span><br><span class="line"><span class="string">                   &#125;</span></span><br><span class="line"><span class="string">               ],</span></span><br><span class="line"><span class="string">               &quot;inventory_mode&quot;: 0,</span></span><br><span class="line"><span class="string">               &quot;inventory&quot;: &#123;</span></span><br><span class="line"><span class="string">                   &quot;macaddress_a&quot;: &quot;01234&quot;,</span></span><br><span class="line"><span class="string">                   &quot;macaddress_b&quot;: &quot;56768&quot;</span></span><br><span class="line"><span class="string">               &#125;</span></span><br><span class="line"><span class="string">           &#125;,</span></span><br><span class="line"><span class="string">           &quot;auth&quot;: &quot;e4b67c3d6c13c9470c9ec56350552c2d&quot;,</span></span><br><span class="line"><span class="string">           &quot;id&quot;: 1</span></span><br><span class="line"><span class="string">       &#125;&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 监控 </category>
          
          <category> zabbix </category>
          
      </categories>
      
      
        <tags>
            
            <tag> zabbix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zabbix邮件告警</title>
      <link href="/posts/97b5f9b7.html"/>
      <url>/posts/97b5f9b7.html</url>
      
        <content type="html"><![CDATA[<h3 id="1-添加报警媒介">1.添加报警媒介</h3><p><img src="https://cos.lukme.top/Pic/QQ_1722776498063.png" alt="QQ_1722776498063"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722776993991.png" alt="QQ_1722776993991"></p><p><strong>获取QQ邮箱授权码</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1722776749588.png" alt="QQ_1722776749588"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722776784428.png" alt="QQ_1722776784428"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722776853820.png" alt="QQ_1722776853820"></p><p><strong>可以测试能否成功发邮件</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1722777067263.png" alt="QQ_1722777067263"></p><h3 id="2-添加动作">2.添加动作</h3><p><img src="https://cos.lukme.top/Pic/QQ_1722778117057.png" alt="QQ_1722778117057"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722777618840.png" alt="QQ_1722777618840"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722777179047.png" alt="QQ_1722777179047"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722777497942.png" alt="QQ_1722777497942"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722777580123.png" alt="QQ_1722777580123"></p><h3 id="3-添加报警收件人">3.添加报警收件人</h3><p><img src="https://cos.lukme.top/Pic/QQ_1722777689193.png" alt="QQ_1722777689193"></p><p><strong>测试</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1722777896537.png" alt="QQ_1722777896537"></p><h3 id="4-邮件告警-html告警">4.邮件告警-html告警</h3><p><img src="https://cos.lukme.top/Pic/QQ_1722841657383.png" alt="QQ_1722841657383"></p><p><strong>故障</strong></p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml">故障</span><span class="template-variable">&#123;TRIGGER.STATUS&#125;</span><span class="language-xml">,服务器:</span><span class="template-variable">&#123;HOSTNAME1&#125;</span><span class="language-xml">发生: </span><span class="template-variable">&#123;TRIGGER.NAME&#125;</span><span class="language-xml">故障!</span></span><br><span class="line"><span class="language-xml">告警地址:</span><span class="template-variable">&#123;HOST.IP&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">告警主机:</span><span class="template-variable">&#123;HOSTNAME1&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">告警时间:</span><span class="template-variable">&#123;EVENT.DATE&#125;</span><span class="language-xml"> </span><span class="template-variable">&#123;EVENT.TIME&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">告警等级:</span><span class="template-variable">&#123;TRIGGER.SEVERITY&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">告警信息: </span><span class="template-variable">&#123;TRIGGER.NAME&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">告警项目:</span><span class="template-variable">&#123;TRIGGER.KEY1&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">问题详情:</span><span class="template-variable">&#123;ITEM.NAME&#125;</span><span class="language-xml">:</span><span class="template-variable">&#123;ITEM.VALUE&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">当前状态:</span><span class="template-variable">&#123;TRIGGER.STATUS&#125;</span><span class="language-xml">:</span><span class="template-variable">&#123;ITEM.VALUE1&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">事件ID:</span><span class="template-variable">&#123;EVENT.ID&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-tag">body</span>&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&#x27;https://seopic.699pic.com/photo/40007/7490.jpg_wh1200.jpg&#x27;</span>);</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;http://pic1.win4000.com/wallpaper/8/573acd203bc77.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-tag">table</span> <span class="selector-class">.guzhang</span> &#123;<span class="attribute">color</span>: red;&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;3&quot;</span> <span class="attr">bordercolor</span>=<span class="string">&quot;black&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0px&quot;</span> <span class="attr">cellpadding</span>=<span class="string">&quot;4px&quot;</span> <span class="attr">width</span>=<span class="string">&quot;500px&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">&quot;guzhang&quot;</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#0C1B3D&quot;</span> &gt;</span><span class="tag">&lt;<span class="name">th</span> <span class="attr">colspan</span>=<span class="string">2</span>&gt;</span>&#123;TRIGGER.STATUS&#125; 故障！！！故障！！！</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="symbol">&amp;#128514;</span> <span class="symbol">&amp;#128514;</span> <span class="symbol">&amp;#128514;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#F9B602&quot;</span> <span class="attr">width</span>=<span class="string">&quot;20%&quot;</span>&gt;</span>告警主机<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#F9B602&quot;</span>&gt;</span>&#123;HOSTNAME1&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#F9B602&quot;</span>&gt;</span>告警别名<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#F9B602&quot;</span>&gt;</span>&#123;HOST.NAME&#125; <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#F9B602&quot;</span>&gt;</span>告警地址<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#F9B602&quot;</span>&gt;</span>&#123;HOST.IP&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#F9B602&quot;</span>&gt;</span>告警时间<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#F9B602&quot;</span>&gt;</span>&#123;EVENT.DATE&#125; &#123;EVENT.TIME&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#F9B602&quot;</span>&gt;</span>告警等级<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#F9B602&quot;</span>&gt;</span>&#123;TRIGGER.SEVERITY&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#F9B602&quot;</span>&gt;</span>告警信息<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#F9B602&quot;</span>&gt;</span>&#123;TRIGGER.NAME&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#F9B602&quot;</span>&gt;</span>告警项目<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#F9B602&quot;</span>&gt;</span>&#123;TRIGGER.KEY1&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&#x27;guzhang2&#x27;</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#FF3333&quot;</span>&gt;</span>问题详情<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&#x27;guzhang3&#x27;</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#FF3333&quot;</span>&gt;</span>&#123;ITEM.NAME&#125;:<span class="symbol">&amp;nbsp;</span>&#123;ITEM.VALUE&#125; <span class="symbol">&amp;#128520;</span> <span class="symbol">&amp;#128520;</span> <span class="symbol">&amp;#128520;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#F9B602&quot;</span>&gt;</span>当前状态<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#F9B602&quot;</span>&gt;</span>&#123;TRIGGER.STATUS&#125;:<span class="symbol">&amp;nbsp;</span>&#123;ITEM.VALUE1&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#F9B602&quot;</span>&gt;</span>事件ID<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#F9B602&quot;</span>&gt;</span>&#123;EVENT.ID&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>恢复</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">恢复&#123;TRIGGER.STATUS&#125;, 服务器:&#123;HOSTNAME1&#125;: &#123;TRIGGER.NAME&#125;已恢复!</span><br><span class="line">告警地址:&#123;HOST.IP&#125;</span><br><span class="line">告警主机:&#123;HOSTNAME1&#125;</span><br><span class="line">告警时间:&#123;EVENT.DATE&#125; &#123;EVENT.TIME&#125;</span><br><span class="line">告警等级:&#123;TRIGGER.SEVERITY&#125;</span><br><span class="line">告警信息: &#123;TRIGGER.NAME&#125;</span><br><span class="line">告警项目:&#123;TRIGGER.KEY1&#125;</span><br><span class="line">问题详情:&#123;ITEM.NAME&#125;:&#123;ITEM.VALUE&#125;</span><br><span class="line">当前状态:&#123;TRIGGER.STATUS&#125;:&#123;ITEM.VALUE1&#125;</span><br><span class="line">事件ID:&#123;EVENT.ID&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-tag">table</span> <span class="selector-class">.guzhang</span> &#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-tag">body</span>&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&#x27;https://seopic.699pic.com/photo/40007/7490.jpg_wh1200.jpg&#x27;</span>);</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;http://pic1.win4000.com/wallpaper/8/573acd203bc77.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">bordercolor</span>=<span class="string">&quot;black&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0px&quot;</span> <span class="attr">cellpadding</span>=<span class="string">&quot;4px&quot;</span> <span class="attr">width</span>=<span class="string">&quot;500px&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#49c208&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">th</span> <span class="attr">colspan</span>=<span class="string">2</span>&gt;</span></span><br><span class="line">    &#123;TRIGGER.STATUS&#125; 哈哈哈哈哈哈,好了</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="symbol">&amp;#128512;</span> <span class="symbol">&amp;#128512;</span> <span class="symbol">&amp;#128512;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;lightgreen&quot;</span> <span class="attr">width</span>=<span class="string">&quot;20%&quot;</span>&gt;</span>恢复主机<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;yellow&quot;</span>&gt;</span>&#123;HOSTNAME1&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;lightgreen&quot;</span>&gt;</span>恢复别名<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;yellow&quot;</span>&gt;</span>&#123;HOST.NAME&#125; <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;lightgreen&quot;</span>&gt;</span>恢复地址<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;yellow&quot;</span>&gt;</span>&#123;HOST.IP&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;lightgreen&quot;</span>&gt;</span>恢复时间<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;yellow&quot;</span>&gt;</span>&#123;EVENT.DATE&#125; &#123;EVENT.RECOVERY.TIME&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;lightgreen&quot;</span>&gt;</span>恢复等级<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;yellow&quot;</span>&gt;</span>&#123;TRIGGER.SEVERITY&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;lightgreen&quot;</span>&gt;</span>恢复信息<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;yellow&quot;</span>&gt;</span>&#123;TRIGGER.NAME&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;lightgreen&quot;</span>&gt;</span>恢复项目<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;yellow&quot;</span>&gt;</span>&#123;TRIGGER.KEY1&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#49c208&quot;</span>&gt;</span>恢复详情<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#49c208&quot;</span>&gt;</span>&#123;ITEM.NAME&#125;:<span class="symbol">&amp;nbsp;</span>&#123;ITEM.VALUE&#125; <span class="symbol">&amp;#9889;</span> <span class="symbol">&amp;#9889;</span><span class="symbol">&amp;#9889;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;lightgreen&quot;</span>&gt;</span>当前状态<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;yellow&quot;</span>&gt;</span>&#123;TRIGGER.STATUS&#125;:<span class="symbol">&amp;nbsp;</span>&#123;ITEM.VALUE1&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;lightgreen&quot;</span>&gt;</span>事件ID<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">&quot;yellow&quot;</span>&gt;</span>&#123;EVENT.ID&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 监控 </category>
          
          <category> zabbix </category>
          
      </categories>
      
      
        <tags>
            
            <tag> zabbix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zabbix自定义监控项</title>
      <link href="/posts/9ccde0e4.html"/>
      <url>/posts/9ccde0e4.html</url>
      
        <content type="html"><![CDATA[<h3 id="创建模板">创建模板</h3><p><img src="https://cos.lukme.top/Pic/QQ_1722762642396.png" alt="QQ_1722762642396"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722762853490.png" alt="QQ_1722762853490"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722766153284.png" alt="QQ_1722766153284"></p><p><strong>自定义监控实例</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.监控用户登录数量</span><br><span class="line">2.监控服务是否存活</span><br></pre></td></tr></table></figure><p><strong>1.监控用户登录数量</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.了解监控需求，获取监控数据</span></span><br><span class="line"><span class="comment">## 零宽断言</span></span><br><span class="line">[root@web02 ~]# ifconfig eth0|grep -Po <span class="string">&#x27;[1-9][0-9]*\.\d+\.\d+\.\d+(?= netmask)&#x27;</span></span><br><span class="line">[root@web02 ~]# <span class="built_in">uptime</span>|grep -Po <span class="string">&#x27;\d+(?= user)&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.修改zabbix-agent的配置文件（使用zabbix-agent配置文件中的 UserParameter= 定义监控项）</span></span><br><span class="line">语法：</span><br><span class="line">Format: UserParameter=&lt;key&gt;,&lt;shell <span class="built_in">command</span>&gt;</span><br><span class="line">Format: UserParameter=监控项名字,shell命令</span><br><span class="line">[root@web01 ~]# vim /etc/zabbix/zabbix_agentd.conf</span><br><span class="line">UserParameter=user.count,<span class="built_in">uptime</span>|grep -Po <span class="string">&#x27;\d+(?= user)&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##建议以后直接创建conf文件（类似nginx子配置文件）</span></span><br><span class="line">[root@web01 ~]# vim /etc/zabbix/zabbix_agentd.d/userlogin.conf</span><br><span class="line">UserParameter=user.count,<span class="built_in">uptime</span>|grep -Po <span class="string">&#x27;\d+(?= user)&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.重启zabbix-agent</span></span><br><span class="line">[root@web01 ~]# systemctl restart zabbix-agent</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.在zabbix-server上（zabbix-get）测试，是否可以接收到zabbix-agent获取的数据</span></span><br><span class="line">rpm -ivh https://mirrors.tuna.tsinghua.edu.cn/zabbix/zabbix/5.0/rhel/7/x86_64/zabbix-get-5.0.0-1.el7.x86_64.rpm</span><br><span class="line"></span><br><span class="line">[root@zabbix5 ~]# zabbix_get -s 172.16.1.7 -k user.count</span><br><span class="line">1</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="添加监控项">添加监控项</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#统一添加到创建的模板里，每次监控都不需要单独创建监控项，而是直接选择这个模板就行</span></span><br><span class="line">找到创建的自定义模板&gt;监控项&gt;创建监控项</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/QQ_1722766187140.png" alt="QQ_1722766187140"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722766273027.png" alt="QQ_1722766273027"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722771986050.png" alt="QQ_1722771986050"></p><h3 id="添加触发器">添加触发器</h3><p><strong>如何做到报警提醒？</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1722772037897.png" alt="QQ_1722772037897"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722772224830.png" alt="QQ_1722772224830"></p><p><strong>添加表达式</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">插入表达式后，添加数据，表达式选择&gt;   图1错了</span><br><span class="line"></span><br><span class="line">&#123;HOST.NAME&#125;:可见的名称</span><br><span class="line">&#123;HOST.IP&#125;：IP地址</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/QQ_1722772470739.png" alt="QQ_1722772470739"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722772899528.png" alt="QQ_1722772899528"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用变量</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/QQ_1722773526820.png" alt="QQ_1722773526820"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#关联模板</span></span><br><span class="line">配置&gt;主机&gt;web01-10.0.0.7&gt;模板&gt;选择自定义模板</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/QQ_1722772708350.png" alt="QQ_1722772708350"></p><p><strong>==测试==</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1722772812337.png" alt="QQ_1722772812337"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722773021302.png" alt="QQ_1722773021302"></p><h3 id="添加图表">添加图表</h3><p><img src="https://cos.lukme.top/Pic/QQ_1722773128565.png" alt="QQ_1722773128565"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">创建图形</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/QQ_1722773144333.png" alt="QQ_1722773144333"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722773217580.png" alt="QQ_1722773217580"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722773354712.png" alt="QQ_1722773354712"></p><h3 id="监控服务状态">监控服务状态</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.获取数据</span></span><br><span class="line">[root@web01 ~]# netstat -lntup|grep -<span class="built_in">wc</span> <span class="string">&quot;8080&quot;</span></span><br><span class="line">1</span><br><span class="line"><span class="comment"># 2.修改配置文件</span></span><br><span class="line">[root@web01 ~]# vim /etc/zabbix/zabbix_agentd.d/port.conf</span><br><span class="line">UserParameter=tcp.port.ssh,netstat -lntup|grep -<span class="built_in">wc</span> <span class="string">&quot;22&quot;</span></span><br><span class="line">UserParameter=tcp.port.http,netstat -lntup|grep -<span class="built_in">wc</span> <span class="string">&quot;80&quot;</span></span><br><span class="line">UserParameter=tcp.port.tomcat,netstat -lntup|grep -<span class="built_in">wc</span> <span class="string">&quot;8080&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#3，重启客户端</span></span><br><span class="line">systemctl restart zabbix-agent.service </span><br><span class="line"></span><br><span class="line"><span class="comment">#参数化定义监控项</span></span><br><span class="line">[root@web01 ~]#vim /etc/zabbix/zabbix_agentd.d/port.conf</span><br><span class="line">UserParameter=tcp.port[*],ss -lntup|grep -<span class="built_in">wc</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">[root@web01 ~]# systemctl restart zabbix-agen</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#如何获取值？</span></span><br><span class="line">[root@zabbix5 fonts]# zabbix_get -s 172.16.1.7 -k tcp.port[80]</span><br><span class="line">0</span><br></pre></td></tr></table></figure><p><strong>依次添加监控项</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1722774448589.png" alt="QQ_1722774448589"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722774470909.png" alt="QQ_1722774470909"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722774493661.png" alt="QQ_1722774493661"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722775398498.png" alt="QQ_1722775398498"></p><p><strong>排错</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1722774829533.png" alt="QQ_1722774829533"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722774871851.png" alt="QQ_1722774871851"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix5 fonts]# zabbix_get -s 172.16.1.7 -k tcp.port.http</span><br><span class="line">(Not all processes could be identified, non-owned process info</span><br><span class="line"> will not be shown, you would have to be root to see it all.)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">报错原因：定义监控项时，定义的数据类型是数字，结果获取到的值含有字符串</span><br><span class="line">解决方案：将zabbix用户提权</span><br><span class="line">[root@web01 ~]# visudo</span><br><span class="line">zabbix ALL=(ALL) NOPASSWD: ALL</span><br><span class="line"></span><br><span class="line"><span class="comment"># 监控命令：</span></span><br><span class="line">[root@web01 ~]# vim /etc/zabbix/zabbix_agentd.d/port.conf</span><br><span class="line">UserParameter=tcp.port.ssh,<span class="built_in">sudo</span> netstat -lntup|grep -<span class="built_in">wc</span> <span class="string">&quot;22&quot;</span></span><br><span class="line">UserParameter=tcp.port.http,<span class="built_in">sudo</span> netstat -lntup|grep -<span class="built_in">wc</span> <span class="string">&quot;80&quot;</span></span><br><span class="line">UserParameter=tcp.port.tomcat,<span class="built_in">sudo</span> netstat -lntup|grep -<span class="built_in">wc</span> <span class="string">&quot;8080&quot;</span></span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">UserParameter=tcp.port.ssh,ss -ltnup|grep -<span class="built_in">wc</span> <span class="string">&#x27;sshd&#x27;</span></span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">给netstat命令加setuid权限</span><br></pre></td></tr></table></figure><p><strong>添加触发器</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">表达式添加，选择nginx的触发器，阈值为0</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/QQ_1722776310520.png" alt="QQ_1722776310520"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722776258077.png" alt="QQ_1722776258077"></p><h3 id="监控nginx状态页">监控nginx状态页</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/nginx/conf.d/webapp.conf</span><br><span class="line">server&#123;</span><br><span class="line">listen 80;</span><br><span class="line">server_name _;</span><br><span class="line">location / &#123;</span><br><span class="line">root /code/webapp;</span><br><span class="line">index index.html;</span><br><span class="line">&#125;</span><br><span class="line">location /status &#123;</span><br><span class="line">stub_status on;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http://10.0.0.7/status</span><br><span class="line">http://webapp.com/status</span><br><span class="line"><span class="comment">#注：如果使用域名，物理机和虚拟机都需要hosts域名解析</span></span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/QQ_1722778620045.png" alt="QQ_1722778620045"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.创建存放监控脚本目录</span></span><br><span class="line">[root@web01 ~]# <span class="built_in">mkdir</span> /etc/zabbix/zabbix_agentd.d/scripts</span><br><span class="line">[root@web01 ~]# vim /etc/zabbix/zabbix_agentd.d/scripts/nginx_status.sh</span><br><span class="line"></span><br><span class="line">NGINX_PORT=80 <span class="comment">#如果端口不同仅需要修改脚本即可，否则修改xml很麻烦</span></span><br><span class="line">NGINX_URL=http://172.16.1.7/status</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">nginx_active</span></span>()&#123;</span><br><span class="line">/usr/bin/curl -s <span class="string">&quot;<span class="variable">$&#123;NGINX_URL&#125;</span>&quot;</span> |awk <span class="string">&#x27;/Active/ &#123;print $NF&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">nginx_reading</span></span>()&#123;</span><br><span class="line">/usr/bin/curl -s <span class="string">&quot;<span class="variable">$&#123;NGINX_URL&#125;</span>&quot;</span> |awk <span class="string">&#x27;/Reading/ &#123;print $2&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">nginx_writing</span></span>()&#123;</span><br><span class="line">/usr/bin/curl -s <span class="string">&quot;<span class="variable">$&#123;NGINX_URL&#125;</span>&quot;</span> |awk <span class="string">&#x27;/Writing/ &#123;print $4&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">nginx_waiting</span></span>()&#123;</span><br><span class="line">/usr/bin/curl -s <span class="string">&quot;<span class="variable">$&#123;NGINX_URL&#125;</span>&quot;</span> |awk <span class="string">&#x27;/Waiting/ &#123;print $6&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">nginx_accepts</span></span>()&#123;</span><br><span class="line">/usr/bin/curl -s <span class="string">&quot;<span class="variable">$&#123;NGINX_URL&#125;</span>&quot;</span> |awk <span class="string">&#x27;NR==3 &#123;print $1&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">nginx_handled</span></span>()&#123;</span><br><span class="line">/usr/bin/curl -s <span class="string">&quot;<span class="variable">$&#123;NGINX_URL&#125;</span>&quot;</span> |awk <span class="string">&#x27;NR==3 &#123;print $2&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">nginx_requests</span></span>()&#123;</span><br><span class="line">/usr/bin/curl -s <span class="string">&quot;<span class="variable">$&#123;NGINX_URL&#125;</span>&quot;</span> |awk <span class="string">&#x27;NR==3 &#123;print $3&#125;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span></span><br><span class="line">active)</span><br><span class="line">nginx_active;</span><br><span class="line">;;</span><br><span class="line">reading)</span><br><span class="line">nginx_reading;</span><br><span class="line">;;</span><br><span class="line">writing)</span><br><span class="line">nginx_writing;</span><br><span class="line">;;</span><br><span class="line">waiting)</span><br><span class="line">nginx_waiting;</span><br><span class="line">;;</span><br><span class="line">accepts)</span><br><span class="line">nginx_accepts;</span><br><span class="line">;;</span><br><span class="line">handled)</span><br><span class="line">nginx_handled;</span><br><span class="line">;;</span><br><span class="line">requests)</span><br><span class="line">nginx_requests;</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">echo</span> $<span class="string">&quot;USAGE:<span class="variable">$0</span> &#123;active|reading|writing|waiting|accepts|handled|requests&#125;&quot;</span></span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 授权</span></span><br><span class="line">[root@web01 ~]# <span class="built_in">chmod</span> +x /etc/zabbix/zabbix_agentd.d/scripts/nginx_status.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改zabbix-agent配置文件</span></span><br><span class="line">[root@web01 ~]# vim /etc/zabbix/zabbix_agentd.d/nginx_status.conf</span><br><span class="line">UserParameter=nginx.status[*],/etc/zabbix/zabbix_agentd.d/scripts/nginx_status.sh <span class="variable">$1</span></span><br><span class="line"><span class="comment">#重启客户端</span></span><br><span class="line">[root@web01 ~]# systemctl restart zabbix-agent</span><br></pre></td></tr></table></figure><p><strong>依次添加监控项</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1722780577877.png" alt="QQ_1722780577877"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722780778047.png" alt="QQ_1722780778047"></p><p><strong>添加图形</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1722780847328.png" alt="QQ_1722780847328"></p>]]></content>
      
      
      <categories>
          
          <category> 监控 </category>
          
          <category> zabbix </category>
          
      </categories>
      
      
        <tags>
            
            <tag> zabbix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zabbix部署</title>
      <link href="/posts/42dcb23.html"/>
      <url>/posts/42dcb23.html</url>
      
        <content type="html"><![CDATA[<h3 id="zabbix5部署">zabbix5部署</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">zabbix版本</span><br><span class="line">7.0：不支持C7</span><br><span class="line">6.4：不支持C7</span><br><span class="line">6.0：不支持C7</span><br><span class="line">5.0：支持C7</span><br><span class="line">4.x：zabbix前后端分离</span><br><span class="line">3.x：zabbix前后端不分离</span><br><span class="line"></span><br><span class="line"><span class="comment">#部署zabbxi5和zabbix3，看看区别</span></span><br></pre></td></tr></table></figure><p><strong>环境准备</strong></p><table><thead><tr><th>主机名</th><th>内网ip</th><th>ip</th><th>角色</th><th style="text-align:left">应用</th></tr></thead><tbody><tr><td>zabbix5</td><td>172.16.1.71</td><td>10.0.0.71</td><td>zabbix服务端</td><td style="text-align:left">zabbix-server、MySQL</td></tr><tr><td>zabbix3</td><td>172.16.1.72</td><td>10.0.0.72</td><td>zabbix服务端</td><td style="text-align:left">zabbix-server、MySQL</td></tr><tr><td>web01</td><td>172.16.1.7</td><td>10.0.0.7</td><td>zabbix5的客户端</td><td style="text-align:left">zabbix-agent</td></tr><tr><td>web02</td><td>172.16.1.8</td><td>10.0.0.8</td><td>zabbix3的客户端</td><td style="text-align:left">zabbix-agent</td></tr></tbody></table><p>官网：<a href="https://www.zabbix.com/">https://www.zabbix.com/</a>   点击download</p><h4 id="安装服务端">安装服务端</h4><p><strong>部署zabbix5</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1722752866743.png" alt="QQ_1722752866743"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#zabbix5服务端10.0.0.71执行</span></span><br><span class="line"><span class="comment">#1.更换zabbix官方源</span></span><br><span class="line">rpm -Uvh https://repo.zabbix.com/zabbix/5.0/rhel/7/x86_64/zabbix-release-5.0-1.el7.noarch.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.安装部署后端代码和客户端</span></span><br><span class="line">yum install -y zabbix-server-mysql zabbix-agent</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.添加zabbix前端代码源</span></span><br><span class="line">yum install centos-release-scl -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.打开yum仓库使用</span></span><br><span class="line">[root@zabbix5-server ~]# vim /etc/yum.repos.d/zabbix.repo</span><br><span class="line">[zabbix-frontend]</span><br><span class="line">...</span><br><span class="line">enabled=1</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.安装zabbix前端代码</span></span><br><span class="line">yum -y install zabbix-web-mysql-scl zabbix-nginx-conf-scl</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#报错</span></span><br><span class="line">Cannot find a valid baseurl <span class="keyword">for</span> repo: centos-sclo-rh/x86_64</span><br><span class="line">原因：CentOS7的SCL源在2024年6月30日停止维护了。 当scl源里面默认使用了centos官方的地址，无法连接，需要替换为阿里云。</span><br><span class="line">解决：</span><br><span class="line"><span class="built_in">cd</span> /etc/yum.repos.d/</span><br><span class="line"><span class="built_in">mv</span> CentOS-SCLo-scl.repo CentOS-SCLo-scl.repo.bak</span><br><span class="line"><span class="built_in">mv</span> CentOS-SCLo-scl-rh.repo CentOS-SCLo-scl-rh.repo.bak</span><br><span class="line"></span><br><span class="line"><span class="comment">#更换阿里云</span></span><br><span class="line">vim CentOS-SCLo-rh.repo</span><br><span class="line">[centos-sclo-rh]</span><br><span class="line">name=CentOS-7 - SCLo rh</span><br><span class="line">baseurl=https://mirrors.aliyun.com/centos/7/sclo/x86_64/rh/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-SIG-SCLo</span><br><span class="line"></span><br><span class="line"><span class="comment">#5.解决报错之后重新安装</span></span><br><span class="line">yum -y install zabbix-web-mysql-scl zabbix-nginx-conf-scl</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6.安装MySQL</span></span><br><span class="line">yum install -y mariadb-server</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7.启动MySQL并加入开机自启</span></span><br><span class="line">systemctl start mariadb</span><br><span class="line">systemctl <span class="built_in">enable</span> mariadb</span><br><span class="line"></span><br><span class="line"><span class="comment"># 8.进入mysql并创建数据库</span></span><br><span class="line">mysql</span><br><span class="line">MariaDB [(none)]&gt; create database zabbix5 character <span class="built_in">set</span> utf8 collate utf8_bin;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 9.创建用户</span></span><br><span class="line">MariaDB [(none)]&gt; grant all on *.* to zabbix@<span class="string">&#x27;172.16.1.%&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line">退出</span><br><span class="line">\q</span><br><span class="line"></span><br><span class="line"><span class="comment"># 10.导入数据</span></span><br><span class="line">[root@zabbix5 ~]#zcat /usr/share/doc/zabbix-server-mysql-5.0.42/create.sql.gz | mysql-uzabbix -p123 -h172.16.1.71 zabbix5</span><br><span class="line">ERROR 1045 (28000):Access denied <span class="keyword">for</span> user <span class="string">&#x27;zabbix&#x27;</span>@<span class="string">&#x27;zabbix5&#x27;</span>(using password:YES)</span><br><span class="line"></span><br><span class="line"><span class="comment">#报错原因：数据库将主机IP反向解析成主机名</span></span><br><span class="line">解决：关闭反向解析，[mysqld]下添加  skip_name_resolve</span><br><span class="line">vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">skip_name_resolve</span><br><span class="line"><span class="comment">#修改完毕之后重启数据库</span></span><br><span class="line">systemctl restart mariadb</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#10.重新导入数据</span></span><br><span class="line">zcat /usr/share/doc/zabbix-server-mysql-5.0.42/create.sql.gz  |mysql -uzabbix -p123 -h172.16.1.71 zabbix5</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 11.修改zabbix-server配置文件</span></span><br><span class="line">vim /etc/zabbix/zabbix_server.conf</span><br><span class="line">DBHost=172.16.1.71</span><br><span class="line">DBName=zabbix5<span class="comment">#数据库名</span></span><br><span class="line">DBUser=zabbix<span class="comment">#创建的数据库用户</span></span><br><span class="line">DBPassword=123</span><br><span class="line"></span><br><span class="line"><span class="comment"># 12.修改nginx配置文件</span></span><br><span class="line">[root@zabbix5-server ~]# vim /etc/opt/rh/rh-nginx116/nginx/conf.d/zabbix.conf</span><br><span class="line">server &#123;</span><br><span class="line">listen 80;</span><br><span class="line">server_name zabbix.web.com;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 13.修改php配置文件</span></span><br><span class="line">[root@zabbix5-server ~]# vim /etc/opt/rh/rh-php72/php-fpm.d/zabbix.conf</span><br><span class="line">listen.acl_users = apache,nginx</span><br><span class="line">php_value[date.timezone] = Asia/Shanghai</span><br><span class="line"></span><br><span class="line"><span class="comment"># 14.启动服务并加入开机自启</span></span><br><span class="line">systemctl restart zabbix-server zabbix-agent rh-nginx116-nginx rh-php72-php-fpm</span><br><span class="line">systemctl <span class="built_in">enable</span> zabbix-server zabbix-agent rh-nginx116-nginx rh-php72-php-fpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 15.物理机做域名解析</span></span><br><span class="line">打开cmd -&gt; 输入drivers -&gt; 打开hosts文件</span><br><span class="line">10.0.0.71 zabbix.web.com</span><br><span class="line"></span><br><span class="line"><span class="comment">#16.浏览器访问</span></span><br><span class="line">zabbix.web.com</span><br></pre></td></tr></table></figure><ul><li>如果想使用10.0.0.71访问zabbix时候报错如下</li></ul><p><img src="https://cos.lukme.top/Pic/QQ_1722756226179.png" alt="QQ_1722756226179"></p><ul><li><p>原因：使用ip访问默认会去找<code>/opt/rh/rh-nginx116/root/usr/share/nginx/html</code>.</p></li><li><p><code>/etc/opt/rh/rh-nginx116/nginx/nginx.conf</code>.里指向了路径</p></li><li><p>解决：删除默认nginx配置文件里server层，http层下的server层，删掉保留如下</p></li><li><p>重启nginx   <code>systemctl restart rh-nginx116-nginx</code></p></li></ul><p><img src="https://cos.lukme.top/Pic/QQ_1722756503836.png" alt="QQ_1722756503836"></p><p><strong>浏览器访问10.0.0.71</strong></p><p>输入连接的数据库host，库名，用户及密码</p><p><img src="https://cos.lukme.top/Pic/QQ_1722756894033.png" alt="QQ_1722756894033"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722757040903.png" alt="QQ_1722757040903"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Username：Admin</span><br><span class="line">Password：zabbix</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/QQ_1722757104745.png" alt="QQ_1722757104745"></p><h4 id="汉化">汉化</h4><p><img src="https://cos.lukme.top/Pic/QQ_1722757339488.png" alt="QQ_1722757339488"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722757366149.png" alt="QQ_1722757366149"></p><p><strong>zabbix图形字体显示异常解决</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1722757866125.png" alt="QQ_1722757866125"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## zabbix存放字体的目录</span></span><br><span class="line">[root@zabbix5-server ~]# rpm -ql zabbix-web|grep font</span><br><span class="line">/usr/share/zabbix/assets/fonts</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">windows打开CMD 输入 fonts</span><br><span class="line"><span class="comment"># 进入字体目录,将中文系统字体拖到zabbix字体目录</span></span><br><span class="line">[root@zabbix5-server ~]# <span class="built_in">cd</span> /usr/share/zabbix/assets/fonts</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除字体目录中的默认软链接字体文件</span></span><br><span class="line">[root@zabbix5-server fonts]# <span class="built_in">rm</span> -f graphfont.ttf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改字体文件名</span></span><br><span class="line">[root@zabbix5-server fonts]# <span class="built_in">mv</span> YGYXSZITI2.0.TTF graphfont.ttf</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/QQ_1722757894487.png" alt="QQ_1722757894487"></p><h4 id="安装客户端">安装客户端</h4><p><strong>10.0.0.7</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.更换zabbix官方源</span></span><br><span class="line">rpm -Uvh https://repo.zabbix.com/zabbix/5.0/rhel/7/x86_64/zabbix-release-5.0-1.el7.noarch.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.安装zabbix-agent</span></span><br><span class="line">yum install -y zabbix-agent</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.修改zabbix-agent配置文件</span></span><br><span class="line">[root@web01 ~]# vim /etc/zabbix/zabbix_agentd.conf</span><br><span class="line">Server=172.16.1.71</span><br><span class="line">Hostname=web01</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.启动zabbix-agent</span></span><br><span class="line">systemctl start zabbix-agent</span><br><span class="line">systemctl <span class="built_in">enable</span> zabbix-agent</span><br><span class="line"></span><br><span class="line">端口：</span><br><span class="line">zabbix-server：10051</span><br><span class="line">zabbix-agent：10050</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="添加监控主机">添加监控主机</h4><p><img src="https://cos.lukme.top/Pic/QQ_1722758479060.png" alt="QQ_1722758479060"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722758820075.png" alt="QQ_1722758820075"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#类型：</span></span><br><span class="line">客户端：zabbix-server获取zabbix-agent的数据</span><br><span class="line">SNMP：监控网络设备的接口(交换机)</span><br><span class="line">JMX：监控JAVA程序</span><br><span class="line">IPMI：监控硬件设备(硬件负载均衡 F5 硬件防火墙)</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/QQ_1722758979163.png" alt="QQ_1722758979163"></p><p><strong>模板选好就添加</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1722759100045.png" alt="QQ_1722759100045"></p><p><strong>返回主机，等待刷新变绿</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1722759174786.png" alt="QQ_1722759174786"></p><h3 id="zabbix3-4部署">zabbix3.4部署</h3><h4 id="部署服务端">部署服务端</h4><p>清华源：<a href="https://mirrors.tuna.tsinghua.edu.cn/">https://mirrors.tuna.tsinghua.edu.cn/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.更换zabbix3.4源</span></span><br><span class="line">rpm -ivh https://mirrors.tuna.tsinghua.edu.cn/zabbix/zabbix/3.4/rhel/7/x86_64/zabbix-release-3.4-1.el7.centos.noarch.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.安装zabbix-server zabbix-web（apache） zabbix-agent</span></span><br><span class="line">yum -y install zabbix-server-mysql zabbix-web-mysql zabbix-agent</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.进入并创建数据库（使用远程数据库，172.16.1.71，安装数据库见zabbix5部署）</span></span><br><span class="line">mysql</span><br><span class="line">MariaDB [(none)]&gt; create database zabbix3 character <span class="built_in">set</span> utf8 collate utf8_bin;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.创建用户（使用zabbix5创建的用户也可以）</span></span><br><span class="line">MariaDB [(none)]&gt; grant all on *.* to zabbix@<span class="string">&#x27;172.16.1.%&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.导入数据</span></span><br><span class="line">zcat /usr/share/doc/zabbix-server-mysql-3.4.15/create.sql.gz |mysql -uzabbix -p123 -h172.16.1.71 zabbix3</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6.修改zabbix-server配置文件</span></span><br><span class="line">[root@zabbix3-server ~]# vim /etc/zabbix/zabbix_server.conf</span><br><span class="line">DBHost=172.16.1.71</span><br><span class="line">DBName=zabbix3</span><br><span class="line">DBUser=zabbix</span><br><span class="line">DBPassword=123</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7.修改apache配置文件</span></span><br><span class="line">[root@zabbix3-server ~]# vim /etc/httpd/conf.d/zabbix.conf</span><br><span class="line">php_value date.timezone Asia/Shanghai</span><br><span class="line"></span><br><span class="line"><span class="comment"># 8.启动zabbix</span></span><br><span class="line">systemctl start zabbix-server zabbix-agent httpd</span><br><span class="line">systemctl <span class="built_in">enable</span> zabbix-server zabbix-agent httpd</span><br><span class="line"></span><br><span class="line"><span class="comment">#9.浏览器访问</span></span><br><span class="line">http://10.0.0.72/zabbix/</span><br></pre></td></tr></table></figure><p><strong>如果启动报错</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">检查日志</span><br><span class="line"><span class="built_in">cat</span> /var/log/zabbix/zabbix_server.log</span><br><span class="line">如果是如下</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/QQ_1722761828372.png" alt="QQ_1722761828372"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">原因：</span><br><span class="line">kernel.sem参数设置过小，共享内存信号量设置共享内存：</span><br><span class="line">可以通过ipcs -lm命令查看目前系统共享内存的参数限制</span><br><span class="line"></span><br><span class="line">解决：</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;kernel.sem = 500 64000 64 256&quot;</span> &gt;&gt; /etc/sysctl.conf</span><br><span class="line"></span><br><span class="line">sysctl -p</span><br><span class="line"></span><br><span class="line">systemctl start zabbix-server <span class="comment"># 成功</span></span><br></pre></td></tr></table></figure><p><strong>登录浏览器访问</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1722760000155.png" alt="QQ_1722760000155"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">登录用户名及密码同zabbix5</span><br><span class="line">Username：Admin</span><br><span class="line">Password：zabbix</span><br><span class="line"></span><br><span class="line">汉化及字体异常同zabbix5</span><br><span class="line"><span class="comment"># 1.查找zabbix存放字体目录</span></span><br><span class="line">[root@zabbix3-server ~]# rpm -ql zabbix-web|grep font</span><br><span class="line">/usr/share/zabbix/fonts</span><br><span class="line"><span class="comment"># 2.进入目录</span></span><br><span class="line">[root@zabbix3-server ~]# <span class="built_in">cd</span> /usr/share/zabbix/fonts</span><br><span class="line"><span class="comment"># 3.修改字体</span></span><br><span class="line">[root@zabbix3-server fonts]# <span class="built_in">rm</span> -f graphfont.ttf</span><br><span class="line">[root@zabbix3-server fonts]# <span class="built_in">mv</span> YGYXSZITI2.0.TTF graphfont.ttf</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/QQ_1722760127865.png" alt="QQ_1722760127865"></p><h4 id="部署客户端">部署客户端</h4><p><strong>10.0.0.8</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">https://mirrors.tuna.tsinghua.edu.cn/zabbix/zabbix/3.4/rhel/7/x86_64/</span><br><span class="line"><span class="comment"># 0.安装zabbix-agent源</span></span><br><span class="line">rpm -ivh https://mirrors.tuna.tsinghua.edu.cn/zabbix/zabbix/3.4/rhel/7/x86_64/zabbix-agent-3.4.15-1.el7.x86_64.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment">#1.安装zabbix-agent</span></span><br><span class="line">yum -y install zabbix-agent</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.修改agent配置文件</span></span><br><span class="line">[root@web02 ~]# vim /etc/zabbix/zabbix_agentd.conf</span><br><span class="line">Server=172.16.1.72</span><br><span class="line">Hostname=web02</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.启动zabbix-agent</span></span><br><span class="line">systemctl start zabbix-agent</span><br><span class="line">systemctl <span class="built_in">enable</span> zabbix-agent</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/QQ_1722760672992.png" alt="QQ_1722760672992"></p><p><strong>搜索linux，添加Template OS Linux</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1722760735288.png" alt="QQ_1722760735288"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722761703199.png" alt="QQ_1722761703199"></p><p><img src="https://cos.lukme.top/Pic/QQ_1722761797069.png" alt="QQ_1722761797069"></p><hr>]]></content>
      
      
      <categories>
          
          <category> 监控 </category>
          
          <category> zabbix </category>
          
      </categories>
      
      
        <tags>
            
            <tag> zabbix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zabbix监控概述</title>
      <link href="/posts/ccb410e2.html"/>
      <url>/posts/ccb410e2.html</url>
      
        <content type="html"><![CDATA[<h3 id="监控介绍">监控介绍</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.系统的监控:实际上是对系统不间断的实时监控</span><br><span class="line">2.实时反馈系统当前状态:我们监控某个硬件、或者某个系统，都是需要能实时看到当前系统的状态是正常、异常、或者故障。</span><br><span class="line">3.保证服务可靠性安全性:我们监控的目的就是要保证系统、服务、业务正常运行</span><br><span class="line">4.保证业务持续稳定运行:如果我们的监控做得很完善，即使出现故障，能第一时间接收到故障报警在第一时间处理解决，从而保证业务持续性的稳定运行。（往往，第一时间知道业务宕机的都是用户）</span><br></pre></td></tr></table></figure><p><strong>监控软件介绍</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.CACTI 网络监控</span><br><span class="line">2.Nagios 系统监控        https://www.nagios.com/</span><br><span class="line">3.falcon 小米监控https://open-falcon.github.io/</span><br></pre></td></tr></table></figure><p><strong>监控有哪些方面</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">硬件层</span><br><span class="line">- CPU温度</span><br><span class="line">- 风扇转速</span><br><span class="line">- 磁盘是否损坏</span><br><span class="line">- CMOS电池电量</span><br><span class="line">- 内存是否损坏</span><br><span class="line">...</span><br><span class="line">系统层</span><br><span class="line">- CPU：使用率、负载</span><br><span class="line">- 内存：使用率</span><br><span class="line">- 磁盘：使用率，IO</span><br><span class="line">- 进程</span><br><span class="line">- TCP状态</span><br><span class="line">- 系统负载</span><br><span class="line">- 文件描述符</span><br><span class="line">...</span><br><span class="line">网络层</span><br><span class="line">- 网络设备：路由器，交换机</span><br><span class="line">- 网卡入口流量</span><br><span class="line">- 网卡出口流量</span><br><span class="line">- 带宽的峰值</span><br><span class="line">...</span><br><span class="line">应用层</span><br><span class="line">- MySQL：主从复制是否有延迟（zabbix监控模板）</span><br><span class="line">- redis：主从复制是否有延迟</span><br><span class="line">- 监控思路:zabbix没有固定模板，可以在主库中<span class="built_in">set</span>一个key为时间戳，然后从库会同步这个时</span><br><span class="line">- 间戳（动态），写脚本时时获取这两个时间戳，做对比</span><br><span class="line">- NFS：磁盘挂载状况</span><br><span class="line">- tomcat：JVM监控，老年代、新生代、永久带、full-gc（垃圾回收）</span><br><span class="line">- rsync的同步情况，MD5校验文件是否被篡改</span><br><span class="line">...</span><br><span class="line">业务层</span><br><span class="line">- URL的监控</span><br><span class="line">- API的监控</span><br><span class="line">- nginx的状态码</span><br><span class="line">- tomcat的exception</span><br><span class="line">- 请求时间</span><br><span class="line">- 响应时间</span><br><span class="line">- 加载时间</span><br><span class="line">- 渲染时间</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="常用监控命令">常用监控命令</h3><h4 id="CPU监控命令">CPU监控命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">[root@web02 ~]# w</span><br><span class="line">10:33:44 up 1:28, 1 user, load average: 0.00, 0.01, 0.05</span><br><span class="line">USER TTY FROM LOGIN@ IDLE JCPU PCPU WHAT</span><br><span class="line">root pts/0 10.0.0.1 09:44 0.00s 0.03s 0.00s w</span><br><span class="line"></span><br><span class="line">零宽断言</span><br><span class="line">ifconfig eth0|grep -Po <span class="string">&#x27;\d\d\.\d\.\d\.\d(?=  netmask)&#x27;</span></span><br><span class="line">ifconfig eth0|grep -Po <span class="string">&#x27;[1-9][0-9]+\.[0-9]+\.[0-9]+\.[0-9]+(?=  netmask)&#x27;</span></span><br><span class="line">10.0.0.7</span><br><span class="line"></span><br><span class="line">\K 是一个特殊的 PCRE 符号，表示“忽略之前的匹配”，</span><br><span class="line">ifconfig eth0 | grep -oP <span class="string">&#x27;inet \K(\d+\.\d+\.\d+\.\d+)&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@web02 ~]# top</span><br><span class="line"></span><br><span class="line">[root@web02 ~]# htop</span><br><span class="line">[root@web02 ~]# glances</span><br><span class="line">[root@web02 ~]# <span class="built_in">uptime</span></span><br><span class="line">10:37:12 up 1:32, 1 user, load average: 0.13, 0.09, 0.01</span><br><span class="line"></span><br><span class="line"><span class="comment">#不管用什么命令监控，查看CPU，我们都必须了解，系统的用户态和内和态。</span></span><br><span class="line">%Cpu(s): 0.0 us, 0.0 sy, 0.0 ni,100.0 <span class="built_in">id</span>, 0.0 wa, 0.0 hi, 0.0 si, 0.0 st</span><br><span class="line">us: 用户态 跟用户的操作有关35%</span><br><span class="line">sy: 内和态 跟内核的处理有关65%</span><br><span class="line"><span class="built_in">id</span>: CPU空闲</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看命令执行时间</span></span><br><span class="line">[root@web02 ~]# time <span class="built_in">ls</span></span><br><span class="line">backup.sh group_vars_web_group</span><br><span class="line">real 0m0.002s 真实执行时间</span><br><span class="line">user 0m0.001s 用户执行时间</span><br><span class="line">sys 0m0.001s 系统执行时间</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="内存监控命令">内存监控命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">[root@web02 ~]# free -m</span><br><span class="line">   total used free shared buff/cache available</span><br><span class="line">Mem: 972 94 588 7 290 712</span><br><span class="line">Swap: 1023 0 1023</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 如何查看单个进程占用内存？</span></span><br><span class="line"><span class="comment">#进程占用内存公式</span></span><br><span class="line">pmem = VmRSS / MemTotal * 100</span><br><span class="line">process mem = 虚拟内存 / 总内存 * 100</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@web02 ~]# <span class="built_in">cat</span> mem.py</span><br><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># _*_ coding:UTF-8 _*_</span></span><br><span class="line"><span class="comment"># 收集程序所占用的物理内存大小，占所有物理内存的比例</span></span><br><span class="line"><span class="comment"># Python: 2.7.6</span></span><br><span class="line">import sys</span><br><span class="line">import os</span><br><span class="line">from subprocess import Popen,PIPE</span><br><span class="line"></span><br><span class="line">def get_pid(program):</span><br><span class="line"><span class="string">&#x27;获取目标程序的PID列表&#x27;</span></span><br><span class="line">p = Popen([<span class="string">&#x27;pidof&#x27;</span>,program],stdout=PIPE,stderr=PIPE)</span><br><span class="line">pids,stderrput = p.communicate()</span><br><span class="line"><span class="comment"># pids = p.stdout.read() #这种方法也是可以的</span></span><br><span class="line"><span class="comment"># 这里也可以对stderrput来进行判断</span></span><br><span class="line"><span class="keyword">if</span> pids:</span><br><span class="line"><span class="built_in">return</span> pids.split()</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">raise ValueError</span><br><span class="line"></span><br><span class="line">def mem_calc(pids):</span><br><span class="line"><span class="string">&#x27;计算PIDs占用的内存大小&#x27;</span></span><br><span class="line">mem_total = 0</span><br><span class="line"><span class="keyword">for</span> pid <span class="keyword">in</span> pids:</span><br><span class="line">os.chdir(<span class="string">&#x27;/proc/%s&#x27;</span> % pid)</span><br><span class="line">with open(<span class="string">&#x27;status&#x27;</span>) as fd:</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> fd:</span><br><span class="line"><span class="keyword">if</span> line.startswith(<span class="string">&#x27;VmRSS&#x27;</span>):</span><br><span class="line">mem = line.strip().<span class="built_in">split</span>()[1]</span><br><span class="line">mem_total += int(mem)</span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="built_in">return</span> mem_total</span><br><span class="line"></span><br><span class="line">def mem_percent(mem):</span><br><span class="line"><span class="string">&#x27;计算程序内存占用物理内存的百分比&#x27;</span></span><br><span class="line">with open(<span class="string">&#x27;/proc/meminfo&#x27;</span>) as fd:</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> fd:</span><br><span class="line"><span class="keyword">if</span> line.startswith(<span class="string">&#x27;MemTotal&#x27;</span>):</span><br><span class="line">total = line.strip().<span class="built_in">split</span>()[1]</span><br><span class="line">percent = (<span class="built_in">float</span>(mem)/int(total)) * 100</span><br><span class="line"><span class="built_in">return</span> percent</span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">try:</span><br><span class="line">program = sys.argv[1]</span><br><span class="line">pids = get_pid(program)</span><br><span class="line">except IndexError as e:</span><br><span class="line">sys.exit(<span class="string">&#x27;%s need a Program name &#x27;</span> % __file__)</span><br><span class="line">except ValueError as e:</span><br><span class="line">sys.exit(<span class="string">&#x27;%s not a Process Name or not Start&#x27;</span> % program )</span><br><span class="line">mem_total = mem_calc(pids)</span><br><span class="line">percent = mem_percent(mem_total)</span><br><span class="line"><span class="built_in">return</span> program,mem_total,percent</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">program,mem_total,mem_percent=main()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;进程名称:%s\n物理内存为:%s\n百分比为:%.2f%%&#x27;</span>%</span><br><span class="line">(program,mem_total,mem_percent))</span><br></pre></td></tr></table></figure><h4 id="磁盘监控命令">磁盘监控命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@web02 ~]# <span class="built_in">df</span> -h</span><br><span class="line"></span><br><span class="line">[root@web02 ~]# iotop</span><br><span class="line">[root@web02 ~]# iostat -dm 1 10</span><br><span class="line">[root@web01 ~]# iostat -dm 1 10</span><br><span class="line">Linux 3.10.0-957.el7.x86_64 (web01)     08/04/2024      _x86_64_        (1 CPU)</span><br><span class="line"></span><br><span class="line">Device:            tps    MB_read/s    MB_wrtn/s    MB_read    MB_wrtn</span><br><span class="line">scd0              0.00         0.00         0.00          1          0</span><br><span class="line">sda               1.08         0.02         0.00         93         15</span><br><span class="line">[root@web02 ~]# dstat</span><br><span class="line">----total-cpu-usage---- -dsk/total- -net/total- ---paging-- ---system--</span><br><span class="line">usr sys idl wai hiq siq| <span class="built_in">read</span>  writ| recv  send|  <span class="keyword">in</span>   out | int   csw </span><br><span class="line">  0   0  99   0   0   0|  36k   45k|   0     0 |   0     0 |  56   125 </span><br><span class="line">  0   0 100   0   0   0|   0     0 |  60B  874B|   0     0 |  56    94 </span><br></pre></td></tr></table></figure><h4 id="网络监控命令">网络监控命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@web02 ~]# ifconfig</span><br><span class="line">[root@web02 ~]# iftop</span><br><span class="line">[root@web02 ~]# nethogs</span><br><span class="line">[root@web02 ~]# route -n</span><br><span class="line">Kernel IP routing table</span><br><span class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</span><br><span class="line">0.0.0.0         10.0.0.254      0.0.0.0         UG    102    0        0 eth0</span><br><span class="line">10.0.0.0        0.0.0.0         255.255.255.0   U     102    0        0 eth0</span><br><span class="line">172.16.1.0      0.0.0.0         255.255.255.0   U     101    0        0 eth1</span><br></pre></td></tr></table></figure><h4 id="TCP监控命令">TCP监控命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# netstat -an|awk <span class="string">&#x27;/^tcp/ &#123;print $NF&#125;&#x27;</span>|<span class="built_in">sort</span>|<span class="built_in">uniq</span> -c</span><br><span class="line">      2 ESTABLISHED</span><br><span class="line">      6 LISTEN</span><br><span class="line">[root@web01 ~]# netstat -an|awk <span class="string">&#x27;/^tcp/ &#123;++state[$NF]&#125; END &#123;for(key in state)print key,&quot; \t&quot; ,state[key]&#125;&#x27;</span></span><br><span class="line">LISTEN           6</span><br><span class="line">ESTABLISHED      2</span><br><span class="line">[root@web02 ~]# ss -n|awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>|<span class="built_in">sort</span>|<span class="built_in">uniq</span> -c</span><br><span class="line">     89 ESTAB</span><br><span class="line">      1 State</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="系统的oom">系统的oom</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">随着时间的推移，用户不断增多，服务消耗的内存越来越多，当系统内存不足的时候，可能会导致系统产生oom（out of memory）</span><br><span class="line">1.当系统内存不足时就会大量使用swap（虚拟内存）</span><br><span class="line">2.当系统大量使用swap的时候，系统会特别卡</span><br><span class="line"></span><br><span class="line">注意：有时可能内存还有剩余300M或者500M，但是swap依然被使用</span><br><span class="line"></span><br><span class="line">[root@web02 ~]# <span class="built_in">dd</span> &lt; /dev/zero &gt; /dev/null bs=2000M</span><br><span class="line">[root@web02 ~]# <span class="built_in">tail</span> -f /var/log/messages</span><br><span class="line">Out of memory: Kill process 29957 (<span class="built_in">dd</span>) score 366 or sacrifice child</span><br><span class="line">Killed process 29957 (<span class="built_in">dd</span>) total-vm:2532680kB, anon-rss:1416508kB, filers:0kB</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 监控 </category>
          
          <category> zabbix </category>
          
      </categories>
      
      
        <tags>
            
            <tag> zabbix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL的读写分离</title>
      <link href="/posts/12e80162.html"/>
      <url>/posts/12e80162.html</url>
      
        <content type="html"><![CDATA[<h2 id="读写分离软件">读写分离软件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Atlas是由 Qihoo 360公司Web平台部基础架构团队开发维护的一个基于MySQL协议的数据中间层项 目。它在MySQL官方推出的MySQL-Proxy 0.8.2版本的基础上，修改了大量bug，添加了很多功能特 性。目前该项目在360公司内部得到了广泛应用，很多MySQL业务已经接入了Atlas平台，每天承载的读 写请求数达几十亿条。同时，有超过50家公司在生产环境中部署了Atlas，超过800人已加入了我们的开 发者交流群，并且这些数字还在不断增加。</span><br><span class="line"></span><br><span class="line">mysql-proxy</span><br><span class="line">Atlas：阿里</span><br><span class="line">Atlas：360</span><br><span class="line">mycat</span><br></pre></td></tr></table></figure><p>Atlas功能</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1.读写分离</span><br><span class="line">2.从库负载均衡</span><br><span class="line">3.IP过滤</span><br><span class="line">4.自动分表</span><br><span class="line">5.DBA可平滑上下线DB</span><br><span class="line">6.自动摘除宕机的DB</span><br></pre></td></tr></table></figure><p><strong>Atlas相对于官方MySQL-Proxy的优势</strong></p><p>1.将主流程中所有 Lua 代码用C重写，Lua仅用于管理接口</p><p>2.重写网络模型、线程模型</p><p>3.实现了真正意义上的连接池</p><p>4.优化了锁机制，性能提高数十倍</p><p><img src="https://cos.lukme.top/Pic/QQ_1724851191524.png" alt="QQ_1724851191524"></p><h2 id="安装配置Atlas">安装配置Atlas</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.下载atlas</span></span><br><span class="line">[root@mha-manager ~]# wget http://test.driverzeng.com/MySQL_plugins/Atlas-2.2.1.el6.x86_64.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.安装Atlas</span></span><br><span class="line">[root@mha-manager ~]# rpm -ivh Atlas-2.2.1.el6.x86_64.rpm</span><br><span class="line">[root@mha-manager ~]# ll /usr/local/mysql-proxy/</span><br><span class="line">drwxr-xr-x 2 root root 75 Aug 28 15:54 bin <span class="comment"># 程序相关命令</span></span><br><span class="line">drwxr-xr-x 2 root root 22 Aug 28 15:54 conf <span class="comment"># 程序相关配置</span></span><br><span class="line">drwxr-xr-x 3 root root 331 Aug 28 15:54 lib <span class="comment"># 程序相关插件</span></span><br><span class="line">drwxr-xr-x 2 root root 6 Dec 17 2014 <span class="built_in">log</span> <span class="comment"># 程序相关日志</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.修改配置文件</span></span><br><span class="line">[root@db01 ~]# <span class="built_in">cat</span> /usr/local/mysql-proxy/conf/test.cnf </span><br><span class="line">[mysql-proxy]</span><br><span class="line"><span class="comment">#带#号的为非必需的配置项目</span></span><br><span class="line"><span class="comment">#管理接口的用户名</span></span><br><span class="line">admin-username = user</span><br><span class="line"></span><br><span class="line"><span class="comment">#管理接口的密码</span></span><br><span class="line">admin-password = <span class="built_in">pwd</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Atlas后端连接的MySQL主库的IP和端口，可设置多项，用逗号分隔</span></span><br><span class="line">proxy-backend-addresses = 172.16.1.51:3306</span><br><span class="line"></span><br><span class="line"><span class="comment">#Atlas后端连接的MySQL从库的IP和端口，@后面的数字代表权重，用来作负载均衡，若省略则默认为1，可设置多项，用逗号分隔</span></span><br><span class="line">proxy-read-only-backend-addresses = 172.16.1.52:3306@1,172.16.1.53:3306@1,172.16.1.54:3306@1</span><br><span class="line"></span><br><span class="line"><span class="comment">#用户名与其对应的加密过的MySQL密码，密码使用PREFIX/bin目录下的加密程序encrypt加密，下行的user1和user2为示例，将其替换为你的MySQL的用户名和加密密码！</span></span><br><span class="line">pwds = root:3yb5jEku5h4=, mha:3yb5jEku5h4=</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置Atlas的运行方式，设为true时为守护进程方式，设为false时为前台方式，一般开发调试时设为false，线上运行时设为true,true后面不能有空格。</span></span><br><span class="line">daemon = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#设置Atlas的运行方式，设为true时Atlas会启动两个进程，一个为monitor，一个为worker，monitor在worker意外退出后会自动将其重启，设为false时只有worker，没有monitor，一般开发调试时设为false，线上运行时设为true,true后面不能有空格。</span></span><br><span class="line">keepalive = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#工作线程数，对Atlas的性能有很大影响，可根据情况适当设置</span></span><br><span class="line">event-threads = 8</span><br><span class="line"></span><br><span class="line"><span class="comment">#日志级别，分为message、warning、critical、error、debug五个级别</span></span><br><span class="line">log-level = error</span><br><span class="line"></span><br><span class="line"><span class="comment">#日志存放的路径</span></span><br><span class="line">log-path = /usr/local/mysql-proxy/log</span><br><span class="line"></span><br><span class="line"><span class="comment">#SQL日志的开关，可设置为OFF、ON、REALTIME，OFF代表不记录SQL日志，ON代表记录SQL日志，REALTIME代表记录SQL日志且实时写入磁盘，默认为OFF</span></span><br><span class="line">sql-log = ON</span><br><span class="line"></span><br><span class="line"><span class="comment">#慢日志输出设置。当设置了该参数时，则日志只输出执行时间超过sql-log-slow（单位：ms)的日志记录。不设置该参数则输出全部日志。</span></span><br><span class="line"><span class="comment">#sql-log-slow = 10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#实例名称，用于同一台机器上多个Atlas实例间的区分</span></span><br><span class="line"><span class="comment">#instance = test</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Atlas监听的工作接口IP和端口</span></span><br><span class="line">proxy-address = 0.0.0.0:1234</span><br><span class="line"></span><br><span class="line"><span class="comment">#Atlas监听的管理接口IP和端口</span></span><br><span class="line">admin-address = 0.0.0.0:2345</span><br><span class="line"></span><br><span class="line"><span class="comment">#分表设置，此例中person为库名，mt为表名，id为分表字段，3为子表数量，可设置多项，以逗号分隔，若不分表则不需要设置该项</span></span><br><span class="line"><span class="comment">#tables = person.mt.id.3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#默认字符集，设置该项后客户端不再需要执行SET NAMES语句</span></span><br><span class="line">charset = utf8</span><br><span class="line"></span><br><span class="line"><span class="comment">#允许连接Atlas的客户端的IP，可以是精确IP，也可以是IP段，以逗号分隔，若不设置该项则允许所有IP连接，否则只允许列表中的IP连接</span></span><br><span class="line">client-ips = 127.0.0.1, 172.16.1</span><br><span class="line"></span><br><span class="line"><span class="comment">#Atlas前面挂接的LVS的物理网卡的IP(注意不是虚IP)，若有LVS且设置了client-ips则此项必须设置，否则可以不设置</span></span><br><span class="line"><span class="comment">#lvs-ips = 192.168.1.1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#4.启动Atlas</span></span><br><span class="line">[root@mha ~]# /usr/local/mysql-proxy/bin/mysql-proxyd <span class="built_in">test</span> start</span><br></pre></td></tr></table></figure><h2 id="Atlas管理接口使用">Atlas管理接口使用</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 连接管理接口</span></span><br><span class="line">[root@mha-manager ~]# mysql -uuser -ppwd -h127.0.0.1 -P2345</span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看帮助</span></span><br><span class="line">mysql&gt; <span class="keyword">select</span> * from <span class="built_in">help</span>;</span><br><span class="line">db01 [(none)]&gt;<span class="keyword">select</span> * from <span class="built_in">help</span>;</span><br><span class="line">+----------------------------+---------------------------------------------------------+</span><br><span class="line">| <span class="built_in">command</span>                    | description                                             |</span><br><span class="line">+----------------------------+---------------------------------------------------------+</span><br><span class="line">| SELECT * FROM <span class="built_in">help</span>         | 查看帮助</span><br><span class="line">| SELECT * FROM backends     | 查看后端数据库</span><br><span class="line">| SET OFFLINE <span class="variable">$backend_id</span>    | 下线数据库 <span class="built_in">set</span> offline 2;</span><br><span class="line">| SET ONLINE <span class="variable">$backend_id</span>     | 上线数据库 <span class="built_in">set</span> online 2;</span><br><span class="line">| ADD MASTER <span class="variable">$backend</span>        | 添加一个主库 add master 172.16.1.88:3306;</span><br><span class="line">| ADD SLAVE <span class="variable">$backend</span>         | 添加一个从库 add slave 172.16.1.77:3306;</span><br><span class="line">| REMOVE BACKEND <span class="variable">$backend_id</span> | 删除后端数据库 remove backend 2;</span><br><span class="line">| SELECT * FROM clients      | 查看可连接的客户端 <span class="keyword">select</span> * from clients</span><br><span class="line">| ADD CLIENT <span class="variable">$client</span>         | 添加一个可连接atlas的客户端 add client 10.0.0;</span><br><span class="line">| REMOVE CLIENT <span class="variable">$client</span>      | 删除客户端 remove client 10.0.0 </span><br><span class="line">| SELECT * FROM pwds         | 查看所有可连接atlas的用户和密码 <span class="keyword">select</span> * from pwds;</span><br><span class="line">| ADD PWD <span class="variable">$pwd</span>               | 添加一个明文的密码用户 add <span class="built_in">pwd</span> mha:mha;</span><br><span class="line">| ADD ENPWD <span class="variable">$pwd</span>             | 添加一个加密的密码用户 add enpwd tls:O2jBXONX098=;</span><br><span class="line">| REMOVE PWD <span class="variable">$pwd</span>            | 删除用户 remove <span class="built_in">pwd</span> zls;</span><br><span class="line">| SAVE CONFIG                | 保存配置文件</span><br><span class="line">| SELECT VERSION             | 查看atlas版本号</span><br><span class="line">+----------------------------+---------------------------------------------------------+</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看后端数据库   ----rw 主库   ----ro从库</span></span><br><span class="line">db01 [(none)]&gt;<span class="keyword">select</span> * from backends;</span><br><span class="line">+-------------+------------------+-------+------+</span><br><span class="line">| backend_ndx | address          | state | <span class="built_in">type</span> |</span><br><span class="line">+-------------+------------------+-------+------+</span><br><span class="line">|           1 | 172.16.1.51:3306 | up    | rw   |</span><br><span class="line">|           2 | 172.16.1.52:3306 | up    | ro   |</span><br><span class="line">|           3 | 172.16.1.53:3306 | up    | ro   |</span><br><span class="line">|           4 | 172.16.1.54:3306 | up    | ro   |</span><br><span class="line">+-------------+------------------+-------+------+</span><br><span class="line"></span><br><span class="line"><span class="comment"># 平滑下线DB</span></span><br><span class="line">mysql&gt; <span class="built_in">set</span> offline 2;</span><br><span class="line"><span class="comment"># 平滑上线</span></span><br><span class="line">mysql&gt; <span class="built_in">set</span> online 2;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Atlas结合MHA脚本">Atlas结合MHA脚本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">mha_log=<span class="string">&quot;/etc/mha/logs/manager.log&quot;</span></span><br><span class="line">down_master=$(sed -nr <span class="string">&#x27;s#(.*)\(.*\) \(current master\)$#\1#gp&#x27;</span> <span class="variable">$&#123;mha_log&#125;</span>|tail-1)</span><br><span class="line">new_master=$(sed -nr <span class="string">&#x27;s#(.*)\(.*\) \(new master\)$#\1#gp&#x27;</span> /etc/mha/logs/manager.log|<span class="built_in">tail</span> -1)</span><br><span class="line"></span><br><span class="line">atlas_manager_user=<span class="string">&#x27;user&#x27;</span></span><br><span class="line">atlas_manager_password=<span class="string">&#x27;pwd&#x27;</span></span><br><span class="line">atlas_manager_port=<span class="string">&#x27;2345&#x27;</span></span><br><span class="line">atlas_conn=<span class="string">&quot;mysql -u<span class="variable">$&#123;atlas_manager_user&#125;</span> -p<span class="variable">$&#123;atlas_manager_password&#125;</span> -P<span class="variable">$&#123;atlas_manager_port&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> atlas_ip <span class="keyword">in</span> 51 52 53 54;<span class="keyword">do</span></span><br><span class="line">  down_master_backend_id=$(<span class="variable">$&#123;atlas_conn&#125;</span> -h172.16.1.<span class="variable">$&#123;atlas_ip&#125;</span> -e <span class="string">&#x27;select * from backends&#x27;</span>|grep <span class="string">&quot;<span class="variable">$&#123;new_master&#125;</span>&quot;</span>|awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>)</span><br><span class="line">  <span class="variable">$&#123;atlas_conn&#125;</span> -h172.16.1.<span class="variable">$&#123;atlas_ip&#125;</span> -e <span class="string">&quot;remove backend <span class="variable">$&#123;down_master_backend_id&#125;</span>&quot;</span> </span><br><span class="line">  <span class="variable">$&#123;atlas_conn&#125;</span> -h172.16.1.<span class="variable">$&#123;atlas_ip&#125;</span> -e <span class="string">&quot;add slave <span class="variable">$&#123;down_master&#125;</span>:3306;save config&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@mha-manager ~]# vim /etc/mha/app1/master_ip_failover</span><br><span class="line">sub <span class="function"><span class="title">start_vip</span></span>() &#123;</span><br><span class="line">`ssh <span class="variable">$ssh_user</span>\@<span class="variable">$new_master_host</span> \&quot; <span class="variable">$ssh_start_vip</span> \&quot;`;</span><br><span class="line">`/bin/sh -x \&quot;/root/atlas_mha.sh\&quot;`;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">mysqladmin  -umha -pmha -h172.16.1.55 ping</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> MHA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL的MHA高可用</title>
      <link href="/posts/df39ce32.html"/>
      <url>/posts/df39ce32.html</url>
      
        <content type="html"><![CDATA[<h2 id="MHA介绍及组成">MHA介绍及组成</h2><h3 id="MHA介绍">MHA介绍</h3><p>​MHA能够在较短的时间内实现自动故障检测和故障转移，通常在10-30秒以内;在复制框架中，MHA能够很好地解决复制过程中的数据一致性问题，由于不需要在现有的replication中添加额外的服务器，仅需要一个manager节点，而一个Manager能管理多套复制，所以能大大地节约服务器的数量;另外，安装简单，无性能损耗，以及不需要修改现有的复制部署也是它的优势之处。</p><p>MHA还提供在线主库切换的功能，能够安全地切换当前运行的主库到一个新的主库中(通过将从库提升为主库),大概0.5-2秒内即可完成。</p><h3 id="MHA的组成部分">MHA的组成部分</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">`MHA Manager（管理节点）`</span><br><span class="line">可以单独部署在一台独立的机器上管理多个master-slave集群，也可以部署在一台slave上。</span><br><span class="line"></span><br><span class="line">`MHA Node（数据节点）`</span><br><span class="line">运行在每台MySQL服务器上   MHA Manager 会定时探测集群中的master节点，当master出现故障时，它可以自动将最新数据的slave提升为新的master；然后将所有其他的slave重新指向新的master，整个故障转移过程对应用程序是完全透明的；</span><br></pre></td></tr></table></figure><h3 id="MHA软件结构介绍">MHA软件结构介绍</h3><table><thead><tr><th>节点信息</th><th>软件组件</th><th>作用介绍</th></tr></thead><tbody><tr><td>MHA Manager（管理节点）</td><td>masterha_manger</td><td>用于启动MHA</td></tr><tr><td></td><td>masterha_check_ssh</td><td>用于检查MHA的SSH配置互信状况</td></tr><tr><td></td><td>masterha_check_repl</td><td>用于检查MySQL复制状态，以及配置信息</td></tr><tr><td></td><td>masterha_master_monitor</td><td>用于检测master是否宕机</td></tr><tr><td></td><td>masterha_check_status</td><td>用于检测当前MHA运行状态</td></tr><tr><td></td><td>masterha_master_switch</td><td>用于控制故障转移（自动或者手动）</td></tr><tr><td></td><td>masterha_conf_host</td><td>添加或删除配置的server信息</td></tr><tr><td>MHA Node（数据节点）</td><td>save_binary_logs</td><td>保存和复制master的二进制日志</td></tr><tr><td></td><td>apply_diff_relay_logs</td><td>识别差异的中继日志事件并将其差异的事件应用于其他slave</td></tr><tr><td></td><td>purge_relay_logs</td><td>清除中继日志（不会阻塞SQL线程）</td></tr></tbody></table><h2 id="MHA的工作的原理">MHA的工作的原理</h2><p><img src="https://cos.lukme.top/Pic/QQ_1724757765903.png" alt="QQ_1724757765903"></p><p>:dango:<strong>MHA的设计原理分析（Failover 过程）</strong></p><h3 id="1-MHA软件启动">1.MHA软件启动</h3><p>根据启动命令，分析MHA软件启动原理：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">nohup</span> masterha_manager --conf=/etc/mha/app1.cnf --remove_dead_master_conf --ignore_last_failover  &lt; /dev/null &gt; /var/log/mha/app1/manager.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><p>根据以上启动命令，需要先调取MHA启动脚本文件<code>masterha_manager</code> ，</p><p><code>--conf=.../app1.cnf</code> 会根据加载的MHA的配置文件不同，实现管理多个高可用架构环境，进行高可用业务的架构环境的区分；</p><p><code>--remove_dead_master_conf</code>参数表示在主节点出现宕机情况时，将会从集群中被踢出，即从配置文件中删除掉故障节点；</p><p><code>--ignore_last_failover</code> 默认MHA服务是不能频繁进行故障切换的，需要有一定的间隔时间，加此参数表示忽略切换的间隔时间；</p><p><code>/var/log/mha/app1/manager.log 2&gt;&amp;1</code>最后将MHA启动运行的信息放入到日志文件中即可</p><p>:dango:<strong>补充</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">补充说明：--ignore_last_failover</span><br><span class="line"></span><br><span class="line">【官方解释】</span><br><span class="line">If the previous failover failed, MHA does not start failover because the problem might happen again. The normal step to start failover is manually remove failover error file <span class="built_in">which</span> is created under (manager_workdir)/(app_name).failover.error .By setting --ignore_last_failover, MHA continues failover regardless of the last failover status.</span><br><span class="line"></span><br><span class="line">如果上一次高可用功能失败，MHA不会再启动高可用功能，因为这个问题可能会再次出现。后续再想启动故障转移的正常步骤是手动删除故障转移错误文件，错误文件会在manager_workdir目录下，创建一个名为app_name.failover.error的文件。对于设置--ignore_last_failover，表示无论上次故障切换状态如何，MHA都会继续进行启动故障切换功能</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">在缺省情况下，如果 MHA 检测到连续发生宕机，且两次宕机间隔不足 8 小时的话，则不会进行 Failover；之所以这样限制是为了避免 ping-pong 效应。该参数代表忽略上次 MHA 触发切换产生的文件；默认情况下，MHA 发生切换后会在日志记录，在日志目录中会生成 app1.failover.complete 文件；下次再次切换的时候如果发现该目录下存在该文件将不允许触发切换，除非在第一次切换后删除该文件；</span><br><span class="line"></span><br><span class="line">`官方默认8小时之内不能再次执行切换主库，除非删除锁文件  设置的工作目录下的*.failover.error文件`</span><br></pre></td></tr></table></figure><h3 id="2-MHA实现监控">2.MHA实现监控</h3><p>利用MHA启动脚本文件<code>masterha_manager</code>会自动调用监控脚本文件<code>masterha_master_monitor</code>，并且每隔配置文件指定时间；</p><p><code>ping_interval=2</code> 进行脚本监控一次，从而判断主节点是否处于存活状态，连续4次还没有主库心跳，即说明主库宕机；</p><figure class="highlight plaintext"><figcaption><span>wiki</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 监控脚本验证主节点存活方法</span><br><span class="line">[root@xiaoQ-03 ~]# mysql -umha -pmha -h192.168.30.101 -e &quot;select user();&quot;</span><br><span class="line">mysql: [Warning] Using a password on the command line interface can be insecure.</span><br><span class="line">+-----------------+</span><br><span class="line">| user()          |</span><br><span class="line">+-----------------+</span><br><span class="line">| mha@172.16.1.51 |</span><br><span class="line">+-----------------+</span><br></pre></td></tr></table></figure><h3 id="3-MHA选主过程">3.MHA选主过程</h3><p>在MHA中进行选主时，根据选主源码文件信息分析，主要会利用到四个数组：alive latest pref bad，并且会识别节点编号信息；</p><p>在进行选主时，主要会关注竞选新主节点的日志量、以及是否设置candidate_master参数配置信息；</p><table><thead><tr><th>数组信息</th><th>简述</th><th>作用说明</th></tr></thead><tbody><tr><td>alive</td><td>存活数组</td><td>主要用于探测存活的节点状态；当主库宕机后，探测的就是两个从库节点</td></tr><tr><td>latest</td><td>最新数组</td><td>表示获取日志最新的从库信息，即数据量最接近主库的从库（根据GTID信息 或 position信息）</td></tr><tr><td>pref</td><td>备选数组</td><td>在数组中具有candidate_master参数判断条件，此参数可以放入配置文件节点中，便于节点优先选择为新主</td></tr><tr><td>bad</td><td>不选数组</td><td>如果设定了参数：no_master=1，表示相应节点不参与竞选主；<br>如果设定了参数：log_bin=0（二进制日志没开），表示相应节点不参与竞选主；<br>如何设定了参数：check_slave_delay，检查从库延迟主库100M数据信息日志量，表示节点不参与竞选主</td></tr></tbody></table><p>MHA选主判断总结（利用if判断选主的情况）</p><ul><li><p>循环对比latest数组和pref数组的slave，如果存在相同的slave，并且这个slave不在bad数组当中，该slave会被推选为新的master</p><p>DB02节点即满足latest数组信息，又满足perf数组信息，但不满足bad数据信息，即会被选为新主，有多个按照号码顺序选举；</p></li><li><p>如果pref和bad数组当中的个数为0，则选择latest数组当中的第一个slave为master；</p><p>DB02节点没有candidate_master参数配置，又没有不选数组里的三种情况配置，即db02恰好是latest，为新主；</p></li><li><p>循环对比alive数组和pref数组当中的slaves，如果有一个slave相同，并且不在bad数组当中，该节点就会成为新的master；</p><p>DB02节点即不满足latest，也不满足bad，但是满足pref，也会被选择作为新主；</p></li><li><p>循环latest数组，如果又循环到slave不在bad数组当中，这个slave就会成为master，就算添加了candidate_master=1参数；</p><p>该slave也不一定会成为主库；</p><p>DB02节点即满足latest数组，不是bad数组，也会成为新的主；</p></li><li><p>从活着的slave当中进行循环，如果循环到slave不在bad数组当中，那么这个slave就会成为主库；</p><p>DB02节点是活着的，不满足bad，也可以成为新的主；</p></li><li><p>如果进行了多次选择都找不到主库，那么主库选择失败，failover失败；</p></li></ul><p>选主策略简述表：</p><table><thead><tr><th>优先级</th><th>alive数组</th><th>latest数组</th><th>pref数组</th><th>bad数组</th><th>选主策略</th><th>多个选择情况</th></tr></thead><tbody><tr><td>01</td><td><code>满足</code></td><td><code>满足</code></td><td><code>满足</code></td><td>不满足</td><td>优选选择</td><td>按照节点号码顺序选择</td></tr><tr><td>02</td><td><code>满足</code></td><td><code>满足</code></td><td>不满足</td><td>不满足</td><td>优选选择</td><td>按照节点号码顺序选择</td></tr><tr><td>03</td><td><code>满足</code></td><td>不满足</td><td><code>满足</code></td><td>不满足</td><td>优选选择</td><td>按照节点号码顺序选择</td></tr><tr><td>04</td><td><code>满足</code></td><td>不满足</td><td>不满足</td><td>不满足</td><td>优选活着节点</td><td>按照节点号码顺序选择</td></tr></tbody></table><blockquote><p>说明：在进行手工指定切换新主时，即应用了prio_new_master_host参数信息时，会最优先选择相应节点为新主；</p><p>一般情况下是：根据mha配置文件里server后的数值小的切换</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[server1]</span><br><span class="line">hostname=10.0.0.51</span><br><span class="line">port=3306</span><br><span class="line">[server2]</span><br><span class="line">hostname=10.0.0.52</span><br><span class="line">port=3306</span><br></pre></td></tr></table></figure></blockquote><h3 id="4-MHA数据补偿">4.MHA数据补偿</h3><p>在进行数据补偿之前，需要让新主库与原有宕机主库进行对比，获悉需要补偿的数据量情况，即对比差的数据日志量信息；</p><p>然后可以从binlog日志中，进行补充数据信息的截取，随之进行数据信息补偿，但是有种特殊情况，若原有主库无法访问了；</p><p>所以进行数据补偿操作，也需要分各种情景进行处理：</p><ul><li><p>原主库SSH连接正常：</p><p>各个从节点自动调用：<code>save_binary_logs</code>脚本文件，立即保存缺失部分的bin_log，到各节点/var/tmp/目录；</p></li><li><p>原主库SSH连接异常：</p><p>各个从节点自动调用：<code>apply_diff_relay_logs</code>脚本文件，进行relay_log日志差异信息补偿；</p></li><li><p>额外特殊数据补充：（利用主库日志冗余机制）</p><p>MHA提供了binlog_server功能，可以实时拉取主库的binlog日志到备份节点，从而进行数据额外补偿；</p></li></ul><h3 id="5-MHA业务切换">5.MHA业务切换</h3><p>自动解除原有的主从关系，实现新的主从关系的建立；</p><figure class="highlight plaintext"><figcaption><span>wiki</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 所有从库解除主从关系操作</span><br><span class="line">stop slave;</span><br><span class="line">reset slave;</span><br><span class="line"></span><br><span class="line"># 所有从库重构主从关系操作</span><br><span class="line">change master to ...</span><br></pre></td></tr></table></figure><h3 id="6-MHA应用透明">6.MHA应用透明</h3><p>实现MHA的VIP功能，利用脚本实现，上传mha_script.tar文件到/usr/local/bin目录中，然后进行解压处理；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"># 上传MHA所需的脚本文件</span><br><span class="line">[root@xiaoQ-03 ~]# cd /usr/local/bin/</span><br><span class="line">[root@xiaoQ-03 bin]# chmod +x /usr/local/bin/*</span><br><span class="line"></span><br><span class="line"># 修改MHA脚本文件的信息</span><br><span class="line">[root@xiaoQ-03 bin]# cp master_ip_failover master_ip_failover.bak</span><br><span class="line">[root@xiaoQ-03 bin]# dos2unix /usr/local/bin/*</span><br><span class="line">[root@xiaoQ-03 bin]# vim master_ip_failover</span><br><span class="line">13 my $vip = &#x27;192.168.30.110/24&#x27;;</span><br><span class="line">14 my $key = &#x27;1&#x27;;</span><br><span class="line">15 my $if = &#x27;eth0&#x27;;</span><br><span class="line">16 my $ssh_start_vip = &quot;/sbin/ifconfig $if:$key $vip&quot;;</span><br><span class="line">17 my $ssh_stop_vip = &quot;/sbin/ifconfig $if:$key down&quot;;</span><br><span class="line">18 my $ssh_Bcast_arp= &quot;/sbin/arping -I $if -c 3 -A 192.168.30.110&quot;;</span><br><span class="line"></span><br><span class="line"># 修改配置文件</span><br><span class="line">[root@xiaoQ-03 ~]# vim /etc/mha/app1.cnf</span><br><span class="line">master_ip_failover_script=/usr/local/bin/master_ip_failover</span><br><span class="line"></span><br><span class="line"># 重启MHA服务</span><br><span class="line">[root@xiaoQ-03 bin]# masterha_stop --conf=/etc/mha/app1.cnf</span><br><span class="line">[root@xiaoQ-03 bin]# nohup masterha_manager --conf=/etc/mha/app1.cnf --remove_dead_master_conf --ignore_last_failover  &lt; /dev/null&gt; /var/log/mha/app1/manager.log 2&gt;&amp;1 &amp;</span><br><span class="line"></span><br><span class="line"># 手工在主库上添加VIP</span><br><span class="line">[root@xiaoQ-03 bin]# masterha_check_status --conf=/etc/mha/app1.cnf</span><br><span class="line">app1 (pid:103046) is running(0:PING_OK), master:192.168.30.101</span><br><span class="line">-- 核实此时的MHA的主库节点</span><br><span class="line">ifconfig eth0:1 192.168.30.110/24</span><br><span class="line">-- 在主库节点手工添加vip地址信息</span><br><span class="line"></span><br><span class="line"># 进行VIP地址连接测试</span><br><span class="line">-- 可以使用navcat软件，连接MHA的vip地址，查看所连主机信息是否为主节点，当故障转移后可以核实VIP地址是否持续连接；</span><br></pre></td></tr></table></figure><blockquote><p>说明：进行MHA的VIP地址漂移时，只能在局域网环境进行漂移，不能实现跨网段的VIP地址漂移；</p></blockquote><h3 id="7-MHA故障报警">7.MHA故障报警</h3><p>实现MHA的报警功能，利用脚本实现，上传mha_script.tar文件到/usr/local/bin目录中，然后进行解压处理；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 准备脚本文件</span></span><br><span class="line">[root@xiaoQ-03 bin]# <span class="built_in">cp</span> send_report send_report.bak</span><br><span class="line">28 my <span class="variable">$smtp</span>=<span class="string">&#x27;smtp.qq.com&#x27;</span>;</span><br><span class="line">-- smtp服务器地址域名</span><br><span class="line">29 my <span class="variable">$mail_from</span>=<span class="string">&#x27;330882721@qq.com&#x27;</span>;</span><br><span class="line">-- 发件箱信息配置</span><br><span class="line">30 my <span class="variable">$mail_user</span>=<span class="string">&#x27;330882721&#x27;</span>;</span><br><span class="line">-- 用户名 QQ号</span><br><span class="line">31 my <span class="variable">$mail_pass</span>=<span class="string">&#x27;ypokkranqlgkcbba&#x27;</span>;</span><br><span class="line">-- 邮箱授权码</span><br><span class="line">32 my <span class="variable">$mail_to</span>=<span class="string">&#x27;330882721@qq.com&#x27;</span>;</span><br><span class="line">or</span><br><span class="line">my <span class="variable">$mail_to</span>=[<span class="string">&#x27;to1@qq.com&#x27;</span>,<span class="string">&#x27;to2@qq.com&#x27;</span>];</span><br><span class="line">-- 收件箱信息配置</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改配置文件</span></span><br><span class="line">[root@xiaoQ-03 ~]# vim /etc/mha/app1.cnf</span><br><span class="line">report_script=/usr/local/bin/send_report</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启MHA服务</span></span><br><span class="line">[root@xiaoQ-03 bin]# masterha_stop --conf=/etc/mha/app1.cnf</span><br><span class="line">[root@xiaoQ-03 bin]# <span class="built_in">nohup</span> masterha_manager --conf=/etc/mha/app1.cnf --remove_dead_master_conf --ignore_last_failover  &lt; /dev/null&gt; /var/log/mha/app1/manager.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><h3 id="8-MHA额外补偿">8.MHA额外补偿</h3><p>利用binlog_server作为额外的日志补偿的冗余方案，即实时保存主库的bin_log日志文件到特定节点目录中；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建日志存放目录</span></span><br><span class="line">[root@xiaoQ-03 ~]# <span class="built_in">mkdir</span> -p /data/binlog_server/</span><br><span class="line">[root@xiaoQ-03 ~]# <span class="built_in">chown</span> -R mysql.mysql /data/*</span><br><span class="line">[root@xiaoQ-03 ~]# <span class="built_in">cd</span> /data/binlog_server</span><br><span class="line">[root@xiaoQ-03 binlog_server]# mysql -e <span class="string">&quot;show slave status\G&quot;</span>|grep <span class="string">&quot;Master_Log&quot;</span></span><br><span class="line">Master_Log_File: mysql-bin.000002</span><br><span class="line">Read_Master_Log_Pos: 1201</span><br><span class="line">Relay_Master_Log_File: mysql-bin.000002</span><br><span class="line">Exec_Master_Log_Pos: 1201</span><br><span class="line">-- 拉取日志的起点，需要按照目前从库的已经获取到的二进制日志点为起点</span><br><span class="line">[root@xiaoQ-03 binlog_server]# mysqlbinlog -R --host=192.168.30.101 --user=mha --password=mha --raw --stop-never mysql-bin.000002 &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编写配置文件信息</span></span><br><span class="line">[root@xiaoQ-03 ~]# vim /etc/mha/app1.cnf</span><br><span class="line">[binlog1]</span><br><span class="line">no_master=1</span><br><span class="line">-- 不存于竞选</span><br><span class="line">hostname=192.168.30.103</span><br><span class="line">-- 将日志额外补偿到哪个主机上</span><br><span class="line">master_binlog_dir=/data/binlog_server/</span><br><span class="line">-- 日志额外补偿的存储目录</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启MHA服务</span></span><br><span class="line">[root@xiaoQ-03 bin]# masterha_stop --conf=/etc/mha/app1.cnf</span><br><span class="line">[root@xiaoQ-03 bin]# <span class="built_in">nohup</span> masterha_manager --conf=/etc/mha/app1.cnf --remove_dead_master_conf --ignore_last_failover  &lt; /dev/null&gt; /var/log/mha/app1/manager.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><h2 id="MHA搭建">MHA搭建</h2><ul><li>搭建MySQL的MHA需要保证主从复制是OK的</li></ul><p><strong>环境一览</strong></p><table><thead><tr><th style="text-align:left">主机名</th><th>WanIP</th><th>LanIP</th><th>角色</th></tr></thead><tbody><tr><td style="text-align:left">mha</td><td>10.0.0.50</td><td>172.16.1.50</td><td>MHA管理端</td></tr><tr><td style="text-align:left">db01</td><td>10.0.0.51</td><td>172.16.1.51</td><td>暂时主库，客户端</td></tr><tr><td style="text-align:left">db02</td><td>10.0.0.52</td><td>172.16.1.52</td><td>从库，MHA客户端</td></tr><tr><td style="text-align:left">db03</td><td>10.0.0.53</td><td>172.16.1.53</td><td>从库，MHA客户端</td></tr><tr><td style="text-align:left">db04</td><td>10.0.0.54</td><td>172.16.1.54</td><td>从库，MHA客户端</td></tr></tbody></table><h3 id="MHA的必要条件">MHA的必要条件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">1.主从复制OK</span><br><span class="line">2.数据库的每个节点都得有rep主从复制用户</span><br><span class="line">3.数据库每个节点要有mha用户</span><br><span class="line">4.关闭自动删除relay-log</span><br><span class="line">5.每一台都需要做免密连接</span><br><span class="line">6.做mysqld软链接</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 三台从库设置只读（临时生效）</span></span><br><span class="line">mysql&gt; <span class="built_in">set</span> global read_only=1;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 四台数据库关闭relaylog自动删除功能（临时生效）</span></span><br><span class="line">mysql&gt; <span class="built_in">set</span> global relay_log_purge = 0;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>:dango:<strong>主从复制</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1.编辑主库配置文件</span></span><br><span class="line">[root@db01 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">basedir=/app/mysql</span><br><span class="line">datadir=/app/mysql/data</span><br><span class="line">server_id=1</span><br><span class="line">log-bin=mysql-bin</span><br><span class="line">skip_name=resolve</span><br><span class="line"><span class="comment">#关闭自动删除relay-log</span></span><br><span class="line">relay_log_purge=0</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.从库配置文件的每台server_id不同即可</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#3.主库创建主从复制用户</span></span><br><span class="line">mysql&gt; grant replication slave on *.* to rep@<span class="string">&#x27;172.16.1.5%&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#主库检查bin-log位置点</span></span><br><span class="line">db01 [(none)]&gt;show master status;</span><br><span class="line">+------------------+----------+--------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB |</span><br><span class="line">+------------------+----------+--------------+</span><br><span class="line">| mysql-bin.000003 |      327 |              |</span><br><span class="line">+------------------+----------+--------------+</span><br><span class="line"></span><br><span class="line"><span class="comment">#4.所有从库执行</span></span><br><span class="line">change master to</span><br><span class="line">master_host=<span class="string">&#x27;172.16.1.51&#x27;</span>,</span><br><span class="line">master_user=<span class="string">&#x27;rep&#x27;</span>,</span><br><span class="line">master_password=<span class="string">&#x27;123&#x27;</span>,</span><br><span class="line">master_log_file=<span class="string">&#x27;mysql-bin.000003&#x27;</span>,</span><br><span class="line">master_log_pos=327,</span><br><span class="line">master_port=3306;</span><br><span class="line"></span><br><span class="line"><span class="comment">#所有从库开启主从复制</span></span><br><span class="line">mysql &gt; start slave;</span><br></pre></td></tr></table></figure><p>:dango:<strong>主库执行</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#主库执行（主从复制OK情况下）</span></span><br><span class="line"><span class="comment">#每台都有主从复制用户</span></span><br><span class="line">mysql&gt; grant replication slave on *.* to rep@<span class="string">&#x27;172.16.1.5%&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#每台都有mha用户</span></span><br><span class="line">mysql&gt; grant all on *.* to mha@<span class="string">&#x27;172.16.1.5%&#x27;</span> identified by <span class="string">&#x27;mha&#x27;</span>;</span><br></pre></td></tr></table></figure><p>:dango:<strong>互信免密</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#可以执行脚本，每一台都需要免密（注意修改密码 -p 1 ）</span></span><br><span class="line">[root@db01 ~]# <span class="built_in">cat</span> push_public_key.sh </span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">yum -y install sshpass</span><br><span class="line"><span class="built_in">test</span> -f ~/.ssh/id_rsa || ssh-keygen -t rsa -P <span class="string">&#x27;&#x27;</span> -f ~/.ssh/id_rsa &gt;/dev/null 2&gt;&amp;1</span><br><span class="line"><span class="keyword">for</span> ip <span class="keyword">in</span> 50 51 52 53 54;<span class="keyword">do</span></span><br><span class="line">ping -c1 -W1 172.16.1.<span class="variable">$ip</span> &amp;&gt;/dev/null</span><br><span class="line">[ $? -eq 0 ] &amp;&amp;\</span><br><span class="line">sshpass -p 1 ssh-copy-id -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa.pub root@172.16.1.<span class="variable">$ip</span> &amp;&gt;/dev/null &amp;&amp;\</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;172.16.1.<span class="variable">$ip</span> 推送成功...&quot;</span> ||\</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;172.16.1.<span class="variable">$ip</span> 推送失败...&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#不用脚本</span></span><br><span class="line"><span class="comment">## 生成密钥对</span></span><br><span class="line">[root@db01 ~]# ssh-keygen -t dsa -P <span class="string">&#x27;&#x27;</span> -f ~/.ssh/id_dsa &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">[root@db02 ~]# ssh-keygen -t dsa -P <span class="string">&#x27;&#x27;</span> -f ~/.ssh/id_dsa &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">[root@db03 ~]# ssh-keygen -t dsa -P <span class="string">&#x27;&#x27;</span> -f ~/.ssh/id_dsa &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">[root@db04 ~]# ssh-keygen -t dsa -P <span class="string">&#x27;&#x27;</span> -f ~/.ssh/id_dsa &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">[root@mha-manager ~]# ssh-keygen -t dsa -P <span class="string">&#x27;&#x27;</span> -f ~/.ssh/id_dsa &gt;/dev/null 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 推送公钥（每一台都需要执行，sshpass需要安装，不然需要交互）</span></span><br><span class="line">[root@db01 ~]# sshpass -p 1 ssh-copy-id -i ~/.ssh/id_dsa.pub root@172.16.1.50</span><br><span class="line">[root@db01 ~]# sshpass -p 1 ssh-copy-id -i ~/.ssh/id_dsa.pub root@172.16.1.51</span><br><span class="line">[root@db01 ~]# sshpass -p 1 ssh-copy-id -i ~/.ssh/id_dsa.pub root@172.16.1.52</span><br><span class="line">[root@db01 ~]# sshpass -p 1 ssh-copy-id -i ~/.ssh/id_dsa.pub root@172.16.1.53</span><br><span class="line">[root@db01 ~]# sshpass -p 1 ssh-copy-id -i ~/.ssh/id_dsa.pub root@172.16.1.54</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#所以用脚本吧</span></span><br></pre></td></tr></table></figure><p>:dango:<strong>命令软链接</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 ~]# <span class="built_in">ln</span> -s /app/mysql/bin/mysqlbinlog /usr/bin/mysqlbinlog</span><br><span class="line">[root@db01 ~]# <span class="built_in">ln</span> -s /app/mysql/bin/mysql /usr/bin/mysql</span><br><span class="line"></span><br><span class="line">[root@db02 ~]# <span class="built_in">ln</span> -s /app/mysql/bin/mysqlbinlog /usr/bin/mysqlbinlog</span><br><span class="line">[root@db02 ~]# <span class="built_in">ln</span> -s /app/mysql/bin/mysql /usr/bin/mysql</span><br><span class="line"></span><br><span class="line">[root@db03 ~]# <span class="built_in">ln</span> -s /app/mysql/bin/mysqlbinlog /usr/bin/mysqlbinlog</span><br><span class="line">[root@db03 ~]# <span class="built_in">ln</span> -s /app/mysql/bin/mysql /usr/bin/mysql</span><br><span class="line"></span><br><span class="line">[root@db04 ~]# <span class="built_in">ln</span> -s /app/mysql/bin/mysqlbinlog /usr/bin/mysqlbinlog</span><br><span class="line">[root@db04 ~]# <span class="built_in">ln</span> -s /app/mysql/bin/mysql /usr/bin/mysql</span><br></pre></td></tr></table></figure><h3 id="部署MHA客户端">部署MHA客户端</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#MySQL 5.6版本可以使用node0.56版本</span></span><br><span class="line">[root@db01 ~]# wget http://test.driverzeng.com/MySQL_plugins/mha4mysql-node-0.56-0.el6.noarch.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment">#MySQL 5.7及以上建议使用node0.58版本</span></span><br><span class="line">[root@db01 ~]# wget https://github.com/yoshinorim/mha4mysql-node/releases/download/v0.58/mha4mysql-node-0.58-0.el7.centos.noarch.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment">#将node传到其它机器</span></span><br><span class="line">[root@db01 ~]# scp mha4mysql-node-0.56-0.el6.noarch.rpm 10.0.0.50:/root</span><br><span class="line">[root@db01 ~]# scp mha4mysql-node-0.56-0.el6.noarch.rpm 10.0.0.52:/root</span><br><span class="line">[root@db01 ~]# scp mha4mysql-node-0.56-0.el6.noarch.rpm 10.0.0.53:/root</span><br><span class="line">[root@db01 ~]# scp mha4mysql-node-0.56-0.el6.noarch.rpm 10.0.0.54:/root</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装node（每个节点都做）</span></span><br><span class="line">[root@db01 ~]# yum -y localinstall mha4mysql-node-0.56-0.el6.noarch.rpm</span><br><span class="line">[root@db02 ~]# yum -y localinstall mha4mysql-node-0.56-0.el6.noarch.rpm</span><br><span class="line">[root@db03 ~]# yum -y localinstall mha4mysql-node-0.56-0.el6.noarch.rpm</span><br><span class="line">[root@db04 ~]# yum -y localinstall mha4mysql-node-0.56-0.el6.noarch.rpm</span><br><span class="line">[root@mha ~]# yum -y localinstall mha4mysql-node-0.56-0.el6.noarch.rpm</span><br></pre></td></tr></table></figure><h3 id="部署MHA管理端">部署MHA管理端</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.创建配置文件存放目录</span></span><br><span class="line">[root@mha-manager ~]# <span class="built_in">mkdir</span> /etc/mha</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.编写配置文件</span></span><br><span class="line">[root@mha-manager ~]# vim /etc/mha/app1.cnf</span><br><span class="line">[server default]</span><br><span class="line">manager_log=/etc/mha/logs/manager.log</span><br><span class="line">manager_workdir=/etc/mha/app1</span><br><span class="line">master_binlog_dir=/app/mysql/data</span><br><span class="line">user=mha</span><br><span class="line">password=mha</span><br><span class="line">ping_interval=2</span><br><span class="line">repl_user=rep</span><br><span class="line">repl_password=123</span><br><span class="line">ssh_user=root</span><br><span class="line">ssh_port=22</span><br><span class="line"></span><br><span class="line">[server1]</span><br><span class="line"><span class="comment">#candidate_master=1</span></span><br><span class="line"><span class="comment">#check_repl_delay=0</span></span><br><span class="line">hostname=172.16.1.51</span><br><span class="line">port=3306</span><br><span class="line"></span><br><span class="line">[server2]</span><br><span class="line"><span class="comment">#candidate_master=1</span></span><br><span class="line"><span class="comment">#check_repl_delay=0</span></span><br><span class="line">hostname=172.16.1.52</span><br><span class="line">port=3306</span><br><span class="line"></span><br><span class="line">[server3]</span><br><span class="line">hostname=172.16.1.53</span><br><span class="line">port=3306</span><br><span class="line"></span><br><span class="line">[server4]</span><br><span class="line">hostname=172.16.1.54</span><br><span class="line">port=3306</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.创建MHA管理用户</span></span><br><span class="line">mysql&gt; grant all on *.* to mha@<span class="string">&#x27;172.16.1.5%&#x27;</span> identified by <span class="string">&#x27;mha&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.日志和工作目录目录创建</span></span><br><span class="line">[root@mha-manager ~]# <span class="built_in">mkdir</span> -p /etc/mha/&#123;logs,app1&#125;</span><br><span class="line">[root@mha-manager ~]# ll /etc/mha/</span><br><span class="line">total 4</span><br><span class="line">drwxr-xr-x 2 root root 6 Aug 27 12:20 app1</span><br><span class="line">-rw-r--r-- 1 root root 457 Aug 27 12:16 app1.cnf</span><br><span class="line">drwxr-xr-x 2 root root 6 Aug 27 12:19 logs</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.检测MHA ssh免密</span></span><br><span class="line">[root@mha-manager ~]# masterha_check_ssh --conf=/etc/mha/app1.cnf</span><br><span class="line">All SSH connection tests passed successfully.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6.检测MHA 主从复制</span></span><br><span class="line">[root@mha-manager ~]# masterha_check_repl --conf=/etc/mha/app1.cnf</span><br><span class="line">MySQL Replication Health is OK.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7.启动MHA</span></span><br><span class="line"><span class="built_in">nohup</span> masterha_manager --conf=/etc/mha/app1.cnf --remove_dead_master_conf --ignore_last_failover &lt; /dev/null &gt; /etc/mha/logs/manager.log 2&gt;&amp;1 &amp;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">`masterha_manager：`启动命令</span><br><span class="line">--conf=/etc/mha/app1.cnf：指定配置文件</span><br><span class="line">--remove_dead_master_conf：做完切换后，从配置文件中摘除宕机的主库</span><br><span class="line">--ignore_last_failover：忽略上一次切换</span><br><span class="line"></span><br><span class="line"><span class="comment"># MHA切换机制：</span></span><br><span class="line">1.MHA在做一次切换后，生成一个锁文件（app1.failover.complete），在工作目录下，8个小时之内，无法做第二次切换</span><br><span class="line">2.MHA切换完成后，会自动结束MHA的进程</span><br><span class="line">3.在所有从库数据相同时，MHA会选择配置文件中标签<span class="built_in">id</span>最小的切换</span><br><span class="line"></span><br><span class="line"><span class="comment"># 8.启动后检测</span></span><br><span class="line">[root@mha-manager ~]# masterha_check_status --conf=/etc/mha/app1.cnf</span><br><span class="line">app1 (pid:19524) is running(0:PING_OK), master:172.16.1.51</span><br><span class="line"></span><br><span class="line"><span class="comment">## 使用systemd管理mha</span></span><br><span class="line">[root@mha-manager ~]# vim /usr/lib/systemd/system/mha.service</span><br><span class="line">[Unit]</span><br><span class="line">Description=MHA</span><br><span class="line">After=network.target sshd-keygen.service</span><br><span class="line">Wants=sshd-keygen.service</span><br><span class="line">[Service]</span><br><span class="line">Type=sample</span><br><span class="line">ExecStart=/usr/bin/masterha_manager --conf=/etc/mha/app1.cnf --</span><br><span class="line">remove_dead_master_conf --ignore_last_failover &gt; /etc/mha/logs/manager.log</span><br><span class="line">ExecStop=/usr/bin/masterha_stop --conf=/etc/mha/app1.cnf</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="MHA配置文件详解-dango">MHA配置文件详解:dango:</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">[server default]</span><br><span class="line"><span class="comment">#设置manager的工作目录</span></span><br><span class="line">manager_workdir=/var/log/masterha/app1</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置manager的日志</span></span><br><span class="line">manager_log=/var/log/masterha/app1/manager.log </span><br><span class="line"></span><br><span class="line"><span class="comment">#设置master 保存binlog的位置，以便MHA可以找到master的日志，我这里的也就是mysql的数据目录</span></span><br><span class="line">master_binlog_dir=/data/mysql</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置自动failover时候的切换脚本</span></span><br><span class="line">master_ip_failover_script= /usr/local/bin/master_ip_failover</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置手动切换时候的切换脚本</span></span><br><span class="line">master_ip_online_change_script= /usr/local/bin/master_ip_online_change</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置mysql中root用户的密码，这个密码是前文中创建监控用户的那个密码</span></span><br><span class="line">password=1</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置监控用户root</span></span><br><span class="line">user=root</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置监控主库，发送ping包的时间间隔，尝试三次没有回应的时候自动进行failover</span></span><br><span class="line">ping_interval=1</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置远端mysql在发生切换时binlog的保存位置</span></span><br><span class="line">remote_workdir=/tmp</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置复制用户的密码</span></span><br><span class="line">repl_password=123</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置复制环境中的复制用户名 </span></span><br><span class="line">repl_user=rep</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置发生切换后发送的报警的脚本</span></span><br><span class="line">report_script=/usr/local/send_report</span><br><span class="line"></span><br><span class="line"><span class="comment">#一旦MHA到server02的监控之间出现问题，MHA Manager将会尝试从server03登录到server02</span></span><br><span class="line">secondary_check_script= /usr/local/bin/masterha_secondary_check -s server03 -s server02 --user=root --master_host=server02 --master_ip=192.168.0.50 --master_port=3306</span><br><span class="line"><span class="comment">#设置故障发生后关闭故障主机脚本（该脚本的主要作用是关闭主机放在发生脑裂,这里没有使用）</span></span><br><span class="line">shutdown_script=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="comment">#设置ssh的登录用户名</span></span><br><span class="line">ssh_user=root </span><br><span class="line">[server1]</span><br><span class="line">hostname=10.0.0.51</span><br><span class="line">port=3306</span><br><span class="line">[server2]</span><br><span class="line">hostname=10.0.0.52</span><br><span class="line">port=3306</span><br><span class="line"><span class="comment">#设置为候选master，如果设置该参数以后，发生主从切换以后将会将此从库提升为主库，即使这个主库不是集群中事件最新的slave。</span></span><br><span class="line">candidate_master=1</span><br><span class="line"><span class="comment">#默认情况下如果一个slave落后master 100M的relay logs的话，MHA将不会选择该slave作为一个新的master，因为对于这个slave的恢复需要花费很长时间，通过设置check_repl_delay=0,MHA触发切换在选择一个新的master的时候将会忽略复制延时，这个参数对于设置了candidate_master=1的主机非常有用，因为这个候选主在切换的过程中一定是新的master</span></span><br><span class="line">check_repl_delay=0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="comment">#一旦MHA到server02的监控之间出现问题，MHA Manager将会尝试从server03登录到server02</span></span><br><span class="line">secondary_check_script= /usr/local/bin/masterha_secondary_check -s server03 -s </span><br><span class="line">server02 --user=root --master_host=server02 --master_ip=192.168.0.50 --</span><br><span class="line">master_port=3306</span><br><span class="line"></span><br><span class="line"> <span class="comment">#设置故障发生后关闭故障主机脚本（该脚本的主要作用是关闭主机放在发生脑裂,这里没有使用）</span></span><br><span class="line">shutdown_script=<span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">#设置ssh的登录用户名</span></span><br><span class="line">ssh_user=root </span><br><span class="line"></span><br><span class="line">[server1]</span><br><span class="line">hostname=10.0.0.51</span><br><span class="line">port=3306</span><br><span class="line"></span><br><span class="line">[server2]</span><br><span class="line">hostname=10.0.0.52</span><br><span class="line">port=3306</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置为候选 master，如果设置该参数以后，发生主从切换以后将会将此从库提升为主库，即使这个主库不是集群中事件最新的 slave。</span></span><br><span class="line">candidate_master=1</span><br><span class="line"></span><br><span class="line"><span class="comment">#默认情况下如果一个 slave 落后 master 100M 的 relay logs 的话，MHA 将不会选择该 slave 作为一个新的 master，因为对于这个 slave 的恢复需要花费很长时间，通过设置 check_repl_delay=0,MHA 触发切换在选择一个新的 master 的时候将会忽略复制延时，这个参数对于设置了 candidate_master=1 的主机非常有用，因为这个候选主在切换的过程中一定是新的 master</span></span><br><span class="line">check_repl_delay=0</span><br></pre></td></tr></table></figure><h3 id="切换日志–注意几点">切换日志–注意几点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 切换日志：</span></span><br><span class="line"><span class="comment"># GTID主从没有开启</span></span><br><span class="line">GTID failover mode = 0</span><br><span class="line">Starting Non-GTID based failover.</span><br><span class="line"></span><br><span class="line"><span class="comment"># VIP漂移的脚本没有设置</span></span><br><span class="line">master_ip_failover_script is not <span class="built_in">set</span>. Skipping invalidating dead master IP address.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 没有配置 Candidate masters</span></span><br><span class="line">Candidate masters from the configuration file:</span><br><span class="line">Non-candidate masters:</span><br><span class="line">candidate_master=1 // 设立太子，但是如果太子落后其他机器数据超过100M，就废储</span><br><span class="line">check_repl_delay=0 // 关闭对太子落后的检测</span><br><span class="line"></span><br><span class="line"><span class="comment"># change master语句 以后恢复数据时候要根据这个点位来切换</span></span><br><span class="line">All other slaves should start replication from here. Statement should be:</span><br><span class="line">CHANGE MASTER TO MASTER_HOST=<span class="string">&#x27;172.16.1.54&#x27;</span>, MASTER_PORT=3306,MASTER_LOG_FILE=<span class="string">&#x27;mysql-bin.000003&#x27;</span>, MASTER_LOG_POS=878597, MASTER_USER=<span class="string">&#x27;rep&#x27;</span>,MASTER_PASSWORD=<span class="string">&#x27;xxx&#x27;</span>;</span><br></pre></td></tr></table></figure><p><strong>MHA相关工具命令</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">save_binary_logs</span><br><span class="line">--<span class="built_in">command</span>=save</span><br><span class="line">--start_file=mysql-bin.000001</span><br><span class="line">--start_pos=878597</span><br><span class="line">--binlog_dir=/app/mysql/data</span><br><span class="line">--</span><br><span class="line">output_file=/var/tmp/saved_master_binlog_from_172.16.1.52_3306_20240827154042.bi</span><br><span class="line">nlog</span><br><span class="line">--handle_raw_binlog=1</span><br><span class="line">--disable_log_bin=0</span><br><span class="line">--manager_version=0.58</span><br><span class="line">pply_diff_relay_logs</span><br><span class="line">--<span class="built_in">command</span>=apply</span><br><span class="line">--slave_user=<span class="string">&#x27;mha&#x27;</span></span><br><span class="line">--slave_host=172.16.1.54</span><br><span class="line">--slave_ip=172.16.1.54</span><br><span class="line">--slave_port=3306</span><br><span class="line">--</span><br><span class="line">apply_files=/var/tmp/saved_master_binlog_from_172.16.1.52_3306_20240827154042.bi</span><br><span class="line">nlog</span><br><span class="line">--workdir=/var/tmp</span><br><span class="line">--target_version=5.7.42-<span class="built_in">log</span></span><br><span class="line">--timestamp=20240827154042</span><br><span class="line">--handle_raw_binlog=1</span><br><span class="line">--disable_log_bin=0</span><br><span class="line">--manager_version=0.58</span><br><span class="line">--slave_pass=xxx</span><br><span class="line"> </span><br></pre></td></tr></table></figure><p><strong>binlog的路径</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.先将binlog保存在宕机主库的 /var/tmp/</span></span><br><span class="line">[root@db02 ~]# ll</span><br><span class="line">/var/tmp/saved_master_binlog_from_172.16.1.52_3306_20240827154042.binlog</span><br><span class="line">-rw-r--r-- 1 root root 177 Aug 27 15:40</span><br><span class="line">/var/tmp/saved_master_binlog_from_172.16.1.52_3306_20240827154042.binlog</span><br><span class="line"><span class="comment"># 2.将binlog从宕机主库保存到manager所在的机器</span></span><br><span class="line">[root@mha-manager ~]# ll</span><br><span class="line">/etc/mha/app1/saved_master_binlog_from_172.16.1.52_3306_20240827154042.binlog</span><br><span class="line">-rw-r--r-- 1 root root 177 Aug 27 15:40</span><br><span class="line">/etc/mha/app1/saved_master_binlog_from_172.16.1.52_3306_20240827154042.binlog</span><br><span class="line"><span class="comment"># 3.将binlog从manager所在的机器发送给新主库</span></span><br><span class="line">[root@db04 ~]# ll</span><br><span class="line">/var/tmp/saved_master_binlog_from_172.16.1.52_3306_20240827154042.binlog</span><br><span class="line">-rw-r--r-- 1 root root 177 Aug 27 15:40</span><br><span class="line">/var/tmp/saved_master_binlog_from_172.16.1.52_3306_20240827154042.binlog</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/QQ_1724772576926.png" alt="QQ_1724772576926"></p><h2 id="MHA自动恢复">MHA自动恢复</h2><h3 id="手动恢复">手动恢复</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.修复宕机的主库</span></span><br><span class="line">[root@db02 ~]# systemctl start mysqld</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.找到change master语句</span></span><br><span class="line">CHANGE MASTER TO MASTER_HOST=<span class="string">&#x27;172.16.1.54&#x27;</span>, MASTER_PORT=3306,</span><br><span class="line">MASTER_LOG_FILE=<span class="string">&#x27;mysql-bin.000003&#x27;</span>, MASTER_LOG_POS=878597, MASTER_USER=<span class="string">&#x27;rep&#x27;</span>,</span><br><span class="line">MASTER_PASSWORD=<span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.启动主从复制</span></span><br><span class="line">mysql&gt; start slave;</span><br><span class="line"><span class="comment"># 4.补全配置文件</span></span><br><span class="line">[root@mha-manager ~]# vim /etc/mha/app1.cnf</span><br><span class="line">[server2]</span><br><span class="line">hostname=172.16.1.52</span><br><span class="line">port=3306</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.启动MHA</span></span><br><span class="line">[root@mha-manager ~]# systemctl start mha</span><br><span class="line"><span class="comment"># 6.检测MHA启动</span></span><br><span class="line">[root@mha-manager ~]# masterha_check_status --conf=/etc/mha/app1.cnf</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="自动恢复脚本">自动恢复脚本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">. /etc/init.d/functions</span><br><span class="line"><span class="comment">#vars</span></span><br><span class="line">log_file=<span class="string">&#x27;/etc/mha/logs/manager.log&#x27;</span></span><br><span class="line">mha_conf=<span class="string">&quot;/etc/mha/app1.cnf&quot;</span></span><br><span class="line">repl_pass=<span class="string">&#x27;123&#x27;</span></span><br><span class="line">mha_user=$(awk -F= <span class="string">&#x27;/^user/&#123;print $2&#125;&#x27;</span> <span class="variable">$&#123;mha_conf&#125;</span>)</span><br><span class="line">mha_password=$(awk -F= <span class="string">&#x27;/^password/&#123;print $2&#125;&#x27;</span> <span class="variable">$&#123;mha_conf&#125;</span>)</span><br><span class="line">down_master=$(sed -nr <span class="string">&#x27;s#^Master (.*)\(.*\).*!$#\1#gp&#x27;</span> <span class="variable">$&#123;log_file&#125;</span>|<span class="built_in">tail</span> -1 )</span><br><span class="line">change_master=$(grep -i <span class="string">&#x27;change master to&#x27;</span> <span class="variable">$&#123;log_file&#125;</span>|<span class="built_in">tail</span> -1|awk -F: <span class="string">&#x27;&#123;print $4&#125;&#x27;</span>|sed <span class="string">&quot;s#xxx#<span class="variable">$&#123;repl_pass&#125;</span>#g&quot;</span>)</span><br><span class="line">master_ip_failover_script=/etc/mha/app1/master_ip_failover</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#启动MySQL，检测MySQL是否完全启动，启动后执行命令，开启主从复制</span></span><br><span class="line">ssh <span class="variable">$&#123;down_master&#125;</span> <span class="string">&#x27;systemctl start mysqld&#x27;</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>;<span class="keyword">do</span></span><br><span class="line">  mysqladmin -u<span class="variable">$&#123;mha_user&#125;</span> -p<span class="variable">$&#123;mha_password&#125;</span> -h<span class="variable">$&#123;down_master&#125;</span> ping &amp;&gt;/dev/null</span><br><span class="line">  <span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line">    mysql -u<span class="variable">$&#123;mha_user&#125;</span> -p<span class="variable">$&#123;mha_password&#125;</span> -h<span class="variable">$&#123;down_master&#125;</span> -e <span class="string">&quot;<span class="variable">$&#123;change_master&#125;</span>;start slave&quot;</span></span><br><span class="line">    <span class="built_in">break</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#重新写入MHA管理端配置文件</span></span><br><span class="line"><span class="built_in">cat</span> &gt; <span class="variable">$&#123;mha_conf&#125;</span> &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">[server default]</span></span><br><span class="line"><span class="string">manager_log=/etc/mha/logs/manager.log</span></span><br><span class="line"><span class="string">manager_workdir=/etc/mha/app1</span></span><br><span class="line"><span class="string">master_binlog_dir=/app/mysql/data</span></span><br><span class="line"><span class="string">password=$&#123;mha_password&#125;</span></span><br><span class="line"><span class="string">ping_interval=2</span></span><br><span class="line"><span class="string">repl_password=123</span></span><br><span class="line"><span class="string">repl_user=rep</span></span><br><span class="line"><span class="string">ssh_port=22</span></span><br><span class="line"><span class="string">ssh_user=root</span></span><br><span class="line"><span class="string">user=$&#123;mha_user&#125;</span></span><br><span class="line"><span class="string">[server1]</span></span><br><span class="line"><span class="string">hostname=172.16.1.51</span></span><br><span class="line"><span class="string">port=3306</span></span><br><span class="line"><span class="string">[server2]</span></span><br><span class="line"><span class="string">hostname=172.16.1.52</span></span><br><span class="line"><span class="string">port=3306</span></span><br><span class="line"><span class="string">[server3]</span></span><br><span class="line"><span class="string">hostname=172.16.1.53</span></span><br><span class="line"><span class="string">port=3306</span></span><br><span class="line"><span class="string">[server4]</span></span><br><span class="line"><span class="string">hostname=172.16.1.54</span></span><br><span class="line"><span class="string">port=3306</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#启动MHA，并且检测MHA状态，直至启动成功结束循环</span></span><br><span class="line">systemctl start mha</span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>;<span class="keyword">do</span></span><br><span class="line">  masterha_check_status --conf=<span class="variable">$&#123;mha_conf&#125;</span> &amp;&gt;/dev/null</span><br><span class="line">  <span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line">    action <span class="string">&quot;mha server&quot;</span> /bin/true</span><br><span class="line">    <span class="built_in">break</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p><strong>优化</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">[root@mha ~]# <span class="built_in">cat</span> failover_status </span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#上一次新主库</span></span><br><span class="line">last_new_master=$(grep <span class="string">&#x27;(new master)&#x27;</span> /etc/mha/logs/manager.log |<span class="built_in">tail</span> -2|awk -F <span class="string">&#x27;(&#x27;</span> <span class="string">&#x27;NR==1&#123;print $1&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">[root@mha ~]# <span class="built_in">cat</span> recovery_mha.sh</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">. /etc/init.d/functions</span><br><span class="line">. /root/failover_status</span><br><span class="line"></span><br><span class="line">log_file=<span class="string">&#x27;/etc/mha/logs/manager.log&#x27;</span></span><br><span class="line">mha_conf=<span class="string">&quot;/etc/mha/app1.cnf&quot;</span></span><br><span class="line">repl_pass=<span class="string">&#x27;123&#x27;</span></span><br><span class="line">mha_user=$(awk -F= <span class="string">&#x27;/^user/&#123;print $2&#125;&#x27;</span> <span class="variable">$&#123;mha_conf&#125;</span>)</span><br><span class="line">mha_password=$(awk -F= <span class="string">&#x27;/^password/&#123;print $2&#125;&#x27;</span> <span class="variable">$&#123;mha_conf&#125;</span>)</span><br><span class="line">down_master=$(sed -nr <span class="string">&#x27;s#^Master (.*)\(.*\).*!$#\1#gp&#x27;</span> <span class="variable">$&#123;log_file&#125;</span>|<span class="built_in">tail</span> -1 )</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>;<span class="keyword">do</span></span><br><span class="line"><span class="comment">#判断是否修复完成</span></span><br><span class="line"><span class="comment">#当前down的主库和上次主库一致时，判定修复完成（依据截取Master 172.16.1.*(172.16.1.*:3306) is down!）</span></span><br><span class="line"><span class="comment">#判定依据就是只有修复完成才会有Master 172.16.1.*(172.16.1.*:3306) is down!）</span></span><br><span class="line">  <span class="keyword">if</span> [ <span class="variable">$&#123;down_master&#125;</span> == <span class="variable">$&#123;last_new_master&#125;</span> ];<span class="keyword">then</span></span><br><span class="line">    change_master=$(grep -i <span class="string">&#x27;change master to&#x27;</span> <span class="variable">$&#123;log_file&#125;</span>|<span class="built_in">tail</span> -1|awk -F: <span class="string">&#x27;&#123;print $4&#125;&#x27;</span>|sed <span class="string">&quot;s#xxx#<span class="variable">$&#123;repl_pass&#125;</span>#g&quot;</span>)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;主库修复中...&quot;</span></span><br><span class="line">    ssh <span class="variable">$&#123;down_master&#125;</span> -C <span class="string">&#x27;systemctl start mysqld&#x27;</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">true</span>;<span class="keyword">do</span></span><br><span class="line">      mysqladmin -u<span class="variable">$&#123;mha_user&#125;</span> -p<span class="variable">$&#123;mha_password&#125;</span> -h<span class="variable">$&#123;down_master&#125;</span> ping &amp;&gt;/dev/null</span><br><span class="line">      <span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line"><span class="comment">#down的机器做从库</span></span><br><span class="line">        mysql -u<span class="variable">$&#123;mha_user&#125;</span> -p<span class="variable">$&#123;mha_password&#125;</span> -h<span class="variable">$&#123;down_master&#125;</span> -e <span class="string">&quot;<span class="variable">$&#123;change_master&#125;</span>;start slave&quot;</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;主库修复成功...&quot;</span></span><br><span class="line">        <span class="built_in">break</span></span><br><span class="line">      <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;正在补全MHA配置文件...&quot;</span></span><br><span class="line">    <span class="built_in">cat</span> &gt; <span class="variable">$&#123;mha_conf&#125;</span> &lt;&lt;- <span class="string">EOF</span></span><br><span class="line"><span class="string">        [server default]</span></span><br><span class="line"><span class="string">        manager_log=/etc/mha/logs/manager.log</span></span><br><span class="line"><span class="string">        manager_workdir=/etc/mha/app1</span></span><br><span class="line"><span class="string">        master_binlog_dir=/app/mysql/data</span></span><br><span class="line"><span class="string">        password=$&#123;mha_password&#125;</span></span><br><span class="line"><span class="string">        ping_interval=2</span></span><br><span class="line"><span class="string">        repl_password=123</span></span><br><span class="line"><span class="string">        repl_user=rep</span></span><br><span class="line"><span class="string">        ssh_port=22</span></span><br><span class="line"><span class="string">        ssh_user=root</span></span><br><span class="line"><span class="string">        user=$&#123;mha_user&#125;</span></span><br><span class="line"><span class="string">        [server1]</span></span><br><span class="line"><span class="string">        hostname=172.16.1.51</span></span><br><span class="line"><span class="string">        port=3306</span></span><br><span class="line"><span class="string">        [server2]</span></span><br><span class="line"><span class="string">        hostname=172.16.1.52</span></span><br><span class="line"><span class="string">        port=3306</span></span><br><span class="line"><span class="string">        [server3]</span></span><br><span class="line"><span class="string">        hostname=172.16.1.53</span></span><br><span class="line"><span class="string">        port=3306</span></span><br><span class="line"><span class="string">        [server4]</span></span><br><span class="line"><span class="string">        hostname=172.16.1.54</span></span><br><span class="line"><span class="string">        port=3306</span></span><br><span class="line"><span class="string">        EOF</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;正在启动MHA...&quot;</span></span><br><span class="line">    systemctl start mha</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">true</span>;<span class="keyword">do</span></span><br><span class="line">      masterha_check_status --conf=<span class="variable">$&#123;mha_conf&#125;</span> &amp;&gt;/dev/null</span><br><span class="line">      <span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line">        action <span class="string">&quot;MHA manager启动&quot;</span> /bin/true</span><br><span class="line">        <span class="built_in">exit</span> 0</span><br><span class="line">      <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">continue</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="MHA的vip漂移">MHA的vip漂移</h3><p><strong>配置master_ip_failover</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.修改MHA配置文件，加上脚本</span></span><br><span class="line">[root@mha-manager ~]# vim /etc/mha/app1.cnf</span><br><span class="line">[server default]</span><br><span class="line">master_ip_failover_script=/etc/mha/app1/master_ip_failover</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.修改MHA脚本 加上绑定vip的命令(先上传脚本)</span></span><br><span class="line">[root@mha-manager ~]# vim /etc/mha/app1/master_ip_failover</span><br><span class="line">my <span class="variable">$vip</span> = <span class="string">&#x27;172.16.1.55/24&#x27;</span>;</span><br><span class="line">my <span class="variable">$key</span> = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">my <span class="variable">$ssh_start_vip</span> = <span class="string">&quot;/sbin/ifconfig eth1:<span class="variable">$key</span> <span class="variable">$vip</span>&quot;</span>;</span><br><span class="line">my <span class="variable">$ssh_stop_vip</span> = <span class="string">&quot;/sbin/ifconfig eth1:<span class="variable">$key</span> down&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.给脚本执行权限</span></span><br><span class="line">[root@mha-manager ~]# <span class="built_in">chmod</span> +x /etc/mha/app1/master_ip_failover</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.手动在主库上绑定VIP</span></span><br><span class="line">[root@db01 ~]# ifconfig eth1:1 172.16.1.55/24</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6.重启MHA</span></span><br><span class="line">[root@mha-manager ~]# systemctl stop mha</span><br><span class="line">[root@mha-manager ~]# systemctl start mha</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 添加脚本后，启动不起来的原因：</span></span><br><span class="line">1.脚本权限问题</span><br><span class="line">[root@mha-manager ~]# <span class="built_in">chmod</span> +x /etc/mha/app1/master_ip_failover</span><br><span class="line">2.脚本语法问题</span><br><span class="line">3.脚本格式问题</span><br><span class="line">[root@mha-manager ~]# dos2unix /etc/mha/app1/master_ip_failover</span><br><span class="line">dos2unix: converting file /etc/mha/app1/master_ip_failover to Unix format ...</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>自动恢复脚本</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">[root@mha ~]# <span class="built_in">cat</span> failover_status </span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#上一次新主库</span></span><br><span class="line">last_new_master=$(grep <span class="string">&#x27;(new master)&#x27;</span> /etc/mha/logs/manager.log |<span class="built_in">tail</span> -2|awk -F <span class="string">&#x27;(&#x27;</span> <span class="string">&#x27;NR==1&#123;print $1&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">[root@mha ~]# <span class="built_in">cat</span> recovery_mha.sh</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">. /etc/init.d/functions</span><br><span class="line">. /root/failover_status</span><br><span class="line"></span><br><span class="line">log_file=<span class="string">&#x27;/etc/mha/logs/manager.log&#x27;</span></span><br><span class="line">mha_conf=<span class="string">&quot;/etc/mha/app1.cnf&quot;</span></span><br><span class="line">repl_pass=<span class="string">&#x27;123&#x27;</span></span><br><span class="line">mha_user=$(awk -F= <span class="string">&#x27;/^user/&#123;print $2&#125;&#x27;</span> <span class="variable">$&#123;mha_conf&#125;</span>)</span><br><span class="line">mha_password=$(awk -F= <span class="string">&#x27;/^password/&#123;print $2&#125;&#x27;</span> <span class="variable">$&#123;mha_conf&#125;</span>)</span><br><span class="line">down_master=$(sed -nr <span class="string">&#x27;s#^Master (.*)\(.*\).*!$#\1#gp&#x27;</span> <span class="variable">$&#123;log_file&#125;</span>|<span class="built_in">tail</span> -1 )</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>;<span class="keyword">do</span></span><br><span class="line"><span class="comment">#判断是否修复完成</span></span><br><span class="line"><span class="comment">#当前down的主库和上次主库一致时，判定修复完成（依据截取Master 172.16.1.*(172.16.1.*:3306) is down!）</span></span><br><span class="line"><span class="comment">#判定依据就是只有修复完成才会有Master 172.16.1.*(172.16.1.*:3306) is down!）</span></span><br><span class="line">  <span class="keyword">if</span> [ <span class="variable">$&#123;down_master&#125;</span> == <span class="variable">$&#123;last_new_master&#125;</span> ];<span class="keyword">then</span></span><br><span class="line">    change_master=$(grep -i <span class="string">&#x27;change master to&#x27;</span> <span class="variable">$&#123;log_file&#125;</span>|<span class="built_in">tail</span> -1|awk -F: <span class="string">&#x27;&#123;print $4&#125;&#x27;</span>|sed <span class="string">&quot;s#xxx#<span class="variable">$&#123;repl_pass&#125;</span>#g&quot;</span>)</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;主库修复中...&quot;</span></span><br><span class="line">    ssh <span class="variable">$&#123;down_master&#125;</span> -C <span class="string">&#x27;systemctl start mysqld&#x27;</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">true</span>;<span class="keyword">do</span></span><br><span class="line">      mysqladmin -u<span class="variable">$&#123;mha_user&#125;</span> -p<span class="variable">$&#123;mha_password&#125;</span> -h<span class="variable">$&#123;down_master&#125;</span> ping &amp;&gt;/dev/null</span><br><span class="line">      <span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line"><span class="comment">#down的机器做从库</span></span><br><span class="line">        mysql -u<span class="variable">$&#123;mha_user&#125;</span> -p<span class="variable">$&#123;mha_password&#125;</span> -h<span class="variable">$&#123;down_master&#125;</span> -e <span class="string">&quot;<span class="variable">$&#123;change_master&#125;</span>;start slave&quot;</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;主库修复成功...&quot;</span></span><br><span class="line">        <span class="built_in">break</span></span><br><span class="line">      <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;正在补全MHA配置文件...&quot;</span></span><br><span class="line">    <span class="built_in">cat</span> &gt; <span class="variable">$&#123;mha_conf&#125;</span> &lt;&lt;- <span class="string">EOF</span></span><br><span class="line"><span class="string">        [server default]</span></span><br><span class="line"><span class="string">        master_ip_failover_script=/etc/mha/app1/master_ip_failover</span></span><br><span class="line"><span class="string">        manager_log=/etc/mha/logs/manager.log</span></span><br><span class="line"><span class="string">        manager_workdir=/etc/mha/app1</span></span><br><span class="line"><span class="string">        master_binlog_dir=/app/mysql/data</span></span><br><span class="line"><span class="string">        password=$&#123;mha_password&#125;</span></span><br><span class="line"><span class="string">        ping_interval=2</span></span><br><span class="line"><span class="string">        repl_password=123</span></span><br><span class="line"><span class="string">        repl_user=rep</span></span><br><span class="line"><span class="string">        ssh_port=22</span></span><br><span class="line"><span class="string">        ssh_user=root</span></span><br><span class="line"><span class="string">        user=$&#123;mha_user&#125;</span></span><br><span class="line"><span class="string">        [server1]</span></span><br><span class="line"><span class="string">        hostname=172.16.1.51</span></span><br><span class="line"><span class="string">        port=3306</span></span><br><span class="line"><span class="string">        [server2]</span></span><br><span class="line"><span class="string">        hostname=172.16.1.52</span></span><br><span class="line"><span class="string">        port=3306</span></span><br><span class="line"><span class="string">        [server3]</span></span><br><span class="line"><span class="string">        hostname=172.16.1.53</span></span><br><span class="line"><span class="string">        port=3306</span></span><br><span class="line"><span class="string">        [server4]</span></span><br><span class="line"><span class="string">        hostname=172.16.1.54</span></span><br><span class="line"><span class="string">        port=3306</span></span><br><span class="line"><span class="string">        EOF</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;正在启动MHA...&quot;</span></span><br><span class="line">    systemctl start mha</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">true</span>;<span class="keyword">do</span></span><br><span class="line">      masterha_check_status --conf=<span class="variable">$&#123;mha_conf&#125;</span> &amp;&gt;/dev/null</span><br><span class="line">      <span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line">        action <span class="string">&quot;MHA manager启动&quot;</span> /bin/true</span><br><span class="line">        <span class="built_in">exit</span> 0</span><br><span class="line">      <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">continue</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="MySQL-binlog实时同步">MySQL binlog实时同步</h3><p><strong>使用mysqlbinlog实时同步binlog</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## MHA 配置 binlog server</span></span><br><span class="line"><span class="comment"># 1.修改MHA配置文件</span></span><br><span class="line">[root@mha-manager ~]# vim /etc/mha/app1.cnf</span><br><span class="line">[binlog1]</span><br><span class="line"><span class="comment">#加上no_master之后无论如何都不会被提升为主库</span></span><br><span class="line">no_master=1</span><br><span class="line">hostname=172.16.1.50</span><br><span class="line">master_binlog_dir=/data/mysql/binlog/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.创建binlog目录</span></span><br><span class="line">[root@mha-manager ~]# <span class="built_in">mkdir</span> -p /data/mysql/binlog/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.manager服务器安装mysql5.7客户端</span></span><br><span class="line">[root@mha-manager ~]# <span class="built_in">cat</span> /etc/yum.repos.d/mysql-community.repo</span><br><span class="line">[mysql56-community]</span><br><span class="line">name=MySQL 5.6 Community Server</span><br><span class="line">baseurl=http://repo.mysql.com/yum/mysql-5.6-community/el/7/<span class="variable">$basearch</span></span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line"></span><br><span class="line">[root@mha-manager binlog]# yum install -y mysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.实时同步binlog</span></span><br><span class="line">[root@mha-manager binlog]# mysqlbinlog -R --host=172.16.1.55 --user=mha --password=mha --raw --stop-never mysql-bin.000001 &amp;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> MHA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL的主从复制</title>
      <link href="/posts/9ee789ff.html"/>
      <url>/posts/9ee789ff.html</url>
      
        <content type="html"><![CDATA[<p>:dango:<strong>为什么做主从复制</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.为了做高可用</span><br><span class="line">2.为了解决MySQL的单点故障</span><br><span class="line">3.分摊主库的压力</span><br><span class="line">4.备份（延时从库）</span><br></pre></td></tr></table></figure><h2 id="主从复制原理">主从复制原理</h2><p><code>三个线程四个文件配合</code></p><p><img src="https://cos.lukme.top/Pic/QQ_1724397104506.png" alt="QQ_1724397104506"></p><p><strong>1）</strong> Slave 上面的IO 线程连接上 Master，并请求从指定日志文件的指定位置(或者从最开始的日志)之后的日志内容。（请求有没有新的数据）<br><strong>2）</strong> Master 接收到来自 Slave 的 IO 线程的请求后，通过负责复制的 IO 线程根据请求信息读取指定日志指定位置之后的日志信息，返回给 Slave 端的 IO 线程。</p><p>3）Slave 的 IO 线程接收到信息后，将接收到的日志内容依次写入到 Slave 端的RelayLog（中继日志文件）文件(MySQL-relay-bin.xxxxxx)的最末端，并将读取到的Master 端的bin-log 的文件名和位置记录到master-info 文件中，以便在下一次读取的时候能够清楚的告诉Master“我需要从某个bin-log 的哪个位置开始往后的日志内容，请发给我” 。<br>**4）**Slave 的 SQL 线程检测到 Relay Log 中新增加了内容后，会马上解析该 Log 文件中的内容成为在 Master 端真实执行时候的那些可执行的 Query 语句，并在自身执行这些 Query。同时将执行relay log 名字和位置点记录到relay-log.info里</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 三个线程</span></span><br><span class="line"><span class="comment"># 从库</span></span><br><span class="line">IO线程：和主库建立连接接收主库新数据</span><br><span class="line">SQL线程：将IO线程接收到的新数据在数据库中执行</span><br><span class="line"></span><br><span class="line"><span class="comment"># 主库</span></span><br><span class="line">dump线程：接收IO线程的请求，从binlog中取出新数据返回给IO线程</span><br><span class="line"></span><br><span class="line"><span class="comment">## 四个文件</span></span><br><span class="line"><span class="comment"># 从库</span></span><br><span class="line">master.info：记录IO线程上一次取出主库上binlog的名字和位置点（主库信息）</span><br><span class="line">relay-log：存储binlog中新增的数据（不是一直存在的）复制SQL线程在执行完文件中的所有事件并且不再需要它后，会自动删除每个中继日志文件</span><br><span class="line">relay-log.info：记录SQL语句上一回执行到中继日志的哪个位置点了</span><br><span class="line"><span class="comment"># 主库</span></span><br><span class="line">bin-log：二进制日志记录主库所有对表数据发生变化的语句</span><br></pre></td></tr></table></figure><h2 id="搭建主从复制">搭建主从复制</h2><p>:dango:<strong>环境一览    一主三从</strong></p><table><thead><tr><th>主机名</th><th>WanIP</th><th>LanIP</th><th>说明</th></tr></thead><tbody><tr><td>db01</td><td>10.0.0.51</td><td>172.16.1.51</td><td>master</td></tr><tr><td>db02</td><td>10.0.0.52</td><td>172.16.1.52</td><td>slave</td></tr><tr><td>db03</td><td>10.0.0.53</td><td>172.16.1.53</td><td>slave</td></tr><tr><td>db04</td><td>10.0.0.54</td><td>172.16.1.54</td><td>slave</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#主库</span></span><br><span class="line">1.修改配置文件</span><br><span class="line">[root@db01 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">basedir=/app/mysql</span><br><span class="line">datadir=/app/mysql/data</span><br><span class="line">server_id=1</span><br><span class="line">log-bin=mysql-bin</span><br><span class="line">skip_name_resolve</span><br><span class="line"></span><br><span class="line">2.重启</span><br><span class="line">[root@db01 ~]# systemctl restart mysqld</span><br><span class="line"></span><br><span class="line">3.创建主从复制用户</span><br><span class="line">mysql&gt; grant replication slave on *.* to rep@<span class="string">&#x27;172.16.1.5%&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"></span><br><span class="line">4.查看binlog（master）信息  记录binlog文件名和点</span><br><span class="line">mysql&gt; show master status;</span><br><span class="line">+------------------+----------+</span><br><span class="line">| File             | Position |</span><br><span class="line">+------------------+----------+</span><br><span class="line">| mysql-bin.000001 |  1324392 |</span><br><span class="line">+------------------+----------+</span><br><span class="line"></span><br><span class="line"><span class="comment">#从库操作   （ db02,db03,db04 ）</span></span><br><span class="line">1.修改从库配置文件</span><br><span class="line">[root@db02 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">basedir=/app/mysql</span><br><span class="line">datadir=/app/mysql/data</span><br><span class="line">server_id=2</span><br><span class="line">skip_name_resolve</span><br><span class="line"></span><br><span class="line">2.重启数据库</span><br><span class="line">[root@db01 ~]# systemctl restart mysqld</span><br><span class="line"></span><br><span class="line">3.登录MySQL执行change master 语句</span><br><span class="line">mysql &gt; change master to</span><br><span class="line">master_host=<span class="string">&#x27;172.16.1.51&#x27;</span>,</span><br><span class="line">master_user=<span class="string">&#x27;rep&#x27;</span>,</span><br><span class="line">master_password=<span class="string">&#x27;123&#x27;</span>,</span><br><span class="line">master_log_file=<span class="string">&#x27;mysql-bin.000001&#x27;</span>,</span><br><span class="line">master_log_pos=1324392,</span><br><span class="line">master_port=3306;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">############</span></span><br><span class="line">master_host=<span class="string">&#x27;172.16.1.51&#x27;</span>,     <span class="comment">#主库ip</span></span><br><span class="line">master_user=<span class="string">&#x27;rep&#x27;</span>,  <span class="comment">#主从复制的用户</span></span><br><span class="line">master_password=<span class="string">&#x27;123&#x27;</span>,   <span class="comment">#rep用户的密码</span></span><br><span class="line">master_log_file=<span class="string">&#x27;mysql-bin.000001&#x27;</span>,<span class="comment">#主库在用的binlog文件</span></span><br><span class="line">master_log_pos=1324392, <span class="comment">#主库插入点位置</span></span><br><span class="line">master_port=3306;</span><br><span class="line"></span><br><span class="line">4.开启主从复制</span><br><span class="line">mysql&gt; start slave;</span><br><span class="line"></span><br><span class="line">5.查看主从复制状态   (保证两个线程都是OK的)</span><br><span class="line">mysql&gt; show slave status\G</span><br><span class="line">Slave_IO_Running: Yes</span><br><span class="line">Slave_SQL_Running: Yes</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="主从故障处理-dango">主从故障处理:dango:</h2><p>mysql里执行<code>show slave status\G</code> 查看是哪个线程出错</p><p>:dango:<strong>IO线程故障</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1.检查连接是否有问题</span></span><br><span class="line">change master to</span><br><span class="line">master_host=<span class="string">&#x27;172.16.1.51&#x27;</span>,</span><br><span class="line">master_user=<span class="string">&#x27;rep&#x27;</span>,</span><br><span class="line">master_password=<span class="string">&#x27;123&#x27;</span>,</span><br><span class="line">master_log_file=<span class="string">&#x27;mysql-bin.000001&#x27;</span>,</span><br><span class="line">master_log_pos=1324392,</span><br><span class="line">master_port=3306;</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.检查IP是否有问题</span></span><br><span class="line">ping 172.16.1.51   ping 主机ip</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.检查端口是否有问题</span></span><br><span class="line">telnet 172.16.1.51 3306</span><br><span class="line">端口不通：</span><br><span class="line">- 防火墙 selinux</span><br><span class="line">- 服务没起</span><br><span class="line">- 没有创建远程连接的用户</span><br><span class="line"></span><br><span class="line"><span class="comment">#4.检查用户名和密码能否登录</span></span><br><span class="line">[root@db02 ~]# mysql -urep -p123 -h172.16.1.51</span><br><span class="line"></span><br><span class="line"><span class="comment">#5.  主库  检查binlog名字和位置点</span></span><br><span class="line">mysql&gt; show master status;</span><br><span class="line">+------------------+----------+</span><br><span class="line">| File             | Position |</span><br><span class="line">+------------------+----------+</span><br><span class="line">| mysql-bin.000001 |  1324392 |</span><br><span class="line">+------------------+----------+</span><br><span class="line"></span><br><span class="line"><span class="comment">#6.检查主库和从库配置文件的server_id是否相同</span></span><br><span class="line"><span class="comment">#如果相同则报错如下：</span></span><br><span class="line">Last_IO_Error:Fatal error:The slave I/0 thread stops because master and slave have equal MySQL server ids;these ids must be different <span class="keyword">for</span> replication to work (or the --repLicate-same-server-id option must be used on slave but this does not always make sense;please c</span><br><span class="line"></span><br><span class="line"><span class="comment">#7.检查uuid是否一样（如果你是直接克隆虚拟机）</span></span><br><span class="line">[root@db01 ~]# <span class="built_in">cat</span> /app/mysql/data/auto.cnf </span><br><span class="line">[auto]</span><br><span class="line">server-uuid=80a4722e-60ef-11ef-baf4-000c29bff80f</span><br><span class="line"></span><br><span class="line"><span class="comment">#如果uuid一直则报错如下</span></span><br><span class="line">error:The slave I/0 thread stops because master and slave have equal MySQL server UUIDs;these UUIDs must be different <span class="keyword">for</span> replication to work.</span><br></pre></td></tr></table></figure><p>:dango:<strong>SQL线程故障</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 根本原因：主库和从库数据不一致</span></span><br><span class="line"><span class="comment"># 1.主库有从库没有的数据</span></span><br><span class="line">出现原因：新加的从库主从复制点位是主库已有数据状态</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.主库没有从库有的数据</span></span><br><span class="line">`出现原因`:直接在从库中操作数据库</span><br><span class="line">`解决`:</span><br><span class="line">解决方案：从库设置为只读（读写分离）</span><br><span class="line"><span class="comment"># 在命令行临时设置</span></span><br><span class="line"><span class="built_in">set</span> global read_only=1;</span><br><span class="line"><span class="comment"># 在配置文件中永久生效</span></span><br><span class="line">read_only=1</span><br></pre></td></tr></table></figure><p>:dango:<strong>生成环境如何添加新从库  保持新主数据一致  避免SQL线程故障</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.从库初始化环境</span></span><br><span class="line">[root@db04 ~]# systemctl stop mysqld</span><br><span class="line">[root@db04 ~]# <span class="built_in">rm</span> -fr /app/mysql/data</span><br><span class="line">[root@db04 ~]# /app/mysql/scripts/mysql_install_db --user=mysql --basedir=/app/mysql --datadir=/app/mysql/data</span><br><span class="line"></span><br><span class="line">`mysql5.7`</span><br><span class="line">/app/mysql/bin/mysqld --initialize-insecure --user=mysql --basedir=/app/mysq --datadir=/app/mysql/data</span><br><span class="line"></span><br><span class="line">[root@db04 ~]# systemctl start mysqld</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.主库打点全备</span></span><br><span class="line">[root@db01 ~]# mysqldump -A -R --triggers --master-data=2 --single-transaction|gzip &gt; /tmp/full.sql.gz</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.从库恢复数据</span></span><br><span class="line">[root@db01 ~]# scp /tmp/full.sql.gz 172.16.1.54:/root</span><br><span class="line">[root@db04 ~]# zcat /root/full.sql.gz |mysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4..查看主库全备的点位</span></span><br><span class="line">[root@db04 ~]# zcat /root/full.sql.gz |<span class="built_in">head</span> -25</span><br><span class="line">--MASTER_LOG_FILE=<span class="string">&#x27;mysql-bin.000001&#x27;</span>, MASTER_LOG_POS=1843126;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.从库执行change master语句</span></span><br><span class="line">change master to</span><br><span class="line">master_host=<span class="string">&#x27;172.16.1.51&#x27;</span>,</span><br><span class="line">master_user=<span class="string">&#x27;rep&#x27;</span>,</span><br><span class="line">master_password=<span class="string">&#x27;123&#x27;</span>,</span><br><span class="line">master_log_file=<span class="string">&#x27;mysql-bin.000001&#x27;</span>,</span><br><span class="line">master_log_pos=1843126;</span><br><span class="line"></span><br><span class="line"><span class="comment">#6.开启主从复制</span></span><br><span class="line">mysql&gt; start slave;</span><br></pre></td></tr></table></figure><p>:dango:<strong>取消主从复制</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;stop slave;</span><br><span class="line"></span><br><span class="line">mysql&gt;reset slave all;</span><br><span class="line"></span><br><span class="line">mysql&gt; show slave status\G</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="数据库的延时从库">数据库的延时从库</h2><p><strong>:dango:传统主从复制缺陷</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1.传统住从复制无法做备份</span><br><span class="line">2.传统主从复制无法过滤复制</span><br><span class="line">3.传统主从复制速度慢</span><br><span class="line">4.传统主从复制是异步复制，从库数据延迟</span><br><span class="line"></span><br><span class="line">`延时从库应运而生`</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">一般企业中会延时3-6小时（开不开启从库延时   看企业需求，优弊端都有）</span><br><span class="line"></span><br><span class="line">`优点：`</span><br><span class="line">1.做延时从库的服务器，无法在生产中继续提供服务</span><br><span class="line">2.备份</span><br><span class="line">3.恢复数据速度更快</span><br><span class="line"></span><br><span class="line">`弊端:`</span><br><span class="line">企业使用从库延时做备份需求，需要一台服务器做备胎，浪费资源</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>:dango:<strong>延时从库原理</strong></p><p>如下主从基础上，IO线程继续拿数据，SQL线程在指定时间后，延时执行，当主库出现删除库操作，那么从库将在设置的延时之后才会删除库，这就是延时从库实现原理</p><p><img src="https://cos.lukme.top/Pic/QQ_1724397104506-1724654962435-1.png" alt="QQ_1724397104506"></p><p>:dango:<strong>如何配置延时从库</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.停止主从复制</span></span><br><span class="line">mysql&gt; stop slave;</span><br><span class="line"></span><br><span class="line"><span class="comment">#2. 设置延时180s</span></span><br><span class="line">mysql&gt; change master to master_delay=180;</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.开启主从</span></span><br><span class="line">mysql&gt; start slave;</span><br><span class="line"></span><br><span class="line"><span class="comment">#4.查看状态</span></span><br><span class="line">mysql&gt; show slave status \G</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#关闭延时从库</span></span><br><span class="line"><span class="comment">#停止主从复制</span></span><br><span class="line">mysql&gt; stop slave;</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置延时为0关闭</span></span><br><span class="line">mysql&gt; change master to master_delay=0;</span><br><span class="line"></span><br><span class="line"><span class="comment">#开启主从</span></span><br><span class="line">mysql&gt; start slave;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#使用延时从库恢复数据</span></span><br><span class="line">`思路：</span><br><span class="line">`IO线程不停，读取relay-log里SQL线程最后拿取的点位为起始点，过滤relay-binlog文件读取drop之前的点为结束点，这一段为第一次新增数据`</span><br><span class="line"></span><br><span class="line">`drop 之后结束点为起点，停止数据库写入，此时读取relay-binlog文件最后点（IO不停），截取为第二段新增数据`</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1.停止延时从库SQL线程</span></span><br><span class="line">mysql&gt; stop slave SQL_thread;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2准备新环境</span></span><br><span class="line">[root@db03 ~]# systemctl stop mysqld</span><br><span class="line">[root@db03 ~]# <span class="built_in">rm</span> -fr /app/mysql/data</span><br><span class="line">[root@db03 ~]# /app/mysql/bin/mysqld --user=mysql --basedir=/app/mysql --datadir=/app/mysql/data</span><br><span class="line">[root@db03 ~]# systemctl start mysqld</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.全备延时从库</span></span><br><span class="line">[root@db04 ~]# mysqldump -A -R --triggers &gt; /tmp/full_new.sql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.截取relay-log</span></span><br><span class="line"><span class="built_in">cat</span> /app/mysql/data/relay-log.info </span><br><span class="line">./db04-relay-bin.000002</span><br><span class="line">12656</span><br><span class="line">mysql-bin.000003</span><br><span class="line">390768</span><br><span class="line">起始位置点：12656</span><br><span class="line"></span><br><span class="line">[root@db04 data]# mysqlbinlog --base64-output=decode-rows db04-relay-bin.000002 |grep -C 10 drop    <span class="comment">#drop之前</span></span><br><span class="line">结束位置点：24110</span><br><span class="line"></span><br><span class="line"><span class="comment">#导出第一段新增数据</span></span><br><span class="line">mysqlbinlog --start-position=12656 --stop-position=24110 /app/mysql/data/db04-relay-bin.000002 &gt;/tmp/inc1.sql</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#停止主库写入</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#截取第二段新增数据</span></span><br><span class="line">[root@db04 data]# mysqlbinlog --base64-output=decode-rows db04-relay-bin.000002 |grep -C 10 drop    <span class="comment">#drop之后</span></span><br><span class="line">起始位置点：24202</span><br><span class="line">mysqlbinlog --base64-output=decode-rows db04-relay-bin.000002</span><br><span class="line">结束位置点：220265</span><br><span class="line"></span><br><span class="line"><span class="comment">#导出第二段新僧数据</span></span><br><span class="line">mysqlbinlog --start-position=24202 --stop-position=240826 /app/mysql/data/db04-relay-bin.000002 &gt;/tmp/inc2.sql</span><br><span class="line"></span><br><span class="line">prod：1051</span><br><span class="line"></span><br><span class="line"><span class="comment">#导入数据</span></span><br><span class="line">导入延时从库全备</span><br><span class="line">[root@db04 data]# scp /tmp/full.sql 172.16.1.53:/root</span><br><span class="line">[root@db03 ~]# mysql &lt;full.sql </span><br><span class="line"></span><br><span class="line"><span class="comment">#导入第一次新增数据</span></span><br><span class="line">[root@db04 data]# scp /tmp/inc1.sql  172.16.1.53:/root   </span><br><span class="line">[root@db03 ~]# mysql &lt;inc1.sql </span><br><span class="line"></span><br><span class="line"><span class="comment">#导入第二次新增数据</span></span><br><span class="line">[root@db04 data]# scp /tmp/inc2.sql  172.16.1.53:/root</span><br><span class="line">[root@db03 ~]# mysql &lt;inc2.sql </span><br><span class="line"></span><br><span class="line"><span class="comment">#应用割接</span></span><br><span class="line">开发改代码</span><br><span class="line">运维将新环境全备到旧环境</span><br></pre></td></tr></table></figure><h2 id="数据库的半同步复制">数据库的半同步复制</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">从MYSQL5.5开始，支持半自动复制。之前版本的MySQL Replication都是异（asynchronous）的，主库在执行完一些事务后，是不会管备库的进度的。如果备库不幸落后，而更不幸的是主库此时又出现Crash（例如宕机），这时备库中的数据就是不完整的。简而言之，在主库发生故障的时候，我们无法使用备库来继续提供数据一致的服务了。</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">半同步复制出现原因：`为了保证主库和从库的数据一致性`</span><br><span class="line">从库的IO线程在没有接收到ACK之前，会阻塞主库写入操作</span><br><span class="line"></span><br><span class="line">`半同步缺点`：阻塞主库写入数据，影响主库性能，降低用户体验</span><br><span class="line">`半同步优点`：主库和从库数据保证了一致性，不会丢数据</span><br><span class="line"></span><br><span class="line">半同步复制（Semi synchronous Replication）则一定程度上保证提交的事务已经传给了至少一个备库。出发点是保证主从数据一致性问题，安全的考虑。</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>:dango:注意</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1)在半同步复制中，Master节点等待Slave节点返回确认信息的过程中，如果发生异常，或者一直等待直到超过rpl_semi_sync_master_timeout配置的时间点，同步复制将退化为异步复制。</span><br><span class="line"></span><br><span class="line">2）在退化为异步复制后，如果Slave节点追上了Master节点，那么Master节点又会重新转为半同步复制。</span><br><span class="line"></span><br><span class="line">看企业选择</span><br></pre></td></tr></table></figure><p>:dango:<strong>MySQL的半同步复制原理</strong></p><p>IO线程取出数据之后，先放入tcp缓存，直到SQL线程完成再给IO线程返回ack</p><p><strong>半同步插件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 ~]# ll /app/mysql/lib/plugin/</span><br><span class="line">-rwxr-xr-x 1 mysql mysql 515584 Aug  7 23:04 semisync_master.so</span><br><span class="line">-rwxr-xr-x 1 mysql mysql 276296 Aug  7 23:04 semisync_slave.so</span><br></pre></td></tr></table></figure><p><strong>:dango:配置半同步</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 主库操作</span></span><br><span class="line"><span class="comment"># 1.主库查看是否支持半同步</span></span><br><span class="line">mysql&gt; show global variables like <span class="string">&#x27;have_dynamic_loading&#x27;</span>;</span><br><span class="line">+----------------------+-------+</span><br><span class="line">| Variable_name | Value|</span><br><span class="line">+----------------------+-------+</span><br><span class="line">| have_dynamic_loading | YES |</span><br><span class="line">+----------------------+-------+</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.安装主库半同步插件</span></span><br><span class="line">mysql&gt; INSTALL PLUGIN rpl_semi_sync_master SONAME<span class="string">&#x27;semisync_master.so&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.启动插件</span></span><br><span class="line">mysql&gt; SET GLOBAL rpl_semi_sync_master_enabled = 1;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.设置超时时间(毫秒)</span></span><br><span class="line">mysql&gt; SET GLOBAL rpl_semi_sync_master_timeout = 1000;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.永久启动+超时时间</span></span><br><span class="line">[root@db01 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">rpl_semi_sync_master_enabled=1</span><br><span class="line">rpl_semi_sync_master_timeout = 1000</span><br><span class="line"></span><br><span class="line">db01 [(none)]&gt;show variables like<span class="string">&#x27;rpl%&#x27;</span>;</span><br><span class="line">+------------------------------------+----------+</span><br><span class="line">| Variable_name                      | Value    |</span><br><span class="line">+------------------------------------+----------+</span><br><span class="line">| rpl_semi_sync_master_enabled       | ON       |</span><br><span class="line">| rpl_semi_sync_master_timeout       | 1000     |</span><br><span class="line">| rpl_semi_sync_master_trace_level   | 32       |</span><br><span class="line">| rpl_semi_sync_master_wait_no_slave | ON       |</span><br><span class="line">| rpl_stop_slave_timeout             | 31536000 |</span><br><span class="line">+------------------------------------+----------+</span><br><span class="line"></span><br><span class="line">db01 [(none)]&gt;show global status like <span class="string">&#x27;rpl_semi%&#x27;</span>;</span><br><span class="line">+--------------------------------------------+-------+</span><br><span class="line">| Variable_name                              | Value |</span><br><span class="line">+--------------------------------------------+-------+</span><br><span class="line">| Rpl_semi_sync_master_clients               | 0     |</span><br><span class="line">| Rpl_semi_sync_master_net_avg_wait_time     | 0     |</span><br><span class="line">| Rpl_semi_sync_master_net_wait_time         | 0     |</span><br><span class="line">| Rpl_semi_sync_master_net_waits             | 0     |</span><br><span class="line">| Rpl_semi_sync_master_no_times              | 0     |</span><br><span class="line">| Rpl_semi_sync_master_no_tx                 | 0     |</span><br><span class="line">| Rpl_semi_sync_master_status                | ON    |</span><br><span class="line">| Rpl_semi_sync_master_timefunc_failures     | 0     |</span><br><span class="line">| Rpl_semi_sync_master_tx_avg_wait_time      | 0     |</span><br><span class="line">| Rpl_semi_sync_master_tx_wait_time          | 0     |</span><br><span class="line">| Rpl_semi_sync_master_tx_waits              | 0     |</span><br><span class="line">| Rpl_semi_sync_master_wait_pos_backtraverse | 0     |</span><br><span class="line">| Rpl_semi_sync_master_wait_sessions         | 0     |</span><br><span class="line">| Rpl_semi_sync_master_yes_tx                | 0     |</span><br><span class="line">+--------------------------------------------+-------+</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 从库操作</span></span><br><span class="line"><span class="comment"># 1.安装从库半同步插件</span></span><br><span class="line">mysql&gt; INSTALL PLUGIN rpl_semi_sync_slave SONAME<span class="string">&#x27;semisync_slave.so&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.启动插件</span></span><br><span class="line">mysql&gt; SET GLOBAL rpl_semi_sync_slave_enabled = 1;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.重启IO线程</span></span><br><span class="line">mysql&gt; stop slave io_thread;</span><br><span class="line">mysql&gt; start slave io_thread;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.永久生效</span></span><br><span class="line">[root@db02 data]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">rpl_semi_sync_slave_enabled = 1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mysql&gt; show global status like <span class="string">&#x27;rpl_semi%&#x27;</span>;</span><br><span class="line">+--------------------------------------------+-------+</span><br><span class="line">| Variable_name                              | Value |</span><br><span class="line">+--------------------------------------------+-------+</span><br><span class="line">| Rpl_semi_sync_master_clients               | 1     |</span><br><span class="line">| Rpl_semi_sync_master_net_avg_wait_time     | 0     |</span><br><span class="line">| Rpl_semi_sync_master_net_wait_time         | 0     |</span><br><span class="line">| Rpl_semi_sync_master_net_waits             | 6     |</span><br><span class="line">| Rpl_semi_sync_master_no_times              | 0     |</span><br><span class="line">| Rpl_semi_sync_master_no_tx                 | 0     |</span><br><span class="line">| Rpl_semi_sync_master_status                | ON    |</span><br><span class="line">| Rpl_semi_sync_master_timefunc_failures     | 0     |</span><br><span class="line">| Rpl_semi_sync_master_tx_avg_wait_time      | 1363  |</span><br><span class="line">| Rpl_semi_sync_master_tx_wait_time          | 8178  |</span><br><span class="line">| Rpl_semi_sync_master_tx_waits              | 6     |</span><br><span class="line">| Rpl_semi_sync_master_wait_pos_backtraverse | 0     |</span><br><span class="line">| Rpl_semi_sync_master_wait_sessions         | 0     |</span><br><span class="line">| Rpl_semi_sync_master_yes_tx                | 6     |</span><br><span class="line">+--------------------------------------------+-------+</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="MySQL过滤复制">MySQL过滤复制</h2><p>:dango:<strong>主库配置过滤复制</strong></p><ul><li>binlog-do-db：白名单</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 ~]# <span class="built_in">cat</span> /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">binlog-do-db=prod</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">db01 [(none)]&gt;show master status;</span><br><span class="line">+------------------+----------+--------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB |</span><br><span class="line">+------------------+----------+--------------+</span><br><span class="line">| mysql-bin.000006 |   515446 |     prod     |</span><br><span class="line">+------------------+----------+--------------+</span><br><span class="line"></span><br><span class="line">binlog：只记录prod库的数据</span><br></pre></td></tr></table></figure><ul><li>binlog-ignore-db：黑名单</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 ~]# <span class="built_in">cat</span> /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">binlog-ignore-db=prod</span><br><span class="line">binlog：不记录prod库的数据</span><br><span class="line"></span><br><span class="line">mysql&gt; show master status;</span><br><span class="line">+------------------+----------+--------------+------------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB |</span><br><span class="line">+------------------+----------+--------------+------------------+</span><br><span class="line">| mysql-bin.000006 |   515446 |              |      prod        |</span><br><span class="line">+------------------+----------+--------------+------------------+</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>:dango:<strong>从库配置过滤复制</strong></p><p><strong>白名单</strong></p><ul><li>replicate-do-db=prod                    #从库SQL线程只执行prod库的SQL语句</li><li>replicate-do-table=prod.prod        #从库SQL线程只执行prod库里prod表的SQL语句</li><li>replicate-wild-do-table=prod.p*     #从库SQL线程只执行prod库里所有p开头表的SQL语句</li></ul><p>SQL线程只执行 Replicat_Do_DB指定的库的SQL语句</p><p><strong>黑名单</strong></p><ul><li>replicate-ignore-db</li><li>replicate-ignore-table</li><li>replicate-wild-ignore-table</li></ul><p>SQL线程不执行 Replicat_Ignore_DB指定的库的SQL语句</p><h2 id="基于GTID的主从复制">基于GTID的主从复制</h2><p>:dango:<strong>什么是GTID</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">GTID：事务提交做的主从复制（全局事务标识符）</span><br><span class="line">GTID=UUID：主库的身份证号 + TID：事务提交号</span><br><span class="line">3E11FA47-71CA-11E1-9E33-C80AA9429562:23</span><br></pre></td></tr></table></figure><p>:dango:<strong>GTID特性</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(1).支持多线程复制:事实上是针对每个database开启相应的独立线程,即每个库有一个单独的(sqlthread).</span><br><span class="line">(2).支持启用GTID,在配置主从复制,传统的方式里,你需要找到binlog和POS点,然后change master to指向.在mysql5.6里,无须再知道binlog和POS点,只需要知道master的IP/端口/账号密码即可,因为同步复制是自动的,MySQL通过内部机制GTID自动找点同步.</span><br><span class="line">(3).基于Row复制只保存改变的列,大大节省Disk Space/Network resources和Memory usage.</span><br><span class="line">(4).支持把Master 和Slave的相关信息记录在Table中原来是记录在文件里,记录在表里,增强可用性</span><br><span class="line">(5).支持延迟复制</span><br></pre></td></tr></table></figure><p>:dango:<strong>GTID主从配置</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">主库172.16.1.51</span><br><span class="line">从库172.16.1.52、172.16.1.53、172.16.1.54</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1.修改主库配置文件</span></span><br><span class="line">[root@db01 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">server_id=1</span><br><span class="line">log-bin=mysql-bin</span><br><span class="line">gtid_mode=ON</span><br><span class="line">enforce_gtid_consistency</span><br><span class="line"><span class="comment">#msyql5.6需要再加下面一个（5.7不需要）</span></span><br><span class="line">log_slave_updates</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.修改从库配置文件</span></span><br><span class="line">[root@db01 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">server_id=2</span><br><span class="line">log-bin=mysql-bin</span><br><span class="line">gtid_mode=ON</span><br><span class="line">enforce_gtid_consistency</span><br><span class="line"><span class="comment">#msyql5.6需要再加下面一个（5.7不需要）</span></span><br><span class="line">log_slave_updates</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@db01 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">server_id=3</span><br><span class="line">log-bin=mysql-bin</span><br><span class="line">gtid_mode=ON</span><br><span class="line">enforce_gtid_consistency</span><br><span class="line"><span class="comment">#msyql5.6需要再加下面一个（5.7不需要）</span></span><br><span class="line">log_slave_updates</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@db01 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">server_id=4</span><br><span class="line">log-bin=mysql-bin</span><br><span class="line">gtid_mode=ON</span><br><span class="line">enforce_gtid_consistency</span><br><span class="line"><span class="comment">#msyql5.6需要再加下面一个（5.7不需要）</span></span><br><span class="line">log_slave_updates</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.在主库上创建主从复制用户</span></span><br><span class="line">mysql&gt; grant replication slave on *.* to rep@<span class="string">&#x27;172.16.1.5%&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.所有从库上执行change master</span></span><br><span class="line">change master to</span><br><span class="line">master_host=<span class="string">&#x27;172.16.1.53&#x27;</span>,</span><br><span class="line">master_user=<span class="string">&#x27;rep&#x27;</span>,</span><br><span class="line">master_password=<span class="string">&#x27;123&#x27;</span>,</span><br><span class="line">master_auto_position=1;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.所有从库开启主从复制</span></span><br><span class="line">start slave;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看GTID是否开启</span></span><br><span class="line">db01 [(none)]&gt;show variables like <span class="string">&#x27;%gtid%&#x27;</span>;</span><br><span class="line">+---------------------------------+-----------+</span><br><span class="line">| Variable_name                   | Value     |</span><br><span class="line">+---------------------------------+-----------+</span><br><span class="line">| binlog_gtid_simple_recovery     | OFF       |</span><br><span class="line">| enforce_gtid_consistency        | ON        |</span><br><span class="line">| gtid_executed                   |           |</span><br><span class="line">| gtid_mode                       | ON        |</span><br><span class="line">| gtid_next                       | AUTOMATIC |</span><br><span class="line">| gtid_owned                      |           |</span><br><span class="line">| gtid_purged                     |           |</span><br><span class="line">| simplified_binlog_gtid_recovery | OFF       |</span><br><span class="line">+---------------------------------+-----------+</span><br><span class="line"></span><br><span class="line">`注意`</span><br><span class="line"><span class="comment">## MySQL5.6开启GTID</span></span><br><span class="line">gtid_mode=ON // 开启GTID模块</span><br><span class="line">enforce_gtid_consistency // 保证GITD数据强一致性</span><br><span class="line">log-slave-updates // 从库日志更新（1.基于GTID的主从复制 2.双主+keepalived 3.级联复制）</span><br><span class="line">log-bin=mysql-bin // 开启binlog</span><br><span class="line"></span><br><span class="line"><span class="comment">## MySQL5.7开启GTID</span></span><br><span class="line">gtid_mode=ON</span><br><span class="line">enforce_gtid_consistency</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL的备份及恢复</title>
      <link href="/posts/7572cb39.html"/>
      <url>/posts/7572cb39.html</url>
      
        <content type="html"><![CDATA[<h2 id="数据库服务日志概述">数据库服务日志概述</h2><p>任何一种数据库中，都会有各种各样的日志，记录这数据库工作的方方面面，以帮助数据库管理员追踪数据库曾经发生过的各种事件；</p><p>主要是针对数据库server层产生的数据信息，主要用于记录和数据库服务运行本身有关的日志、以及SQL语句操作执行相关的日志；</p><h2 id="数据库日志常用分类">数据库日志常用分类</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看日志信息</span></span><br><span class="line">mysql &gt; show variables like <span class="string">&#x27;%log%&#x27;</span>;</span><br></pre></td></tr></table></figure><p><strong>常用日志信息</strong></p><table><thead><tr><th>日志名称</th><th>说明</th></tr></thead><tbody><tr><td>general_log</td><td>表示查询日志（通用日志），默认日志状态处于关闭，可以进行在线调整配置<br/>作用：记录了客户端从会话连接开始，执行过的所有SQL语句信息；<br />常用于   功能测试、语句审计</td></tr><tr><td>log_error</td><td>表示错误日志（运行日志），默认日志状态处于激活<br/>作用：记录了数据库服务启动和停止时，以及服务器在运行过程中发生任何严重错误时的相关信息；</td></tr><tr><td>log_bin</td><td>表示二进制日志（binlog日志），默认日志状态处于激活（8.0之后）<br/>作用：记录了所有的DDL语句和DML语句，但是不包括数据库查询语句；语句以事件的形式保存，描述了数据的更改过程，此日志对于灾难时的数据恢复起着极其重要的作用。</td></tr><tr><td>slow_query_log</td><td>表示慢查询日志，记录了所有执行时间超过参数long_query_time设置值并且扫描记录数小于min_examined_row_limit的所有SQL语句的日志。</td></tr></tbody></table><h3 id="通用日志general-log">通用日志general_log</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#默认日志功能处于关闭，建议在需要做调试工作时（功能测试、语句审计）可以打开；</span></span><br><span class="line">general_log=OFF  </span><br><span class="line"><span class="comment">#定义日志文件存储的路径信息，建议日志文件路径与数据存放路径进行分离；</span></span><br><span class="line">general_log_file=/app/mysql/data/general.log</span><br><span class="line"></span><br><span class="line"><span class="comment">#开启通用日志</span></span><br><span class="line">[root@db01 ~]# vim /etc/my.cnf</span><br><span class="line">general_log=OFF  </span><br><span class="line">general_log_file=/app/mysql/data/general.log</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改日志默认状态（激活日志）：</span></span><br><span class="line">mysql &gt; <span class="built_in">set</span> global general_log=1;</span><br></pre></td></tr></table></figure><blockquote><p>注意：企业真实环境，由于日志记录量比较大，所以不建议打开此日志记录功能，可以在有需要时打开，支持在线配置调整；</p></blockquote><h3 id="错误日志log-error">错误日志log_error</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#默认开启</span></span><br><span class="line"><span class="comment">#默认存储路径 datadir</span></span><br><span class="line">mysql &gt;show variables like <span class="string">&#x27;%err%&#x27;</span>;</span><br><span class="line">+---------------------+--------------+</span><br><span class="line">| Variable_name | Value |</span><br><span class="line">+---------------------+--------------+</span><br><span class="line">| log_error | ./db01.err |    /app/mysql/data</span><br><span class="line">+---------------------+--------------+</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改日志存储路径（永久配置）：</span></span><br><span class="line">1.编辑配置文件</span><br><span class="line">[root@xiaoq ~]# vim /etc/my.cnf</span><br><span class="line">log_error=/data/db01.err</span><br><span class="line"></span><br><span class="line">2.创建错误日志文件</span><br><span class="line"><span class="built_in">touch</span> /data/db01.err</span><br><span class="line"></span><br><span class="line">3.授权文件</span><br><span class="line"><span class="built_in">chown</span> mysql.mysql /data/db01.err</span><br><span class="line"></span><br><span class="line">4.重启数据库</span><br><span class="line">systemctl restart msyqld</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 模拟故障日志应用</span></span><br><span class="line">[root@oldboyxiaoq ~]# ll /data/3306/data/ibdata1 </span><br><span class="line">-rw-r----- 1 mysql mysql 12582912 Nov 16 17:46 /data/3306/data/ibdata1</span><br><span class="line"></span><br><span class="line">[root@oldboyxiaoq ~]# <span class="built_in">chmod</span> 000 /data/3306/data/ibdata1</span><br><span class="line"></span><br><span class="line">[root@oldboyxiaoq ~]# /etc/init.d/mysqld restart</span><br><span class="line"></span><br><span class="line">Shutting down MySQL............................... SUCCESS! </span><br><span class="line">Starting MySQL......................................... ERROR! The server quit without updating PID file (/data/3306/data/oldboyxiaoq.com.pid).</span><br><span class="line">[root@oldboyxiaoq ~]# <span class="built_in">tail</span> -20 /data/3306/data/oldboyxiaoq.com.err</span><br><span class="line">2022-11-21T01:20:47.735040Z 1 [ERROR] [MY-012271] [InnoDB] The innodb_system data file <span class="string">&#x27;ibdata1&#x27;</span> must be writable</span><br><span class="line">2022-11-21T01:20:47.744091Z 1 [ERROR] [MY-012278] [InnoDB] The innodb_system data file <span class="string">&#x27;ibdata1&#x27;</span> must be writable</span><br><span class="line">2022-11-21T01:20:47.744808Z 1 [ERROR] [MY-010334] [Server] Failed to initialize DD Storage Engine</span><br><span class="line">2022-11-21T01:20:47.745739Z 0 [ERROR] [MY-010020] [Server] Data Dictionary initialization failed.</span><br><span class="line">2022-11-21T01:20:47.746526Z 0 [ERROR] [MY-010119] [Server] Aborting</span><br><span class="line">-- 根据错误日志的错误提示信息，进行错误信息进行分析，从而排查故障可能出现的原因；</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>说明：企业真实环境，日志处于默认激活记录状态，可以使用错误日志信息做故障诊断，记录错误信息级别为note warning error；</p></blockquote><h3 id="二进制日志（log-bin">二进制日志（log_bin)</h3><p>binlog日志，此日志文件其实就是用于记录对数据库进行操作更改的语句信息的；</p><p>并且记录更改的语句信息以事件形式进行记录，但是需要注意的是查询相关的语句是不会被记录的，比如：select、show；</p><p>然而作为所有对数据库的改操作事件信息都会被记录，比如：insert、update、create、drop。。。</p><p><strong>查看数据库binlog日志配置参数：</strong></p><p>进入到数据库服务系统环境中，可以使用命令进行查看binlog日志功能是否开启；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#默认关闭</span></span><br><span class="line"></span><br><span class="line">root@(none) &gt; show variables like <span class="string">&#x27;%log_bin%&#x27;</span>;</span><br><span class="line">+---------------------------------+---------------------------------+</span><br><span class="line">| Variable_name                   | Value                           |</span><br><span class="line">+---------------------------------+---------------------------------+</span><br><span class="line">| log_bin                         | ON                              |</span><br><span class="line">| log_bin_basename                | /app/mysql/data/mysql-bin       |</span><br><span class="line">| log_bin_index                   | /app/mysql/data/mysql-bin.index |</span><br><span class="line">| log_bin_trust_function_creators | OFF                             |</span><br><span class="line">| log_bin_use_v1_row_events       | OFF                             |</span><br><span class="line">| sql_log_bin                     | ON                              |</span><br><span class="line">+---------------------------------+---------------------------------+</span><br><span class="line"></span><br><span class="line"><span class="comment">#刷新日志  （企业中不使用）</span></span><br><span class="line">mysql&gt; flush logs;</span><br><span class="line"></span><br><span class="line">刷新后日志记录会生成新的</span><br></pre></td></tr></table></figure><p>==<strong>查看二进制文件</strong>==</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看当前使用的二进制文件</span></span><br><span class="line">root@(none) &gt; show master status ;</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">| mysql-bin.000004 |     1252 |              |                  |                   |</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看所有的二进制日志文件</span></span><br><span class="line">root@(none) &gt; show binary logs;</span><br><span class="line">+------------------+-----------+</span><br><span class="line">| Log_name         | File_size |</span><br><span class="line">+------------------+-----------+</span><br><span class="line">| mysql-bin.000001 |       120 |</span><br><span class="line">| mysql-bin.000002 |       329 |</span><br><span class="line">| mysql-bin.000003 |       317 |</span><br><span class="line">| mysql-bin.000004 |      1252 |</span><br><span class="line">+------------------+-----------+</span><br></pre></td></tr></table></figure><h4 id="01日志信息基本配置">01日志信息基本配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#修改二进制日志</span></span><br><span class="line"><span class="comment">## 修改配置文件 MySQL5.6</span></span><br><span class="line">[root@db01 ~]# vim /etc/my.cnf</span><br><span class="line">log-bin=mysql-bin</span><br><span class="line">binlog_format=row</span><br><span class="line"></span><br><span class="line"><span class="comment">## 修改配置文件 MySQL5.7   (必须得有server -id)</span></span><br><span class="line">[root@db01 ~]# vim /etc/my.cnf</span><br><span class="line">server_id=1</span><br><span class="line">log-bin=mysql-bin</span><br><span class="line">binlog_format=row</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#进行binlog日志目录路径信息修改时，需要创建指定的目录并设置权限信息，最后需要重新启动数据库服务生效；</span></span><br><span class="line">或者</span><br><span class="line">log_bin=binlog</span><br><span class="line"><span class="comment"># 只是设置日志名称信息，日志会自动保存到数据库服务指定的数据目录中；</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置文件修改后需要重启数据库服务，加载配置文件改动的信息：</span></span><br><span class="line">[root@xiaoQ ~]# /etc/init.d/mysqld restart </span><br><span class="line">[root@xiaoQ xiaoQ]# ll -h /data/3306/data/binlog*</span><br><span class="line">-rw-rw----. 1 mysql mysql 245 6月  24 02:19 /data/3306/data/binlog.00000N</span><br><span class="line">-rw-rw----. 1 mysql mysql   16 6月  24 02:19 /data/3306/data/binlog.index</span><br><span class="line">-- 数据库服务重启后，已经可以在数据库的数据存储目录中，看到binlog日志文件的踪影</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">企业真实环境，日志处于默认激活记录状态，可以使用日志信息进行灾难数据恢复，以及可以用于实现主从复制；</span><br></pre></td></tr></table></figure><h4 id="02二进制日志工作模式">02二进制日志工作模式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看当前二进制模式</span></span><br><span class="line">mysql&gt; show variables like <span class="string">&#x27;%binlog_format%&#x27;</span>;</span><br><span class="line">+---------------+-----------+</span><br><span class="line">| Variable_name | Value     |</span><br><span class="line">+---------------+-----------+</span><br><span class="line">| binlog_format | STATEMENT |</span><br><span class="line">+---------------+-----------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#设置二进制日志模式</span></span><br><span class="line">vim /etc/my.cnf</span><br><span class="line">[msyqld]</span><br><span class="line">binlog_format=row</span><br><span class="line"></span><br><span class="line"><span class="comment">#重启</span></span><br><span class="line">systemctl restart mysqld</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>语句模式（MySQL5.6）</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">优点：简单易读，占用磁盘空间小</span><br><span class="line">缺点：不严谨</span><br><span class="line"></span><br><span class="line"><span class="comment">#截取日志</span></span><br><span class="line">[root@db01 data]# mysqlbinlog  mysql-bin.000006</span><br><span class="line">BEGIN</span><br><span class="line">/*!*/;</span><br><span class="line"><span class="comment"># at 626</span></span><br><span class="line"><span class="comment">#240820 16:04:25 server id 1  end_log_pos 731 CRC32 0x9e2a3943  Query   thread_id=1     exec_time=0     error_code=0</span></span><br><span class="line">SET TIMESTAMP=1724141065/*!*/;</span><br><span class="line">insert prod values(1001),(1200)</span><br><span class="line">/*!*/;</span><br><span class="line"><span class="comment"># at 731</span></span><br><span class="line"><span class="comment">#240820 16:04:25 server id 1  end_log_pos 762 CRC32 0xf49ea6d8  Xid = 16</span></span><br><span class="line">COMMIT/*!*/;</span><br><span class="line">DELIMITER ;</span><br><span class="line"><span class="comment"># End of log file</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>row行级模式（MySQL5.7）</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">优点：严谨，记录原数据和数据的变化过程</span><br><span class="line">缺点：占用磁盘空间大，不易读</span><br><span class="line"></span><br><span class="line">mysql&gt; show variables like <span class="string">&#x27;%binlog_format%&#x27;</span>;</span><br><span class="line">+---------------+-------+</span><br><span class="line">| Variable_name | Value |</span><br><span class="line">+---------------+-------+</span><br><span class="line">| binlog_format | ROW   |</span><br><span class="line">+---------------+-------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#对比，加上选项-vvv 就能看到数据变化过程</span></span><br><span class="line"></span><br><span class="line">[root@db01 data]# mysqlbinlog --base64-output=decode-rows mysql-bin.000006</span><br><span class="line">BEGIN</span><br><span class="line">/*!*/;</span><br><span class="line"><span class="comment"># at 382</span></span><br><span class="line"><span class="comment">#240820 16:11:19 server id 1  end_log_pos 429 CRC32 0x5544eced  Table_map: `prod`.`prod` mapped to number 70</span></span><br><span class="line"><span class="comment"># at 429</span></span><br><span class="line"><span class="comment">#240820 16:11:19 server id 1  end_log_pos 474 CRC32 0x50d2d755  Write_rows: table id 70 flags: STMT_END_F</span></span><br><span class="line"><span class="comment"># at 474</span></span><br><span class="line"><span class="comment">#240820 16:11:19 server id 1  end_log_pos 505 CRC32 0x6992e02c  Xid = 13</span></span><br><span class="line">COMMIT/*!*/;</span><br><span class="line">DELIMITER ;</span><br><span class="line"><span class="comment"># End of log file</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@db01 data]# mysqlbinlog --base64-output=decode-rows -vvv mysql-bin.000006</span><br><span class="line">BEGIN</span><br><span class="line">/*!*/;</span><br><span class="line"><span class="comment"># at 382</span></span><br><span class="line"><span class="comment">#240820 16:11:19 server id 1  end_log_pos 429 CRC32 0x5544eced  Table_map: `prod`.`prod` mapped to number 70</span></span><br><span class="line"><span class="comment"># at 429</span></span><br><span class="line"><span class="comment">#240820 16:11:19 server id 1  end_log_pos 474 CRC32 0x50d2d755  Write_rows: table id 70 flags: STMT_END_F</span></span><br><span class="line"><span class="comment">### INSERT INTO `prod`.`prod`</span></span><br><span class="line"><span class="comment">### SET</span></span><br><span class="line"><span class="comment">###   @1=1214 /* INT meta=0 nullable=1 is_null=0 */</span></span><br><span class="line"><span class="comment">### INSERT INTO `prod`.`prod`</span></span><br><span class="line"><span class="comment">### SET</span></span><br><span class="line"><span class="comment">###   @1=2236 /* INT meta=0 nullable=1 is_null=0 */</span></span><br><span class="line"><span class="comment"># at 474</span></span><br><span class="line"><span class="comment">#240820 16:11:19 server id 1  end_log_pos 505 CRC32 0x6992e02c  Xid = 13</span></span><br><span class="line">COMMIT/*!*/;</span><br><span class="line">DELIMITER ;</span><br><span class="line"><span class="comment"># End of log fil</span></span><br></pre></td></tr></table></figure><ul><li>mixed 混合模式</li></ul><h4 id="03-二进制日志操作">03 二进制日志操作</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看所有二进制日志</span></span><br><span class="line">mysql&gt; show binary logs;</span><br><span class="line">+------------------+-----------+</span><br><span class="line">| Log_name         | File_size |</span><br><span class="line">+------------------+-----------+</span><br><span class="line">| mysql-bin.000001 |       143 |</span><br><span class="line">| mysql-bin.000002 |       143 |</span><br><span class="line">| mysql-bin.000003 |       167 |</span><br><span class="line">| mysql-bin.000004 |       785 |</span><br><span class="line">| mysql-bin.000005 |       167 |</span><br><span class="line">| mysql-bin.000006 |       505 |</span><br><span class="line">+------------------+-----------+</span><br><span class="line">6 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看日志事件（日志名，位置点，SQL语句类型，server_id，位置结束点，执行语句信息）</span></span><br><span class="line">root@(none) &gt; show binlog events <span class="keyword">in</span> <span class="string">&#x27;mysql-bin.000008&#x27;</span>;</span><br><span class="line">+------------------+-----+-------------+-----------+-------------+---------------------------------------+</span><br><span class="line">| Log_name         | Pos | Event_type  | Server_id | End_log_pos | Info                                  |</span><br><span class="line">+------------------+-----+-------------+-----------+-------------+---------------------------------------+</span><br><span class="line">| mysql-bin.000008 |   4 | Format_desc |         1 |         120 | Server ver: 5.6.50-<span class="built_in">log</span>, Binlog ver: 4 |</span><br><span class="line">| mysql-bin.000008 | 120 | Query       |         1 |         211 | create database lzz                   |</span><br><span class="line">| mysql-bin.000008 | 211 | Query       |         1 |         294 | drop database lzz                     |</span><br><span class="line">| mysql-bin.000008 | 294 | Query       |         1 |         386 | drop database luay                    |</span><br><span class="line">+------------------+-----+-------------+-----------+-------------+---------------------------------------+</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看当前二进制日志所在位置</span></span><br><span class="line">root@(none) &gt; show master status;</span><br><span class="line">+------------------+----------+--------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB |</span><br><span class="line">+------------------+----------+--------------+</span><br><span class="line">| mysql-bin.000008 |      386 |              |</span><br><span class="line">+------------------+----------+--------------+</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>==<strong>事件</strong>==</p><p>1）在binlog中最小的记录单元为event</p><p>2）一个事务会被拆分成多个事件（event）</p><p><strong>==事件特性 binlog特性==</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1）每个event都有一个开始位置（start position）和结束位置（stop position）</span><br><span class="line">2）所谓的位置就是event对整个二进制的文件的相对位置(文件大小)</span><br><span class="line">3）对于一个二进制日志中，前120个position是文件格式信息预留空间（MySQL5.6）</span><br><span class="line">3）对于一个二进制日志中，前154个position是文件格式信息预留空间（MySQL5.7）</span><br><span class="line">4）MySQL第一个记录的事件，都是从120开始的（MySQL5.6）</span><br><span class="line">4）MySQL第一个记录的事件，都是从154开始的（MySQL5.7)</span><br></pre></td></tr></table></figure><h4 id="04-binlog的刷新和删除">04 binlog的刷新和删除</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## binlog 刷新</span></span><br><span class="line">1.重启MySQL数据库</span><br><span class="line">2.flush logs;</span><br><span class="line">3.mysqladmin -uroot -p123 flush-log</span><br><span class="line">4.当binlog大小1G会自动刷新   1G自动切割日志</span><br><span class="line"></span><br><span class="line"><span class="comment">## binlog删除</span></span><br><span class="line">1.根据时间删除</span><br><span class="line"><span class="comment">#临时生效</span></span><br><span class="line">SET GLOBAL expire_logs_days = 7;</span><br><span class="line"></span><br><span class="line"><span class="comment">#永久生效</span></span><br><span class="line">[root@db01 data]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">expire_logs_days = 7</span><br><span class="line"></span><br><span class="line">2.根据时间删除</span><br><span class="line">PURGE BINARY LOGS BEFORE now() - INTERVAL 3 day;</span><br><span class="line"></span><br><span class="line">3.根据文件名删除（常用）  ---仅保留mysql-bin.000020之后的binlog</span><br><span class="line">PURGE BINARY LOGS TO <span class="string">&#x27;mysql-bin.000020&#x27;</span>;</span><br><span class="line"></span><br><span class="line">4.删除所有binlog，从001生成   ❌🔞🈲危险!!!!</span><br><span class="line">reset master;</span><br></pre></td></tr></table></figure><p>:dango:</p><h4 id="05-日志配置信息扩展">05 日志配置信息扩展</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 参数一：sync_binlog 表示刷新日志到磁盘策略</span></span><br><span class="line">root@(none) &gt; <span class="keyword">select</span> @@sync_binlog;</span><br><span class="line">+---------------+</span><br><span class="line">| @@sync_binlog |</span><br><span class="line">+---------------+</span><br><span class="line">|             1 |</span><br><span class="line">+---------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">-- 在进行主从同步过程的双一标准的其中一个1的信息配置，主要是控制缓冲区里的binlog日志信息如何刷写到磁盘中；</span><br><span class="line">-- 此参数信息是有三种方式进行配置的：</span><br><span class="line">-- 参数信息配置0：表示由操作系统缓存自己决定，什么时候刷新日志到磁盘中；</span><br><span class="line">-- 参数信息配置1：表示每次事务提交，立即刷新日志到磁盘中；(此方式配置更安全)</span><br><span class="line">-- 参数信息配置N：表示每组事务提交，按照组的事务次数定义，确定刷新日志到磁盘中的频次；（可以有效减少IO性能损耗）</span><br><span class="line">-- 参数官方资料链接：https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html</span><br><span class="line"></span><br><span class="line"><span class="comment"># 参数二：binlog_format 定义binlog日志的格式信息</span></span><br><span class="line">root@(none) &gt; <span class="keyword">select</span> @@binlog_format;</span><br><span class="line">+-----------------+</span><br><span class="line">| @@binlog_format |</span><br><span class="line">+-----------------+</span><br><span class="line">| STATEMENT       |</span><br><span class="line">+-----------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">-- 在进行主从同步数据恢复时，此参数配置可能会影响数据恢复的一致性问题；</span><br><span class="line">-- 此参数信息是有三种方式进行配置的，确定了主从复制的级别，只针对DML语句的日志才有效；</span><br><span class="line">-- 参数信息配置 statement（SBR）：语句格式记录binlog；</span><br><span class="line"></span><br><span class="line">-- DDL DCL语句只能使用statement 表示的就是原原本本的语句信息，即做什么就记录什么；</span><br><span class="line">create database xiaoQ;  </span><br><span class="line"></span><br><span class="line">-- 参数信息配置 row（RBR）：行格式记录binlog（默认模式）</span><br><span class="line">update t1 <span class="built_in">set</span> a=10 <span class="built_in">where</span> <span class="built_in">id</span>&lt;10;    </span><br><span class="line">-- 会记录行的变化信息，属于底层的记录信息，可能会有多个变化日志信息记录</span><br><span class="line"></span><br><span class="line">-- 参数信息配置 mixed（MBR）：混合格式记录binlog</span><br><span class="line">-- 由数据库服务自行决定，是记录语句信息，还是记录行的变化信息；</span><br></pre></td></tr></table></figure><h3 id="慢查询日志">慢查询日志</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 作用：记录执行的比较慢的SQL语句</span></span><br><span class="line"><span class="comment"># 默认是否开启：否</span></span><br><span class="line"><span class="comment"># 存储位置：/app/mysql/data/</span></span><br><span class="line">root@(none) &gt; show variables like <span class="string">&#x27;%slow%&#x27;</span>;</span><br><span class="line">+---------------------------+--------------------------------------+</span><br><span class="line">| Variable_name             | Value                                |</span><br><span class="line">+---------------------------+--------------------------------------+</span><br><span class="line">| log_slow_admin_statements | OFF                                  |</span><br><span class="line">| log_slow_slave_statements | OFF                                  |</span><br><span class="line">| slow_launch_time          | 2                                    |</span><br><span class="line">| slow_query_log            | OFF                                  |</span><br><span class="line">| slow_query_log_file       | /app/mysql-5.6.50/data/db01-slow.log |</span><br><span class="line">+---------------------------+--------------------------------------+</span><br><span class="line">5 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 名字：hostname-slow.log</span></span><br><span class="line">db01-slow.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改方式</span></span><br><span class="line"><span class="comment">## 修改配置文件</span></span><br><span class="line">[root@db01 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line"><span class="comment">#指定是否开启慢查询日志</span></span><br><span class="line">slow_query_log=1</span><br><span class="line"></span><br><span class="line"><span class="comment">#指定慢日志文件存放位置（默认在data）</span></span><br><span class="line">slow_query_log_file=/app/mysql/data/db01-slow.log</span><br><span class="line"></span><br><span class="line"><span class="comment">#设定慢查询的阀值(默认10s)</span></span><br><span class="line">long_query_time=0.05</span><br><span class="line"></span><br><span class="line"><span class="comment">#不使用索引的慢查询语句是否记录到日志</span></span><br><span class="line">log_queries_not_using_indexes</span><br><span class="line"></span><br><span class="line"><span class="comment">#查询检查返回少于该参数指定行的SQL不被记录到慢查询日志 （很少用）</span></span><br><span class="line">min_examined_row_limit=100</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 模拟慢查询</span></span><br><span class="line">mysql &gt;create table world.city1 <span class="keyword">select</span> * from world.city;</span><br><span class="line">mysql &gt;insert into zls_city <span class="keyword">select</span> * from zls_city;</span><br><span class="line">[root@db01 ~]# mysqldumpslow</span><br><span class="line">-s：指定排序顺序</span><br><span class="line">c：Count 执行次数</span><br><span class="line">t：Time 执行时间 总时间</span><br><span class="line">r：Rows 结果行数 总行数</span><br><span class="line">l：Lock 锁表时间 总锁表时间</span><br><span class="line">at：平均时间</span><br><span class="line">ar：平均行数</span><br><span class="line">al：平均锁表时间</span><br><span class="line"><span class="comment">## 第三方 percona</span></span><br><span class="line">[root@db01 ~]# yum install -y https://downloads.percona.com/downloads/percona-toolkit/3.6.0/binary/redhat/7/x86_64/percona-toolkit-3.6.0-1.el7.x86_64.rpm</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#慢查询扩展</span></span><br><span class="line">yum install -y percona-toolkit-3.0.11-1.el6.x86_64.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用percona公司提供的pt-query-digest工具分析慢查询日志</span></span><br><span class="line">[root@mysql-db01 ~]# pt-query-digest /application/mysql/data/mysql-db01-slow.log</span><br><span class="line"></span><br><span class="line">成可视化界面：</span><br><span class="line">Anemometer基于pt-query-digest将MySQL慢查询可视化</span><br><span class="line">https://www.percona.com/downloads/percona-toolkit/LATEST/ 慢日志分析工具下载</span><br><span class="line">https://github.com/box/Anemometer 可视化代码下载</span><br></pre></td></tr></table></figure><p>:dango:percona慢查询可视化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装工具</span></span><br><span class="line">yum install -y https://downloads.percona.com/downloads/percona-toolkit/3.6.0/binary/redhat/7/x86_64/percona-toolkit-3.6.0-1.el7.x86_64.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment">#下载可视化工具</span></span><br><span class="line">$ git <span class="built_in">clone</span> git://github.com/box/Anemometer.git anemometer </span><br></pre></td></tr></table></figure><h3 id="配合binlog恢复数据">配合binlog恢复数据</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">模拟数据：</span><br><span class="line"><span class="comment"># 1.创建binlog库</span></span><br><span class="line">create database binlog;</span><br><span class="line">use binlog</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.创建表</span></span><br><span class="line">create table binlog_table(<span class="built_in">id</span> int);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.插入数据</span></span><br><span class="line">insert into binlog_table values(1);</span><br><span class="line">+------+</span><br><span class="line">| <span class="built_in">id</span> |</span><br><span class="line">+------+</span><br><span class="line">| 1 |</span><br><span class="line">+------+</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.插入数据</span></span><br><span class="line">insert into binlog_table values(2);</span><br><span class="line">insert into binlog_table values(3);</span><br><span class="line">commit;</span><br><span class="line"><span class="keyword">select</span> * from binlog_table;</span><br><span class="line">+------+</span><br><span class="line">| <span class="built_in">id</span> |</span><br><span class="line">+------+</span><br><span class="line">| 1  |</span><br><span class="line">| 2  |</span><br><span class="line">| 3  |</span><br><span class="line">+------+</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.删除数据</span></span><br><span class="line">delete from binlog_table <span class="built_in">where</span> <span class="built_in">id</span>=1;</span><br><span class="line">commit;</span><br><span class="line">root@localhost:binlog:18: &gt;<span class="keyword">select</span> * from binlog_table;</span><br><span class="line">+------+</span><br><span class="line">| <span class="built_in">id</span>   |</span><br><span class="line">+------+</span><br><span class="line">| 2  |</span><br><span class="line">| 3    |</span><br><span class="line">+------+</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6.修改数据</span></span><br><span class="line">update binlog_table <span class="built_in">set</span> <span class="built_in">id</span>=22 <span class="built_in">where</span> <span class="built_in">id</span>=2;</span><br><span class="line">commit;</span><br><span class="line">root@localhost:binlog:19: &gt;<span class="keyword">select</span> * from binlog_table;</span><br><span class="line">+------+</span><br><span class="line">|  <span class="built_in">id</span>  |</span><br><span class="line">+------+</span><br><span class="line">| 22 |</span><br><span class="line">|  3 |</span><br><span class="line">+------+</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7.删表</span></span><br><span class="line">drop table binlog_table;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 8.删库</span></span><br><span class="line">drop database binlog;</span><br><span class="line"></span><br><span class="line">想要恢复数点：</span><br><span class="line">begin：30776</span><br><span class="line">end：42009</span><br><span class="line"></span><br><span class="line">mysqlbinlog --start-position=30776 --stop-position=42009 -d binlog /app/mysql/data/mysql-bin.000008 &gt; /tmp/binlog.sql</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>使用binlog截取数据</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#需要如下数据</span></span><br><span class="line">+------+</span><br><span class="line">| <span class="built_in">id</span> |</span><br><span class="line">+------+</span><br><span class="line">| 1 |</span><br><span class="line">| 2 |</span><br><span class="line">| 3 |</span><br><span class="line">+------+</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1.准备新环境</span></span><br><span class="line">[root@db02 ~]# /etc/init.d/mysqld stop</span><br><span class="line">[root@db02 ~]# vim /etc/my.cnf     保持和旧环境一致</span><br><span class="line"></span><br><span class="line">[root@db02 ~]# <span class="built_in">rm</span> -fr /app/mysql-5.6.50/data</span><br><span class="line">[root@db02 ~]# /app/mysql-5.6.50/scripts/mysql_install_db --user=mysql --basedir=/app/mysql --datadir=/app/mysql/data</span><br><span class="line">[root@db02 ~]# /etc/init.d/mysqld start</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.将旧数据库数据进行全备</span></span><br><span class="line">[root@db01 data]# mysqldump -uroot -p123 -A &gt; /tmp/full.sql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.新环境创建一个可以远程连接的用户</span></span><br><span class="line">mysql&gt; grant all on *.* to root@<span class="string">&#x27;%&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.将全备恢复到新环境</span></span><br><span class="line">[root@db01 data]# mysql -uroot -p123 -h172.16.1.52 &lt; /tmp/full.sql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.旧环境截取binlog</span></span><br><span class="line">[root@db01 data]# mysqlbinlog --base64-output=decode-rows -vvv /app/mysql/data/mysql-bin.000030</span><br><span class="line">起始位置点：120</span><br><span class="line">[root@db01 data]# mysqlbinlog --base64-output=decode-rows -vvv /app/mysql/data/mysql-bin.000030 |grep -iC 10 delete</span><br><span class="line">结束位置点：832</span><br><span class="line">[root@db01 data]# mysqlbinlog --start-position=120 --stop-position=832 /app/mysql/data/mysql-bin.000030 &gt; /tmp/binlog.sql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6.恢复截取的数据到新环境</span></span><br><span class="line">[root@db01 data]# mysql -uroot -p123 -h172.16.1.52 &lt; /tmp/binlog.sql</span><br><span class="line">root@localhost:(none):42: &gt;<span class="keyword">select</span> * from binlog.binlog_table;</span><br><span class="line">+------+</span><br><span class="line">| <span class="built_in">id</span> |</span><br><span class="line">+------+</span><br><span class="line">| 1 |</span><br><span class="line">| 2 |</span><br><span class="line">| 3 |</span><br><span class="line">+------+</span><br><span class="line"><span class="comment"># 7.全备后的新增数据恢复到新环境</span></span><br><span class="line"><span class="comment"># 8.应用割接</span></span><br><span class="line">- 开发改代码</span><br><span class="line">- 运维导出新环境数据恢复到旧环境</span><br><span class="line"></span><br><span class="line"><span class="comment">#生产中会一直提供服务，实时在写入数据</span></span><br><span class="line">每天全备+增备</span><br><span class="line"></span><br><span class="line"><span class="comment">#产中截取数据时，可能会截取到其他库的数据，怎么解决</span></span><br><span class="line"><span class="comment">#用-d指定恢复的库</span></span><br><span class="line">mysqlbinlog --start-position=120 --stop-position=832 -d binlog app/mysql/data/mysql-bin.000030 &gt; /tmp/binlog.sql</span><br><span class="line"></span><br><span class="line"><span class="comment">### binlog只能用来当成是增量数据的备份一定要配合mysqldump逻辑备份的全备一起使用</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> 备份 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL的日志管理</title>
      <link href="/posts/7572cb39.html"/>
      <url>/posts/7572cb39.html</url>
      
        <content type="html"><![CDATA[<h2 id="数据库服务日志概述">数据库服务日志概述</h2><p>任何一种数据库中，都会有各种各样的日志，记录这数据库工作的方方面面，以帮助数据库管理员追踪数据库曾经发生过的各种事件；</p><p>主要是针对数据库server层产生的数据信息，主要用于记录和数据库服务运行本身有关的日志、以及SQL语句操作执行相关的日志；</p><h2 id="数据库日志常用分类">数据库日志常用分类</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看日志信息</span></span><br><span class="line">mysql &gt; show variables like <span class="string">&#x27;%log%&#x27;</span>;</span><br></pre></td></tr></table></figure><p><strong>常用日志信息</strong></p><table><thead><tr><th>日志名称</th><th>说明</th></tr></thead><tbody><tr><td>general_log</td><td>表示查询日志（通用日志），默认日志状态处于关闭，可以进行在线调整配置<br/>作用：记录了客户端从会话连接开始，执行过的所有SQL语句信息；<br />常用于   功能测试、语句审计</td></tr><tr><td>log_error</td><td>表示错误日志（运行日志），默认日志状态处于激活<br/>作用：记录了数据库服务启动和停止时，以及服务器在运行过程中发生任何严重错误时的相关信息；</td></tr><tr><td>log_bin</td><td>表示二进制日志（binlog日志），默认日志状态处于激活（8.0之后）<br/>作用：记录了所有的DDL语句和DML语句，但是不包括数据库查询语句；语句以事件的形式保存，描述了数据的更改过程，此日志对于灾难时的数据恢复起着极其重要的作用。</td></tr><tr><td>slow_query_log</td><td>表示慢查询日志，记录了所有执行时间超过参数long_query_time设置值并且扫描记录数小于min_examined_row_limit的所有SQL语句的日志。</td></tr></tbody></table><h3 id="通用日志general-log">通用日志general_log</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#默认日志功能处于关闭，建议在需要做调试工作时（功能测试、语句审计）可以打开；</span></span><br><span class="line">general_log=OFF  </span><br><span class="line"><span class="comment">#定义日志文件存储的路径信息，建议日志文件路径与数据存放路径进行分离；</span></span><br><span class="line">general_log_file=/app/mysql/data/general.log</span><br><span class="line"></span><br><span class="line"><span class="comment">#开启通用日志</span></span><br><span class="line">[root@db01 ~]# vim /etc/my.cnf</span><br><span class="line">general_log=OFF  </span><br><span class="line">general_log_file=/app/mysql/data/general.log</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改日志默认状态（激活日志）：</span></span><br><span class="line">mysql &gt; <span class="built_in">set</span> global general_log=1;</span><br></pre></td></tr></table></figure><blockquote><p>注意：企业真实环境，由于日志记录量比较大，所以不建议打开此日志记录功能，可以在有需要时打开，支持在线配置调整；</p></blockquote><h3 id="错误日志log-error">错误日志log_error</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#默认开启</span></span><br><span class="line"><span class="comment">#默认存储路径 datadir</span></span><br><span class="line">mysql &gt;show variables like <span class="string">&#x27;%err%&#x27;</span>;</span><br><span class="line">+---------------------+--------------+</span><br><span class="line">| Variable_name | Value |</span><br><span class="line">+---------------------+--------------+</span><br><span class="line">| log_error | ./db01.err |    /app/mysql/data</span><br><span class="line">+---------------------+--------------+</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改日志存储路径（永久配置）：</span></span><br><span class="line">1.编辑配置文件</span><br><span class="line">[root@xiaoq ~]# vim /etc/my.cnf</span><br><span class="line">log_error=/data/db01.err</span><br><span class="line"></span><br><span class="line">2.创建错误日志文件</span><br><span class="line"><span class="built_in">touch</span> /data/db01.err</span><br><span class="line"></span><br><span class="line">3.授权文件</span><br><span class="line"><span class="built_in">chown</span> mysql.mysql /data/db01.err</span><br><span class="line"></span><br><span class="line">4.重启数据库</span><br><span class="line">systemctl restart msyqld</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 模拟故障日志应用</span></span><br><span class="line">[root@oldboyxiaoq ~]# ll /data/3306/data/ibdata1 </span><br><span class="line">-rw-r----- 1 mysql mysql 12582912 Nov 16 17:46 /data/3306/data/ibdata1</span><br><span class="line"></span><br><span class="line">[root@oldboyxiaoq ~]# <span class="built_in">chmod</span> 000 /data/3306/data/ibdata1</span><br><span class="line"></span><br><span class="line">[root@oldboyxiaoq ~]# /etc/init.d/mysqld restart</span><br><span class="line"></span><br><span class="line">Shutting down MySQL............................... SUCCESS! </span><br><span class="line">Starting MySQL......................................... ERROR! The server quit without updating PID file (/data/3306/data/oldboyxiaoq.com.pid).</span><br><span class="line">[root@oldboyxiaoq ~]# <span class="built_in">tail</span> -20 /data/3306/data/oldboyxiaoq.com.err</span><br><span class="line">2022-11-21T01:20:47.735040Z 1 [ERROR] [MY-012271] [InnoDB] The innodb_system data file <span class="string">&#x27;ibdata1&#x27;</span> must be writable</span><br><span class="line">2022-11-21T01:20:47.744091Z 1 [ERROR] [MY-012278] [InnoDB] The innodb_system data file <span class="string">&#x27;ibdata1&#x27;</span> must be writable</span><br><span class="line">2022-11-21T01:20:47.744808Z 1 [ERROR] [MY-010334] [Server] Failed to initialize DD Storage Engine</span><br><span class="line">2022-11-21T01:20:47.745739Z 0 [ERROR] [MY-010020] [Server] Data Dictionary initialization failed.</span><br><span class="line">2022-11-21T01:20:47.746526Z 0 [ERROR] [MY-010119] [Server] Aborting</span><br><span class="line">-- 根据错误日志的错误提示信息，进行错误信息进行分析，从而排查故障可能出现的原因；</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>说明：企业真实环境，日志处于默认激活记录状态，可以使用错误日志信息做故障诊断，记录错误信息级别为note warning error；</p></blockquote><h3 id="二进制日志（log-bin">二进制日志（log_bin)</h3><p>binlog日志，此日志文件其实就是用于记录对数据库进行操作更改的语句信息的；</p><p>并且记录更改的语句信息以事件形式进行记录，但是需要注意的是查询相关的语句是不会被记录的，比如：select、show；</p><p>然而作为所有对数据库的改操作事件信息都会被记录，比如：insert、update、create、drop。。。</p><p><strong>查看数据库binlog日志配置参数：</strong></p><p>进入到数据库服务系统环境中，可以使用命令进行查看binlog日志功能是否开启；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#默认关闭</span></span><br><span class="line"></span><br><span class="line">root@(none) &gt; show variables like <span class="string">&#x27;%log_bin%&#x27;</span>;</span><br><span class="line">+---------------------------------+---------------------------------+</span><br><span class="line">| Variable_name                   | Value                           |</span><br><span class="line">+---------------------------------+---------------------------------+</span><br><span class="line">| log_bin                         | ON                              |</span><br><span class="line">| log_bin_basename                | /app/mysql/data/mysql-bin       |</span><br><span class="line">| log_bin_index                   | /app/mysql/data/mysql-bin.index |</span><br><span class="line">| log_bin_trust_function_creators | OFF                             |</span><br><span class="line">| log_bin_use_v1_row_events       | OFF                             |</span><br><span class="line">| sql_log_bin                     | ON                              |</span><br><span class="line">+---------------------------------+---------------------------------+</span><br><span class="line"></span><br><span class="line"><span class="comment">#刷新日志  （企业中不使用）</span></span><br><span class="line">mysql&gt; flush logs;</span><br><span class="line"></span><br><span class="line">刷新后日志记录会生成新的</span><br></pre></td></tr></table></figure><p>==<strong>查看二进制文件</strong>==</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看当前使用的二进制文件</span></span><br><span class="line">root@(none) &gt; show master status ;</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">| mysql-bin.000004 |     1252 |              |                  |                   |</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看所有的二进制日志文件</span></span><br><span class="line">root@(none) &gt; show binary logs;</span><br><span class="line">+------------------+-----------+</span><br><span class="line">| Log_name         | File_size |</span><br><span class="line">+------------------+-----------+</span><br><span class="line">| mysql-bin.000001 |       120 |</span><br><span class="line">| mysql-bin.000002 |       329 |</span><br><span class="line">| mysql-bin.000003 |       317 |</span><br><span class="line">| mysql-bin.000004 |      1252 |</span><br><span class="line">+------------------+-----------+</span><br></pre></td></tr></table></figure><h4 id="01日志信息基本配置">01日志信息基本配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#修改二进制日志</span></span><br><span class="line"><span class="comment">## 修改配置文件 MySQL5.6</span></span><br><span class="line">[root@db01 ~]# vim /etc/my.cnf</span><br><span class="line">log-bin=mysql-bin</span><br><span class="line">binlog_format=row</span><br><span class="line"></span><br><span class="line"><span class="comment">## 修改配置文件 MySQL5.7   (必须得有server -id)</span></span><br><span class="line">[root@db01 ~]# vim /etc/my.cnf</span><br><span class="line">server_id=1</span><br><span class="line">log-bin=mysql-bin</span><br><span class="line">binlog_format=row</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#进行binlog日志目录路径信息修改时，需要创建指定的目录并设置权限信息，最后需要重新启动数据库服务生效；</span></span><br><span class="line">或者</span><br><span class="line">log_bin=binlog</span><br><span class="line"><span class="comment"># 只是设置日志名称信息，日志会自动保存到数据库服务指定的数据目录中；</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置文件修改后需要重启数据库服务，加载配置文件改动的信息：</span></span><br><span class="line">[root@xiaoQ ~]# /etc/init.d/mysqld restart </span><br><span class="line">[root@xiaoQ xiaoQ]# ll -h /data/3306/data/binlog*</span><br><span class="line">-rw-rw----. 1 mysql mysql 245 6月  24 02:19 /data/3306/data/binlog.00000N</span><br><span class="line">-rw-rw----. 1 mysql mysql   16 6月  24 02:19 /data/3306/data/binlog.index</span><br><span class="line">-- 数据库服务重启后，已经可以在数据库的数据存储目录中，看到binlog日志文件的踪影</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">企业真实环境，日志处于默认激活记录状态，可以使用日志信息进行灾难数据恢复，以及可以用于实现主从复制；</span><br></pre></td></tr></table></figure><h4 id="02二进制日志工作模式">02二进制日志工作模式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看当前二进制模式</span></span><br><span class="line">mysql&gt; show variables like <span class="string">&#x27;%binlog_format%&#x27;</span>;</span><br><span class="line">+---------------+-----------+</span><br><span class="line">| Variable_name | Value     |</span><br><span class="line">+---------------+-----------+</span><br><span class="line">| binlog_format | STATEMENT |</span><br><span class="line">+---------------+-----------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#设置二进制日志模式</span></span><br><span class="line">vim /etc/my.cnf</span><br><span class="line">[msyqld]</span><br><span class="line">binlog_format=row</span><br><span class="line"></span><br><span class="line"><span class="comment">#重启</span></span><br><span class="line">systemctl restart mysqld</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>语句模式（MySQL5.6）</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">优点：简单易读，占用磁盘空间小</span><br><span class="line">缺点：不严谨</span><br><span class="line"></span><br><span class="line"><span class="comment">#截取日志</span></span><br><span class="line">[root@db01 data]# mysqlbinlog  mysql-bin.000006</span><br><span class="line">BEGIN</span><br><span class="line">/*!*/;</span><br><span class="line"><span class="comment"># at 626</span></span><br><span class="line"><span class="comment">#240820 16:04:25 server id 1  end_log_pos 731 CRC32 0x9e2a3943  Query   thread_id=1     exec_time=0     error_code=0</span></span><br><span class="line">SET TIMESTAMP=1724141065/*!*/;</span><br><span class="line">insert prod values(1001),(1200)</span><br><span class="line">/*!*/;</span><br><span class="line"><span class="comment"># at 731</span></span><br><span class="line"><span class="comment">#240820 16:04:25 server id 1  end_log_pos 762 CRC32 0xf49ea6d8  Xid = 16</span></span><br><span class="line">COMMIT/*!*/;</span><br><span class="line">DELIMITER ;</span><br><span class="line"><span class="comment"># End of log file</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>row行级模式（MySQL5.7）</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">优点：严谨，记录原数据和数据的变化过程</span><br><span class="line">缺点：占用磁盘空间大，不易读</span><br><span class="line"></span><br><span class="line">mysql&gt; show variables like <span class="string">&#x27;%binlog_format%&#x27;</span>;</span><br><span class="line">+---------------+-------+</span><br><span class="line">| Variable_name | Value |</span><br><span class="line">+---------------+-------+</span><br><span class="line">| binlog_format | ROW   |</span><br><span class="line">+---------------+-------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#对比，加上选项-vvv 就能看到数据变化过程</span></span><br><span class="line"></span><br><span class="line">[root@db01 data]# mysqlbinlog --base64-output=decode-rows mysql-bin.000006</span><br><span class="line">BEGIN</span><br><span class="line">/*!*/;</span><br><span class="line"><span class="comment"># at 382</span></span><br><span class="line"><span class="comment">#240820 16:11:19 server id 1  end_log_pos 429 CRC32 0x5544eced  Table_map: `prod`.`prod` mapped to number 70</span></span><br><span class="line"><span class="comment"># at 429</span></span><br><span class="line"><span class="comment">#240820 16:11:19 server id 1  end_log_pos 474 CRC32 0x50d2d755  Write_rows: table id 70 flags: STMT_END_F</span></span><br><span class="line"><span class="comment"># at 474</span></span><br><span class="line"><span class="comment">#240820 16:11:19 server id 1  end_log_pos 505 CRC32 0x6992e02c  Xid = 13</span></span><br><span class="line">COMMIT/*!*/;</span><br><span class="line">DELIMITER ;</span><br><span class="line"><span class="comment"># End of log file</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@db01 data]# mysqlbinlog --base64-output=decode-rows -vvv mysql-bin.000006</span><br><span class="line">BEGIN</span><br><span class="line">/*!*/;</span><br><span class="line"><span class="comment"># at 382</span></span><br><span class="line"><span class="comment">#240820 16:11:19 server id 1  end_log_pos 429 CRC32 0x5544eced  Table_map: `prod`.`prod` mapped to number 70</span></span><br><span class="line"><span class="comment"># at 429</span></span><br><span class="line"><span class="comment">#240820 16:11:19 server id 1  end_log_pos 474 CRC32 0x50d2d755  Write_rows: table id 70 flags: STMT_END_F</span></span><br><span class="line"><span class="comment">### INSERT INTO `prod`.`prod`</span></span><br><span class="line"><span class="comment">### SET</span></span><br><span class="line"><span class="comment">###   @1=1214 /* INT meta=0 nullable=1 is_null=0 */</span></span><br><span class="line"><span class="comment">### INSERT INTO `prod`.`prod`</span></span><br><span class="line"><span class="comment">### SET</span></span><br><span class="line"><span class="comment">###   @1=2236 /* INT meta=0 nullable=1 is_null=0 */</span></span><br><span class="line"><span class="comment"># at 474</span></span><br><span class="line"><span class="comment">#240820 16:11:19 server id 1  end_log_pos 505 CRC32 0x6992e02c  Xid = 13</span></span><br><span class="line">COMMIT/*!*/;</span><br><span class="line">DELIMITER ;</span><br><span class="line"><span class="comment"># End of log fil</span></span><br></pre></td></tr></table></figure><ul><li>mixed 混合模式</li></ul><h4 id="03-二进制日志操作">03 二进制日志操作</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看所有二进制日志</span></span><br><span class="line">mysql&gt; show binary logs;</span><br><span class="line">+------------------+-----------+</span><br><span class="line">| Log_name         | File_size |</span><br><span class="line">+------------------+-----------+</span><br><span class="line">| mysql-bin.000001 |       143 |</span><br><span class="line">| mysql-bin.000002 |       143 |</span><br><span class="line">| mysql-bin.000003 |       167 |</span><br><span class="line">| mysql-bin.000004 |       785 |</span><br><span class="line">| mysql-bin.000005 |       167 |</span><br><span class="line">| mysql-bin.000006 |       505 |</span><br><span class="line">+------------------+-----------+</span><br><span class="line">6 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看日志事件（日志名，位置点，SQL语句类型，server_id，位置结束点，执行语句信息）</span></span><br><span class="line">root@(none) &gt; show binlog events <span class="keyword">in</span> <span class="string">&#x27;mysql-bin.000008&#x27;</span>;</span><br><span class="line">+------------------+-----+-------------+-----------+-------------+---------------------------------------+</span><br><span class="line">| Log_name         | Pos | Event_type  | Server_id | End_log_pos | Info                                  |</span><br><span class="line">+------------------+-----+-------------+-----------+-------------+---------------------------------------+</span><br><span class="line">| mysql-bin.000008 |   4 | Format_desc |         1 |         120 | Server ver: 5.6.50-<span class="built_in">log</span>, Binlog ver: 4 |</span><br><span class="line">| mysql-bin.000008 | 120 | Query       |         1 |         211 | create database lzz                   |</span><br><span class="line">| mysql-bin.000008 | 211 | Query       |         1 |         294 | drop database lzz                     |</span><br><span class="line">| mysql-bin.000008 | 294 | Query       |         1 |         386 | drop database luay                    |</span><br><span class="line">+------------------+-----+-------------+-----------+-------------+---------------------------------------+</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看当前二进制日志所在位置</span></span><br><span class="line">root@(none) &gt; show master status;</span><br><span class="line">+------------------+----------+--------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB |</span><br><span class="line">+------------------+----------+--------------+</span><br><span class="line">| mysql-bin.000008 |      386 |              |</span><br><span class="line">+------------------+----------+--------------+</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>==<strong>事件</strong>==</p><p>1）在binlog中最小的记录单元为event</p><p>2）一个事务会被拆分成多个事件（event）</p><p><strong>==事件特性 binlog特性==</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1）每个event都有一个开始位置（start position）和结束位置（stop position）</span><br><span class="line">2）所谓的位置就是event对整个二进制的文件的相对位置(文件大小)</span><br><span class="line">3）对于一个二进制日志中，前120个position是文件格式信息预留空间（MySQL5.6）</span><br><span class="line">3）对于一个二进制日志中，前154个position是文件格式信息预留空间（MySQL5.7）</span><br><span class="line">4）MySQL第一个记录的事件，都是从120开始的（MySQL5.6）</span><br><span class="line">4）MySQL第一个记录的事件，都是从154开始的（MySQL5.7)</span><br></pre></td></tr></table></figure><h4 id="04-binlog的刷新和删除">04 binlog的刷新和删除</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## binlog 刷新</span></span><br><span class="line">1.重启MySQL数据库</span><br><span class="line">2.flush logs;</span><br><span class="line">3.mysqladmin -uroot -p123 flush-log</span><br><span class="line">4.当binlog大小1G会自动刷新   1G自动切割日志</span><br><span class="line"></span><br><span class="line"><span class="comment">## binlog删除</span></span><br><span class="line">1.根据时间删除</span><br><span class="line"><span class="comment">#临时生效</span></span><br><span class="line">SET GLOBAL expire_logs_days = 7;</span><br><span class="line"></span><br><span class="line"><span class="comment">#永久生效</span></span><br><span class="line">[root@db01 data]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">expire_logs_days = 7</span><br><span class="line"></span><br><span class="line">2.根据时间删除</span><br><span class="line">PURGE BINARY LOGS BEFORE now() - INTERVAL 3 day;</span><br><span class="line"></span><br><span class="line">3.根据文件名删除（常用）  ---仅保留mysql-bin.000020之后的binlog</span><br><span class="line">PURGE BINARY LOGS TO <span class="string">&#x27;mysql-bin.000020&#x27;</span>;</span><br><span class="line"></span><br><span class="line">4.删除所有binlog，从001生成   ❌🔞🈲危险!!!!</span><br><span class="line">reset master;</span><br></pre></td></tr></table></figure><p>:dango:</p><h4 id="05-日志配置信息扩展">05 日志配置信息扩展</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 参数一：sync_binlog 表示刷新日志到磁盘策略</span></span><br><span class="line">root@(none) &gt; <span class="keyword">select</span> @@sync_binlog;</span><br><span class="line">+---------------+</span><br><span class="line">| @@sync_binlog |</span><br><span class="line">+---------------+</span><br><span class="line">|             1 |</span><br><span class="line">+---------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">-- 在进行主从同步过程的双一标准的其中一个1的信息配置，主要是控制缓冲区里的binlog日志信息如何刷写到磁盘中；</span><br><span class="line">-- 此参数信息是有三种方式进行配置的：</span><br><span class="line">-- 参数信息配置0：表示由操作系统缓存自己决定，什么时候刷新日志到磁盘中；</span><br><span class="line">-- 参数信息配置1：表示每次事务提交，立即刷新日志到磁盘中；(此方式配置更安全)</span><br><span class="line">-- 参数信息配置N：表示每组事务提交，按照组的事务次数定义，确定刷新日志到磁盘中的频次；（可以有效减少IO性能损耗）</span><br><span class="line">-- 参数官方资料链接：https://dev.mysql.com/doc/refman/8.0/en/replication-options-binary-log.html</span><br><span class="line"></span><br><span class="line"><span class="comment"># 参数二：binlog_format 定义binlog日志的格式信息</span></span><br><span class="line">root@(none) &gt; <span class="keyword">select</span> @@binlog_format;</span><br><span class="line">+-----------------+</span><br><span class="line">| @@binlog_format |</span><br><span class="line">+-----------------+</span><br><span class="line">| STATEMENT       |</span><br><span class="line">+-----------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">-- 在进行主从同步数据恢复时，此参数配置可能会影响数据恢复的一致性问题；</span><br><span class="line">-- 此参数信息是有三种方式进行配置的，确定了主从复制的级别，只针对DML语句的日志才有效；</span><br><span class="line">-- 参数信息配置 statement（SBR）：语句格式记录binlog；</span><br><span class="line"></span><br><span class="line">-- DDL DCL语句只能使用statement 表示的就是原原本本的语句信息，即做什么就记录什么；</span><br><span class="line">create database xiaoQ;  </span><br><span class="line"></span><br><span class="line">-- 参数信息配置 row（RBR）：行格式记录binlog（默认模式）</span><br><span class="line">update t1 <span class="built_in">set</span> a=10 <span class="built_in">where</span> <span class="built_in">id</span>&lt;10;    </span><br><span class="line">-- 会记录行的变化信息，属于底层的记录信息，可能会有多个变化日志信息记录</span><br><span class="line"></span><br><span class="line">-- 参数信息配置 mixed（MBR）：混合格式记录binlog</span><br><span class="line">-- 由数据库服务自行决定，是记录语句信息，还是记录行的变化信息；</span><br></pre></td></tr></table></figure><h3 id="慢查询日志">慢查询日志</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 作用：记录执行的比较慢的SQL语句</span></span><br><span class="line"><span class="comment"># 默认是否开启：否</span></span><br><span class="line"><span class="comment"># 存储位置：/app/mysql/data/</span></span><br><span class="line">root@(none) &gt; show variables like <span class="string">&#x27;%slow%&#x27;</span>;</span><br><span class="line">+---------------------------+--------------------------------------+</span><br><span class="line">| Variable_name             | Value                                |</span><br><span class="line">+---------------------------+--------------------------------------+</span><br><span class="line">| log_slow_admin_statements | OFF                                  |</span><br><span class="line">| log_slow_slave_statements | OFF                                  |</span><br><span class="line">| slow_launch_time          | 2                                    |</span><br><span class="line">| slow_query_log            | OFF                                  |</span><br><span class="line">| slow_query_log_file       | /app/mysql-5.6.50/data/db01-slow.log |</span><br><span class="line">+---------------------------+--------------------------------------+</span><br><span class="line">5 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 名字：hostname-slow.log</span></span><br><span class="line">db01-slow.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改方式</span></span><br><span class="line"><span class="comment">## 修改配置文件</span></span><br><span class="line">[root@db01 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line"><span class="comment">#指定是否开启慢查询日志</span></span><br><span class="line">slow_query_log=1</span><br><span class="line"></span><br><span class="line"><span class="comment">#指定慢日志文件存放位置（默认在data）</span></span><br><span class="line">slow_query_log_file=/app/mysql/data/db01-slow.log</span><br><span class="line"></span><br><span class="line"><span class="comment">#设定慢查询的阀值(默认10s)</span></span><br><span class="line">long_query_time=0.05</span><br><span class="line"></span><br><span class="line"><span class="comment">#不使用索引的慢查询语句是否记录到日志</span></span><br><span class="line">log_queries_not_using_indexes</span><br><span class="line"></span><br><span class="line"><span class="comment">#查询检查返回少于该参数指定行的SQL不被记录到慢查询日志 （很少用）</span></span><br><span class="line">min_examined_row_limit=100</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 模拟慢查询</span></span><br><span class="line">mysql &gt;create table world.city1 <span class="keyword">select</span> * from world.city;</span><br><span class="line">mysql &gt;insert into zls_city <span class="keyword">select</span> * from zls_city;</span><br><span class="line">[root@db01 ~]# mysqldumpslow</span><br><span class="line">-s：指定排序顺序</span><br><span class="line">c：Count 执行次数</span><br><span class="line">t：Time 执行时间 总时间</span><br><span class="line">r：Rows 结果行数 总行数</span><br><span class="line">l：Lock 锁表时间 总锁表时间</span><br><span class="line">at：平均时间</span><br><span class="line">ar：平均行数</span><br><span class="line">al：平均锁表时间</span><br><span class="line"><span class="comment">## 第三方 percona</span></span><br><span class="line">[root@db01 ~]# yum install -y https://downloads.percona.com/downloads/percona-toolkit/3.6.0/binary/redhat/7/x86_64/percona-toolkit-3.6.0-1.el7.x86_64.rpm</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#慢查询扩展</span></span><br><span class="line">yum install -y percona-toolkit-3.0.11-1.el6.x86_64.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用percona公司提供的pt-query-digest工具分析慢查询日志</span></span><br><span class="line">[root@mysql-db01 ~]# pt-query-digest /application/mysql/data/mysql-db01-slow.log</span><br><span class="line"></span><br><span class="line">成可视化界面：</span><br><span class="line">Anemometer基于pt-query-digest将MySQL慢查询可视化</span><br><span class="line">https://www.percona.com/downloads/percona-toolkit/LATEST/ 慢日志分析工具下载</span><br><span class="line">https://github.com/box/Anemometer 可视化代码下载</span><br></pre></td></tr></table></figure><p>:dango:percona慢查询可视化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装工具</span></span><br><span class="line">yum install -y https://downloads.percona.com/downloads/percona-toolkit/3.6.0/binary/redhat/7/x86_64/percona-toolkit-3.6.0-1.el7.x86_64.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment">#下载可视化工具</span></span><br><span class="line">$ git <span class="built_in">clone</span> git://github.com/box/Anemometer.git anemometer </span><br></pre></td></tr></table></figure><h3 id="配合binlog恢复数据">配合binlog恢复数据</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">模拟数据：</span><br><span class="line"><span class="comment"># 1.创建binlog库</span></span><br><span class="line">create database binlog;</span><br><span class="line">use binlog</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.创建表</span></span><br><span class="line">create table binlog_table(<span class="built_in">id</span> int);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.插入数据</span></span><br><span class="line">insert into binlog_table values(1);</span><br><span class="line">+------+</span><br><span class="line">| <span class="built_in">id</span> |</span><br><span class="line">+------+</span><br><span class="line">| 1 |</span><br><span class="line">+------+</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.插入数据</span></span><br><span class="line">insert into binlog_table values(2);</span><br><span class="line">insert into binlog_table values(3);</span><br><span class="line">commit;</span><br><span class="line"><span class="keyword">select</span> * from binlog_table;</span><br><span class="line">+------+</span><br><span class="line">| <span class="built_in">id</span> |</span><br><span class="line">+------+</span><br><span class="line">| 1  |</span><br><span class="line">| 2  |</span><br><span class="line">| 3  |</span><br><span class="line">+------+</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.删除数据</span></span><br><span class="line">delete from binlog_table <span class="built_in">where</span> <span class="built_in">id</span>=1;</span><br><span class="line">commit;</span><br><span class="line">root@localhost:binlog:18: &gt;<span class="keyword">select</span> * from binlog_table;</span><br><span class="line">+------+</span><br><span class="line">| <span class="built_in">id</span>   |</span><br><span class="line">+------+</span><br><span class="line">| 2  |</span><br><span class="line">| 3    |</span><br><span class="line">+------+</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6.修改数据</span></span><br><span class="line">update binlog_table <span class="built_in">set</span> <span class="built_in">id</span>=22 <span class="built_in">where</span> <span class="built_in">id</span>=2;</span><br><span class="line">commit;</span><br><span class="line">root@localhost:binlog:19: &gt;<span class="keyword">select</span> * from binlog_table;</span><br><span class="line">+------+</span><br><span class="line">|  <span class="built_in">id</span>  |</span><br><span class="line">+------+</span><br><span class="line">| 22 |</span><br><span class="line">|  3 |</span><br><span class="line">+------+</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7.删表</span></span><br><span class="line">drop table binlog_table;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 8.删库</span></span><br><span class="line">drop database binlog;</span><br><span class="line"></span><br><span class="line">想要恢复数点：</span><br><span class="line">begin：30776</span><br><span class="line">end：42009</span><br><span class="line"></span><br><span class="line">mysqlbinlog --start-position=30776 --stop-position=42009 -d binlog /app/mysql/data/mysql-bin.000008 &gt; /tmp/binlog.sql</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>使用binlog截取数据</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#需要如下数据</span></span><br><span class="line">+------+</span><br><span class="line">| <span class="built_in">id</span> |</span><br><span class="line">+------+</span><br><span class="line">| 1 |</span><br><span class="line">| 2 |</span><br><span class="line">| 3 |</span><br><span class="line">+------+</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1.准备新环境</span></span><br><span class="line">[root@db02 ~]# /etc/init.d/mysqld stop</span><br><span class="line">[root@db02 ~]# vim /etc/my.cnf     保持和旧环境一致</span><br><span class="line"></span><br><span class="line">[root@db02 ~]# <span class="built_in">rm</span> -fr /app/mysql-5.6.50/data</span><br><span class="line">[root@db02 ~]# /app/mysql-5.6.50/scripts/mysql_install_db --user=mysql --basedir=/app/mysql --datadir=/app/mysql/data</span><br><span class="line">[root@db02 ~]# /etc/init.d/mysqld start</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.将旧数据库数据进行全备</span></span><br><span class="line">[root@db01 data]# mysqldump -uroot -p123 -A &gt; /tmp/full.sql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.新环境创建一个可以远程连接的用户</span></span><br><span class="line">mysql&gt; grant all on *.* to root@<span class="string">&#x27;%&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.将全备恢复到新环境</span></span><br><span class="line">[root@db01 data]# mysql -uroot -p123 -h172.16.1.52 &lt; /tmp/full.sql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.旧环境截取binlog</span></span><br><span class="line">[root@db01 data]# mysqlbinlog --base64-output=decode-rows -vvv /app/mysql/data/mysql-bin.000030</span><br><span class="line">起始位置点：120</span><br><span class="line">[root@db01 data]# mysqlbinlog --base64-output=decode-rows -vvv /app/mysql/data/mysql-bin.000030 |grep -iC 10 delete</span><br><span class="line">结束位置点：832</span><br><span class="line">[root@db01 data]# mysqlbinlog --start-position=120 --stop-position=832 /app/mysql/data/mysql-bin.000030 &gt; /tmp/binlog.sql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6.恢复截取的数据到新环境</span></span><br><span class="line">[root@db01 data]# mysql -uroot -p123 -h172.16.1.52 &lt; /tmp/binlog.sql</span><br><span class="line">root@localhost:(none):42: &gt;<span class="keyword">select</span> * from binlog.binlog_table;</span><br><span class="line">+------+</span><br><span class="line">| <span class="built_in">id</span> |</span><br><span class="line">+------+</span><br><span class="line">| 1 |</span><br><span class="line">| 2 |</span><br><span class="line">| 3 |</span><br><span class="line">+------+</span><br><span class="line"><span class="comment"># 7.全备后的新增数据恢复到新环境</span></span><br><span class="line"><span class="comment"># 8.应用割接</span></span><br><span class="line">- 开发改代码</span><br><span class="line">- 运维导出新环境数据恢复到旧环境</span><br><span class="line"></span><br><span class="line"><span class="comment">#生产中会一直提供服务，实时在写入数据</span></span><br><span class="line">每天全备+增备</span><br><span class="line"></span><br><span class="line"><span class="comment">#产中截取数据时，可能会截取到其他库的数据，怎么解决</span></span><br><span class="line"><span class="comment">#用-d指定恢复的库</span></span><br><span class="line">mysqlbinlog --start-position=120 --stop-position=832 -d binlog app/mysql/data/mysql-bin.000030 &gt; /tmp/binlog.sql</span><br><span class="line"></span><br><span class="line"><span class="comment">### binlog只能用来当成是增量数据的备份一定要配合mysqldump逻辑备份的全备一起使用</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL存储引擎</title>
      <link href="/posts/4fa63392.html"/>
      <url>/posts/4fa63392.html</url>
      
        <content type="html"><![CDATA[<p><strong>MySQL的目录</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">1.auto.cnf</span><br><span class="line">MySQL启动时，会自动从data_dir/auto.cnf 文件中获取server-uuid值，并将这个值存储在全局变量server_uuid中。如果这个值或者这个文件不存在，那么将会生成一个新的uuid值，并将这个值保存在auto.cnf文件中。</span><br><span class="line">作用是在mysql复制时如果发生故障，slave可以通过uuid辨识master的日志。</span><br><span class="line">2.binlog.index</span><br><span class="line">用于记录MySQL产生的binlog日志的具体位置，binlog是MySQL记录所有操作的逻辑日志，主要用于故障恢复和主从同步时使用，由于MySQL数据库是一个多类型存储引擎并存的数据库，binlog就起着一个实例（instance）总体重做信息的角色。</span><br><span class="line">3.*.pem</span><br><span class="line">MySQL8.0以后加入的，用于ssl认证登陆</span><br><span class="line">4.ibdata1</span><br><span class="line">innodb默认共享表空间，在不指定下默认所有表共享一个表空间，但是一般生产环境中建议修改默认值，每个表一个表空间</span><br><span class="line">5.ib_logfile0</span><br><span class="line">redo事务日志</span><br></pre></td></tr></table></figure><h2 id="存储引擎介绍-及-比较">存储引擎介绍 及 比较</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MySQL引擎： 可以理解为，MySQL的“文件系统”，只不过功能更加强大。</span><br><span class="line">MySQL引擎功能： 除了可以提供基本的存取功能，还有更多功能事务功能、锁定、备份和恢复、优化以及特殊功能。</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">MySQL5.5以后默认使用InnoDB存储引擎，其中InnoDB和BDB提供事务安全表，其它存储引擎都是非事务安全表。</span><br><span class="line"></span><br><span class="line">若要修改默认引擎，可以修改配置文件中的default-storage-engine。</span><br><span class="line">可以通过：show variables like <span class="string">&#x27;default_storage_engine&#x27;</span>; 查看当前数据库到默认引擎。</span><br><span class="line">命令：*show engines*和*show variables like <span class="string">&#x27;have%&#x27;</span>*可以列出当前数据库所支持到引擎。其中Value显示为disabled的记录表示数据库支持此引擎，而在数据库启动时被禁用。</span><br><span class="line">在MySQL5.1以后，INFORMATION_SCHEMA数据库中存在一个ENGINES的表，它提供的信息与show engines;语句完全一样，可以使用下面语句来查询哪些存储引擎支持事物处理：<span class="keyword">select</span> engine from information_schema.engines <span class="built_in">where</span> transactions = <span class="string">&#x27;yes&#x27;</span>;</span><br></pre></td></tr></table></figure><p><strong>MySQL自带的存储引擎</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">mysql &gt; show engines;</span><br><span class="line">+--------------------+---------+</span><br><span class="line">| Engine             | Support | </span><br><span class="line">+--------------------+---------+</span><br><span class="line">| FEDERATED          | NO      | </span><br><span class="line">| MRG_MYISAM         | YES     | </span><br><span class="line">| MyISAM             | YES     |***** </span><br><span class="line">| BLACKHOLE          | YES     | </span><br><span class="line">| CSV                | YES     | </span><br><span class="line">| MEMORY             | YES     | </span><br><span class="line">| ARCHIVE            | YES     | </span><br><span class="line">| InnoDB             | DEFAULT |***** </span><br><span class="line">| PERFORMANCE_SCHEMA | YES     | </span><br><span class="line">+--------------------+---------+</span><br><span class="line"></span><br><span class="line">InnoDB、MyISAM (最常用的两种)</span><br></pre></td></tr></table></figure><h3 id="InnoDB-MyISAM-对比">InnoDB &amp; MyISAM 对比</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## MyIsam数据文件 frm = format</span></span><br><span class="line">user.frm</span><br><span class="line">user.MYD</span><br><span class="line">user.MYI</span><br><span class="line"></span><br><span class="line">frm是表结构，MYD是数据，MYI是索引</span><br><span class="line"><span class="string">&#x27;.myd&#x27;</span>是数据表的数据文件,它保存了表的结构定义信息,包括表名、字段名、数据类型、索引等</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## Innodb数据文件 frm = format</span></span><br><span class="line">slave_master_info.frm</span><br><span class="line">slave_master_info.ibd</span><br><span class="line"></span><br><span class="line">mysql中的<span class="string">&#x27;.frm&#x27;</span>是指表定义,是描述表结构的文件</span><br><span class="line">mysql中的<span class="string">&#x27;.ibd&#x27;</span>文件是innodb存储引擎的表空间文件</span><br></pre></td></tr></table></figure><h4 id="InnoDB引擎">InnoDB引擎</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.支持ACID的事务，支持事务的四种隔离级别;</span><br><span class="line">2.支持行级锁及外键约束：因此可以支持写并发;</span><br><span class="line">3.不存储总行数;</span><br><span class="line">4.一个InnoDb擎存储在一个文件空间（共享表空间，表大小不受操作系统控制，一个表可能分布在多个文件里），也有可能为多个（设置为独立表空，表大小受操作系统文件大小限制，一般为2G)，受操作系统文件大小的限制；</span><br><span class="line">5.主键索引采用聚集索引（索引的数据域存储数据文件本身），辅索的数据域存储主键的值；因此从辅索引查找数据，需要先通过辅索引找到主键值，再访问辅索引；最好使用自增主键，防止插入数据时，为维持B+树结构，文件的大调整。</span><br></pre></td></tr></table></figure><p><strong>==innodb的主索引结构==</strong></p><h4 id="MyISAM引擎">MyISAM引擎</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.不支持事务，但是每次查询都是原子的：</span><br><span class="line">2.支持表级锁，即每次操作是对整个表加锁；：</span><br><span class="line">3.存储表的总行数；</span><br><span class="line">4.一个MYI1SAM表有三个文件：索引文件、表结构文件、数据文件：</span><br><span class="line">5.采用菲聚集索引，索引文件的数据域存储指向数据文件的指针。辅索引与主索引基本以致，但是辅索引不用保证唯一性。</span><br></pre></td></tr></table></figure><p><strong>==myisam的主索引结构==</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1723962882533.png" alt="QQ_1723962882533"></p><p><strong>==两种索引数据查找过程==</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1723963094964.png" alt="QQ_1723963094964"></p><h2 id="InnoDB存储引擎设置">InnoDB存储引擎设置</h2><p>在MySQL5.5版本之后，默认的<strong>存储引擎</strong>，提供高可靠性和高性能。</p><p><strong>innodb引擎优点：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">a)    事务安全（遵从ACID）</span><br><span class="line">b)    MVCC（Multi-Versioning Concurrency Control，多版本并发控制）</span><br><span class="line">c)    InnoDB行级锁</span><br><span class="line">d)    支持外键引用完整性约束</span><br><span class="line">e)    出现故障后快速自动恢复（crash safe recovery）</span><br><span class="line">f)    用于在内存中缓存数据和索引的缓冲区池（buffer pool（data buffer page  <span class="built_in">log</span> buffer page） 、undo buffer page）</span><br><span class="line">g)    大型数据卷上的最大性能</span><br><span class="line">h)    将对表的查询与不同存储引擎混合</span><br><span class="line">i)    Oracle样式一致非锁定读取(共享锁)</span><br><span class="line">j)    表数据进行整理来优化基于主键的查询（聚集索引）</span><br></pre></td></tr></table></figure><table><thead><tr><th>功能</th><th>支持</th><th>功</th><th>支持</th></tr></thead><tbody><tr><td><strong>存储限制</strong></td><td>64 TB</td><td><strong>索引高速缓存</strong></td><td>是</td></tr><tr><td><strong>MVCC</strong></td><td>是</td><td><strong>数据高速缓存</strong></td><td>是</td></tr><tr><td><strong>B</strong> <strong>树索引</strong></td><td>是</td><td><strong>自适应散列索引</strong></td><td>是</td></tr><tr><td><strong>群集索引</strong></td><td>是</td><td><strong>复制</strong></td><td>是</td></tr><tr><td><strong>压缩数据</strong></td><td>是</td><td><strong>更新数据字典</strong></td><td>是</td></tr><tr><td><strong>加密数据[b]</strong></td><td>是</td><td><strong>地理空间数据类型</strong></td><td>是</td></tr><tr><td><strong>查询高速缓存</strong></td><td>是</td><td><strong>地理空间索引</strong></td><td>否</td></tr><tr><td><strong>事务</strong></td><td>是</td><td><strong>全文搜索索引</strong></td><td>是</td></tr><tr><td><strong>锁定粒度</strong></td><td>行</td><td><strong>群集数据库</strong></td><td>否</td></tr><tr><td><strong>外键</strong></td><td>是</td><td><strong>备份和恢复</strong></td><td>是</td></tr><tr><td><strong>文件格式管理</strong></td><td>是</td><td><strong>快速索引创建</strong></td><td>是</td></tr><tr><td><strong>多个缓冲区池</strong></td><td>是</td><td><strong>PERFORMANCE_SCHEMA</strong></td><td>是</td></tr><tr><td><strong>更改缓冲</strong></td><td>是</td><td><strong>自动故障恢复</strong></td><td>是</td></tr></tbody></table><h3 id="查询存储引擎的方法">查询存储引擎的方法</h3><p>1、使用 SELECT 确认会话存储引擎：root@world &gt; show table status like ‘countrylanguage’\G</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> @<span class="variable">@default_storage_engine</span>;</span><br><span class="line">或</span><br><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;%engine%&#x27;</span>;</span><br></pre></td></tr></table></figure><p>2、使用 SHOW 确认每个表的存储引擎：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> city;</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">table</span> status <span class="string">&#x27;countrylanguage&#x27;</span>\G</span><br></pre></td></tr></table></figure><p>3、查看所有支持innodb引擎的表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root<span class="variable">@world</span> <span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> engine<span class="operator">=</span><span class="string">&#x27;innodb&#x27;</span>\G;  </span><br></pre></td></tr></table></figure><p>4、从5.1版本，迁移到5.5版本以上版本</p><p>假如5.1版本数据库所有生产表都是myisam的。</p><p>使用mysqldump备份后，一要替换备份的文件中的engine(引擎)字段，从myisam替换为innodb（可以使用sed命令），否则迁移无任何意义。</p><p>数据库升级时，要注意其他配套设施的兼容性，注意代码能否兼容新特性。</p><h3 id="设置存储引擎">设置存储引擎</h3><p>1、在启动配置文件中设置服务器存储引擎：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改MySQL配置文件（永久生效）</span></span><br><span class="line"><span class="section">[root@db01 mysql]</span><span class="comment"># vim /etc/my.cnf</span></span><br><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"><span class="attr">default-storage-engine</span>=&lt;Storage Engine&gt;</span><br></pre></td></tr></table></figure><p>2、使用 SET 命令为当前客户机会话设置：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">SET</span> @@<span class="attribute">storage_engine</span>=&lt;Storage Engine&gt;;</span><br></pre></td></tr></table></figure><p>3、在 CREATE TABLE 语句指定：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> t (i <span class="type">INT</span>) ENGINE = &lt;<span class="keyword">Storage</span> Engine&gt;;</span><br></pre></td></tr></table></figure><h3 id="企业案例">企业案例</h3><p>项目背景：</p><p>公司原有的架构：一个展示型的网站，LAMT，MySQL5.1.77版本（MYISAM），50M数据量。</p><p>小问题不断：</p><ul><li>1、表级锁：对表中任意一行数据修改类操作时，整个表都会锁定，对其他行的操作都不能同时进行。</li><li>2、不支持故障自动恢复（CSR）：当断电时有可能会出现数据损坏或丢失的问题。</li></ul><p>如何解决：</p><ul><li>1、提建议将现有的MYISAM引擎替换为Innodb，将版本替换为5.6.38<ul><li>1）如果使用MYISAM会产生”小问题”，性能安全不能得到保证，使用innodb可以解决这个问题。</li><li>2）5.1.77版本对于innodb引擎支持不够完善，5.6.38版本对innodb支持非常完善了。</li></ul></li><li>2、实施过程和注意要素</li></ul><p><strong>==解决流程==</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 停库前的操作</span></span><br><span class="line"><span class="comment"># 1.准备一个新环境</span></span><br><span class="line"><span class="comment"># 2.二进制安装一个MySQL5.7.44</span></span><br><span class="line"><span class="comment"># 3.当前正在提供服务的生产库，进行一个全备</span></span><br><span class="line">[root@db01 mysql]# mysqldump -uroot -p123 -A &gt; /tmp/full.sql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.将全备恢复到新环境</span></span><br><span class="line">[root@db01 ~]# mysql -uroot -p123 &lt; /tmp/full.sql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.从新环境备份出程序库的所有表数据</span></span><br><span class="line">[root@db01 ~]# mysqldump -uroot -p123 -B zls &gt; /tmp/zerlog.sql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6.修改表的存储引擎</span></span><br><span class="line">[root@db01 ~]# sed -i <span class="string">&#x27;s#ENGINE=MyISAM#ENGINE=InnoDB#g&#x27;</span> /tmp/zrlog.sql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7.将修改后的程序库数据导入新环境</span></span><br><span class="line">1）关闭binlog的记录</span><br><span class="line"><span class="built_in">set</span> sql_log_bin=0;</span><br><span class="line"></span><br><span class="line">2）导入数据</span><br><span class="line"><span class="built_in">source</span> /tmp/zls.sql</span><br><span class="line"></span><br><span class="line">3）开启binlog的记录</span><br><span class="line"><span class="built_in">set</span> sql_log_bin=1;</span><br><span class="line"></span><br><span class="line"><span class="comment">## 停库操作</span></span><br><span class="line"><span class="comment"># 1.先挂维护页</span></span><br><span class="line"><span class="comment"># 2.旧环境停止连接数据库的服务</span></span><br><span class="line">systemctl stop tomcat</span><br><span class="line">systemctl stop php-fpm</span><br><span class="line">...</span><br><span class="line"><span class="comment"># 3.再停止旧环境数据库</span></span><br><span class="line">systemctl stop mysqld</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.从binlog中截取增量数据</span></span><br><span class="line"><span class="comment"># 5.启动新环境数据库</span></span><br><span class="line"><span class="comment"># 6.恢复截取的增量数据到新环境</span></span><br><span class="line"><span class="comment"># 7.测试</span></span><br><span class="line"><span class="comment"># 8.应用割接（将代码原来连接数据库的信息改为新环境）</span></span><br><span class="line"><span class="comment"># 9.启动连接数据库的服务</span></span><br><span class="line"><span class="comment"># 10.取消维护页</span></span><br></pre></td></tr></table></figure><h2 id="InnoDB的存储结构">InnoDB的存储结构</h2><h3 id="innodb系统表空间特性">innodb系统表空间特性</h3><ol><li>默认情况下，InnoDB 元数据、撤消日志和缓冲区存储在系统“表空间”中。</li><li>这是单个逻辑存储区域，可以包含一个或多个文件。</li><li>每个文件可以是常规文件或原始分区。</li><li>最后的文件可以自动扩展。</li></ol><h3 id="表空间的定义">表空间的定义</h3><p>表空间：MySQL数据库存储的方式</p><p>表空间中包含数据文件</p><p>MySQl表空间和数据文件是1:1的关系</p><p>共享表空间除外，是可以1:N关系</p><p><img src="https://cos.lukme.top/Pic/2024-818tablespace.png" alt="QQ_1723777681080"></p><h3 id="表空间类型">表空间类型</h3><ol><li><p>共享表空间：ibdata1~ibdataN,一般是2-3个</p></li><li><p>独立表空间：存放在指定库目录下，例如data/world/目录下的city.ibd</p><p>表空间位置（datadir）：  data/目录下</p></li></ol><ul><li>共享表空间  (物理存储结构）</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">ibdata1~N 通常被叫做系统表空间，是数据初始化生成的</span><br><span class="line">作用：</span><br><span class="line">1）存储表和索引数据：ibdata1文件包含了所有InnoDB表和索引的数据。当创建新的InnoDB表时，数据将被存储在ibdata1中。</span><br><span class="line">2）存储回滚段数据：InnoDB使用回滚段来支持事务的ACID特性。回滚段中的数据也被存储在ibdata1文件中。</span><br><span class="line">3）存储系统表空间：系统表空间存储了InnoDB的元数据，比如表结构、索引信息等。系统表空间也被存储在ibdata1中。</span><br><span class="line">存放 undo，临时表，元数据</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">系统元数据，基表数据，除了表内容数据之外的数据。</span><br><span class="line"> </span><br><span class="line">tmp 表空间（一般很少关注）</span><br><span class="line">　</span><br><span class="line">undo日志 ：数据--回滚数据（回滚日志使用）</span><br><span class="line">　</span><br><span class="line">redo日志 ：ib_logfile0~N 存放系统的innodb表的一些重做日志。</span><br><span class="line"> 说明：undo日志默认实在ibdata中的，在5.6以后是可以单独定义的。</span><br><span class="line"></span><br><span class="line">tmp 表空间在5.7版本之后被移出了ibdata1，变为ibtmp1</span><br><span class="line"></span><br><span class="line">在5.5版本之前，所有的应用数据也都默认存放到了ibdata中。</span><br></pre></td></tr></table></figure><p>独立表空间(一个存储引擎的功能)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">在5.6之后，默认的情况下会单表单独存储到独立表空间文件</span><br><span class="line"></span><br><span class="line">除了系统表空间之外，InnoDB 还在数据库目录中创建另外的表空间，用于每个 InnoDB 表的 .ibd 文件。</span><br><span class="line"></span><br><span class="line">InnoDB 创建的每个新表在数据库目录中设置一个 .ibd 文件来搭配表的.frm 文件。</span><br><span class="line"></span><br><span class="line">可以使用 innodb_file_per_table 选项控制此设置，更改该设置仅会更改已创建的新表的默认值。</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/1190037-20171222205202037-1994656863.png" alt="img"></p><h3 id="设置共享表空间">设置共享表空间</h3><blockquote><p><code>查看当前的共享表空间设置</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@(none) &gt; show variables like <span class="string">&#x27;innodb_data_file_path&#x27;</span>;</span><br><span class="line">+-----------------------+------------------------------------+</span><br><span class="line">| Variable_name         | Value                              |</span><br><span class="line">+-----------------------+------------------------------------+</span><br><span class="line">| innodb_data_file_path | ibdata1:76M;ibdata2:50M:autoextend |</span><br><span class="line">+-----------------------+------------------------------------+</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#共享表空间切割，第二个自懂扩展</span></span><br><span class="line">[root@db02 world]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">innodb_data_file_path=ibdata1:76M;ibdata2:100M:autoextend</span><br><span class="line"></span><br><span class="line"><span class="comment">### 重启数据库</span></span><br><span class="line">systemctl restart mysqld</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置第一个值76M要根据实际大小设置，</span></span><br><span class="line">例如：innodb_data_file_path=ibdata1:50M;ibdata2:50M:autoextend</span><br><span class="line">重启之后进不去mysql，查看日志报错如下</span><br><span class="line">`设置的50M不够76M`  </span><br><span class="line">一页=16k</span><br><span class="line">3200*16/1024=50M</span><br><span class="line">4864*16/1024=76M</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/QQ_1723777681080.png" alt="QQ_1723777681080"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">`为啥要是76M呢？` ,那我们进入data目录，查看共享空间占用内存</span><br><span class="line">[root@db01 data]# <span class="built_in">du</span> -h ibdata1 </span><br><span class="line">76M     ibdata1</span><br><span class="line"></span><br><span class="line">所以至少是76M   ，看自己机器占用实际情况而定</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="企业案例-2">企业案例</h3><p>在没有备份数据的情况下，突然断电导致表损坏，打不开数据库。</p><p><strong>恢复思路</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#表数据存在独立表空间里，只需要将旧数据的表空间导入到新机器</span></span><br><span class="line"><span class="comment">#挂维护页</span></span><br><span class="line"><span class="comment"># 1.停止连接MySQL的所有服务</span></span><br><span class="line"><span class="comment"># 2.停止MySQL数据库</span></span><br><span class="line"><span class="comment"># 3.准备新环境</span></span><br><span class="line">[root@db01 ~]# /etc/init.d/mysqld stop</span><br><span class="line">[root@db01 ~]# <span class="built_in">rm</span> -fr /app/mysql/data</span><br><span class="line">[root@db01 ~]# /app/mysql/scripts/mysql_install_db --user=mysql --</span><br><span class="line">basedir=/app/mysql --datadir=/app/mysql/data</span><br><span class="line">[root@db01 ~]# /etc/init.d/mysqld start</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.找开发要表结构（建表语句）</span></span><br><span class="line">CREATE TABLE world.city (</span><br><span class="line">`ID` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">`Name` char(35) NOT NULL DEFAULT <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">`CountryCode` char(3) NOT NULL DEFAULT <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">`District` char(20) NOT NULL DEFAULT <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">`Population` int(11) NOT NULL DEFAULT <span class="string">&#x27;0&#x27;</span>,PRIMARY KEY (`ID`),</span><br><span class="line">KEY `CountryCode` (`CountryCode`),</span><br><span class="line">KEY `Population` (`Population`),</span><br><span class="line">KEY `inx_aa` (`CountryCode`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=4080 DEFAULT CHARSET=latin1;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.在新环境创建表</span></span><br><span class="line">root@localhost:(none):25: &gt;create database world;</span><br><span class="line">CREATE TABLE world.city (</span><br><span class="line">`ID` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">`Name` char(35) NOT NULL DEFAULT <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">`CountryCode` char(3) NOT NULL DEFAULT <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">`District` char(20) NOT NULL DEFAULT <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">`Population` int(11) NOT NULL DEFAULT <span class="string">&#x27;0&#x27;</span>,PRIMARY KEY (`ID`),</span><br><span class="line">KEY `CountryCode` (`CountryCode`),</span><br><span class="line">KEY `Population` (`Population`),</span><br><span class="line">KEY `inx_aa` (`CountryCode`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=4080 DEFAULT CHARSET=latin1;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6.删除新环境的独立表空间</span></span><br><span class="line">mysql &gt;alter table world.city discard tablespace;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7.从旧环境将city表的表空间拷贝过来</span></span><br><span class="line">[root@db02 world]# scp city.ibd 172.16.1.51:/app/mysql/data/world</span><br><span class="line"></span><br><span class="line"><span class="comment"># 8.新环境独立表空间授权</span></span><br><span class="line">[root@db01 world]# <span class="built_in">chown</span> mysql.mysql city.ibd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 9.新环境导入表空间</span></span><br><span class="line">mysql &gt;alter table world.city import tablespace;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 10.查询数据</span></span><br><span class="line">mysql &gt;<span class="keyword">select</span> * from world.city;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 11.先测试</span></span><br><span class="line"><span class="comment"># 12.应用割接</span></span><br><span class="line">- 开发修改代码连接数据库的IP</span><br><span class="line">- 运维导出新环境的数据，恢复到旧环境</span><br><span class="line"><span class="comment"># 13.启动连接数据库的服务</span></span><br><span class="line"><span class="comment">#取消维护恢复生产</span></span><br></pre></td></tr></table></figure><h3 id="设置独立表空间">设置独立表空间</h3><p>独立表空间在5.6版本是默认开启的。</p><p>独立表空间注意事项：<strong>不开起独立表空间，共享表空间会占用很大</strong></p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">mysql&gt; show variables like &#x27;%per_table%&#x27;;</span></span><br><span class="line"><span class="section">+-----------------------+-------+</span></span><br><span class="line"><span class="section">| Variable_name         | Value |</span></span><br><span class="line"><span class="section">+-----------------------+-------+</span></span><br><span class="line"><span class="section">| innodb_file_per_table | ON    |</span></span><br><span class="line"><span class="section">+-----------------------+-------+</span></span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>在参数文件/etc/my.cnf 可以控制独立表空间</p><p>关闭独立表空间 （0是关闭，1是开启）</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[root@db02 clsn]</span><span class="comment"># vim /etc/my.cnf</span></span><br><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"><span class="attr">innodb_file_per_table</span>=<span class="number">0</span></span><br></pre></td></tr></table></figure><p>查看独立表空间配置</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">mysql&gt; show variables like &#x27;%per_table%&#x27; ;</span></span><br><span class="line"><span class="section">+-----------------------+-------+</span></span><br><span class="line"><span class="section">| Variable_name         | Value |</span></span><br><span class="line"><span class="section">+-----------------------+-------+</span></span><br><span class="line"><span class="section">| innodb_file_per_table | OFF   |</span></span><br><span class="line"><span class="section">+-----------------------+-------+</span></span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>小结:</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">innodb_file_per_table</span>=<span class="number">0</span>    关闭独立表空间</span><br><span class="line"><span class="attr">innodb_file_per_table</span>=<span class="number">1</span>    开启独立表空间，单表单存储</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL索引及扫描</title>
      <link href="/posts/3b4698b9.html"/>
      <url>/posts/3b4698b9.html</url>
      
        <content type="html"><![CDATA[<h2 id="索引概述及分类">索引概述及分类</h2><p>​在关系数据库中，索引是一种单独的、物理的对数据库表中一列或多列的值进行排序的一种存储结构，它是某个表中一列或若干列值的集合和相应的指向表中物理标识这些值的数据页的逻辑指针清单。索引的作用相当于图书的目录，可以根据目录中的页码快速找到所需的内容。</p><ul><li>什么是索引</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">索引是用于快速找出在某个列中拥有特定值的行。</span><br><span class="line">如果没有索引，MySQL必须从第一条记录开始读完整个表，直到找出相关的行，表越大，查询数据所花费的时间就越多。</span><br></pre></td></tr></table></figure><ul><li>为什么建立索引</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1）如果有一张产品表，记录着4W产品的信息。有一个品牌的字段记录产品的品牌，现在想要查询出这个品牌的产品。</span><br><span class="line">2)如果没有索引，那么将从表中第一条记录一条条往下遍历，直到找到该条信息为止。</span><br><span class="line">3）如果拥有索引，那么会将该品牌字段，通过一定的方法进行存储，好让查询该字段上的信息时，能够快4）速找到对应的数据，而不必在遍历4W条产品数据。</span><br></pre></td></tr></table></figure><ul><li>索引算法类型</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">使用什么算法的索引，和MySQL的存储引擎有关（innodb）</span><br><span class="line">Btree算法：B树索引（默认）</span><br><span class="line">HASH算法：HASH索引</span><br><span class="line">FULLTEXT：全文索引</span><br><span class="line">RTREE：R树索引</span><br></pre></td></tr></table></figure><ul><li>索引优缺点</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">优点：</span><br><span class="line">1）所有的字段都可以被索引，也就是可以给任意字段设置索引</span><br><span class="line">2）加快数据的查询速度</span><br><span class="line"></span><br><span class="line">缺点：</span><br><span class="line">1）创建索引和维护索引要耗费时间</span><br><span class="line">2）数据量的增加，所耗费的时间也会增加</span><br><span class="line">3）索引也需要占空间，如果我们的索引量越来越大的话，那么索引文件可能达到我们数据的最大线值</span><br><span class="line">4）表中数据发生变化时，索引也需要动态维护，降低数据维护效率</span><br></pre></td></tr></table></figure><h3 id="索引算法介绍">索引算法介绍</h3><p><strong>Btree</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1723705862018.png" alt="QQ_1723705862018"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * from tb1 <span class="built_in">where</span> <span class="built_in">id</span>=32; 3次IO</span><br><span class="line"></span><br><span class="line"><span class="comment"># 范围查询</span></span><br><span class="line"><span class="keyword">select</span> * from tb1 <span class="built_in">where</span> <span class="built_in">id</span>&gt;25 and <span class="built_in">id</span> &lt;36; 9次IO</span><br><span class="line"></span><br><span class="line">5-20-* 返回  28-28-*  返回 28-35-*  9次io</span><br></pre></td></tr></table></figure><p><strong>B+tree</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1723706447211.png" alt="QQ_1723706447211"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 精确查询</span></span><br><span class="line"><span class="keyword">select</span> * from tb1 <span class="built_in">where</span> <span class="built_in">id</span>=32; 3次IO</span><br><span class="line"></span><br><span class="line"><span class="comment"># 范围查询</span></span><br><span class="line"><span class="keyword">select</span> * from tb1 <span class="built_in">where</span> <span class="built_in">id</span>&gt;25 and <span class="built_in">id</span> &lt;36; 5次IO</span><br><span class="line"></span><br><span class="line">5-20-Q-Q-Q  5次io</span><br><span class="line"></span><br><span class="line"><span class="comment">### Btree算法和B+tree算法的区别</span></span><br><span class="line">1.B+tree算法，优化了范围查询</span><br><span class="line">2.在相邻的叶子节点上添加了指针</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>B*tree</strong></p><p><img src="https://cos.lukme.top/Pic/QQ_1723706709114.png" alt="QQ_1723706709114"></p><h3 id="索引的分类">索引的分类</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 主键索引（聚簇索引）</span></span><br><span class="line">- 联合索引</span><br><span class="line"></span><br><span class="line"><span class="comment"># 唯一索引</span></span><br><span class="line">- 联合索引</span><br><span class="line">- 前缀索引</span><br><span class="line"></span><br><span class="line"><span class="comment"># 普通索引</span></span><br><span class="line">- 联合索引</span><br><span class="line">- 前缀索引</span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看索引</span></span><br><span class="line">1）mysql&gt; desc mysql.user;</span><br><span class="line">+------------------------+--------------+------+-----+-----------------------+-------+</span><br><span class="line">| Field                  | Type         | Null | Key | Default               | Extra |</span><br><span class="line">+------------------------+--------------+------+-----+-----------------------+-------+</span><br><span class="line">| Host                   | char(60)     | NO   | PRI |                       |       |</span><br><span class="line">| User                   | char(16)     | NO   | PRI |                       |       |</span><br><span class="line"></span><br><span class="line">2）mysql&gt; show create table mysql.user;</span><br><span class="line">  PRIMARY KEY (`Host`,`User`)</span><br><span class="line">  </span><br><span class="line">3）mysql&gt; show index from mysql.user;</span><br><span class="line">+-------+------------+----------+--------------+-------------+</span><br><span class="line">| Table | Non_unique | Key_name | Seq_in_index | Column_name |</span><br><span class="line">+-------+------------+----------+--------------+-------------+</span><br><span class="line">| user  |          0 | PRIMARY  |            1 | Host        |</span><br><span class="line">| user  |          0 | PRIMARY  |            2 | User        |</span><br><span class="line">+-------+------------+----------+--------------+-------------+</span><br><span class="line"></span><br><span class="line">索引不是越多越好，避免给大列创建索引</span><br><span class="line">1.索引会进行排序，大列创建索引速度慢</span><br><span class="line">2.索引越多占用磁盘空间越大</span><br></pre></td></tr></table></figure><h2 id="创建索引">创建索引</h2><h3 id="普通-唯一键-主键索引">普通 &amp; 唯一键 &amp; 主键索引</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#统计一个表李有多少条数据</span></span><br><span class="line">root@localhost:zls 09:52:19&gt; <span class="keyword">select</span> count(*) from world.city;</span><br><span class="line">+----------+</span><br><span class="line">| count(*) |</span><br><span class="line">+----------+</span><br><span class="line">| 4079  |</span><br><span class="line">+----------+</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建普通索引</span></span><br><span class="line">alter table 表名 add index 索引名(字段);</span><br><span class="line">mysql&gt; alter table stu2 add index idx_name(name);</span><br><span class="line">mysql&gt; alter table world.city add index idx_population(population);</span><br><span class="line"></span><br><span class="line"><span class="comment">## 删除普通索引</span></span><br><span class="line">mysql&gt; alter table stu2 drop index idx_name;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##唯一键索引</span></span><br><span class="line"><span class="comment">#首先判断这个字段里是否唯一，是否唯一</span></span><br><span class="line">mysql&gt; <span class="keyword">select</span> count(population) from world.city;</span><br><span class="line">+-------------------+</span><br><span class="line">| count(population) |</span><br><span class="line">+-------------------+</span><br><span class="line">| 4079 |</span><br><span class="line">+-------------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#发现去重之后数据和4079比少了，说明数据还是不唯一的，就不能创建唯一键</span></span><br><span class="line">mysql&gt; <span class="keyword">select</span> count(distinct(population)) from world.city;</span><br><span class="line">+-----------------------------+</span><br><span class="line">| count(distinct(population)) |</span><br><span class="line">+-----------------------------+</span><br><span class="line">| 3897 |</span><br><span class="line">+-----------------------------+</span><br><span class="line"></span><br><span class="line"><span class="comment">## 添加唯一键索引</span></span><br><span class="line">mysql&gt; alter table stu30 add unique key uni_phone(phone);</span><br><span class="line"></span><br><span class="line"><span class="comment">## 删除</span></span><br><span class="line">mysql&gt; alter table stu30 drop index uni_phone;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 主键索引</span></span><br><span class="line"><span class="comment">### 建表时创建主键索引</span></span><br><span class="line">mysql&gt; create table stu1(<span class="built_in">id</span> int primary key auto_increment,name varchar(10));</span><br><span class="line">mysql&gt; create table stu1(<span class="built_in">id</span> int auto_increment,name varchar(10),primary key(<span class="built_in">id</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">### 添加主键索引</span></span><br><span class="line">mysql&gt; alter table stu2 add primary key(<span class="built_in">id</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">### 删除主键索引</span></span><br><span class="line">mysql&gt; alter table stu2 drop primary key;</span><br></pre></td></tr></table></figure><h3 id="前缀索引-联合索引">前缀索引 &amp; 联合索引</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">解决给大列创建索引排序速度慢的问题</span><br><span class="line">索引前缀多少字段</span><br><span class="line"><span class="comment">## 普通索引创建前缀索引</span></span><br><span class="line">root@localhost:zls 10:24:28&gt; alter table stu30 add index idx_phone(phone(3));</span><br><span class="line"></span><br><span class="line"><span class="comment">## 唯一索引创建前缀索引</span></span><br><span class="line">root@localhost:zls 10:56:30&gt; alter table stu30 add unique key uni_phone(phone(3));</span><br><span class="line"></span><br><span class="line"><span class="comment">#逐渐不能创建前缀索引</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">一张表中，哪些字段需要创建索引，取决于用户需求</span><br><span class="line">当一张表中，需要创建索引的字段比较多的时候</span><br><span class="line"></span><br><span class="line"><span class="comment">## 普通索引联合索引</span></span><br><span class="line">create table xiangqin</span><br><span class="line">(<span class="built_in">id</span> int,name varchar(10),gender enum(<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;1&#x27;</span>),high int,weight int,body varchar(10),salary int);</span><br><span class="line"></span><br><span class="line"><span class="comment">#哪个需求比较高就先前面</span></span><br><span class="line">mysql&gt; alter table xiangqin add index idx_all(gender,salary,body);</span><br><span class="line">mysql&gt; alter table xiangqin add index idx_all(gender,salary(4),body);</span><br><span class="line"></span><br><span class="line"><span class="comment">#例如需求</span></span><br><span class="line"><span class="built_in">where</span> a.女生 and b.身高 and c.体重 and d.身材好</span><br><span class="line">mysql&gt; alter table xiangqin add index idx_all(a,b,c)</span><br><span class="line"></span><br><span class="line">特点：前缀生效特性</span><br><span class="line">a,ab,ac,abc,abcd 可以走索引或部分走索引</span><br><span class="line">b bc bcd <span class="built_in">cd</span> c d ba ... 不走索引</span><br><span class="line">原则：把最常用来做为条件查询的列放在最前面</span><br><span class="line"></span><br><span class="line"><span class="comment">## 唯一索引创建联合索引</span></span><br><span class="line">mysql alter table xiangqin add unique key uni_all(gender,salary,body);</span><br><span class="line"></span><br><span class="line"><span class="comment">## 主键索引创建联合索引</span></span><br><span class="line">mysql&gt;  alter table xiangqin add primary key(gender,salary,body);</span><br></pre></td></tr></table></figure><h2 id="MySQL数据扫描">MySQL数据扫描</h2><p><strong>全表扫描</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1.<span class="keyword">select</span> * from student;</span><br><span class="line">2.<span class="keyword">select</span> 查询数据时，<span class="built_in">where</span>条件接的字段没有创建索引 （不走索引）   <span class="built_in">type</span>类型的ALL是全表扫描</span><br><span class="line">root@linux50 &gt; explain <span class="keyword">select</span> * from world.city;</span><br><span class="line">+----+-------------+-------+------+------+---------+------+------+-------+</span><br><span class="line">| <span class="built_in">id</span> | select_type | table | <span class="built_in">type</span> | key  | key_len | ref  | rows | Extra |</span><br><span class="line">+----+-------------+-------+------------+---------+------+------+-------+</span><br><span class="line">|  1 | SIMPLE      | city  | ALL  | NULL | NULL    | NULL | 4188 | NULL  |</span><br><span class="line">+----+-------------+-------+------+------+---------+------+------+-------+</span><br></pre></td></tr></table></figure><h3 id="索引扫描">索引扫描</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 走索引的查询</span></span><br><span class="line">1）index // 全索引扫描</span><br><span class="line">+----+-------------+-------+-------+-------------+---------+------+------+</span><br><span class="line">| <span class="built_in">id</span> | select_type | table | <span class="built_in">type</span>  | key         | key_len | ref  | rows |</span><br><span class="line">+----+-------------+-------+-------+-------------+---------+------+------+</span><br><span class="line">|  1 | SIMPLE      | city  | index | CountryCode | 3       | NULL | 4188 |</span><br><span class="line">+----+-------------+-------+-------+-------------+---------+------+------+</span><br><span class="line"></span><br><span class="line">2）range // 范围查询并且创建了索引  (没有索引也是走全扫描)</span><br><span class="line">root@world &gt; explain <span class="keyword">select</span> * from world.city <span class="built_in">where</span> population&lt;100;</span><br><span class="line">+----+-------------+-------+-------+---------+------+------+</span><br><span class="line">| <span class="built_in">id</span> | select_type | table | <span class="built_in">type</span>  | key_len | ref  | rows |</span><br><span class="line">+----+-------------+-------+-------+---------+------+------+</span><br><span class="line">|  1 | SIMPLE      | city  | range | 4       | NULL |    1 |</span><br><span class="line">+----+-------------+-------+-------+---------+------+------+</span><br><span class="line"></span><br><span class="line">3）ref // 联合查询， 普通索引的精确查询</span><br><span class="line">root@world &gt; explain <span class="keyword">select</span> * from world.city <span class="built_in">where</span> countrycode=<span class="string">&#x27;CHN&#x27;</span>;</span><br><span class="line">+----+-------------+-------+------+---------+-------+------+</span><br><span class="line">| <span class="built_in">id</span> | select_type | table | <span class="built_in">type</span> | key_len | ref   | rows |</span><br><span class="line">+----+-------------+-------+------+---------+-------+------+</span><br><span class="line">|  1 | SIMPLE      | city  | ref  | 3       | const |  363 |</span><br><span class="line">+----+-------------+-------+------+---------+-------+------+</span><br><span class="line"></span><br><span class="line">4）eq_ref // 连表查询使用 <span class="built_in">join</span> on 且 小表在前，大表在后</span><br><span class="line"></span><br><span class="line">5）const ，system // 主键精确查询</span><br><span class="line">+----+-------------+-------+-------+---------+---------+-------+</span><br><span class="line">| <span class="built_in">id</span> | select_type | table | <span class="built_in">type</span>  | key     | key_len | ref   |</span><br><span class="line">+----+-------------+-------+-------+---------+---------+-------+</span><br><span class="line">|  1 | SIMPLE      | city  | const | PRIMARY | 4       | const |</span><br><span class="line">+----+-------------+-------+-------+---------+---------+-------+</span><br><span class="line"></span><br><span class="line">6)null    超出字段</span><br><span class="line">+----+-------------+-------+------+---------------+------+---------+</span><br><span class="line">| <span class="built_in">id</span> | select_type | table | <span class="built_in">type</span> | possible_keys | key  | key_len |</span><br><span class="line">+----+-------------+-------+------+---------------+------+---------+</span><br><span class="line">|  1 | SIMPLE      | NULL  | NULL | NULL          | NULL | NULL    |</span><br><span class="line">+----+-------------+-------+------+---------------+------+---------+</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-key_len: 越小越好 ， 前缀索引去控制</span><br><span class="line">-rows: 越小越好</span><br></pre></td></tr></table></figure><h3 id="不走索引排查">不走索引排查</h3><p><strong>索引创建该规范</strong></p><p>为了使索引的使用效率更高，在创建索引时，必须考虑在哪些字段上创建索引和创建什么类型的索引。</p><ul><li><p>每张表必须有一个主键索引</p><ol><li>能创建唯一索引就创建唯一索引</li><li>如果重复值比较多的情况下，联合索引</li><li>为经常需要排序、分组和联合操作的字段建立索引</li><li>为常作为查询条件的字段建立索引</li><li>尽量使用前缀来索引</li></ol></li><li><p>限制索引的数目</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">索引的数目不是越多越好。每个索引都需要占用磁盘空间，索引越多，需要的磁盘空间就越大。修改表时，对索引的重构和更新很麻烦。越多的索引，会使更新表变得很浪费时间。</span><br></pre></td></tr></table></figure><ul><li>删除不再使用或者很少使用的索引</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">表中的数据被大量更新，或者数据的使用方式被改变后，原有的一些索引可能不再需要。数据库管理员应当定期找出这些索引，将它们删除，从而减少索引对更新操作的影响。</span><br></pre></td></tr></table></figure><p><strong>不走索引排查</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.没创建索引</span></span><br><span class="line"><span class="comment"># 2.结果集超过总数据的25%</span></span><br><span class="line">explain <span class="keyword">select</span> * from world.city <span class="built_in">where</span> population &gt;1000;</span><br><span class="line"><span class="comment">#优化：使用limit 分页查询</span></span><br><span class="line">explain <span class="keyword">select</span> * from world.city <span class="built_in">where</span> population &gt;1000 <span class="built_in">limit</span> 60,60;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.使用字段做计算</span></span><br><span class="line">explain <span class="keyword">select</span> * from world.city <span class="built_in">where</span> <span class="built_in">id</span>+1=10;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.隐式转换导致不走索引</span></span><br><span class="line">explain <span class="keyword">select</span> * from stu30 <span class="built_in">where</span> phone=12312312312;</span><br><span class="line"><span class="comment">#优化：根据字段类型查询，是char类型就加上引号</span></span><br><span class="line">explain <span class="keyword">select</span> * from stu30 <span class="built_in">where</span> phone=<span class="string">&#x27;12312312312&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.模糊查询时 %不能放在最前面</span></span><br><span class="line">explain <span class="keyword">select</span> * from world.city <span class="built_in">where</span> countrycode like <span class="string">&#x27;%H&#x27;</span>;</span><br><span class="line"><span class="comment">#优化：%不能放在最前面   搜索引擎数据库 用elasticsearch</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 6.范围查询使用 &lt;&gt; 、 not in</span></span><br><span class="line">explain <span class="keyword">select</span> * from world.city <span class="built_in">where</span> countrycode &lt;&gt; <span class="string">&#x27;CHN&#x27;</span>;</span><br><span class="line"><span class="comment">#优化：使用limit</span></span><br><span class="line">explain <span class="keyword">select</span> * from world.city <span class="built_in">where</span> countrycode &lt;&gt; <span class="string">&#x27;CHN&#x27;</span> <span class="built_in">limit</span> 10;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7.联合索引没有按照索引创建顺序查询，导致不走索引</span></span><br><span class="line">优化方案：调研，日志数据分析，按照用户需求，创建联合索引</span><br><span class="line"></span><br><span class="line"><span class="comment"># 8.索引本身失效</span></span><br><span class="line">优化方案：删除重建</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL语句命令</title>
      <link href="/posts/24d869a6.html"/>
      <url>/posts/24d869a6.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-客户端命令">1.客户端命令</h2><p><strong>MySQL配置文件影响</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">1.影响服务端的启动 [mysqld] --&gt;[server]</span><br><span class="line">2.影响客户端的连接 [mysql][mysqladmin][mysqldump] --&gt;[client]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#所有客户端配置写在配置文件里立即生效</span></span><br><span class="line">[root@db01 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">basedir=/app/mysql</span><br><span class="line">datadir=/app/mysql/data</span><br><span class="line">server_id=1</span><br><span class="line">log-bin=mysql-bin</span><br><span class="line">socket=/opt/mysql.sock</span><br><span class="line"></span><br><span class="line">[client]</span><br><span class="line">user=root</span><br><span class="line">password=123</span><br><span class="line">socket=/opt/mysql.sock</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">? 查看帮助</span><br><span class="line">\q ： quit <span class="built_in">exit</span> 退出mysql终端 MySQL5.6 Ctrl + c</span><br><span class="line">\c ： 终止命令  MySQL5.6 Ctrl + c</span><br><span class="line">\s : 查看MySQL状态</span><br><span class="line">\G ： 格式化输出</span><br><span class="line">\. : <span class="built_in">source</span> 导入数据</span><br><span class="line">\! ： system 后面接系统命令</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#导出数据   </span></span><br><span class="line">-A 备份所有的database</span><br><span class="line">-B 导出那几个数据库</span><br><span class="line">[root@db01 ~]# mysqldump -A &gt;/tmp/luay.sql</span><br><span class="line">[root@db01 ~]# mysqldump -B luay &gt;/tmp/luay.sql</span><br><span class="line"></span><br><span class="line"><span class="comment">#库外导入数据</span></span><br><span class="line">[root@db01 ~]# mysql -uroot &lt;/tmp/luay.sql </span><br><span class="line"></span><br><span class="line"><span class="comment">#库内导入数据（先临时关闭二进制日志记录，再导入）</span></span><br><span class="line">mysql&gt; <span class="built_in">set</span> sql_log_bin=0;</span><br><span class="line">mysql&gt; <span class="built_in">source</span> /tmp/luay.sql</span><br><span class="line">mysql&gt; <span class="built_in">set</span> sql_log_bin=1;</span><br><span class="line"></span><br><span class="line"><span class="comment">#库外导入数据容易脏数据,再开启二进制日志时候，库外导入数据也会记录到二进制日志里，容易造成数据的污染，会产生重复数据</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#不退出MySQL而进行mysql外的操作</span></span><br><span class="line">mysql&gt; system <span class="built_in">ls</span> -l</span><br><span class="line">total 31856</span><br><span class="line">-rw-------.  1 root root      1515 Jul  3 11:00 anaconda-ks.cfg</span><br><span class="line">-rw-rw-rw-.  1 root root       433 Jul  7 13:28 ip_host.sh</span><br><span class="line">-rw-rw-rw-.  1 root root    188754 Apr 23 08:42 main.sh</span><br><span class="line"></span><br><span class="line">mysql&gt; system vim ip_host.sh</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="mysqladmin命令">mysqladmin命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检测MySQL是否存活</span></span><br><span class="line">[root@db01 ~]# mysqladmin -uroot -p123 ping</span><br><span class="line">mysqld is alive</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止MySQL服务</span></span><br><span class="line">[root@db01 ~]# mysqladmin -uroot -p123 shutdown</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看MySQL默认配置</span></span><br><span class="line">[root@db01 ~]# mysqladmin -uroot -p123 variables</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看MySQL状态</span></span><br><span class="line">[root@db01 ~]# mysqladmin -uroot -p123 status</span><br><span class="line"></span><br><span class="line"><span class="comment"># 刷新MySQL binlog日志</span></span><br><span class="line">[root@db01 ~]# mysqladmin -uroot -p123 flush-log</span><br><span class="line"></span><br><span class="line"><span class="comment"># 库外建库</span></span><br><span class="line">[root@db01 ~]# mysqladmin -uroot -p123 create zls111</span><br><span class="line"></span><br><span class="line"><span class="comment"># 库外删库</span></span><br><span class="line">[root@db01 ~]# mysqladmin -uroot -p123 drop zls111</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新加载数据库</span></span><br><span class="line">[root@db01 ~]# mysqladmin -uroot -p123 reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置密码 修改密码</span></span><br><span class="line">[root@db01 ~]# mysqladmin -uroot -p123 password <span class="string">&#x27;1111&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="2-结构化查询语言">2.结构化查询语言</h2><h3 id="DDL-数据定义语言">DDL 数据定义语言</h3><ul><li>Database Definition Language    (create,drop,alter)</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">开发规范：</span><br><span class="line">01) 库、表名不能大写,数字开头,16个字符串</span><br><span class="line">02) 表名和业务有关</span><br><span class="line">03) drop 语句禁止</span><br><span class="line">04) 选择合适的数据类型</span><br><span class="line">05) 必须要有主键</span><br><span class="line">06) 列尽量非空约束</span><br><span class="line">07) 减少外键约束</span><br><span class="line">08) 必须设置存储引擎和字符集</span><br><span class="line">09) 列必须要有注释</span><br><span class="line">10) 对于非负数设置数据类型约束--无符号</span><br></pre></td></tr></table></figure><h4 id="库">库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#进入MySQL显示当前所在库(在客户端配置里添加)</span></span><br><span class="line">[root@db01 ~]# vim /etc/my.cnf</span><br><span class="line">[client]</span><br><span class="line">prompt=<span class="string">&quot;\\u@\\h:\\d \\r:\\m:\\s&gt;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#\\u代表当前用户，\\d代表当前数据库名，\\r:\\m:\\s代表当前时间。</span></span><br></pre></td></tr></table></figure><p><code>增</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">## 增：创建数据库 create</span><br><span class="line">mysql&gt; help create database</span><br><span class="line">Syntax:</span><br><span class="line">CREATE &#123;DATABASE | SCHEMA&#125; [IF NOT EXISTS] db_name</span><br><span class="line">create database 库名字;</span><br><span class="line">create schema 库名字;</span><br><span class="line"></span><br><span class="line">#如果不存在就创建</span><br><span class="line">mysql&gt; create database if not exists zls;</span><br><span class="line">mysql&gt; create schema if not exists zls11;</span><br><span class="line"></span><br><span class="line">#设置字符集和校验规则</span><br><span class="line">character set utf8;</span><br><span class="line">mysql&gt; create database zls123 charset utf8;</span><br><span class="line">mysql&gt; create database if not exists zls123 charset utf8 collate utf8_general_ci;</span><br><span class="line"></span><br><span class="line">#查看创建的字符集</span><br><span class="line">mysql&gt; show create database lgj;</span><br><span class="line">+----------+----------------------------------------------------------------+</span><br><span class="line">| Database | Create Database                                                |</span><br><span class="line">+----------+----------------------------------------------------------------+</span><br><span class="line">| lgj      | CREATE DATABASE `lgj` /*!40100 DEFAULT CHARACTER SET utf8 */|</span><br><span class="line">+----------+----------------------------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#使用二进制安装的MySQL字符集默认是latin</span><br><span class="line">#如何更改字符集？</span><br><span class="line">mysql&gt; show variables like &#x27;%char%&#x27;;</span><br><span class="line">+--------------------------+-----------------------------------+</span><br><span class="line">| Variable_name            | Value                             |</span><br><span class="line">+--------------------------+-----------------------------------+</span><br><span class="line">| character_set_client     | utf8                              |</span><br><span class="line">| character_set_connection | utf8                              |</span><br><span class="line">| character_set_database   | latin1                            |</span><br><span class="line">| character_set_filesystem | binary                            |</span><br><span class="line">| character_set_results    | utf8                              |</span><br><span class="line">| character_set_server     | latin1                            |</span><br><span class="line">| character_set_system     | utf8                              |</span><br><span class="line">| character_sets_dir       | /app/mysql-5.6.50/share/charsets/ |</span><br><span class="line">+--------------------------+-----------------------------------+</span><br><span class="line"></span><br><span class="line">#修改字符集</span><br><span class="line">[root@db02 ~]#  system vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">character_set_server=utf8</span><br><span class="line"></span><br><span class="line">#重启</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>删</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">## 删： drop</span><br><span class="line">mysql&gt; drop database test1111111;</span><br><span class="line">mysql&gt; drop database if exists zls111;</span><br></pre></td></tr></table></figure><p><code>改</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">## 改： alter</span><br><span class="line">mysql&gt; alter database zls charset latin5;</span><br><span class="line">mysql&gt; alter database zls charset utf8 collate ut8_bin;</span><br></pre></td></tr></table></figure><h4 id="表">表</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">## 常用的数据类型</span><br><span class="line">数字类型：</span><br><span class="line">int：整型 -2^31 ~ 2^31 -1 -2147483648 ~ 2147483647</span><br><span class="line">tinyint：最小整型 -128 ~ 127    无符号范围： 0-255</span><br><span class="line">float：浮点型 单精度</span><br><span class="line">double：浮点型 双精度</span><br><span class="line"></span><br><span class="line">字符串类型：</span><br><span class="line">char：定长字符串 char(3) 张三 char(11) char(18)</span><br><span class="line">varchar：变长字符串 varchar(3) 张三</span><br><span class="line">enum：枚举类型 enum(&#x27;f&#x27;,&#x27;m&#x27;) enum(&#x27;0&#x27;,&#x27;1&#x27;) enum(&#x27;A&#x27;,&#x27;B&#x27;,&#x27;C&#x27;,&#x27;D&#x27;)</span><br><span class="line">male   female</span><br><span class="line"></span><br><span class="line">时间类型：</span><br><span class="line">timestamp：时间戳类型 类型的值范围从1970-01-01 00:00:01 UTC到 2038-01-19 03:14:07 UTC</span><br><span class="line">datetime：时间类型 类型的值范围从1000-01-01 00:00:00到 9999-12-31 23:59:59</span><br><span class="line"></span><br><span class="line">## 常用的约束</span><br><span class="line">NULL：可以为空</span><br><span class="line">NOT NULL： 非空</span><br><span class="line">default： 默认值</span><br><span class="line">primary key： 主键 特点：唯一 且 非空</span><br><span class="line">auto_increment： 自增</span><br><span class="line">unique key： 唯一键 特点：唯一 但 可以为空 primary key = unique key + not null</span><br><span class="line">unsigned：无符号（非负数）</span><br><span class="line">comment：注释</span><br></pre></td></tr></table></figure><p><code>增 &amp; 查</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">## 增：创建表</span><br><span class="line">学生表：id 学号，name 名字，age 年龄，gender 性别，phone 手机号，come_time 入学日期</span><br><span class="line">create table student(id int,name varchar(10),age tinyint,gender enum(&#x27;f&#x27;,&#x27;m&#x27;),phone char(11),come_time datetime);</span><br><span class="line"></span><br><span class="line">#创建表，带有约束</span><br><span class="line">create table stu(</span><br><span class="line">id int primary key auto_increment comment &#x27;学生学号&#x27;,</span><br><span class="line">name varchar(10) comment &#x27;学生姓名&#x27;,</span><br><span class="line">age tinyint unsigned not null comment &#x27;学生年龄&#x27;,</span><br><span class="line">gender enum(&#x27;f&#x27;,&#x27;m&#x27;) not null default &#x27;m&#x27; comment &#x27;学生性别&#x27;,</span><br><span class="line">phone char(11) not null unique key comment &#x27;学生手机&#x27;,</span><br><span class="line">come_time datetime not null default NOW() comment &#x27;入学时间&#x27;);</span><br><span class="line"></span><br><span class="line">#查看创建的表</span><br><span class="line">root@student &gt; show create table stu;</span><br><span class="line">+-------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------</span><br><span class="line">| stu   | CREATE TABLE `stu` (</span><br><span class="line">  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT &#x27;学生学号&#x27;,</span><br><span class="line">  `name` varchar(10) DEFAULT NULL COMMENT &#x27;学生姓名&#x27;,</span><br><span class="line">  `age` tinyint(3) unsigned NOT NULL COMMENT &#x27;学生年龄&#x27;,</span><br><span class="line">  `gender` enum(&#x27;f&#x27;,&#x27;m&#x27;) NOT NULL DEFAULT &#x27;m&#x27; COMMENT &#x27;学生性别&#x27;,</span><br><span class="line">  `phone` char(11) NOT NULL COMMENT &#x27;学生手机&#x27;,</span><br><span class="line">  `come_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#x27;入学时间&#x27;,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  UNIQUE KEY `phone` (`phone`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8  </span><br><span class="line"></span><br><span class="line">#查看表结构  (如果已经在student库里，直接使用   desc stu  )</span><br><span class="line">root@mysql &gt; desc student.stu;</span><br><span class="line"># desc 库名 .  表名</span><br><span class="line">+-----------+---------------------+------+-----+-------------------+----------------+</span><br><span class="line">| Field     | Type                | Null | Key | Default           | Extra          |</span><br><span class="line">+-----------+---------------------+------+-----+-------------------+----------------+</span><br><span class="line">| id        | int(11)             | NO   | PRI | NULL              | auto_increment |</span><br><span class="line">| name      | varchar(10)         | YES  |     | NULL              |                |</span><br><span class="line">| age       | tinyint(3) unsigned | NO   |     | NULL              |                |</span><br><span class="line">| gender    | enum(&#x27;f&#x27;,&#x27;m&#x27;)       | NO   |     | m                 |                |</span><br><span class="line">| phone     | char(11)            | NO   | UNI | NULL              |                |</span><br><span class="line">| come_time | datetime            | NO   |     | CURRENT_TIMESTAMP |                |</span><br><span class="line">+-----------+---------------------+------+-----+-------------------+----------------+</span><br><span class="line">6 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#查看表（如果已经再student库里，直接使用   show tables  ）</span><br><span class="line">root@mysql &gt; show tables from student;</span><br><span class="line">+-------------------+</span><br><span class="line">| Tables_in_student |</span><br><span class="line">+-------------------+</span><br><span class="line">| stu               |</span><br><span class="line">+-------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">#插入数据</span><br><span class="line">insert into student.stu (id,name,age,gender,phone) values(123,&#x27;zls&#x27;,18,&#x27;m&#x27;,12312312366);</span><br><span class="line">insert into student.stu (id,name,age,gender,phone) values(1223,&#x27;zls&#x27;,18,&#x27;m&#x27;,12312312365);</span><br><span class="line"></span><br><span class="line">#查看数据</span><br><span class="line">root@mysql &gt; select * from student.stu;</span><br><span class="line">+------+------+-----+--------+-------------+---------------------+</span><br><span class="line">| id   | name | age | gender | phone       | come_time           |</span><br><span class="line">+------+------+-----+--------+-------------+---------------------+</span><br><span class="line">|  123 | zls  |  18 | m      | 12312312366 | 2024-08-12 19:26:04 |</span><br><span class="line">| 1223 | zls  |  18 | m      | 12312312365 | 2024-08-12 19:28:01 |</span><br><span class="line">+------+------+-----+--------+-------------+---------------------+</span><br></pre></td></tr></table></figure><p><code>删 &amp; 改</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 删表 drop</span></span><br><span class="line">student &gt; drop table stu;<span class="comment">#如果已经在student库内</span></span><br><span class="line">mysql &gt; drop table student.stu1</span><br><span class="line"></span><br><span class="line"><span class="comment">## 改表 alter</span></span><br><span class="line"><span class="comment">### 修改表名</span></span><br><span class="line">student &gt; alter table stu3 rename stu30;</span><br><span class="line"></span><br><span class="line"><span class="comment">### 修改字段</span></span><br><span class="line"><span class="comment"># 添加字段（默认添加在最后）</span></span><br><span class="line">mysql &gt; alter table stu10 add lzd char(2);</span><br><span class="line"></span><br><span class="line">root@student &gt; desc stu;</span><br><span class="line">+-----------+---------------------+------+-----+-------------------+----------------+</span><br><span class="line">| Field     | Type                | Null | Key | Default           | Extra          |</span><br><span class="line">+-----------+---------------------+------+-----+-------------------+----------------+</span><br><span class="line">| <span class="built_in">id</span>        | int(11)             | NO   | PRI | NULL              | auto_increment |</span><br><span class="line">| name      | varchar(10)         | YES  |     | NULL              |                |</span><br><span class="line">| age       | tinyint(3) unsigned | NO   |     | NULL              |                |</span><br><span class="line">| gender    | enum(<span class="string">&#x27;f&#x27;</span>,<span class="string">&#x27;m&#x27;</span>)       | NO   |     | m                 |                |</span><br><span class="line">| phone     | char(11)            | NO   | UNI | NULL              |                |</span><br><span class="line">| come_time | datetime            | NO   |     | CURRENT_TIMESTAMP |                |</span><br><span class="line">| zls       | char(2)             | YES  |     | NULL              |                |</span><br><span class="line">+-----------+---------------------+------+-----+-------------------+----------------+</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加字段（添加在指定字段后面）</span></span><br><span class="line">mysql &gt; alter table stu10 add abc char(11) after phone;</span><br><span class="line">root@student &gt; desc stu;</span><br><span class="line">+-----------+---------------------+------+-----+-------------------+----------------+</span><br><span class="line">| Field     | Type                | Null | Key | Default           | Extra          |</span><br><span class="line">+-----------+---------------------+------+-----+-------------------+----------------+</span><br><span class="line">| <span class="built_in">id</span>        | int(11)             | NO   | PRI | NULL              | auto_increment |</span><br><span class="line">| name      | varchar(10)         | YES  |     | NULL              |                |</span><br><span class="line">| age       | tinyint(3) unsigned | NO   |     | NULL              |                |</span><br><span class="line">| gender    | enum(<span class="string">&#x27;f&#x27;</span>,<span class="string">&#x27;m&#x27;</span>)       | NO   |     | m                 |                |</span><br><span class="line">| phone     | char(11)            | NO   | UNI | NULL              |                |</span><br><span class="line">| abc       | char(11)            | YES  |     | NULL              |                |</span><br><span class="line">| come_time | datetime            | NO   |     | CURRENT_TIMESTAMP |                |</span><br><span class="line">| zls       | char(2)             | YES  |     | NULL              |                |</span><br><span class="line">+-----------+---------------------+------+-----+-------------------+----------------+</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加字段（将字段添加在最前面）</span></span><br><span class="line">mysql &gt; alter table stu10 add sss char(11) first;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除字段</span></span><br><span class="line">mysql &gt; alter table stu10 drop lzd;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改字段 modify change</span></span><br><span class="line"><span class="comment">## 只能修改字段的数据类型和约束</span></span><br><span class="line">mysql &gt; alter table stu modify name varchar(10);</span><br><span class="line"></span><br><span class="line"><span class="comment">## 可以修改字段类型和约束外还能修改字段名</span></span><br><span class="line">mysql &gt; alter table stu10 change lyk kangkang varchar(20);</span><br></pre></td></tr></table></figure><h3 id="DML-数据操作语言">DML 数据操作语言</h3><ul><li>Data Manipulation Language       (  insert,delete,update  )</li></ul><h4 id="增删改操作">增删改操作</h4><p><code>增</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#插入之前查看字段</span><br><span class="line"></span><br><span class="line">#insert</span><br><span class="line">#规范用法，插入数据</span><br><span class="line">mysql&gt; insert into stu(classid,birth.sname,sage,sgender,comtime,telnum,qq) values(&#x27;linux01&#x27;,1,NOW(),&#x27;zhangsan&#x27;,20,&#x27;m&#x27;,NOW(),110,123456);</span><br><span class="line"></span><br><span class="line">#插入多条数据</span><br><span class="line">mysql&gt; insert into stu(classid,birth.sname,sage,sgender,comtime,telnum,qq) values(&#x27;linux01&#x27;,1,NOW(),&#x27;zhangsan&#x27;,20,&#x27;m&#x27;,NOW(),110,123456),(&#x27;linux02&#x27;,2,NOW(),&#x27;zhangsi&#x27;,21,&#x27;f&#x27;,NOW(),111,1234567);</span><br></pre></td></tr></table></figure><p><code>删</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#delete</span><br><span class="line"></span><br><span class="line">#规范删除（危险）</span><br><span class="line">mysql&gt; delete from student where sid=3;</span><br><span class="line"></span><br><span class="line">#DDL删除表 （危险）</span><br><span class="line">mysql&gt; truncate table student;</span><br></pre></td></tr></table></figure><p><code>改</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#update  </span><br><span class="line"></span><br><span class="line">#规范update修改</span><br><span class="line">mysql&gt; update student set sgender=&#x27;f&#x27; where sid=1;</span><br><span class="line"></span><br><span class="line">#如果非要全表修改</span><br><span class="line">mysql&gt; update student set sgender=&#x27;f&#x27; where 1=1;</span><br></pre></td></tr></table></figure><h4 id="使用update-伪删除">使用update 伪删除</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1）额外添加一个状态列(前端做判断，0代表没有充钱，1代表充钱)</span><br><span class="line">mysql&gt; alter table student.stu add status enum(0,1) default 1 comment &#x27;0代表没有，1代表有&#x27;;</span><br><span class="line"></span><br><span class="line">2）使用update</span><br><span class="line">mysql&gt; update student.stu set status=&#x27;0&#x27; where sid=1;</span><br><span class="line"></span><br><span class="line">3）应用查询存在的数据</span><br><span class="line">mysql&gt; select * from student where status=1;</span><br></pre></td></tr></table></figure><h3 id="DCL数据控制语言">DCL数据控制语言</h3><p>（Data Control Language)       ( grant )</p><h4 id="grant">grant</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#授权root@10.0.0.51用户所有权限</span></span><br><span class="line">mysql&gt; grant all on *.* to root@<span class="string">&#x27;10.0.0.51&#x27;</span> identified by <span class="string">&#x27;oldboy123&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#授权超级管理员</span></span><br><span class="line">mysql&gt; grant all on *.* to root@<span class="string">&#x27;10.0.0.51&#x27;</span> identified by <span class="string">&#x27;oldboy123&#x27;</span> with grant option;</span><br><span class="line">with grant option：赋予用户grant权限</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#其他参数（扩展）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#max_queries_per_hour：一个用户每小时可发出的查询数量</span></span><br><span class="line">grant insert,update,<span class="keyword">select</span> on zls.* to dev3@<span class="string">&#x27;%&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span> with max_queries_per_hour 3;</span><br><span class="line"></span><br><span class="line"><span class="comment">#max_updates_per_hour：一个用户每小时可发出的更新数量</span></span><br><span class="line">grant insert,update,<span class="keyword">select</span> on zls.* to dev4@<span class="string">&#x27;%&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span> with max_updates_per_hour 1;</span><br><span class="line"></span><br><span class="line"><span class="comment">#max_connetions_per_hour：一个用户每小时可连接到服务器的次数   多个限制可以使用一个with</span></span><br><span class="line">grant insert,update,<span class="keyword">select</span></span><br><span class="line">on zls.*</span><br><span class="line">to dev5@<span class="string">&#x27;%&#x27;</span></span><br><span class="line">identified by <span class="string">&#x27;123&#x27;</span></span><br><span class="line">with max_queries_per_hour 3</span><br><span class="line">max_updates_per_hour 1</span><br><span class="line">max_connections_per_hour 1;</span><br><span class="line"></span><br><span class="line"><span class="comment">#max_user_connetions：允许同时连接数量</span></span><br><span class="line">grant insert,update,<span class="keyword">select</span></span><br><span class="line">on zls.*</span><br><span class="line">to dev6@<span class="string">&#x27;%&#x27;</span></span><br><span class="line">identified by <span class="string">&#x27;123&#x27;</span></span><br><span class="line">with max_user_connections 1;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="revoke回收权限">revoke回收权限</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#收回select权限</span><br><span class="line">mysql&gt; revoke select on *.* from root@&#x27;10.0.0.51&#x27;;</span><br><span class="line"></span><br><span class="line">#查看权限</span><br><span class="line">root@(none) &gt; show grants for root@&#x27;localhost&#x27;;</span><br><span class="line">+---------------------------------------------------------------------+</span><br><span class="line">| Grants for root@localhost                                           |</span><br><span class="line">+---------------------------------------------------------------------+</span><br><span class="line">| GRANT ALL PRIVILEGES ON *.* TO &#x27;root&#x27;@&#x27;localhost&#x27; WITH GRANT OPTION |</span><br><span class="line">| GRANT PROXY ON &#x27;&#x27;@&#x27;&#x27; TO &#x27;root&#x27;@&#x27;localhost&#x27; WITH GRANT OPTION        |</span><br><span class="line">+---------------------------------------------------------------------+</span><br></pre></td></tr></table></figure><h3 id="DQL数据查询语言">DQL数据查询语言</h3><p><strong>Data Query Language</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#下载world库测试 </span></span><br><span class="line">[root@db01 ~]# wget http://test.driverzeng.com/MySQL_File/world.sql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.导入数据</span></span><br><span class="line">1)[root@db01 ~]# mysql -uroot -p123 &lt; world.sql</span><br><span class="line">2)[root@db01 ~]# <span class="built_in">cat</span> world.sql|mysql -uroot -p123</span><br><span class="line">3)mysql&gt; <span class="built_in">source</span> /root/world.sql</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看有多少表</span></span><br><span class="line">root@(none) &gt; show tables from world;</span><br><span class="line">+-----------------+</span><br><span class="line">| Tables_in_world |</span><br><span class="line">+-----------------+</span><br><span class="line">| city            |</span><br><span class="line">| country         |</span><br><span class="line">| countrylanguage |</span><br><span class="line">+-----------------+</span><br><span class="line">3 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看表结构</span></span><br><span class="line">root@(none) &gt; desc world.city;</span><br><span class="line">+-------------+----------+------+-----+---------+----------------+</span><br><span class="line">| Field       | Type     | Null | Key | Default | Extra          |</span><br><span class="line">+-------------+----------+------+-----+---------+----------------+</span><br><span class="line">| ID          | int(11)  | NO   | PRI | NULL    | auto_increment |</span><br><span class="line">| Name        | char(35) | NO   |     |         |                |</span><br><span class="line">| CountryCode | char(3)  | NO   | MUL |         |                |</span><br><span class="line">| District    | char(20) | NO   |     |         |                |</span><br><span class="line">| Population  | int(11)  | NO   |     | 0       |                |</span><br><span class="line">+-------------+----------+------+-----+---------+----------------+</span><br></pre></td></tr></table></figure><h4 id="show">show</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">show databases;<span class="comment">#查看库</span></span><br><span class="line">show tables;<span class="comment">#查看表--已经在world库里</span></span><br><span class="line">show tables from world; <span class="comment">#查看world库里的所有表</span></span><br><span class="line">show create database zls; <span class="comment">#查看创建库的语句</span></span><br><span class="line">show create table zls.stu30; <span class="comment">#查看创建表的语句</span></span><br><span class="line">show grants <span class="keyword">for</span> root@<span class="string">&#x27;%&#x27;</span>;  </span><br><span class="line">show variables like <span class="string">&#x27;%char%&#x27;</span>;</span><br><span class="line">show engines;<span class="comment">#查看MySQL中自带的储存引擎</span></span><br><span class="line">show charset;<span class="comment"># MySQL支持的字符集</span></span><br><span class="line">show collation;<span class="comment"># MySQL支持的校验规则</span></span><br><span class="line">show processlist;<span class="comment">#查看MySQL后台SQL语句执行状态</span></span><br><span class="line">show full processlist;<span class="comment">#查看MySQL后台SQL语句执行状态</span></span><br><span class="line"></span><br><span class="line">desc mysql.user;<span class="comment"># desc 查看表结构</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root@(none) &gt; show grants <span class="keyword">for</span> root@<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line">+---------------------------------------------------------------------+</span><br><span class="line">| Grants <span class="keyword">for</span> root@localhost                                           |</span><br><span class="line">+---------------------------------------------------------------------+</span><br><span class="line">| GRANT ALL PRIVILEGES ON *.* TO <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> WITH GRANT OPTION |</span><br><span class="line">| GRANT PROXY ON <span class="string">&#x27;&#x27;</span>@<span class="string">&#x27;&#x27;</span> TO <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> WITH GRANT OPTION        |</span><br><span class="line">+---------------------------------------------------------------------+</span><br><span class="line">2 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root@(none) &gt; show variables like <span class="string">&#x27;%char%&#x27;</span>;</span><br><span class="line">+--------------------------+-----------------------------------+</span><br><span class="line">| Variable_name            | Value                             |</span><br><span class="line">+--------------------------+-----------------------------------+</span><br><span class="line">| character_set_client     | utf8                              |</span><br><span class="line">| character_set_connection | utf8                              |</span><br><span class="line">| character_set_database   | utf8                              |</span><br><span class="line">| character_set_filesystem | binary                            |</span><br><span class="line">| character_set_results    | utf8                              |</span><br><span class="line">| character_set_server     | utf8                              |</span><br><span class="line">| character_set_system     | utf8                              |</span><br><span class="line">| character_sets_dir       | /app/mysql-5.6.50/share/charsets/ |</span><br><span class="line">+--------------------------+-----------------------------------+</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看MySQL后台SQL语句执行状态</span></span><br><span class="line">root@(none) &gt; show processlist;</span><br><span class="line">+----+------+---------------+-------+---------+------+-------+------------------+</span><br><span class="line">| Id | User | Host          | db    | Command | Time | State | Info             |</span><br><span class="line">+----+------+---------------+-------+---------+------+-------+------------------+</span><br><span class="line">|  3 | root | 10.0.0.1:1083 | <span class="built_in">test</span>  | Sleep   | 9411 |       | NULL             |</span><br><span class="line">|  4 | root | 10.0.0.1:1084 | mysql | Sleep   | 9414 |       | NULL             |</span><br><span class="line">|  5 | root | 10.0.0.1:1095 | world | Sleep   | 9551 |       | NULL             |</span><br><span class="line">|  8 | root | localhost     | NULL  | Query   |    0 | init  | show processlist |</span><br><span class="line">+----+------+---------------+-------+---------+------+-------+------------------+</span><br></pre></td></tr></table></figure><h4 id="select">select</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"># select</span><br><span class="line">use world；进入world库里</span><br><span class="line"></span><br><span class="line">## 全表扫描 (  慎用，要加上条件，否则所有数据都会加载到内存里)</span><br><span class="line">select * from city;</span><br><span class="line"></span><br><span class="line">## 单条件查询</span><br><span class="line">select * from city where id=10;</span><br><span class="line"></span><br><span class="line">## 多条件查询</span><br><span class="line">select * from city where countrycode=&#x27;CHN&#x27; or countrycode=&#x27;USA&#x27;;</span><br><span class="line"></span><br><span class="line">## 成员查询</span><br><span class="line">select * from city where countrycode in (&#x27;CHN&#x27;,&#x27;USA&#x27;);</span><br><span class="line"></span><br><span class="line">## 联合查询</span><br><span class="line">select * from city where countrycode=&#x27;CHN&#x27; union all select * from city where countrycode=&#x27;USA&#x27;;</span><br><span class="line"></span><br><span class="line">## 范围查询 &lt; 、 &gt; 、 &gt;= 、 &lt;= 、 &lt;&gt; 、 !=</span><br><span class="line">select * from city where id&lt;10;</span><br><span class="line"></span><br><span class="line">## 模糊查询</span><br><span class="line">select * from city where countrycode like &#x27;%H%&#x27;;#城市代码里含有H的</span><br><span class="line">select * from city where countrycode like &#x27;H%&#x27;;#城市代码里以H开头的</span><br><span class="line">select * from city where countrycode like &#x27;%H&#x27;;#城市代码里以H结尾的</span><br><span class="line"></span><br><span class="line">## 排序查询 order by</span><br><span class="line"># 正序</span><br><span class="line">select * from city where countrycode like &#x27;H%&#x27; order by population;</span><br><span class="line"># 倒叙</span><br><span class="line">select * from city where countrycode like &#x27;H%&#x27; order by population desc;</span><br><span class="line"></span><br><span class="line">## 分页查询</span><br><span class="line">select * from city limit 60;</span><br><span class="line">select * from city limit 180,60;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>使用函数</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">MySQL自带的函数：</span><br><span class="line">password()</span><br><span class="line">now()</span><br><span class="line">distinct()#去重函数</span><br><span class="line"></span><br><span class="line">## 分组查询 group by</span><br><span class="line"># max()</span><br><span class="line"># min()</span><br><span class="line"># avg()</span><br><span class="line"># sum()</span><br><span class="line"># count()</span><br><span class="line">1.遇到统计想函数</span><br><span class="line">2.形容词前groupby</span><br><span class="line">3.函数中央是名词</span><br><span class="line">4.列名select后添加</span><br><span class="line"></span><br><span class="line">`练习`</span><br><span class="line"># 统计世界上每个国家的总人口数</span><br><span class="line">1.遇到统计想函数 sum()</span><br><span class="line">2.形容词前groupby group by countrycode</span><br><span class="line">3.函数中央是名词 sum(population)</span><br><span class="line">4.列名select后添加 select 国家,总人口数</span><br><span class="line">select countrycode,sum(population) from city group by countrycode;</span><br><span class="line"></span><br><span class="line"># 统计中国各个省的人口数量(练习)</span><br><span class="line">1.遇到统计想函数 sum()</span><br><span class="line">2.形容词前groupby groupby district</span><br><span class="line">3.函数中央是名词 sum(population)</span><br><span class="line">4.列名select后添加 select countrycode,district,sum(population)</span><br><span class="line">select countrycode,district,sum(population) from city where countrycode=&#x27;CHN&#x27;</span><br><span class="line">group by district;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 统每个国家的城市数量(练习)</span><br><span class="line">1.遇到统计想函数 count()</span><br><span class="line">2.形容词前groupby group by countrycode</span><br><span class="line">3.函数中央是名词 count(name)</span><br><span class="line">4.列名select后添加 select countrycode,count(name)</span><br><span class="line">select countrycode,count(name) from city group by countrycode order by count(name);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 统每个国家的每个省的城市数量(练习)</span><br><span class="line">select CountryCode,District,count(Name) from city group by District order by count(name);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 统中国的每个省的城市数量(练习)</span><br><span class="line">select CountryCode,District,count(Name) from city where CountryCode=&#x27;CHN&#x27; group by District order by count(name);</span><br><span class="line"></span><br><span class="line">#统计每个国家最多人数的省份</span><br><span class="line">select CountryCode,District,max(population) from city group by population;</span><br><span class="line"></span><br><span class="line">#统计中国每个省的人数</span><br><span class="line">select CountryCode, District,sum(population) from city where CountryCode=&#x27;CHN&#x27; group by District;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#传统连接</span><br><span class="line">select country.name as 国家名,city.name as 城市名,countrylanguage.language as 国家语言,city.population as 城市人口</span><br><span class="line">from city,country,countrylanguage</span><br><span class="line">where city.CountryCode=country.code and country.code=countrylanguage.CountryCode</span><br><span class="line">and city.population&lt;100;</span><br><span class="line"></span><br><span class="line">#select自连接（必须得有等价条件）</span><br><span class="line">select country.name as 国家名,city.name as 城市名</span><br><span class="line">from city natural join country</span><br><span class="line">where city.population&lt;100;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">select country.name,city.name,countrylanguage.language,city.population</span><br><span class="line">from city  join (country,countrylanguage)</span><br><span class="line">on city.CountryCode=country.code and country.code=countrylanguage.CountryCode</span><br><span class="line">where city.population&lt;100;</span><br></pre></td></tr></table></figure><h4 id="select-连表查询">select-连表查询</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#简单连表查询</span></span><br><span class="line">root@student &gt; create table stu(<span class="built_in">id</span> int,name varchar(10));</span><br><span class="line">root@student &gt; insert into stu values(1,<span class="string">&#x27;zhang3&#x27;</span>),(2,<span class="string">&#x27;li4&#x27;</span>),(3,<span class="string">&#x27;wang5&#x27;</span>);</span><br><span class="line"></span><br><span class="line">root@student &gt; create table score(<span class="built_in">id</span> int,mark tinyint unsigned);</span><br><span class="line">root@student &gt; insert into score values(1,80),(2,90),(3,100);</span><br><span class="line"></span><br><span class="line">root@student &gt; <span class="keyword">select</span> * from stu;</span><br><span class="line">+------+--------+</span><br><span class="line">| <span class="built_in">id</span>   | name   |</span><br><span class="line">+------+--------+</span><br><span class="line">|    1 | zhang3 |</span><br><span class="line">|    2 | li4    |</span><br><span class="line">|    3 | wang5  |</span><br><span class="line">+------+--------+</span><br><span class="line">3 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">root@student &gt; <span class="keyword">select</span> * from score;</span><br><span class="line">+------+------+</span><br><span class="line">| <span class="built_in">id</span>   | mark |</span><br><span class="line">+------+------+</span><br><span class="line">|    1 |   80 |</span><br><span class="line">|    2 |   90 |</span><br><span class="line">|    3 |  100 |</span><br><span class="line">+------+------+</span><br><span class="line">3 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#查询zhang3同学的成绩</span></span><br><span class="line">root@student &gt; <span class="keyword">select</span> stu.name,score.mark </span><br><span class="line">from stu,score</span><br><span class="line"><span class="built_in">where</span> stu.id=score.id</span><br><span class="line">and stu.name=<span class="string">&#x27;zhang3&#x27;</span>;</span><br><span class="line">+--------+------+</span><br><span class="line">| name   | mark |</span><br><span class="line">+--------+------+</span><br><span class="line">| zhang3 |   80 |</span><br><span class="line">+--------+------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure><p><strong>==传统查询==</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看表结构</span></span><br><span class="line"></span><br><span class="line">root@world &gt; desc city;</span><br><span class="line">+-------------+----------+------+-----+---------+----------------+</span><br><span class="line">| Field       | Type     | Null | Key | Default | Extra          |</span><br><span class="line">+-------------+----------+------+-----+---------+----------------+</span><br><span class="line">| ID          | int(11)  | NO   | PRI | NULL    | auto_increment |</span><br><span class="line">| Name        | char(35) | NO   |     |         |                |</span><br><span class="line">| CountryCode | char(3)  | NO   | MUL |         |                |</span><br><span class="line">| District    | char(20) | NO   |     |         |                |</span><br><span class="line">| Population  | int(11)  | NO   |     | 0       |                |</span><br><span class="line">+-------------+----------+------+-----+---------+----------------+</span><br><span class="line">5 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root@world &gt; desc country;</span><br><span class="line">+----------------+---------------------------------+------+-----+---------+-------+</span><br><span class="line">| Field          | Type                            | Null | Key | Default | Extra |</span><br><span class="line">+----------------+---------------------------------+------+-----+---------+-------+</span><br><span class="line">| Code           | char(3)                         | NO   | PRI |         |       |</span><br><span class="line">| Name           | char(52)                        | NO   |     |         |       |</span><br><span class="line">| Continent      | enum(<span class="string">&#x27;Asia&#x27;</span>,<span class="string">&#x27;Europe&#x27;</span>, America<span class="string">&#x27;) | NO   |     | Asia    |       |</span></span><br><span class="line"><span class="string">| Region         | char(26)                        | NO   |     |         |       |</span></span><br><span class="line"><span class="string">| SurfaceArea    | float(10,2)                     | NO   |     | 0.00    |       |</span></span><br><span class="line"><span class="string">| IndepYear      | smallint(6)                     | YES  |     | NULL    |       |</span></span><br><span class="line"><span class="string">| Population     | int(11)                         | NO   |     | 0       |       |</span></span><br><span class="line"><span class="string">| LifeExpectancy | float(3,1)                      | YES  |     | NULL    |       |</span></span><br><span class="line"><span class="string">| GNP            | float(10,2)                     | YES  |     | NULL    |       |</span></span><br><span class="line"><span class="string">| GNPOld         | float(10,2)                     | YES  |     | NULL    |       |</span></span><br><span class="line"><span class="string">| LocalName      | char(45)                        | NO   |     |         |       |</span></span><br><span class="line"><span class="string">| GovernmentForm | char(45)                        | NO   |     |         |       |</span></span><br><span class="line"><span class="string">| HeadOfState    | char(60)                        | YES  |     | NULL    |       |</span></span><br><span class="line"><span class="string">| Capital        | int(11)                         | YES  |     | NULL    |       |</span></span><br><span class="line"><span class="string">| Code2          | char(2)                         | NO   |     |         |       |</span></span><br><span class="line"><span class="string">+----------------+---------------------------------+------+-----+---------+-------+</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">root@world &gt; desc countrylanguage;</span></span><br><span class="line"><span class="string">+-------------+---------------+------+-----+---------+-------+</span></span><br><span class="line"><span class="string">| Field       | Type          | Null | Key | Default | Extra |</span></span><br><span class="line"><span class="string">+-------------+---------------+------+-----+---------+-------+</span></span><br><span class="line"><span class="string">| CountryCode | char(3)       | NO   | PRI |         |       |</span></span><br><span class="line"><span class="string">| Language    | char(30)      | NO   | PRI |         |       |</span></span><br><span class="line"><span class="string">| IsOfficial  | enum(&#x27;</span>T<span class="string">&#x27;,&#x27;</span>F<span class="string">&#x27;) | NO   |     | F       |       |</span></span><br><span class="line"><span class="string">| Percentage  | float(4,1)    | NO   |     | 0.0     |       |</span></span><br><span class="line"><span class="string">+-------------+---------------+------+-----+---------+-------+</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><p><strong>查询世界上小于100人口的城市是哪个国家的？</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">国家名城市名城市人口数</span><br><span class="line"></span><br><span class="line">root@world &gt; <span class="keyword">select</span> country.name,city.name,city.population</span><br><span class="line">from country,city </span><br><span class="line"><span class="built_in">where</span> city.CountryCode=country.code </span><br><span class="line">and city.population&lt;100;</span><br><span class="line">+----------+-----------+------------+</span><br><span class="line">| name     | name      | population |</span><br><span class="line">+----------+-----------+------------+</span><br><span class="line">| Pitcairn | Adamstown |         42 |</span><br><span class="line">+----------+-----------+------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">root@world &gt; <span class="keyword">select</span> country.name as 国家名,city.name as 城市名,city.population as 城市人口</span><br><span class="line">from country,city </span><br><span class="line"><span class="built_in">where</span> city.CountryCode=country.code </span><br><span class="line">and city.population&lt;100;</span><br><span class="line">+-----------+-----------+--------------+</span><br><span class="line">| 国家名    | 城市名    | 城市人口       |</span><br><span class="line">+-----------+-----------+--------------+</span><br><span class="line">| Pitcairn  | Adamstown |           42 |</span><br><span class="line">+-----------+-----------+--------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure><p><strong>世界上小于100人口的城市说什么语言？</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#三表联查</span></span><br><span class="line">国家名，城市名，语言，人口</span><br><span class="line"></span><br><span class="line">root@world &gt; <span class="keyword">select</span> country.name,city.name,countrylanguage.language,city.population </span><br><span class="line">from country,city,countrylanguage </span><br><span class="line"><span class="built_in">where</span> city.countrycode=country.code and country.code=countrylanguage.countrycode </span><br><span class="line">and city.population&lt;100;</span><br><span class="line">+----------+-----------+-------------+------------+</span><br><span class="line">| name     | name      | language    | population |</span><br><span class="line">+----------+-----------+-------------+------------+</span><br><span class="line">| Pitcairn | Adamstown | Pitcairnese |         42 |</span><br><span class="line">+----------+-----------+-------------+------------+</span><br></pre></td></tr></table></figure><p><strong>==select自连接==</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 自动关联多张表的数据（自动帮我们找到等价条件）等价条件的字段名必须相同，比如student库里表的ID</span></span><br><span class="line"><span class="comment">#查看表结构</span></span><br><span class="line">root@student &gt; desc stu;</span><br><span class="line">+-------+-------------+------+-----+---------+-------+</span><br><span class="line">| Field | Type        | Null | Key | Default | Extra |</span><br><span class="line">+-------+-------------+------+-----+---------+-------+</span><br><span class="line">| <span class="built_in">id</span>    | int(11)     | YES  |     | NULL    |       |</span><br><span class="line">| name  | varchar(10) | YES  |     | NULL    |       |</span><br><span class="line">+-------+-------------+------+-----+---------+-------+</span><br><span class="line"></span><br><span class="line">root@student &gt; desc score;</span><br><span class="line">+-------+---------------------+------+-----+---------+-------+</span><br><span class="line">| Field | Type                | Null | Key | Default | Extra |</span><br><span class="line">+-------+---------------------+------+-----+---------+-------+</span><br><span class="line">| <span class="built_in">id</span>    | int(11)             | YES  |     | NULL    |       |</span><br><span class="line">| mark  | tinyint(3) unsigned | YES  |     | NULL    |       |</span><br><span class="line">+-------+---------------------+------+-----+---------+-------+</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#查询zhang3同学的成绩，使用自连接查询</span></span><br><span class="line"><span class="keyword">select</span> stu.name,score.mark</span><br><span class="line">from stu natural <span class="built_in">join</span> score</span><br><span class="line"><span class="built_in">where</span> stu.name=<span class="string">&#x27;zhang3&#x27;</span>;</span><br><span class="line">+--------+------+</span><br><span class="line">| name   | mark |</span><br><span class="line">+--------+------+</span><br><span class="line">| zhang3 |   80 |</span><br><span class="line">+--------+------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 世界上小于100人的人口城市是哪个国家的说的什么语言？</span></span><br><span class="line">root@world &gt; <span class="keyword">select</span> city.countrycode,city.name,city.population,countrylanguage.language</span><br><span class="line">from countrylanguage natural <span class="built_in">join</span> city</span><br><span class="line"><span class="built_in">where</span> city.population&lt;100;</span><br><span class="line">+-------------+-----------+------------+-------------+</span><br><span class="line">| countrycode | name      | population | language    |</span><br><span class="line">+-------------+-----------+------------+-------------+</span><br><span class="line">| PCN         | Adamstown |         42 | Pitcairnese |</span><br><span class="line">+-------------+-----------+------------+-------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure><p><strong>==内连接(inner join)==</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 语法：tb1 join tb2 on 等价条件</span></span><br><span class="line"><span class="comment">## 语法：tb1 join tb2 on 等价条件1 join tb3 on 等价条件2</span></span><br><span class="line"></span><br><span class="line">inner <span class="built_in">join</span> on <span class="comment"># 内连接</span></span><br><span class="line"><span class="comment"># 世界上小于100人的人口城市是哪个国家的？</span></span><br><span class="line"></span><br><span class="line">国家名，城市名，城市人口</span><br><span class="line"></span><br><span class="line">root@world &gt; <span class="keyword">select</span> country.name,city.name,city.population</span><br><span class="line">from country <span class="built_in">join</span> city</span><br><span class="line">on country.code=city.countrycode</span><br><span class="line"><span class="built_in">where</span> city.population&lt;100;</span><br><span class="line">+----------+-----------+------------+</span><br><span class="line">| name     | name      | population |</span><br><span class="line">+----------+-----------+------------+</span><br><span class="line">| Pitcairn | Adamstown |         42 |</span><br><span class="line">+----------+-----------+------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 世界上小于100人的人口城市是哪个国家的说的什么语言？</span></span><br><span class="line"></span><br><span class="line">root@world &gt; <span class="keyword">select</span> country.name,city.name,city.population,countrylanguage.language</span><br><span class="line">from country <span class="built_in">join</span> city</span><br><span class="line">on country.code=city.countrycode</span><br><span class="line"><span class="built_in">join</span> countrylanguage</span><br><span class="line">on countrylanguage.countrycode=city.countrycode</span><br><span class="line"><span class="built_in">where</span> city.population&lt;100;</span><br><span class="line"></span><br><span class="line">+----------+-----------+------------+-------------+</span><br><span class="line">| name     | name      | population | language    |</span><br><span class="line">+----------+-----------+------------+-------------+</span><br><span class="line">| Pitcairn | Adamstown |         42 | Pitcairnese |</span><br><span class="line">+----------+-----------+------------+-------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.01 sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>==select外连接==</strong></p><p><strong>左外连接</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">left outer join</span><br><span class="line">root@world &gt; select city.name,city.countrycode,country.name</span><br><span class="line">from city left join country </span><br><span class="line">on city.countrycode=country.code and</span><br><span class="line">city.population&lt;100 limit 10;</span><br><span class="line">+----------------+-------------+------+</span><br><span class="line">| name           | countrycode | name |</span><br><span class="line">+----------------+-------------+------+</span><br><span class="line">| Kabul          | AFG         | NULL |</span><br><span class="line">| Qandahar       | AFG         | NULL |</span><br><span class="line">| Herat          | AFG         | NULL |</span><br><span class="line">| Mazar-e-Sharif | AFG         | NULL |</span><br><span class="line">| Amsterdam      | NLD         | NULL |</span><br><span class="line">| Rotterdam      | NLD         | NULL |</span><br><span class="line">| Haag           | NLD         | NULL |</span><br><span class="line">| Utrecht        | NLD         | NULL |</span><br><span class="line">| Eindhoven      | NLD         | NULL |</span><br><span class="line">| Tilburg        | NLD         | NULL |</span><br><span class="line">+----------------+-------------+------+</span><br><span class="line">10 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">left join</span><br><span class="line">只显示左边city信息</span><br><span class="line">=</span><br></pre></td></tr></table></figure><p><strong>右外连接</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">right outer join</span><br><span class="line">root@world&gt;  select city.name,city.countrycode,country.name</span><br><span class="line">from city right join country on city.countrycode=country.code and</span><br><span class="line">city.population&lt;100 limit 10;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root@world &gt; select city.name,city.countrycode,country.name</span><br><span class="line">from city right join country </span><br><span class="line">on city.countrycode=country.code and</span><br><span class="line">city.population&lt;100 limit 10;</span><br><span class="line">+------+-------------+----------------------+</span><br><span class="line">| name | countrycode | name                 |</span><br><span class="line">+------+-------------+----------------------+</span><br><span class="line">| NULL | NULL        | Aruba                |</span><br><span class="line">| NULL | NULL        | Afghanistan          |</span><br><span class="line">| NULL | NULL        | Angola               |</span><br><span class="line">| NULL | NULL        | Anguilla             |</span><br><span class="line">| NULL | NULL        | Albania              |</span><br><span class="line">| NULL | NULL        | Andorra              |</span><br><span class="line">| NULL | NULL        | Netherlands Antilles |</span><br><span class="line">| NULL | NULL        | United Arab Emirates |</span><br><span class="line">| NULL | NULL        | Argentina            |</span><br><span class="line">| NULL | NULL        | Armenia              |</span><br><span class="line">+------+-------------+----------------------+</span><br><span class="line">10 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">只显示右边country信息</span><br><span class="line">right join</span><br></pre></td></tr></table></figure><h3 id="连表查询练习">连表查询练习</h3><h4 id="创建库-表">创建库 &amp; 表</h4><ul><li><p>库Linux</p></li><li><p>表：student 学生表</p></li></ul><table><thead><tr><th>字段</th><th>数据类型要求</th><th>是否为空</th><th>注释</th></tr></thead><tbody><tr><td>sno</td><td>最多20位</td><td>否</td><td>学号</td></tr><tr><td>sname</td><td>可变长</td><td>否</td><td>学生姓名</td></tr><tr><td>sage</td><td>最小整数，非负数</td><td>否</td><td>学生年龄</td></tr><tr><td>ssex</td><td>0,1</td><td>否</td><td>学生性别（1是男，0是女，默认男）</td></tr><tr><td>sbirthday</td><td>时间类型</td><td>默认为空</td><td>学生生日</td></tr><tr><td>class</td><td>可变长</td><td>否</td><td>学生班级</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">root@world &gt; create database linux;</span><br><span class="line">root@world &gt; use linux</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建表</span></span><br><span class="line">create table linux.student(</span><br><span class="line">sno bigint(20) primary key auto_increment comment <span class="string">&#x27;学生学号&#x27;</span>,</span><br><span class="line">sname varchar(10) not null comment <span class="string">&#x27;学生姓名&#x27;</span>,</span><br><span class="line">sage tinyint unsigned not null comment <span class="string">&#x27;学生年龄&#x27;</span>,</span><br><span class="line">ssex enum(<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;1&#x27;</span>) not null default <span class="string">&#x27;1&#x27;</span> comment <span class="string">&#x27;学生性别（1是男，0是女）默认为男）&#x27;</span>,</span><br><span class="line">sbirthday datetime  comment <span class="string">&#x27;学生生日&#x27;</span>,</span><br><span class="line">class varchar(10) not null  comment <span class="string">&#x27;学生班级&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">#插入数据</span></span><br><span class="line">insert student (sname,sage,ssex,class)</span><br><span class="line">values(<span class="string">&#x27;小明&#x27;</span>,18,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;1班&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;李明&#x27;</span>,20,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;1班&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;小红&#x27;</span>,20,<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;2班&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;小王&#x27;</span>,21,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;1班&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;小蔡&#x27;</span>,19,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2班&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;小李&#x27;</span>,21,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;1班&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;小丽&#x27;</span>,20,<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;2班&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看表</span></span><br><span class="line">root@linux &gt; <span class="keyword">select</span> * from student <span class="built_in">where</span> 1=1;</span><br><span class="line">+-----+--------+------+------+-----------+-------+</span><br><span class="line">| sno | sname  | sage | ssex | sbirthday | class |</span><br><span class="line">+-----+--------+------+------+-----------+-------+</span><br><span class="line">|   1 | 小明   |   18 | 1    | NULL      | 1班   |</span><br><span class="line">|   2 | 李明   |   20 | 1    | NULL      | 1班   |</span><br><span class="line">|   3 | 小红   |   20 | 0    | NULL      | 2班   |</span><br><span class="line">|   4 | 小王   |   21 | 1    | NULL      | 1班   |</span><br><span class="line">|   5 | 小蔡   |   19 | 1    | NULL      | 2班   |</span><br><span class="line">|   6 | 小李   |   21 | 1    | NULL      | 1班   |</span><br><span class="line">|   7 | 小丽   |   20 | 0    | NULL      | 2班   |</span><br><span class="line">+-----+--------+------+------+-----------+-------+</span><br><span class="line">7 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure><ul><li>course表  课程表</li></ul><table><thead><tr><th>字段</th><th>数据类型要求</th><th>是否为空</th><th>注释</th></tr></thead><tbody><tr><td>cno</td><td>最多20位</td><td>否</td><td>课程号（主键）</td></tr><tr><td>cname</td><td>可变长</td><td>否</td><td>课程名称</td></tr><tr><td>tno</td><td>最多3位</td><td>否</td><td>教师编号</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建能课程表</span></span><br><span class="line">create table course(</span><br><span class="line">cno bigint(20) primary key auto_increment comment <span class="string">&#x27;课程号&#x27;</span>,</span><br><span class="line">cname varchar(10) not null comment <span class="string">&#x27;课程名称&#x27;</span>,</span><br><span class="line">tno int(3) zerofill unsigned not null comment <span class="string">&#x27;教师编号&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">#插入数据</span></span><br><span class="line">insert into course (cname,tno)</span><br><span class="line">values(<span class="string">&#x27;英语&#x27;</span>,<span class="string">&#x27;1&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;数学&#x27;</span>,<span class="string">&#x27;2&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;语文&#x27;</span>,<span class="string">&#x27;3&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看表数据</span></span><br><span class="line">root@linux &gt; <span class="keyword">select</span> * from course <span class="built_in">where</span> 1=1;</span><br><span class="line">+-----+--------+-----+</span><br><span class="line">| cno | cname  | tno |</span><br><span class="line">+-----+--------+-----+</span><br><span class="line">|   1 | 英语   | 001 |</span><br><span class="line">|   2 | 数学   | 002 |</span><br><span class="line">|   3 | 语文   | 003 |</span><br><span class="line">+-----+--------+-----+</span><br><span class="line">3 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure><ul><li>score 成绩表</li></ul><table><thead><tr><th>字段</th><th>数据类型要求</th><th>是否为空</th><th>注释</th></tr></thead><tbody><tr><td>sno</td><td>最多20位</td><td>否</td><td>学号（主键）</td></tr><tr><td>cno</td><td>最多20位</td><td>否</td><td>课程号  （主键）</td></tr><tr><td>mark</td><td>浮点数（4,1）</td><td>否</td><td>成绩</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建表</span></span><br><span class="line">create table score(</span><br><span class="line">sno bigint(20) auto_increment comment <span class="string">&#x27;学生学号&#x27;</span>,</span><br><span class="line">cno bigint(20)  comment <span class="string">&#x27;课程号&#x27;</span>,</span><br><span class="line">mark <span class="built_in">float</span>(4,1) unsigned not null comment <span class="string">&#x27;成绩&#x27;</span>,</span><br><span class="line">primary key (sno,cno)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">#插入数据</span></span><br><span class="line">insert into score (cno,mark) values</span><br><span class="line">(1,90.2),</span><br><span class="line">(2,99.9),</span><br><span class="line">(3,66.6),</span><br><span class="line">(1,78.5),</span><br><span class="line">(2,93.0),</span><br><span class="line">(3,91.5),</span><br><span class="line">(2,65.5),</span><br><span class="line"></span><br><span class="line">insert into score (sno,cno,mark) values</span><br><span class="line">(1,2,82.5),</span><br><span class="line">(2,1,90.0),</span><br><span class="line">(3,2,85.5),</span><br><span class="line">(4,2,66.6),</span><br><span class="line">(5,3,72.5);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看表</span></span><br><span class="line">root@linux &gt; <span class="keyword">select</span> * from score <span class="built_in">where</span> 1=1;</span><br><span class="line">+-----+-----+------+</span><br><span class="line">| sno | cno | mark |</span><br><span class="line">+-----+-----+------+</span><br><span class="line">|   1 |   1 | 90.2 |</span><br><span class="line">|   1 |   2 | 82.5 |</span><br><span class="line">|   2 |   1 | 90.0 |</span><br><span class="line">|   2 |   2 | 99.9 |</span><br><span class="line">|   3 |   2 | 85.5 |</span><br><span class="line">|   3 |   3 | 66.6 |</span><br><span class="line">|   4 |   1 | 78.5 |</span><br><span class="line">|   4 |   2 | 66.6 |</span><br><span class="line">|   5 |   2 | 93.0 |</span><br><span class="line">|   5 |   3 | 72.5 |</span><br><span class="line">|   6 |   3 | 91.5 |</span><br><span class="line">|   7 |   2 | 65.5 |</span><br><span class="line">+-----+-----+------+</span><br><span class="line">12 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure><ul><li>teacher  教师表</li></ul><table><thead><tr><th>字段</th><th>数据类型要求</th><th>是否为空</th><th>注释</th></tr></thead><tbody><tr><td>tno</td><td>最多3位</td><td>否</td><td>教师编号（主键）</td></tr><tr><td>tname</td><td>可变长</td><td>否</td><td>教师姓名</td></tr><tr><td>tage</td><td>最小整数，非负数</td><td>否</td><td>教师年龄</td></tr><tr><td>tsex</td><td>0,1</td><td>否</td><td>教师性别（1是男，0是女）默认为男）</td></tr><tr><td>prof</td><td>可变长</td><td>是</td><td>教师职称</td></tr><tr><td>depart</td><td>可变长</td><td>否</td><td>教师部门</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建表</span></span><br><span class="line"></span><br><span class="line">create table teacher(</span><br><span class="line">tno int(3) zerofill primary key not null auto_increment comment <span class="string">&#x27;教师编号&#x27;</span>,</span><br><span class="line">tname varchar(10) not null  comment <span class="string">&#x27;教师姓名&#x27;</span>,</span><br><span class="line">tage tinyint unsigned not null comment <span class="string">&#x27;教师年龄&#x27;</span>,</span><br><span class="line">tsex enum(<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;1&#x27;</span>) not null default <span class="string">&#x27;1&#x27;</span> comment <span class="string">&#x27;教师性别（1是男，0是女）默认为男）&#x27;</span>,</span><br><span class="line">prof varchar(5) not null  comment <span class="string">&#x27;教师职称&#x27;</span>,</span><br><span class="line">depart varchar(5) not null  comment <span class="string">&#x27;教师部门&#x27;</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">#插入数据</span></span><br><span class="line">insert into teacher (tno,tname,tage,tsex,prof,depart) </span><br><span class="line">values(<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;李导&#x27;</span>,30,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;教学总监&#x27;</span>,<span class="string">&#x27;语言系&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;小秘&#x27;</span>,30,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;助教&#x27;</span>,<span class="string">&#x27;文学系&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;3&#x27;</span>,<span class="string">&#x27;曾导&#x27;</span>,30,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;教学总监&#x27;</span>,<span class="string">&#x27;科学系&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;4&#x27;</span>,<span class="string">&#x27;苍老师&#x27;</span>,30,<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;助教&#x27;</span>,<span class="string">&#x27;运动系&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;5&#x27;</span>,<span class="string">&#x27;黄老师&#x27;</span>,28,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;助教&#x27;</span>,<span class="string">&#x27;文学系&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看数据</span></span><br><span class="line">root@linux &gt; <span class="keyword">select</span> * from teacher;</span><br><span class="line">+-----+--------+------+------+--------------+-----------+</span><br><span class="line">| tno | tname  | tage | tsex | prof         | depart    |</span><br><span class="line">+-----+--------+------+------+--------------+-----------+</span><br><span class="line">|   1 | 李导   |   30 | 1    | 教学总监     | 语言系    |</span><br><span class="line">|   2 | 小秘   |   30 | 1    | 助教         | 文学系    |</span><br><span class="line">|   3 | 曾导   |   30 | 1    | 教学总监     | 科学系    |</span><br><span class="line">+-----+--------+------+------+--------------+-----------+</span><br><span class="line">3 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure><h4 id="查询练习">查询练习</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br></pre></td><td class="code"><pre><span class="line">1.查询student表中的所有记录的sname、ssex和class列。</span><br><span class="line">root@linux &gt; <span class="keyword">select</span> sname,ssex,class from linux.student;</span><br><span class="line">+--------+------+-------+</span><br><span class="line">| sname  | ssex | class |</span><br><span class="line">+--------+------+-------+</span><br><span class="line">| 小明   | 1    | 1班   |</span><br><span class="line">| 李明   | 1    | 1班   |</span><br><span class="line">| 小红   | 0    | 2班   |</span><br><span class="line">| 小王   | 1    | 1班   |</span><br><span class="line">| 小蔡   | 1    | 2班   |</span><br><span class="line">| 小李   | 1    | 1班   |</span><br><span class="line">| 小丽   | 0    | 2班   |</span><br><span class="line">+--------+------+-------+</span><br><span class="line"></span><br><span class="line">2.查询教师所有的单位即不重复的depart列。</span><br><span class="line">root@linux &gt; <span class="keyword">select</span> distinct(depart) from teacher;</span><br><span class="line">+-----------+</span><br><span class="line">| depart    |</span><br><span class="line">+-----------+</span><br><span class="line">| 语言系    |</span><br><span class="line">| 文学系    |</span><br><span class="line">| 科学系    |</span><br><span class="line">| 运动系    |</span><br><span class="line">+-----------+</span><br><span class="line"></span><br><span class="line">3.查询student表的所有记录。</span><br><span class="line">root@linux &gt; <span class="keyword">select</span> * from student <span class="built_in">where</span> 1=1;</span><br><span class="line">+-----+--------+------+------+-----------+-------+</span><br><span class="line">| sno | sname  | sage | ssex | sbirthday | class |</span><br><span class="line">+-----+--------+------+------+-----------+-------+</span><br><span class="line">|   1 | 小明   |   18 | 1    | NULL      | 1班   |</span><br><span class="line">|   2 | 李明   |   20 | 1    | NULL      | 1班   |</span><br><span class="line">|   3 | 小红   |   20 | 0    | NULL      | 2班   |</span><br><span class="line">|   4 | 小王   |   21 | 1    | NULL      | 1班   |</span><br><span class="line">|   5 | 小蔡   |   19 | 1    | NULL      | 2班   |</span><br><span class="line">|   6 | 小李   |   21 | 1    | NULL      | 1班   |</span><br><span class="line">|   7 | 小丽   |   20 | 0    | NULL      | 2班   |</span><br><span class="line">+-----+--------+------+------+-----------+-------+</span><br><span class="line"></span><br><span class="line">4.查询score表中成绩在60到80之间的所有记录。</span><br><span class="line">root@linux &gt; <span class="keyword">select</span> * from score <span class="built_in">where</span> mark&gt;60 and mark&lt;80;</span><br><span class="line">+-----+-----+------+</span><br><span class="line">| sno | cno | mark |</span><br><span class="line">+-----+-----+------+</span><br><span class="line">|   3 |   3 | 66.6 |</span><br><span class="line">|   4 |   1 | 78.5 |</span><br><span class="line">|   4 |   2 | 66.6 |</span><br><span class="line">|   5 |   3 | 72.5 |</span><br><span class="line">|   7 |   2 | 65.5 |</span><br><span class="line">+-----+-----+------+</span><br><span class="line"></span><br><span class="line">5.查询score表中成绩为66.6，72.5或90.0的记录。</span><br><span class="line">root@linux &gt; <span class="keyword">select</span> * from score <span class="built_in">where</span> mark=66.6 or mark=72.5 or mark=90;</span><br><span class="line">+-----+-----+------+</span><br><span class="line">| sno | cno | mark |</span><br><span class="line">+-----+-----+------+</span><br><span class="line">|   2 |   1 | 90.0 |</span><br><span class="line">|   3 |   3 | 66.6 |</span><br><span class="line">|   4 |   2 | 66.6 |</span><br><span class="line">|   5 |   3 | 72.5 |</span><br><span class="line">+-----+-----+------+</span><br><span class="line"></span><br><span class="line">6.查询student表中1班或性别为“女”的同学记录。</span><br><span class="line">root@linux &gt; <span class="keyword">select</span> * from student <span class="built_in">where</span> class=<span class="string">&#x27;1班&#x27;</span> or ssex=<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">+-----+--------+------+------+-----------+-------+</span><br><span class="line">| sno | sname  | sage | ssex | sbirthday | class |</span><br><span class="line">+-----+--------+------+------+-----------+-------+</span><br><span class="line">|   1 | 小明   |   18 | 1    | NULL      | 1班   |</span><br><span class="line">|   2 | 李明   |   20 | 1    | NULL      | 1班   |</span><br><span class="line">|   3 | 小红   |   20 | 0    | NULL      | 2班   |</span><br><span class="line">|   4 | 小王   |   21 | 1    | NULL      | 1班   |</span><br><span class="line">|   6 | 小李   |   21 | 1    | NULL      | 1班   |</span><br><span class="line">|   7 | 小丽   |   20 | 0    | NULL      | 2班   |</span><br><span class="line">+-----+--------+------+------+-----------+-------+</span><br><span class="line"></span><br><span class="line">7.以class降序查询Student表的所有记录。</span><br><span class="line">root@linux &gt; <span class="keyword">select</span> * from student order by class desc;</span><br><span class="line">+-----+--------+------+------+-----------+-------+</span><br><span class="line">| sno | sname  | sage | ssex | sbirthday | class |</span><br><span class="line">+-----+--------+------+------+-----------+-------+</span><br><span class="line">|   3 | 小红   |   20 | 0    | NULL      | 2班   |</span><br><span class="line">|   5 | 小蔡   |   19 | 1    | NULL      | 2班   |</span><br><span class="line">|   7 | 小丽   |   20 | 0    | NULL      | 2班   |</span><br><span class="line">|   1 | 小明   |   18 | 1    | NULL      | 1班   |</span><br><span class="line">|   2 | 李明   |   20 | 1    | NULL      | 1班   |</span><br><span class="line">|   4 | 小王   |   21 | 1    | NULL      | 1班   |</span><br><span class="line">|   6 | 小李   |   21 | 1    | NULL      | 1班   |</span><br><span class="line">+-----+--------+------+------+-----------+-------+</span><br><span class="line"></span><br><span class="line">8.以cno升序、mark降序查询Score表的所有记录</span><br><span class="line">root@linux &gt; <span class="keyword">select</span> * from score order by cno,mark desc;</span><br><span class="line">+-----+-----+------+</span><br><span class="line">| sno | cno | mark |</span><br><span class="line">+-----+-----+------+</span><br><span class="line">|   1 |   1 | 90.2 |</span><br><span class="line">|   2 |   1 | 90.0 |</span><br><span class="line">|   4 |   1 | 78.5 |</span><br><span class="line">|   2 |   2 | 99.9 |</span><br><span class="line">|   5 |   2 | 93.0 |</span><br><span class="line">|   3 |   2 | 85.5 |</span><br><span class="line">|   1 |   2 | 82.5 |</span><br><span class="line">|   4 |   2 | 66.6 |</span><br><span class="line">|   7 |   2 | 65.5 |</span><br><span class="line">|   6 |   3 | 91.5 |</span><br><span class="line">|   5 |   3 | 72.5 |</span><br><span class="line">|   3 |   3 | 66.6 |</span><br><span class="line">+-----+-----+------+</span><br><span class="line"></span><br><span class="line">9.查询2班的学生人数。</span><br><span class="line">root@linux &gt; <span class="keyword">select</span> count(*) from student <span class="built_in">where</span> class=<span class="string">&#x27;2班&#x27;</span>;</span><br><span class="line">+----------+</span><br><span class="line">| count(*) |</span><br><span class="line">+----------+</span><br><span class="line">|        3 |</span><br><span class="line">+----------+</span><br><span class="line"></span><br><span class="line">10.查询”曾导“教师任课的学生成绩。</span><br><span class="line"><span class="comment">#老师名字班级学生姓名分数</span></span><br><span class="line"><span class="keyword">select</span> teacher.tname,student.class,student.sname,score.mark</span><br><span class="line">from teacher,course,student,score</span><br><span class="line"><span class="built_in">where</span> student.sno=score.sno and score.cno=course.cno </span><br><span class="line">and teacher.tno=course.cno</span><br><span class="line">and teacher.tname=<span class="string">&#x27;曾导&#x27;</span>;</span><br><span class="line"></span><br><span class="line">+--------+-------+--------+------+</span><br><span class="line">| tname  | class | sname  | mark |</span><br><span class="line">+--------+-------+--------+------+</span><br><span class="line">| 曾导   | 2班   | 小红   | 66.6 |</span><br><span class="line">| 曾导   | 2班   | 小蔡   | 72.5 |</span><br><span class="line">| 曾导   | 1班   | 小李   | 91.5 |</span><br><span class="line">+--------+-------+--------+------+</span><br><span class="line"></span><br><span class="line">11.查询语文课程所有男生的成绩并且查出对应课程的教师名，职称，及所在部门。</span><br><span class="line"><span class="comment">#男生名字成绩课程老师职称部门</span></span><br><span class="line"><span class="keyword">select</span> student.sname,score.mark,course.cname,teacher.tname,teacher.prof,teacher.depart</span><br><span class="line">from teacher,course,student,score</span><br><span class="line"><span class="built_in">where</span> student.sno=score.sno and score.cno=course.cno </span><br><span class="line">and teacher.tno=course.cno</span><br><span class="line">and student.ssex=<span class="string">&#x27;1&#x27;</span>;</span><br><span class="line"></span><br><span class="line">+--------+------+--------+--------+--------------+-----------+</span><br><span class="line">| sname  | mark | cname  | tname  | prof         | depart    |</span><br><span class="line">+--------+------+--------+--------+--------------+-----------+</span><br><span class="line">| 小明   | 90.2 | 英语   | 李导   | 教学总监     | 语言系    |</span><br><span class="line">| 李明   | 90.0 | 英语   | 李导   | 教学总监     | 语言系    |</span><br><span class="line">| 小王   | 78.5 | 英语   | 李导   | 教学总监     | 语言系    |</span><br><span class="line">| 小明   | 82.5 | 数学   | 小秘   | 助教         | 文学系    |</span><br><span class="line">| 李明   | 99.9 | 数学   | 小秘   | 助教         | 文学系    |</span><br><span class="line">| 小王   | 66.6 | 数学   | 小秘   | 助教         | 文学系    |</span><br><span class="line">| 小蔡   | 93.0 | 数学   | 小秘   | 助教         | 文学系    |</span><br><span class="line">| 小蔡   | 72.5 | 语文   | 曾导   | 教学总监     | 科学系    |</span><br><span class="line">| 小李   | 91.5 | 语文   | 曾导   | 教学总监     | 科学系    |</span><br><span class="line">+--------+------+--------+--------+--------------+-----------+</span><br><span class="line"></span><br><span class="line">12.把11题查出的成绩按照降序排序。</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> student.sname,score.mark,course.cname,teacher.tname,teacher.prof,teacher.depart</span><br><span class="line">from teacher,course,student,score</span><br><span class="line"><span class="built_in">where</span> student.sno=score.sno and score.cno=course.cno </span><br><span class="line">and teacher.tno=course.cno</span><br><span class="line">and student.ssex=<span class="string">&#x27;1&#x27;</span> order by score.mark desc;</span><br><span class="line"></span><br><span class="line">+--------+------+--------+--------+--------------+-----------+</span><br><span class="line">| sname  | mark | cname  | tname  | prof         | depart    |</span><br><span class="line">+--------+------+--------+--------+--------------+-----------+</span><br><span class="line">| 李明   | 99.9 | 数学   | 小秘   | 助教         | 文学系    |</span><br><span class="line">| 小蔡   | 93.0 | 数学   | 小秘   | 助教         | 文学系    |</span><br><span class="line">| 小李   | 91.5 | 语文   | 曾导   | 教学总监     | 科学系    |</span><br><span class="line">| 小明   | 90.2 | 英语   | 李导   | 教学总监     | 语言系    |</span><br><span class="line">| 李明   | 90.0 | 英语   | 李导   | 教学总监     | 语言系    |</span><br><span class="line">| 小明   | 82.5 | 数学   | 小秘   | 助教         | 文学系    |</span><br><span class="line">| 小王   | 78.5 | 英语   | 李导   | 教学总监     | 语言系    |</span><br><span class="line">| 小蔡   | 72.5 | 语文   | 曾导   | 教学总监     | 科学系    |</span><br><span class="line">| 小王   | 66.6 | 数学   | 小秘   | 助教         | 文学系    |</span><br><span class="line">+--------+------+--------+--------+--------------+-----------+</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL多实例管理</title>
      <link href="/posts/3c5dfd37.html"/>
      <url>/posts/3c5dfd37.html</url>
      
        <content type="html"><![CDATA[<h2 id="创建多实例">创建多实例</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">实例：一个进程 + 多个线程 + 预分配的内存结构</span><br><span class="line">多实例：多个进程 + 多个线程 + 多个预分配的内存结构</span><br><span class="line"></span><br><span class="line">多个数据库实例不同之处：</span><br><span class="line">配置文件：</span><br><span class="line">1.端口</span><br><span class="line">2.数据目录</span><br><span class="line">3.socket文件</span><br><span class="line">4.pid文件</span><br><span class="line">5.错误日志</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看默认配置</span></span><br><span class="line">mysql&gt; show variables like <span class="string">&#x27;%pid%&#x27;</span>;</span><br><span class="line">+---------------+--------------------------+</span><br><span class="line">| Variable_name | Value |</span><br><span class="line">+---------------+--------------------------+</span><br><span class="line">| pid_file | /app/mysql/data/db01.pid |</span><br><span class="line">+---------------+--------------------------+</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1.创建多个实例数据存放目录</span></span><br><span class="line">[root@db01 ~]# <span class="built_in">mkdir</span> /data/mysql/330&#123;7,8,9&#125; -p</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.编写配置文件</span></span><br><span class="line">[root@db01 ~]#vim /data/mysql/3307/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">port=3307</span><br><span class="line">basedir=/app/mysql</span><br><span class="line">datadir=/data/mysql/3307/data</span><br><span class="line">socket=/data/mysql/3307/data/mysql.sock</span><br><span class="line">pid_file=/data/mysql/3307/data/mysql.pid</span><br><span class="line">log_error=/data/mysql/3307/data/mysql.err</span><br><span class="line"></span><br><span class="line">[root@db01 ~]# vim /data/mysql/3308/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">port=3308</span><br><span class="line">basedir=/app/mysql</span><br><span class="line">datadir=/data/mysql/3308/data</span><br><span class="line">socket=/data/mysql/3308/data/mysql.sock</span><br><span class="line">pid_file=/data/mysql/3308/data/mysql.pid</span><br><span class="line">log_error=/data/mysql/3308/data/mysql.err</span><br><span class="line"></span><br><span class="line">[root@db01 ~]# vim /data/mysql/3309/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">port=3309</span><br><span class="line">basedir=/app/mysql</span><br><span class="line">datadir=/data/mysql/3309/data</span><br><span class="line">socket=/data/mysql/3309/data/mysql.sock</span><br><span class="line">pid_file=/data/mysql/3309/data/mysql.pid</span><br><span class="line">log_error=/data/mysql/3309/data/mysql.err</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.初始化数据库</span></span><br><span class="line">/app/mysql/scripts/mysql_install_db --user=mysql --basedir=/app/mysql --datadir=/data/mysql/3309/data</span><br><span class="line"></span><br><span class="line">/app/mysql/scripts/mysql_install_db --user=mysql --basedir=/app/mysql --datadir=/data/mysql/3308/data</span><br><span class="line"></span><br><span class="line">/app/mysql/scripts/mysql_install_db --user=mysql --basedir=/app/mysql --datadir=/data/mysql/3307/data</span><br><span class="line"></span><br><span class="line"><span class="comment">#4.启动数据库</span></span><br><span class="line">[root@db01 ~]# mysqld_safe --defaults-file=/data/mysql/3307/my.cnf</span><br><span class="line"></span><br><span class="line">[root@db01 ~]# mysqld_safe --defaults-file=/data/mysql/3308/my.cnf</span><br><span class="line"></span><br><span class="line">[root@db01 ~]# mysqld_safe --defaults-file=/data/mysql/3309/my.cnf</span><br><span class="line"></span><br><span class="line"><span class="comment">#5.编写启动脚本</span></span><br><span class="line">[root@db01 ~]# vim /usr/lib/systemd/system/mysql3307.service</span><br><span class="line">[Unit]</span><br><span class="line">Description=MySQL Server</span><br><span class="line">After=network.target</span><br><span class="line">Wants=multi-user.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/app/mysql/bin/mysqld_safe --defaults-file=/data/mysql/3307/my.cnf</span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=42s</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line">[root@db01 ~]# vim /usr/lib/systemd/system/mysql3308.service</span><br><span class="line">[Unit]</span><br><span class="line">Description=MySQL Server</span><br><span class="line">After=network.target</span><br><span class="line">Wants=multi-user.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/app/mysql/bin/mysqld_safe --defaults-file=/data/mysql/3308/my.cnf</span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=42s</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line">[root@db01 ~]# vim /usr/lib/systemd/system/mysql3309.service</span><br><span class="line">[Unit]</span><br><span class="line">Description=MySQL Server</span><br><span class="line">After=network.target</span><br><span class="line">Wants=multi-user.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/app/mysql/bin/mysqld_safe --defaults-file=/data/mysql/3309/my.cnf</span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=42s</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line"><span class="comment">#6.重新加载脚本</span></span><br><span class="line">[root@db01 ~]# systemctl daemon-reload</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改root密码</span></span><br><span class="line">[root@db01 ~]# mysqladmin -uroot -S /data/mysql/3307/data/mysql.sock password <span class="string">&#x27;3307&#x27;</span></span><br><span class="line">[root@db01 ~]# mysqladmin -uroot -S /data/mysql/3307/data/mysql.sock password <span class="string">&#x27;3308&#x27;</span></span><br><span class="line">[root@db01 ~]# mysqladmin -uroot -S /data/mysql/3307/data/mysql.sock password <span class="string">&#x27;3309&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 8.连接数据库</span></span><br><span class="line">[root@db01 ~]# mysql -uroot -p3307 -S /data/mysql/3307/data/mysql.sock</span><br><span class="line">[root@db01 ~]# mysql -uroot -p3308 -S /data/mysql/3308/data/mysql.sock</span><br><span class="line">[root@db01 ~]# mysql -uroot -p3309 -S /data/mysql/3309/data/mysql.sock</span><br><span class="line"></span><br><span class="line"><span class="comment"># 9.简易连接方式（将链接命令写到bin下）</span></span><br><span class="line">[root@db01 ~]# vim /usr/local/bin/mysql3307</span><br><span class="line">mysql -uroot -p3307 -S /data/mysql/3307/data/mysql.sock</span><br><span class="line"></span><br><span class="line">[root@db01 ~]# vim /usr/local/bin/mysql3308</span><br><span class="line">mysql -uroot -p3308 -S /data/mysql/3308/data/mysql.sock</span><br><span class="line"></span><br><span class="line">[root@db01 ~]# vim /usr/local/bin/mysql3309</span><br><span class="line">mysql -uroot -p3309 -S /data/mysql/3309/data/mysql.sock</span><br><span class="line"></span><br><span class="line">[root@db01 ~]# <span class="built_in">chmod</span> +x /usr/local/bin/mysql330*</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#连接时候只需要输入</span></span><br><span class="line">mysql3307</span><br><span class="line">mysql3308</span><br><span class="line">mysql3309</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL客户端类型</title>
      <link href="/posts/11698a60.html"/>
      <url>/posts/11698a60.html</url>
      
        <content type="html"><![CDATA[<h1>MySQL客户端类型</h1><p><img src="https://cos.lukme.top/Pic/QQ_1723120788148.png" alt="QQ_1723120788148"></p><p><strong>MySQL客户端</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql</span><br><span class="line">mysqladmin</span><br><span class="line">mysqldump</span><br><span class="line">phpmyadmin</span><br></pre></td></tr></table></figure><p><strong>mysqld</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysqld一个二进制程序，后台的守护进程</span><br><span class="line">单进程</span><br><span class="line">多线程</span><br></pre></td></tr></table></figure><p><strong>MySQL的连接方式</strong></p><ul><li><p>TCP/IP连接</p><p><code>mysql -uroot -p123 -h172.16.1.51</code></p></li><li><p>Socket连接</p><p><code>mysql -uroot -p123 -S /tmp/mysql.sock</code></p></li></ul><img src="https://cos.lukme.top/Pic/QQ_1723121188726.png" alt="QQ_1723121188726" style="zoom: 67%;" /><h2 id="1-判断服务类型">1.判断服务类型</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p123  socket连接</span><br><span class="line">mysql -uroot -p123 -h127.0.0.1 TCP连接</span><br><span class="line">mysql -uroot -p123 -hlocalhost Socket连接</span><br><span class="line"></span><br><span class="line">----(错误写法)</span><br><span class="line">mysql -uroot -p123 -h10.0.0.51 -S /tmp/mysql.sock TCP连接</span><br><span class="line">mysql -uroot -p123 -S /tmp/mysql.sock -h10.0.0.51 TCP连接</span><br></pre></td></tr></table></figure><h2 id="2-MySQL服务器组成">2.MySQL服务器组成</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">MySQL服务：守护进程</span><br><span class="line"></span><br><span class="line">实例：`一个进程 + 多个线程+ 一个预分配的内存结构`</span><br><span class="line"></span><br><span class="line">[root@db04 ~]# mysqladmin -uroot -p123 variables|grep innodb_buffer_pool_size</span><br><span class="line">innodb_buffer_pool_size=134217728</span><br><span class="line">MySQL的内存要占物理机内存的75%~80%</span><br><span class="line"></span><br><span class="line">假设开启数据库时候</span><br><span class="line">Linux</span><br><span class="line">总内存：16G</span><br><span class="line">已使用：15.9G   --&gt;MySQL约占12.8G</span><br><span class="line">要是加载一个2GMySQL表文件，使用的内存也是12.8G里的</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用ansible是怎么优化MySQL的？</span></span><br><span class="line"><span class="comment">#使用变量</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#数据库要占用的内存（不可有小数） 交给int取得整数</span></span><br><span class="line"><span class="comment">#缓冲池大小，缓存表和索引数据的内存区域</span></span><br><span class="line">innodb_buffer_pool_size</span><br><span class="line"></span><br><span class="line">[root@db01 ~]# vim my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">basedir = /app/mysql</span><br><span class="line">datadir = /app/mysql/data</span><br><span class="line">innodb_buffer_pool_size = &#123;&#123; (ansible_memtotal_mb * 0.8)|int &#125;&#125;M</span><br><span class="line">server_id=&#123;&#123; ansible_hostname[-1] &#125;&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3-MySQL底层原理">3.MySQL底层原理</h2><p><img src="https://cos.lukme.top/Pic/QQ_1723123419826.png" alt="QQ_1723123419826"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">`连接层`</span><br><span class="line">作用：</span><br><span class="line">1）提供两种连接方式</span><br><span class="line">TCP连接</span><br><span class="line">Socket连接</span><br><span class="line">2）验证用户的合法性（用户名 密码 IP 权限）</span><br><span class="line">3）提供一个与SQL层交互的线程</span><br><span class="line"></span><br><span class="line">`SQL层`</span><br><span class="line">作用：</span><br><span class="line">1）接收连接层传递过来的SQL语句</span><br><span class="line">2）验证语法</span><br><span class="line">3）验证语义</span><br><span class="line">DDL</span><br><span class="line">DML</span><br><span class="line">DCL</span><br><span class="line">DQL</span><br><span class="line">DTL</span><br><span class="line">4）解析器：解析SQL语句</span><br><span class="line">5）优化器：出多种优化方案，选择最优的一种方式去执行</span><br><span class="line">6）执行器：执行优化器选择的最优的一种方式的语句提供一个和存储引擎层交互的线程接收存储引擎层返回的结构化成表的数据</span><br><span class="line">7）缓存</span><br><span class="line">8）记录日志（binlog）</span><br><span class="line"></span><br><span class="line">`存储引擎层`</span><br><span class="line">作用：</span><br><span class="line">1）接收SQL层传递过来的SQL语句</span><br><span class="line">2）与磁盘交互取出指定的数据</span><br><span class="line">3）将数据结构化成表格返回给SQL层</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="MySQL结构">MySQL结构</h3><p>逻辑结构</p><ul><li>库</li><li>表<ul><li>元数据<ul><li>字段<ul><li>字段名</li><li>数据类型</li><li>约束</li></ul></li><li>描述信息</li></ul></li><li>真实数据</li></ul></li></ul><p>物理结构：最底层的数据文件</p><p><strong>MySQL单位</strong></p><ul><li>段（一张表）：一个段是由多个区组成的</li><li>区    一个区是由64个页组成的（1M）</li><li>页   一个页16k</li></ul>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL数据库管理</title>
      <link href="/posts/341216ab.html"/>
      <url>/posts/341216ab.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-密码管理">1.密码管理</h2><h3 id="重置密码">重置密码</h3><p><strong>手贱执行如下命令?</strong></p><p><code>truncate mysql.user;</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">极度危险命令：清空所有表</span><br><span class="line"><span class="keyword">truncate</span> mysql.user;</span><br><span class="line"></span><br><span class="line">重启后不能登录</span><br><span class="line">[root<span class="variable">@db02</span> <span class="operator">~</span>]# mysql</span><br><span class="line">ERROR <span class="number">1045</span> (<span class="number">28000</span>): Access denied <span class="keyword">for</span> <span class="keyword">user</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> (<span class="keyword">using</span> password: <span class="keyword">NO</span>)</span><br><span class="line"></span><br><span class="line">解决：（mysql8<span class="number">.0</span>版本之前）</span><br><span class="line"><span class="number">1.</span>修改配置文件  <span class="operator">/</span>etc<span class="operator">/</span>my.cnf</span><br><span class="line">在[mysqld]部分下添加或确保存在<span class="keyword">skip</span><span class="operator">-</span><span class="keyword">grant</span><span class="operator">-</span>tables选项。跳过权限检查</span><br><span class="line"><span class="number">2.</span>重启mysql</span><br><span class="line">systemctl restart mysqld</span><br><span class="line"><span class="number">3.</span>使用msyql进入创建一个新的root用户（出现报错）</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">to</span> root@<span class="string">&#x27;localhost&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">ERROR <span class="number">1290</span> (HY000): The MySQL server <span class="keyword">is</span> <span class="keyword">running</span> <span class="keyword">with</span> the <span class="comment">--skip-grant-tables option so it cannot execute this statement</span></span><br><span class="line"><span class="number">4.</span>刷新权限</span><br><span class="line">flush privileges;</span><br><span class="line"><span class="number">5.</span>再次执行创建用户命令</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">to</span> root@<span class="string">&#x27;localhost&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;&#x27;</span> <span class="keyword">with</span> <span class="keyword">grant</span> option;</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">to</span> root@<span class="string">&#x27;localhost&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="number">6.</span>退出mysql并修改配置文件，  删除跳过权限检查   重启</span><br><span class="line"></span><br><span class="line"><span class="number">7.</span>mysql重新登录并查看表</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="keyword">user</span>,host <span class="keyword">from</span> mysql.user;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+-----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">user</span> <span class="operator">|</span> host      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-----------+</span></span><br><span class="line"><span class="operator">|</span> root <span class="operator">|</span> localhost <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+-----------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> </span><br></pre></td></tr></table></figure><h3 id="修改密码">修改密码</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#<span class="number">1.</span>mysqladmin命令</span><br><span class="line">#mysqladmin是一个用于管理MySQL服务器的命令行工具，它也可以用来修改密码。使用mysqladmin时，你不需要先登录到MySQL数据库。</span><br><span class="line">mysqladmin <span class="operator">-</span>u username <span class="operator">-</span>p<span class="string">&#x27;old_password&#x27;</span> password <span class="string">&#x27;new_password&#x27;</span></span><br><span class="line"></span><br><span class="line">#<span class="number">2.</span>MySQL <span class="number">5.7</span>及之前版本</span><br><span class="line"><span class="keyword">SET</span> PASSWORD <span class="keyword">FOR</span> <span class="string">&#x27;username&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> <span class="operator">=</span> PASSWORD(<span class="string">&#x27;new_password&#x27;</span>);</span><br><span class="line"></span><br><span class="line">#<span class="number">3.</span>MySQL <span class="number">8.0</span>及更高版本</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;username&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;new_password&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="忘记密码重置">忘记密码重置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1.停止MySQL服务：</span></span><br><span class="line"><span class="built_in">sudo</span> systemctl stop mysqld</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.启动MySQL的安全模式（跳过权限表）：</span></span><br><span class="line"><span class="built_in">sudo</span> mysqld_safe --skip-grant-tables &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.登录到MySQL：</span></span><br><span class="line">mysql -u root</span><br><span class="line">在MySQL提示符下输入：</span><br><span class="line">FLUSH PRIVILEGES;</span><br><span class="line"></span><br><span class="line"><span class="comment">#4.重置密码：</span></span><br><span class="line"><span class="comment">#MySQL 5.7及以上版本，使用以下命令：</span></span><br><span class="line">ALTER USER <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class="string">&#x27;新密码&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#MySQL 5.6及以下版本，使用以下命令：</span></span><br><span class="line">UPDATE mysql.user SET authentication_string=PASSWORD(<span class="string">&#x27;新密码&#x27;</span>) WHERE User=<span class="string">&#x27;root&#x27;</span> AND Host=<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#5.刷新权限：</span></span><br><span class="line"><span class="comment">#在MySQL提示符下输入：</span></span><br><span class="line">FLUSH PRIVILEGES;</span><br><span class="line"></span><br><span class="line"><span class="comment">#6.退出MySQL：</span></span><br><span class="line">EXIT;</span><br><span class="line"></span><br><span class="line"><span class="comment">#停止MySQL的安全模式并重新启动MySQL服务：</span></span><br><span class="line"><span class="comment">#启动安全模活动的pid号并杀掉</span></span><br><span class="line">ps -ef |grep [m]ysqld_safe</span><br><span class="line">root      10170   7166  0 15:42 pts/0    00:00:00 /bin/sh /app/mysql...</span><br><span class="line"><span class="built_in">kill</span> -9 10170</span><br><span class="line"><span class="comment">#重启MySQL</span></span><br><span class="line">systemctl restart mysqld</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h2 id="2-用户权限管理">2.用户权限管理</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">MySQL中用户定义：</span><br><span class="line"><span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;主机域&#x27;</span></span><br><span class="line"></span><br><span class="line">主机域：（常用）</span><br><span class="line">10.0.0.5%   包含：    10.0.0.50-10.0.0.59 ~ 10.0.0.5</span><br><span class="line">localhost</span><br><span class="line">10.0.0.%</span><br><span class="line"></span><br><span class="line">不常用：</span><br><span class="line">10.0.%.% 10.0.0-255.1-255</span><br><span class="line">10.%.%.%</span><br><span class="line">%</span><br><span class="line">10.0.0.0/255.255.255.0</span><br><span class="line"></span><br><span class="line">grant all on *.* to test2@<span class="string">&#x27;10.0.0.0/255.255.255.0&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="MySQL的增删改查">MySQL的增删改查</h3><p><strong><code>增</code></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建用户</span></span><br><span class="line">1）先创建用户在授权</span><br><span class="line">mysql&gt; create user zls2@<span class="string">&#x27;localhost&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line">mysql&gt; grant all on *.* to zls2@<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line"></span><br><span class="line">2）直接创建加授权</span><br><span class="line">mysql&gt; grant all on *.* to zls3@<span class="string">&#x27;localhost&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"></span><br><span class="line">3）向表里插入数据（不推荐）</span><br><span class="line">mysql&gt; insert into mysql.user values (<span class="string">&#x27;localhost&#x27;</span>,<span class="string">&#x27;root&#x27;</span>,PASSWORD(<span class="string">&#x27;123&#x27;</span>)...</span><br></pre></td></tr></table></figure><p><strong><code>删</code></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#删除用户</span></span><br><span class="line">1)drop user <span class="string">&#x27;用户名&#x27;</span>@<span class="string">&#x27;主机域&#x27;</span></span><br><span class="line">mysql&gt; drop user zls3@<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line"></span><br><span class="line">2)使用delete指定用户名和主机域</span><br><span class="line">mysql&gt; delete from mysql.user <span class="built_in">where</span> user=<span class="string">&#x27;root&#x27;</span> and host=<span class="string">&#x27;10.0.0.%&#x27;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong><code>改</code></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#修改密码</span></span><br><span class="line">1）命令行修改</span><br><span class="line">mysqladmin -u<span class="string">&#x27;用户&#x27;</span> -p<span class="string">&#x27;旧密码&#x27;</span> password <span class="string">&#x27;新密码&#x27;</span></span><br><span class="line">mysqladmin -uzls1 -p123 password <span class="string">&#x27;111&#x27;</span></span><br><span class="line"></span><br><span class="line">2）MySQL5.7以上版本专用</span><br><span class="line">mysql&gt; alter user zls1@<span class="string">&#x27;localhost&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"></span><br><span class="line">3）修改当前登录的用户密码</span><br><span class="line">mysql&gt; <span class="built_in">set</span> password=PASSWORD(<span class="string">&#x27;222&#x27;</span>);</span><br><span class="line"></span><br><span class="line">4）只有在使用update修改用户密码时，才需要执行flush privileges;</span><br><span class="line"></span><br><span class="line">`MySQL5.6`</span><br><span class="line">mysql&gt; update mysql.user <span class="built_in">set</span> password=PASSWORD(<span class="string">&#x27;333&#x27;</span>) <span class="built_in">where</span> user=<span class="string">&#x27;root&#x27;</span> and</span><br><span class="line">host=<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line">mysql&gt; flush privileges; // 危险，全局SQL语句</span><br><span class="line"></span><br><span class="line">`MySQL5.7`</span><br><span class="line">mysql&gt; update mysql.user <span class="built_in">set</span> authentication_string=PASSWORD(<span class="string">&#x27;333&#x27;</span>) <span class="built_in">where</span></span><br><span class="line">user=<span class="string">&#x27;root&#x27;</span> and host=<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line">mysql&gt; flush privileges; // 危险，全局SQL语句</span><br><span class="line"></span><br><span class="line">5)使用grant方式改</span><br><span class="line">mysql&gt; grant all on *.* to root@<span class="string">&#x27;localhost&#x27;</span> identified by <span class="string">&#x27;1111&#x27;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong><code>查</code></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 查：查询用户</span></span><br><span class="line"><span class="comment">#查看用户和主机域</span></span><br><span class="line">mysql&gt; <span class="keyword">select</span> user,host from mysql.user;</span><br><span class="line">+------+-----------+</span><br><span class="line">| user | host      |</span><br><span class="line">+------+-----------+</span><br><span class="line">| root | localhost |</span><br><span class="line">+------+-----------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#格式化输出</span></span><br><span class="line">mysql&gt; <span class="keyword">select</span> * from mysql.user\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">                  Host: localhost</span><br><span class="line">                  User: root</span><br><span class="line">              Password: </span><br><span class="line">           Select_priv: Y</span><br><span class="line">           Insert_priv: Y</span><br><span class="line">           Update_priv: Y</span><br><span class="line">           Delete_priv: Y</span><br><span class="line">           Create_priv: Y</span><br><span class="line">             Drop_priv: Y</span><br><span class="line">           Reload_priv: Y</span><br><span class="line">         Shutdown_priv: Y</span><br><span class="line">          Process_priv: Y</span><br><span class="line">             File_priv: Y</span><br><span class="line">            Grant_priv: Y</span><br><span class="line">            </span><br><span class="line"><span class="comment">#查看如何授权</span></span><br><span class="line">mysql&gt; show grants <span class="keyword">for</span> root@<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line">+---------------------------------------------------------------------+</span><br><span class="line">| Grants <span class="keyword">for</span> root@localhost                                           |</span><br><span class="line">+---------------------------------------------------------------------+</span><br><span class="line">| GRANT ALL PRIVILEGES ON *.* TO <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> WITH GRANT OPTION |</span><br><span class="line">| GRANT PROXY ON <span class="string">&#x27;&#x27;</span>@<span class="string">&#x27;&#x27;</span> TO <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> WITH GRANT OPTION        |</span><br><span class="line">+---------------------------------------------------------------------+</span><br></pre></td></tr></table></figure><h3 id="MySQL权限管理">MySQL权限管理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#所有权限</span></span><br><span class="line">INSERT,SELECT, UPDATE, DELETE, CREATE, DROP, RELOAD, SHUTDOWN, PROCESS, FILE,</span><br><span class="line">REFERENCES, INDEX, ALTER, SHOW DATABASES, SUPER, CREATE TEMPORARY TABLES, LOCK</span><br><span class="line">TABLES, EXECUTE, REPLICATION SLAVE, REPLICATION CLIENT, CREATE VIEW, SHOW VIEW,</span><br><span class="line">CREATE ROUTINE, ALTER ROUTINE, CREATE USER, EVENT, TRIGGER, CREATE TABLESPACE</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建的用户加上创建权限</span></span><br><span class="line">with grant option</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#两种写法一样</span></span><br><span class="line">grant all on *.* to root@<span class="string">&#x27;10.0.0.%&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span> with grant option;</span><br><span class="line">grant all privileges on *.* to <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span> with grant option;</span><br><span class="line">权限 作用对象 归属 密码</span><br><span class="line"></span><br><span class="line"><span class="comment">#给开发权限</span></span><br><span class="line">INSERT,SELECT, UPDATE</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置权限</span></span><br><span class="line">grant all on *.*[当前MySQL实例中所有库下的所有表]</span><br><span class="line">grant all on wordpress.* [当前MySQL实例中wordpress库中所有表（单库级别）] （常用）</span><br><span class="line">grant all on wordpress.user [当前MySQL实例中wordpress库中的user表（单表级别）]</span><br><span class="line"></span><br><span class="line"><span class="comment">#如何授权只有字段权限  脱敏处理</span></span><br><span class="line">mysql&gt; grant insert,<span class="keyword">select</span>(user,host), update on mysql.user to dev1@<span class="string">&#x27;localhost&#x27;</span> identified by <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 开发让你开用户流程审批工单</span></span><br><span class="line">开发 -&gt; 开发总监 -&gt; 运维总监 -&gt; 你</span><br><span class="line">1.用户名</span><br><span class="line">2.从哪连</span><br><span class="line">3.密码</span><br><span class="line">4.用户</span><br><span class="line">5.操作的库表</span><br></pre></td></tr></table></figure><h2 id="3-连接及启动管理">3.连接及启动管理</h2><p><strong>连接管理</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 ~]# mysql</span><br><span class="line">-u：指定用户</span><br><span class="line">-p：指定密码</span><br><span class="line">-h：指定主机</span><br><span class="line">-S：指定socket</span><br><span class="line">-P：指定端口</span><br><span class="line">-e：免交互指定MySQL的SQL语句</span><br></pre></td></tr></table></figure><h3 id="MySQL启动关闭流程">MySQL启动关闭流程</h3><p><img src="https://cos.lukme.top/Pic/QQ_1723257413195.png" alt="QQ_1723257413195"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动</span></span><br><span class="line">/etc/init.d/mysqld start</span><br><span class="line">systemctl mysqld start</span><br><span class="line">mysqld_safe --defaults-file=/etc/my.cnf &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止</span></span><br><span class="line">/etc/init.d/mysqld stop</span><br><span class="line">systemctl mysqld stop</span><br><span class="line">[root@db01 ~]# mysqladmin -uroot -p123 shutdown</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以下停止方式别用</span></span><br><span class="line"><span class="built_in">kill</span> -9 pid ?</span><br><span class="line">killall mysqld ?</span><br><span class="line">pkill mysqld ?</span><br><span class="line">pkill -9 mysqld ?</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="MySQL启动配置">MySQL启动配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">预编译：MySQL配置 datadir=/app/mysql/data</span><br><span class="line">配置文件：MySQL配置 datadir=/app/tmp/data</span><br><span class="line">命令行：mysqld_safe --datadir=/app/xxx/data</span><br><span class="line"></span><br><span class="line">配置文件：</span><br><span class="line">/etc/my.cnf</span><br><span class="line">/etc/mysql/my.cnf</span><br><span class="line"><span class="variable">$besedir</span>/my.cnf</span><br><span class="line">mysqld_safe --defaults-extra-file=/opt/my.cnf</span><br><span class="line">~/.my.cnf</span><br><span class="line"></span><br><span class="line"><span class="comment">## 当MySQL启动时，指定了该参数，那么其他配置文件都不读取 --defaults-file</span></span><br><span class="line">思考：socket文件在哪？（怎么加载配置文件）</span><br><span class="line"><span class="comment"># cmake：</span></span><br><span class="line">socket=/application/mysql/tmp/mysql.sock</span><br><span class="line"><span class="comment"># 命令行：</span></span><br><span class="line">--socket=/tmp/mysql.sock</span><br><span class="line"><span class="comment"># 配置文件：</span></span><br><span class="line">/etc/my.cnf中[mysqld]标签下：socket=/opt/mysql.sock</span><br><span class="line"><span class="comment"># default参数：</span></span><br><span class="line">--defaults-file=/tmp/a.txt配置文件中[mysqld]标签下：socket=/tmp/test.sock</span><br><span class="line"></span><br><span class="line"><span class="comment">#命令行优先级最高，所以最后socket文件会在</span></span><br><span class="line">/tmp/mysql.sock</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 在相同配置情况下，配置生效的优先级</span></span><br><span class="line">预编译 &lt; 配置文件 （ /etc/my.cnf &lt; /etc/mysql/my.cnf &lt; <span class="variable">$besedir</span>/my.cnf &lt; defaults-extra-file &lt; ~/.my.cnf &lt; defaults-file ） &lt; 命令行</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL概述及安装</title>
      <link href="/posts/341216ac.html"/>
      <url>/posts/341216ac.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-初识数据库">1.初识数据库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">数据库管理系统</span><br><span class="line">DBMS（database management system）</span><br><span class="line">-管理数据</span><br><span class="line">-存储数据</span><br><span class="line"></span><br><span class="line"><span class="comment">#数据库管理系统类型</span></span><br><span class="line">1.关系型数据库 RDBMS</span><br><span class="line">-所有的表都是有二维表组成</span><br><span class="line">-表与表之间有关联</span><br><span class="line">-使用SQL（结构化查询语言）语句来管理</span><br><span class="line">2.非关系型数据库NoSQL</span><br><span class="line">-不需要使用SQL语句，没有二维表</span><br><span class="line"></span><br><span class="line"><span class="comment">#关系型数据库和非关系型数据库常见的库</span></span><br><span class="line">关系型： MySQL、mariadb、Oracle、PostgreSQL、MSSQL</span><br><span class="line">非关系型：Redis（键值对）、MongoDB（文档型数据库）、elasticsearch（搜索引擎数据库）、memcached（键值对）</span><br><span class="line">InfluxDB：Time Series 时序数据库（适合出图，查询时间轴数据方便）</span><br><span class="line">OpenTSDB：Time Series 时序数据库（适合出图，查询时间轴数据方便）</span><br><span class="line">etcd：键值对数据库（配置文件管理中心）</span><br><span class="line"></span><br><span class="line"><span class="comment">#MySQL安装方式</span></span><br><span class="line">1.yum安装</span><br><span class="line">2.二进制安装</span><br><span class="line">3.源码安装</span><br><span class="line">4.docker容器</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root@(none) &gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| linux50            |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| student            |</span><br><span class="line">| <span class="built_in">test</span>               |</span><br><span class="line">| world              |</span><br><span class="line">| zrlog              |</span><br><span class="line">+--------------------+</span><br><span class="line">8 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.21 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#存放MySQ所有元数据的库，并且在磁盘不显示</span></span><br><span class="line">information_schema</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="数据库存储服务概述">数据库存储服务概述</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">今时今⽇，数据库系统已经成为各个动态⽹站上 web 应⽤程序的重要组成部分。 由于⾮常敏感和机密的数据有可能保存在数据库中，所以对数据库实施保护就显得尤为重要了。 要从数据库中提取或者存⼊数据，就必须经过连接数据库、发送⼀条合法查询、获取结果、关闭连接等步骤。 ⽬前，能完成这⼀系列动作的最常⽤的查询语⾔是结构化查询语⾔ Structured Query Language (SQL)。 并且在对数据库进⾏管理与维护的过程中，需要对数据库的相关知识进⾏充分的掌握，最终才能保证企业核⼼数据的安全性。</span><br></pre></td></tr></table></figure><h3 id="获取-MySQL">获取 MySQL</h3><p>官方：<a href="https://www.mysql.com/">https://www.mysql.com/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">MySQL5.6：GA 6-12个月，小版本号为偶数版的</span><br><span class="line">MySQL5.7：GA 6-12个月，小版本号为偶数版的，5.7.20以上版本（MGR MySQL自带的高可用功能）</span><br><span class="line"></span><br><span class="line">获取的包bug少</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/240807%20162316.gif" alt="240807 162316"></p><p><img src="https://cos.lukme.top/Pic/QQ_1723024541340.png" alt="QQ_1723024541340"></p><h3 id="字符集">字符集</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查询字符集</span></span><br><span class="line"></span><br><span class="line">root@(none) &gt; show collation;</span><br><span class="line">+--------------------------+----------+-----+---------+----------+---------+</span><br><span class="line">| Collation                | Charset  | Id  | Default | Compiled | Sortlen |</span><br><span class="line">+--------------------------+----------+-----+---------+----------+---------+</span><br><span class="line">| big5_chinese_ci          | big5     |   1 | Yes     | Yes      |       1 |</span><br><span class="line">| big5_bin                 | big5     |  84 |         | Yes      |       1 |</span><br><span class="line">| dec8_swedish_ci          | dec8     |   3 | Yes     | Yes      |       1 |</span><br><span class="line">| dec8_bin                 | dec8     |  69 |         | Yes      |       1 |</span><br><span class="line">| cp850_general_ci         | cp850    |   4 | Yes     | Yes      |       1 |</span><br><span class="line">| cp850_bin                | cp850    |  80 |         | Yes      |       1 |</span><br><span class="line"></span><br><span class="line"><span class="comment">#校验规则</span></span><br><span class="line">1）ci：大小写不敏感</span><br><span class="line">2）cs或bin：大小写敏感</span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看当前系统的字符集</span></span><br><span class="line">[root@db04 ~]# <span class="built_in">echo</span> <span class="variable">$LANG</span></span><br><span class="line">en_US.UTF-8</span><br><span class="line"></span><br><span class="line"><span class="comment">## 临时修改系统字符集</span></span><br><span class="line">[root@db04 ~]# <span class="built_in">export</span> LANG=en_US.UTF-8</span><br><span class="line"></span><br><span class="line"><span class="comment">## 永久修改 CentOS7</span></span><br><span class="line">[root@db04 ~]# vim /etc/locale.conf</span><br><span class="line">LANG=<span class="string">&quot;en_US.UTF-8&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 永久修改 CentOS6</span></span><br><span class="line">[root@db04 ~]# vim /etc/sysconfig/i18n</span><br><span class="line">LANG=<span class="string">&quot;en_US.UTF-8</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">应用修改字符集</span></span><br><span class="line"><span class="string">[root@db04 ~]# vim /etc/my.cnf</span></span><br><span class="line"><span class="string">[mysqld]</span></span><br><span class="line"><span class="string">character_set_server=utf8</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">mysql&gt; show create database mysql;</span></span><br><span class="line"><span class="string">+----------+------------------------------------------------------------------+</span></span><br><span class="line"><span class="string">| Database | Create Database |</span></span><br><span class="line"><span class="string">+----------+------------------------------------------------------------------+</span></span><br><span class="line"><span class="string">| mysql | CREATE DATABASE `mysql` /*!40100 DEFAULT CHARACTER SET latin1 */ |</span></span><br><span class="line"><span class="string">+----------+------------------------------------------------------------------+</span></span><br><span class="line"><span class="string">mysql&gt; alter database mysql charset utf8;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#查询所有不是utf8的字符集</span></span><br><span class="line"><span class="string">mysql&gt; select * from information_schema.tables where table_collation not like &#x27;%utf8%&#x27;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">### 修改单张表字符集</span></span><br><span class="line"><span class="string">mysql&gt; alter table zls.test111 charset utf8;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">### 批量修改表的字符集</span></span><br><span class="line"><span class="string">## 方法一：</span></span><br><span class="line"><span class="string">[root@db04 ~]# for n in `seq 7`;do mysql -uroot -p123 -e &quot;</span>alter table</span><br><span class="line">zabbix.zabbix<span class="variable">$n</span> charset utf8<span class="string">&quot; ;done</span></span><br><span class="line"><span class="string">## 方法二：</span></span><br><span class="line"><span class="string">[root@db04 ~]# mysqldump -uroot -p123 -B zabbix &gt; /tmp/zabbix.sql</span></span><br><span class="line"><span class="string">[root@db04 ~]# vim /tmp/zabbix.sql</span></span><br><span class="line"><span class="string">:%s#CHARSET=latin1#CHARSET=utf8#g</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[root@db04 ~]# sed -i &#x27;s#CHARSET=latin1#CHARSET=utf8#g&#x27; /tmp/zabbix.sql</span></span><br><span class="line"><span class="string">[root@db04 ~]# mysql -uroot -p123 &lt; /tmp/zabbix.sql</span></span><br></pre></td></tr></table></figure><h2 id="2-安装MySQL">2.安装MySQL</h2><h3 id="源码安装MySQL5-6">源码安装MySQL5.6</h3><p><strong>以5.6.50版本为例</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#获取mysql包</span></span><br><span class="line"><span class="comment">#源码安装</span></span><br><span class="line">wget https://downloads.mysql.com/archives/get/p/23/file/mysql-5.6.50.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment">#二进制安装</span></span><br><span class="line">wget https://downloads.mysql.com/archives/get/p/23/file/mysql-5.6.50-linux-glibc2.12-x86_64.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment">#国外网站下载慢，有条件开魔法</span></span><br></pre></td></tr></table></figure><h4 id="编译-安装">编译 &amp;&amp; 安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#0.创建安装目录</span></span><br><span class="line"><span class="built_in">mkdir</span> /app</span><br><span class="line"></span><br><span class="line"><span class="comment">#1.安装依赖</span></span><br><span class="line">yum install -y cmake  gcc gcc-c++ git openssl-devel ncurses-devel autoconf libaio-devel</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.解压</span></span><br><span class="line">tar xf mysql-5.6.50.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.生成 ./configure --prefix=xxx cmake（这一步需要cmake依赖，和C环境）</span></span><br><span class="line">cmake . -DCMAKE_INSTALL_PREFIX=/app/mysql-5.6.50 \</span><br><span class="line">-DMYSQL_DATADIR=/app/mysql-5.6.50/data \</span><br><span class="line">-DMYSQL_UNIX_ADDR=/app/mysql-5.6.50/tmp/mysql.sock \</span><br><span class="line">-DDEFAULT_CHARSET=utf8 \</span><br><span class="line">-DDEFAULT_COLLATION=utf8_general_ci \</span><br><span class="line">-DWITH_EXTRA_CHARSETS=all \</span><br><span class="line">-DWITH_INNOBASE_STORAGE_ENGINE=1 \</span><br><span class="line">-DWITH_FEDERATED_STORAGE_ENGINE=1 \</span><br><span class="line">-DWITH_BLACKHOLE_STORAGE_ENGINE=1 \</span><br><span class="line">-DWITHOUT_EXAMPLE_STORAGE_ENGINE=1 \</span><br><span class="line">-DWITH_ZLIB=bundled \</span><br><span class="line">-DWITH_SSL=system \</span><br><span class="line">-DENABLED_LOCAL_INFILE=1 \</span><br><span class="line">-DWITH_EMBEDDED_SERVER=1 \</span><br><span class="line">-DENABLE_DOWNLOADS=1 \</span><br><span class="line">-DWITH_DEBUG=0</span><br><span class="line"></span><br><span class="line"><span class="comment">#####注：</span></span><br><span class="line">如果遇到报错，下次cmake之前一定要删除CMakeCache.txt文件（执行cmake都会产生）</span><br><span class="line">如果是缺少gcc等环境报错，安装完毕c环境之后，要删除整个包在重新解压再去重，cmake</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#程序存放位置</span></span><br><span class="line">cmake . -DCMAKE_INSTALL_PREFIX=/app/mysql-5.6.50 \</span><br><span class="line"><span class="comment">#数据存放位置</span></span><br><span class="line">-DMYSQL_DATADIR=/app/mysql-5.6.50/data \</span><br><span class="line"><span class="comment">#socket文件存放位置</span></span><br><span class="line">-DMYSQL_UNIX_ADDR=/app/mysql-5.6.50/tmp/mysql.sock \</span><br><span class="line"><span class="comment">#使用utf8字符集</span></span><br><span class="line">-DDEFAULT_CHARSET=utf8 \</span><br><span class="line"><span class="comment">#校验规则</span></span><br><span class="line">-DDEFAULT_COLLATION=utf8_general_ci \</span><br><span class="line"><span class="comment">#使用其他额外的字符集</span></span><br><span class="line">-DWITH_EXTRA_CHARSETS=all \</span><br><span class="line"><span class="comment">#支持的存储引擎</span></span><br><span class="line">-DWITH_INNOBASE_STORAGE_ENGINE=1 \</span><br><span class="line">-DWITH_FEDERATED_STORAGE_ENGINE=1 \</span><br><span class="line">-DWITH_BLACKHOLE_STORAGE_ENGINE=1 \</span><br><span class="line"><span class="comment">#禁用的存储引擎</span></span><br><span class="line">-DWITHOUT_EXAMPLE_STORAGE_ENGINE=1 \</span><br><span class="line"><span class="comment">#启用zlib库支持（zib、gzib相关）</span></span><br><span class="line">-DWITH_ZLIB=bundled \</span><br><span class="line"><span class="comment">#启用SSL库支持（安全套接层）</span></span><br><span class="line">-DWITH_SSL=bundled \</span><br><span class="line"><span class="comment">#启用本地数据导入支持</span></span><br><span class="line">-DENABLED_LOCAL_INFILE=1 \</span><br><span class="line"><span class="comment">#编译嵌入式服务器支持</span></span><br><span class="line">-DWITH_EMBEDDED_SERVER=1 \</span><br><span class="line"><span class="comment"># mysql5.6支持了google的c++mock框架了，允许下载，否则会安装报错。</span></span><br><span class="line">-DENABLE_DOWNLOADS=1 \</span><br><span class="line"><span class="comment">#禁用debug（默认为禁用）</span></span><br><span class="line">-DWITH_DEBUG=0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.编译和安装</span></span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h4 id="安装数据库">安装数据库</h4><p><strong>和二进制安装一样步骤，报错不一样</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1.拷贝启动脚本到init.d下</span></span><br><span class="line"><span class="built_in">cp</span> /app/mysql-5.6.50/support-files/mysql.server /etc/init.d/mysqld</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 2.创建MySQL程序用户</span></span><br><span class="line">useradd mysql -s /sbin/nologin -M</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.初始化mysql目录</span></span><br><span class="line">/app/mysql-5.6.50/scripts/mysql_install_db --user=mysql --basedir=/app/mysql-5.6.50 --datadir=/app/mysql-5.6.50/data</span><br><span class="line"></span><br><span class="line"><span class="comment">###########################</span></span><br><span class="line">--user指定用户 </span><br><span class="line">--basedir指定安装目录</span><br><span class="line">--datadir编译的时候指定的data目录</span><br><span class="line"><span class="comment">###########################</span></span><br><span class="line"></span><br><span class="line">[root@db01 mysql-5.6.50]# <span class="built_in">echo</span> $?</span><br><span class="line">0</span><br><span class="line"></span><br><span class="line"><span class="comment">#4.启动数据库</span></span><br><span class="line">/etc/init.d/mysqld start<span class="comment">#（报错原因见--启动报错解决）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#5.正确启动流程前提(注意是否有mariadb数据库)</span></span><br><span class="line"><span class="built_in">mkdir</span> /app/mysql-5.6.50/tmp</span><br><span class="line"><span class="built_in">chown</span> -R mysql.mysql /app/mysql-5.6.50/</span><br><span class="line"></span><br><span class="line"><span class="comment">#检查是否有mariadb并删除</span></span><br><span class="line">[root@db01 mysql-5.6.50]# rpm -qa|grep mariadb</span><br><span class="line">mariadb-libs-5.5.60-1.el7_5.x86_64</span><br><span class="line">[root@db01 mysql-5.6.50]# rpm -e --nodeps mariadb-libs-5.5.60-1.el7_5.x86_64</span><br><span class="line">[root@db01 mysql-5.6.50]# </span><br><span class="line"></span><br><span class="line"><span class="comment">#再次执行启动命令</span></span><br><span class="line">[root@db01 ~]# /etc/init.d/mysqld start</span><br><span class="line">Starting MySQL. SUCCESS! </span><br><span class="line"></span><br><span class="line"><span class="comment">#6.设置开机启动</span></span><br><span class="line">chkconfig --add mysqld</span><br><span class="line"></span><br><span class="line">chkconfig --list</span><br><span class="line">mysqld          0:off   1:off   2:on    3:on    4:on    5:on    6:off</span><br><span class="line"></span><br><span class="line"><span class="comment">#7.连接数据库（为啥需要添加环境变量详情见--连接mysql报错）</span></span><br><span class="line"><span class="comment">#添加环境变量</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;export PATH=&quot;/app/mysql-5.6.50/bin:$PATH&quot;&#x27;</span> &gt;/etc/profile.d/mysql.sh</span><br><span class="line"></span><br><span class="line"><span class="comment">#加载环境变量</span></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用mysql就可以愉快连接数据库了</span></span><br><span class="line">[root@db01 ~]# mysql</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection <span class="built_in">id</span> is 3</span><br><span class="line">Server version: 5.6.50 Source distribution</span><br><span class="line">Copyright (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line">Type <span class="string">&#x27;help;&#x27;</span> or <span class="string">&#x27;\h&#x27;</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">&#x27;\c&#x27;</span> to clear the current input statement.</span><br><span class="line">mysql&gt; </span><br></pre></td></tr></table></figure><h4 id="启动数据库报错解决">启动数据库报错解决</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 ~]# /etc/init.d/mysqld start</span><br><span class="line">Starting MySQL.Logging to <span class="string">&#x27;/app/mysql-5.6.50/data/db01.err&#x27;</span>.</span><br><span class="line">240807 14:03:01 mysqld_safe Directory <span class="string">&#x27;/app/mysql-5.6.50/tmp&#x27;</span> <span class="keyword">for</span> UNIX socket file don<span class="string">&#x27;t exists.</span></span><br><span class="line"><span class="string"> ERROR! The server quit without updating PID file (/app/mysql-5.6.50/data/db01.pid).</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#报错分析：</span></span><br><span class="line"><span class="string">ERROR! The server quit without updating PID file (/app/mysql-5.6.50/data/db01.pid).</span></span><br><span class="line"><span class="string"> #没有pid文件，为啥没有？</span></span><br><span class="line"><span class="string"> 只有程序启动才会有pid文件，说明mysql根本就没有正常启动</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#往上分析</span></span><br><span class="line"><span class="string">240807 14:03:01 mysqld_safe Directory &#x27;</span>/app/mysql-5.6.50/tmp<span class="string">&#x27; for UNIX socket file don&#x27;</span>t exists.</span><br><span class="line"><span class="comment">#socket 文件不存在？</span></span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/QQ_1723015942442.png" alt="QQ_1723015942442"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">报错分析：</span><br><span class="line">编译的时候指定socket文件存放在此处，但是没有这个目录</span><br><span class="line">解决：</span><br><span class="line"><span class="built_in">mkdir</span> /app/mysql-5.6.50/tmp</span><br><span class="line"></span><br><span class="line"><span class="comment">#再次执行启动命令</span></span><br><span class="line">[root@db01 ~]# /etc/init.d/mysqld start</span><br><span class="line">Starting MySQL.Logging to <span class="string">&#x27;/app/mysql-5.6.50/data/db01.err&#x27;</span>.</span><br><span class="line">... ERROR! The server quit without updating PID file (/app/mysql-5.6.50/data/db01.pid).</span><br><span class="line"></span><br><span class="line"><span class="comment">#分析：看日志</span></span><br><span class="line">[root@db01 ~]# <span class="built_in">cat</span> /app/mysql-5.6.50/data/db01.err</span><br><span class="line">2024-08-07 15:04:15 24317 [Note] Plugin <span class="string">&#x27;FEDERATED&#x27;</span> is disabled.</span><br><span class="line">2024-08-07 15:04:15 24317 [Note] InnoDB: Using atomics to ref count buffer pool pages</span><br><span class="line">2024-08-07 15:04:15 24317 [Note] InnoDB: The InnoDB memory heap is disabled</span><br><span class="line">2024-08-07 15:04:15 24317 [Note] InnoDB: Mutexes and rw_locks use GCC atomic builtins</span><br><span class="line">2024-08-07 15:04:15 24317 [Note] InnoDB: Memory barrier is not used</span><br><span class="line">2024-08-07 15:04:15 24317 [Note] InnoDB: Compressed tables use zlib 1.2.11</span><br><span class="line">2024-08-07 15:04:15 24317 [Note] InnoDB: Using Linux native AIO</span><br><span class="line">2024-08-07 15:04:15 24317 [Note] InnoDB: Using CPU crc32 instructions</span><br><span class="line">2024-08-07 15:04:15 24317 [Note] InnoDB: Initializing buffer pool, size = 128.0M</span><br><span class="line">2024-08-07 15:04:15 24317 [Note] InnoDB: Completed initialization of buffer pool</span><br><span class="line">2024-08-07 15:04:15 24317 [Note] InnoDB: Highest supported file format is Barracuda.</span><br><span class="line">2024-08-07 15:04:15 24317 [Note] InnoDB: 128 rollback segment(s) are active.</span><br><span class="line">2024-08-07 15:04:15 24317 [Note] InnoDB: Waiting <span class="keyword">for</span> purge to start</span><br><span class="line">2024-08-07 15:04:15 24317 [Note] InnoDB: 5.6.50 started; <span class="built_in">log</span> sequence number 1625987</span><br><span class="line">2024-08-07 15:04:15 24317 [Warning] No existing UUID has been found, so we assume that this is the first time that this server has been started. Generating a new UUID: 421a7ae9-548b-11ef-aa26-000c292b15c7.</span><br><span class="line">2024-08-07 15:04:15 24317 [Note] RSA private key file not found: /app/mysql-5.6.50/data//private_key.pem. Some authentication plugins will not work.</span><br><span class="line">2024-08-07 15:04:15 24317 [Note] RSA public key file not found: /app/mysql-5.6.50/data//public_key.pem. Some authentication plugins will not work.</span><br><span class="line">2024-08-07 15:04:15 24317 [Note] Server hostname (bind-address): <span class="string">&#x27;*&#x27;</span>; port: 3306</span><br><span class="line">2024-08-07 15:04:15 24317 [Note] IPv6 is available.</span><br><span class="line">2024-08-07 15:04:15 24317 [Note]   - <span class="string">&#x27;::&#x27;</span> resolves to <span class="string">&#x27;::&#x27;</span>;</span><br><span class="line">2024-08-07 15:04:15 24317 [Note] Server socket created on IP: <span class="string">&#x27;::&#x27;</span>.</span><br><span class="line">2024-08-07 15:04:15 24317 [ERROR] Can<span class="string">&#x27;t start server : Bind on unix socket: Permission denied</span></span><br><span class="line"><span class="string">2024-08-07 15:04:15 24317 [ERROR] Do you already have another mysqld server running on socket: /app/mysql-5.6.50/tmp/mysql.sock ?</span></span><br><span class="line"><span class="string">2024-08-07 15:04:15 24317 [ERROR] Aborting</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">2024-08-07 15:04:15 24317 [Note] Binlog end</span></span><br><span class="line"><span class="string">2024-08-07 15:04:15 24317 [Note] Shutting down plugin &#x27;</span>partition<span class="string">&#x27;</span></span><br><span class="line"><span class="string">2024-08-07 15:04:15 24317 [Note] Shutting down plugin &#x27;</span>PERFORMANCE_SCHEMA<span class="string">&#x27;</span></span><br><span class="line"><span class="string">2024-08-07 15:04:15 24317 [Note] Shutting down plugin &#x27;</span>INNODB_SYS_DATAFILES<span class="string">&#x27;</span></span><br><span class="line"><span class="string">2024-08-07 15:04:15 24317 [Note] Shutting down plugin &#x27;</span>INNODB_SYS_TABLESPACES<span class="string">&#x27;</span></span><br><span class="line"><span class="string">2024-08-07 15:04:15 24317 [Note] Shutting down plugin &#x27;</span>INNODB_SYS_FOREIGN_COLS<span class="string">&#x27;</span></span><br><span class="line"><span class="string">2024-08-07 15:04:15 24317 [Note] Shutting down plugin &#x27;</span>INNODB_SYS_FOREIGN<span class="string">&#x27;</span></span><br><span class="line"><span class="string">2024-08-07 15:04:15 24317 [Note] Shutting down plugin &#x27;</span>INNODB_SYS_FIELDS<span class="string">&#x27;</span></span><br><span class="line"><span class="string">2024-08-07 15:04:15 24317 [Note] Shutting down plugin &#x27;</span>INNODB_SYS_COLUMNS<span class="string">&#x27;</span></span><br><span class="line"><span class="string">2024-08-07 15:04:15 24317 [Note] Shutting down plugin &#x27;</span>INNODB_SYS_INDEXES<span class="string">&#x27;</span></span><br><span class="line"><span class="string">2024-08-07 15:04:15 24317 [Note] Shutting down plugin &#x27;</span>INNODB_SYS_TABLESTATS<span class="string">&#x27;</span></span><br><span class="line"><span class="string">2024-08-07 15:04:15 24317 [Note] Shutting down plugin &#x27;</span>INNODB_SYS_TABLES<span class="string">&#x27;</span></span><br><span class="line"><span class="string">2024-08-07 15:04:15 24317 [Note] Shutting down plugin &#x27;</span>INNODB_FT_INDEX_TABLE<span class="string">&#x27;</span></span><br><span class="line"><span class="string">2024-08-07 15:04:15 24317 [Note] Shutting down plugin &#x27;</span>INNODB_FT_INDEX_CACHE<span class="string">&#x27;</span></span><br><span class="line"><span class="string">2024-08-07 15:04:15 24317 [Note] Shutting down plugin &#x27;</span>INNODB_FT_CONFIG<span class="string">&#x27;</span></span><br><span class="line"><span class="string">2024-08-07 15:04:15 24317 [Note] Shutting down plugin &#x27;</span>INNODB_FT_BEING_DELETED<span class="string">&#x27;</span></span><br><span class="line"><span class="string">2024-08-07 15:04:15 24317 [Note] Shutting down plugin &#x27;</span>INNODB_FT_DELETED<span class="string">&#x27;</span></span><br><span class="line"><span class="string">2024-08-07 15:04:15 24317 [Note] Shutting down plugin &#x27;</span>INNODB_FT_DEFAULT_STOPWORD<span class="string">&#x27;</span></span><br><span class="line"><span class="string">2024-08-07 15:04:15 24317 [Note] Shutting down plugin &#x27;</span>INNODB_METRICS<span class="string">&#x27;</span></span><br><span class="line"><span class="string">2024-08-07 15:04:15 24317 [Note] Shutting down plugin &#x27;</span>INNODB_BUFFER_POOL_STATS<span class="string">&#x27;</span></span><br><span class="line"><span class="string">2024-08-07 15:04:15 24317 [Note] Shutting down plugin &#x27;</span>INNODB_BUFFER_PAGE_LRU<span class="string">&#x27;</span></span><br><span class="line"><span class="string">2024-08-07 15:04:15 24317 [Note] Shutting down plugin &#x27;</span>INNODB_BUFFER_PAGE<span class="string">&#x27;</span></span><br><span class="line"><span class="string">2024-08-07 15:04:15 24317 [Note] Shutting down plugin &#x27;</span>INNODB_CMP_PER_INDEX_RESET<span class="string">&#x27;</span></span><br><span class="line"><span class="string">2024-08-07 15:04:15 24317 [Note] Shutting down plugin &#x27;</span>INNODB_CMP_PER_INDEX<span class="string">&#x27;</span></span><br><span class="line"><span class="string">2024-08-07 15:04:15 24317 [Note] Shutting down plugin &#x27;</span>INNODB_CMPMEM_RESET<span class="string">&#x27;</span></span><br><span class="line"><span class="string">2024-08-07 15:04:15 24317 [Note] Shutting down plugin &#x27;</span>INNODB_CMPMEM<span class="string">&#x27;</span></span><br><span class="line"><span class="string">2024-08-07 15:04:15 24317 [Note] Shutting down plugin &#x27;</span>INNODB_CMP_RESET<span class="string">&#x27;</span></span><br><span class="line"><span class="string">2024-08-07 15:04:15 24317 [Note] Shutting down plugin &#x27;</span>INNODB_CMP<span class="string">&#x27;</span></span><br><span class="line"><span class="string">2024-08-07 15:04:15 24317 [Note] Shutting down plugin &#x27;</span>INNODB_LOCK_WAITS<span class="string">&#x27;</span></span><br><span class="line"><span class="string">2024-08-07 15:04:15 24317 [Note] Shutting down plugin &#x27;</span>INNODB_LOCKS<span class="string">&#x27;</span></span><br><span class="line"><span class="string">2024-08-07 15:04:15 24317 [Note] Shutting down plugin &#x27;</span>INNODB_TRX<span class="string">&#x27;</span></span><br><span class="line"><span class="string">2024-08-07 15:04:15 24317 [Note] Shutting down plugin &#x27;</span>InnoDB<span class="string">&#x27;</span></span><br><span class="line"><span class="string">2024-08-07 15:04:15 24317 [Note] InnoDB: FTS optimize thread exiting.</span></span><br><span class="line"><span class="string">2024-08-07 15:04:15 24317 [Note] InnoDB: Starting shutdown...</span></span><br><span class="line"><span class="string">2024-08-07 15:04:17 24317 [Note] InnoDB: Shutdown completed; log sequence number 1625997</span></span><br><span class="line"><span class="string">2024-08-07 15:04:17 24317 [Note] Shutting down plugin &#x27;</span>BLACKHOLE<span class="string">&#x27;</span></span><br><span class="line"><span class="string">2024-08-07 15:04:17 24317 [Note] Shutting down plugin &#x27;</span>ARCHIVE<span class="string">&#x27;</span></span><br><span class="line"><span class="string">2024-08-07 15:04:17 24317 [Note] Shutting down plugin &#x27;</span>MRG_MYISAM<span class="string">&#x27;</span></span><br><span class="line"><span class="string">2024-08-07 15:04:17 24317 [Note] Shutting down plugin &#x27;</span>MyISAM<span class="string">&#x27;</span></span><br><span class="line"><span class="string">2024-08-07 15:04:17 24317 [Note] Shutting down plugin &#x27;</span>MEMORY<span class="string">&#x27;</span></span><br><span class="line"><span class="string">2024-08-07 15:04:17 24317 [Note] Shutting down plugin &#x27;</span>CSV<span class="string">&#x27;</span></span><br><span class="line"><span class="string">2024-08-07 15:04:17 24317 [Note] Shutting down plugin &#x27;</span>sha256_password<span class="string">&#x27;</span></span><br><span class="line"><span class="string">2024-08-07 15:04:17 24317 [Note] Shutting down plugin &#x27;</span>mysql_old_password<span class="string">&#x27;</span></span><br><span class="line"><span class="string">2024-08-07 15:04:17 24317 [Note] Shutting down plugin &#x27;</span>mysql_native_password<span class="string">&#x27;</span></span><br><span class="line"><span class="string">2024-08-07 15:04:17 24317 [Note] Shutting down plugin &#x27;</span>binlog<span class="string">&#x27;</span></span><br><span class="line"><span class="string">2024-08-07 15:04:17 24317 [Note] /app/mysql-5.6.50/bin/mysqld: Shutdown complete</span></span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/QQ_1723015890661.png" alt="QQ_1723015890661"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Can<span class="string">&#x27;t start server : Bind on unix socket: Permission denied</span></span><br><span class="line"><span class="string">分析：权限不足</span></span><br><span class="line"><span class="string">解决：</span></span><br><span class="line"><span class="string">chown -R mysql.mysql /app/mysql-5.6.50/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#再次执行启动命令</span></span><br><span class="line"><span class="string">[root@db01 ~]# /etc/init.d/mysqld start</span></span><br><span class="line"><span class="string">Starting MySQL. SUCCESS! </span></span><br></pre></td></tr></table></figure><h4 id="连接msyql报错">连接msyql报错</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 mysql-5.6.50]# mysql</span><br><span class="line">-bash: mysql: <span class="built_in">command</span> not found</span><br><span class="line"><span class="comment">#为啥没有mysql命令？</span></span><br><span class="line">没有添加环境变量，mysql命令在/app/mysql-5.6.50/bin下</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用绝对路径也可以启动</span></span><br><span class="line">[root@db01 mysql-5.6.50]# /app/mysql-5.6.50/bin/mysql</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection <span class="built_in">id</span> is 1</span><br><span class="line">Server version: 5.6.50 Source distribution</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">&#x27;help;&#x27;</span> or <span class="string">&#x27;\h&#x27;</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">&#x27;\c&#x27;</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">###怎么解决？</span></span><br><span class="line">方法1.</span><br><span class="line"><span class="comment">#添加环境变量</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;export PATH=&quot;/app/mysql-5.6.50/bin:$PATH&quot;&#x27;</span> &gt;/etc/profile.d/mysql.sh</span><br><span class="line"></span><br><span class="line"><span class="comment">#重新加载环境变量</span></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br><span class="line">方法2.</span><br><span class="line"><span class="built_in">ln</span> -s /app/mysql-5.6.50/bin/* /usr/bin/</span><br><span class="line"></span><br><span class="line"><span class="comment">#建议</span></span><br><span class="line">给mysql做个软链接，假如mysql升级就不需要再次做软链接了</span><br><span class="line"><span class="built_in">ln</span> -s /app/mysql-5.6.50/ /app/mysql</span><br><span class="line"><span class="built_in">ln</span> -s /app/mysql/bin/* /usr/bin/</span><br></pre></td></tr></table></figure><h4 id="初始化报错解决">初始化报错解决</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#报错</span></span><br><span class="line">FATAL ERROR: please install the following Perl modules before executing /app/mysql-5.6.50/scripts/mysql_install_db:</span><br><span class="line">Data::Dumper</span><br><span class="line"><span class="comment">#解决方法是安装autoconf库和libaio库文件</span></span><br><span class="line">yum -y install autoconf libaio-devel</span><br><span class="line"></span><br><span class="line"><span class="comment">#再次执行初始化数据库操作</span></span><br><span class="line">[root@db01 ~]# /app/mysql-5.6.50/scripts/mysql_install_db --user=mysql --basedir=/app/mysql-5.6.50 --datadir=/app/mysql-5.6.50/data</span><br><span class="line">Installing MySQL system tables...2024-08-07 14:00:39 0 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation <span class="keyword">for</span> more details).</span><br><span class="line">2024-08-07 14:00:39 0 [Note] Ignoring --secure-file-priv value as server is running with --bootstrap.</span><br><span class="line">2024-08-07 14:00:39 0 [Note] /app/mysql-5.6.50/bin/mysqld (mysqld 5.6.50) starting as process 23552 ...</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] InnoDB: Using atomics to ref count buffer pool pages</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] InnoDB: The InnoDB memory heap is disabled</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] InnoDB: Mutexes and rw_locks use GCC atomic builtins</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] InnoDB: Memory barrier is not used</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] InnoDB: Compressed tables use zlib 1.2.11</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] InnoDB: Using Linux native AIO</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] InnoDB: Using CPU crc32 instructions</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] InnoDB: Initializing buffer pool, size = 128.0M</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] InnoDB: Completed initialization of buffer pool</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] InnoDB: The first specified data file ./ibdata1 did not exist: a new database to be created!</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] InnoDB: Setting file ./ibdata1 size to 12 MB</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] InnoDB: Database physically writes the file full: <span class="built_in">wait</span>...</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] InnoDB: Setting <span class="built_in">log</span> file ./ib_logfile101 size to 48 MB</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] InnoDB: Setting <span class="built_in">log</span> file ./ib_logfile1 size to 48 MB</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] InnoDB: Renaming <span class="built_in">log</span> file ./ib_logfile101 to ./ib_logfile0</span><br><span class="line">2024-08-07 14:00:39 23552 [Warning] InnoDB: New <span class="built_in">log</span> files created, LSN=45781</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] InnoDB: Doublewrite buffer not found: creating new</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] InnoDB: Doublewrite buffer created</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] InnoDB: 128 rollback segment(s) are active.</span><br><span class="line">2024-08-07 14:00:39 23552 [Warning] InnoDB: Creating foreign key constraint system tables.</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] InnoDB: Foreign key constraint system tables created</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] InnoDB: Creating tablespace and datafile system tables.</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] InnoDB: Tablespace and datafile system tables created.</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] InnoDB: Waiting <span class="keyword">for</span> purge to start</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] InnoDB: 5.6.50 started; <span class="built_in">log</span> sequence number 0</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] RSA private key file not found: /app/mysql-5.6.50/data//private_key.pem. Some authentication plugins will not work.</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] RSA public key file not found: /app/mysql-5.6.50/data//public_key.pem. Some authentication plugins will not work.</span><br><span class="line">2024-08-07 14:00:40 23552 [Note] Binlog end</span><br><span class="line">2024-08-07 14:00:40 23552 [Note] InnoDB: FTS optimize thread exiting.</span><br><span class="line">2024-08-07 14:00:40 23552 [Note] InnoDB: Starting shutdown...</span><br><span class="line">2024-08-07 14:00:41 23552 [Note] InnoDB: Shutdown completed; <span class="built_in">log</span> sequence number 1625977</span><br><span class="line">OK</span><br><span class="line"></span><br><span class="line">Filling <span class="built_in">help</span> tables...2024-08-07 14:00:41 0 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation <span class="keyword">for</span> more details).</span><br><span class="line">2024-08-07 14:00:41 0 [Note] Ignoring --secure-file-priv value as server is running with --bootstrap.</span><br><span class="line">2024-08-07 14:00:41 0 [Note] /app/mysql-5.6.50/bin/mysqld (mysqld 5.6.50) starting as process 23574 ...</span><br><span class="line">2024-08-07 14:00:41 23574 [Note] InnoDB: Using atomics to ref count buffer pool pages</span><br><span class="line">2024-08-07 14:00:41 23574 [Note] InnoDB: The InnoDB memory heap is disabled</span><br><span class="line">2024-08-07 14:00:41 23574 [Note] InnoDB: Mutexes and rw_locks use GCC atomic builtins</span><br><span class="line">2024-08-07 14:00:41 23574 [Note] InnoDB: Memory barrier is not used</span><br><span class="line">2024-08-07 14:00:41 23574 [Note] InnoDB: Compressed tables use zlib 1.2.11</span><br><span class="line">2024-08-07 14:00:41 23574 [Note] InnoDB: Using Linux native AIO</span><br><span class="line">2024-08-07 14:00:41 23574 [Note] InnoDB: Using CPU crc32 instructions</span><br><span class="line">2024-08-07 14:00:41 23574 [Note] InnoDB: Initializing buffer pool, size = 128.0M</span><br><span class="line">2024-08-07 14:00:41 23574 [Note] InnoDB: Completed initialization of buffer pool</span><br><span class="line">2024-08-07 14:00:41 23574 [Note] InnoDB: Highest supported file format is Barracuda.</span><br><span class="line">2024-08-07 14:00:41 23574 [Note] InnoDB: 128 rollback segment(s) are active.</span><br><span class="line">2024-08-07 14:00:41 23574 [Note] InnoDB: Waiting <span class="keyword">for</span> purge to start</span><br><span class="line">2024-08-07 14:00:41 23574 [Note] InnoDB: 5.6.50 started; <span class="built_in">log</span> sequence number 1625977</span><br><span class="line">2024-08-07 14:00:41 23574 [Note] RSA private key file not found: /app/mysql-5.6.50/data//private_key.pem. Some authentication plugins will not work.</span><br><span class="line">2024-08-07 14:00:41 23574 [Note] RSA public key file not found: /app/mysql-5.6.50/data//public_key.pem. Some authentication plugins will not work.</span><br><span class="line">2024-08-07 14:00:41 23574 [Note] Binlog end</span><br><span class="line">2024-08-07 14:00:41 23574 [Note] InnoDB: FTS optimize thread exiting.</span><br><span class="line">2024-08-07 14:00:41 23574 [Note] InnoDB: Starting shutdown...</span><br><span class="line">2024-08-07 14:00:43 23574 [Note] InnoDB: Shutdown completed; <span class="built_in">log</span> sequence number 1625987</span><br><span class="line">OK</span><br><span class="line"></span><br><span class="line">To start mysqld at boot time you have to copy</span><br><span class="line">support-files/mysql.server to the right place <span class="keyword">for</span> your system</span><br><span class="line"></span><br><span class="line">PLEASE REMEMBER TO SET A PASSWORD FOR THE MySQL root USER !</span><br><span class="line">To <span class="keyword">do</span> so, start the server, <span class="keyword">then</span> issue the following commands:</span><br><span class="line"></span><br><span class="line">  /app/mysql-5.6.50/bin/mysqladmin -u root password <span class="string">&#x27;new-password&#x27;</span></span><br><span class="line">  /app/mysql-5.6.50/bin/mysqladmin -u root -h db01 password <span class="string">&#x27;new-password&#x27;</span></span><br><span class="line"></span><br><span class="line">Alternatively you can run:</span><br><span class="line"></span><br><span class="line">  /app/mysql-5.6.50/bin/mysql_secure_installation</span><br><span class="line"></span><br><span class="line"><span class="built_in">which</span> will also give you the option of removing the <span class="built_in">test</span></span><br><span class="line">databases and anonymous user created by default.  This is</span><br><span class="line">strongly recommended <span class="keyword">for</span> production servers.</span><br><span class="line"></span><br><span class="line">See the manual <span class="keyword">for</span> more instructions.</span><br><span class="line"></span><br><span class="line">You can start the MySQL daemon with:</span><br><span class="line"></span><br><span class="line">  <span class="built_in">cd</span> . ; /app/mysql-5.6.50/bin/mysqld_safe &amp;</span><br><span class="line"></span><br><span class="line">You can <span class="built_in">test</span> the MySQL daemon with mysql-test-run.pl</span><br><span class="line"></span><br><span class="line">  <span class="built_in">cd</span> mysql-test ; perl mysql-test-run.pl</span><br><span class="line"></span><br><span class="line">Please report any problems at http://bugs.mysql.com/</span><br><span class="line"></span><br><span class="line">The latest information about MySQL is available on the web at</span><br><span class="line"></span><br><span class="line">  http://www.mysql.com</span><br><span class="line"></span><br><span class="line">Support MySQL by buying support/licenses at http://shop.mysql.com</span><br><span class="line"></span><br><span class="line">New default config file was created as /app/mysql-5.6.50/my.cnf and</span><br><span class="line">will be used by default by the server when you start it.</span><br><span class="line">You may edit this file to change server settings</span><br><span class="line"></span><br><span class="line">WARNING: Default config file /etc/my.cnf exists on the system</span><br><span class="line">This file will be <span class="built_in">read</span> by default by the MySQL server</span><br><span class="line">If you <span class="keyword">do</span> not want to use this, either remove it, or use the</span><br><span class="line">--defaults-file argument to mysqld_safe when starting the server</span><br><span class="line"></span><br><span class="line">执行完毕后 ，过程中会有两个OK</span><br><span class="line">[root@db01 ~]# <span class="built_in">echo</span> $?</span><br><span class="line">0</span><br></pre></td></tr></table></figure><h3 id="二进制安装MySQL5-6">二进制安装MySQL5.6</h3><h4 id="安装数据库-2">安装数据库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#0.创建安装目录</span></span><br><span class="line"><span class="built_in">mkdir</span> /app</span><br><span class="line"></span><br><span class="line"><span class="comment">#1.安装依赖</span></span><br><span class="line">yum -y install openssl-devel ncurses-devel autoconf libaio-devel</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.解压</span></span><br><span class="line">tar xf mysql-5.6.50-linux-glibc2.12-x86_64.tar.gz -C /app</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.改名</span></span><br><span class="line"><span class="built_in">mv</span> /app/mysql-5.6.50-linux-glibc2.12-x86_64 /app/mysql-5.6.50</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 4.创建MySQL程序用户</span></span><br><span class="line">useradd mysql -s /sbin/nologin -M</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.拷贝MySQL的配置文件到/etc/下</span></span><br><span class="line">\<span class="built_in">cp</span> /app/mysql-5.6.50/support-files/my-default.cnf /etc/my.cnf</span><br><span class="line">[root@db01 mysql-5.6.50]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6.拷贝启动脚本</span></span><br><span class="line"><span class="built_in">cp</span> /app/mysql-5.6.50/support-files/mysql.server /etc/init.d/mysqld</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7.初始化MySQL--报错见初始化解决</span></span><br><span class="line">/app/mysql-5.6.50/scripts/mysql_install_db --user=mysql --basedir=/app/mysql-5.6.50 --datadir=/app/mysql-5.6.50/data</span><br><span class="line"></span><br><span class="line"><span class="comment">###########################</span></span><br><span class="line">--user指定用户 </span><br><span class="line">--basedir指定安装目录</span><br><span class="line">--datadir编译的时候指定的data目录</span><br><span class="line"><span class="comment">###########################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 8.启动MySQL （为啥需要指定dir?--详情见二进制启动失败）</span></span><br><span class="line">[root@db02 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">basedir=/app/mysql-5.6.50</span><br><span class="line">datadir=/app/mysql-5.6.50/data</span><br><span class="line">[root@db02 ~]# /etc/init.d/mysqld start</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#9.连接mysql（为啥加环境变量见此章--源码安装mysql，连接mysql失败）</span></span><br><span class="line"><span class="comment">#添加环境变量</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;export PATH=&quot;/app/mysql-5.6.50/bin:$PATH&quot;&#x27;</span> &gt;/etc/profile.d/mysql.sh</span><br><span class="line"></span><br><span class="line"><span class="comment">#加载环境变量</span></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment">#连接数据库  </span></span><br><span class="line">msyql</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Type <span class="string">&#x27;help;&#x27;</span> or <span class="string">&#x27;\h&#x27;</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">&#x27;\c&#x27;</span> to clear the current input statement.</span><br><span class="line">mysql&gt; </span><br></pre></td></tr></table></figure><h4 id="初始化报错解决-2">初始化报错解决</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#报错</span></span><br><span class="line">FATAL ERROR: please install the following Perl modules before executing /app/mysql-5.6.50/scripts/mysql_install_db:</span><br><span class="line">Data::Dumper</span><br><span class="line"><span class="comment">#解决方法是安装autoconf库和libaio库文件</span></span><br><span class="line">yum -y install autoconf libaio-devel</span><br><span class="line"></span><br><span class="line"><span class="comment">#再次执行初始化数据库操作</span></span><br><span class="line">[root@db01 ~]# /app/mysql-5.6.50/scripts/mysql_install_db --user=mysql --basedir=/app/mysql-5.6.50 --datadir=/app/mysql-5.6.50/data</span><br><span class="line">Installing MySQL system tables...2024-08-07 14:00:39 0 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation <span class="keyword">for</span> more details).</span><br><span class="line">2024-08-07 14:00:39 0 [Note] Ignoring --secure-file-priv value as server is running with --bootstrap.</span><br><span class="line">2024-08-07 14:00:39 0 [Note] /app/mysql-5.6.50/bin/mysqld (mysqld 5.6.50) starting as process 23552 ...</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] InnoDB: Using atomics to ref count buffer pool pages</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] InnoDB: The InnoDB memory heap is disabled</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] InnoDB: Mutexes and rw_locks use GCC atomic builtins</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] InnoDB: Memory barrier is not used</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] InnoDB: Compressed tables use zlib 1.2.11</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] InnoDB: Using Linux native AIO</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] InnoDB: Using CPU crc32 instructions</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] InnoDB: Initializing buffer pool, size = 128.0M</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] InnoDB: Completed initialization of buffer pool</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] InnoDB: The first specified data file ./ibdata1 did not exist: a new database to be created!</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] InnoDB: Setting file ./ibdata1 size to 12 MB</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] InnoDB: Database physically writes the file full: <span class="built_in">wait</span>...</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] InnoDB: Setting <span class="built_in">log</span> file ./ib_logfile101 size to 48 MB</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] InnoDB: Setting <span class="built_in">log</span> file ./ib_logfile1 size to 48 MB</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] InnoDB: Renaming <span class="built_in">log</span> file ./ib_logfile101 to ./ib_logfile0</span><br><span class="line">2024-08-07 14:00:39 23552 [Warning] InnoDB: New <span class="built_in">log</span> files created, LSN=45781</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] InnoDB: Doublewrite buffer not found: creating new</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] InnoDB: Doublewrite buffer created</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] InnoDB: 128 rollback segment(s) are active.</span><br><span class="line">2024-08-07 14:00:39 23552 [Warning] InnoDB: Creating foreign key constraint system tables.</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] InnoDB: Foreign key constraint system tables created</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] InnoDB: Creating tablespace and datafile system tables.</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] InnoDB: Tablespace and datafile system tables created.</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] InnoDB: Waiting <span class="keyword">for</span> purge to start</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] InnoDB: 5.6.50 started; <span class="built_in">log</span> sequence number 0</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] RSA private key file not found: /app/mysql-5.6.50/data//private_key.pem. Some authentication plugins will not work.</span><br><span class="line">2024-08-07 14:00:39 23552 [Note] RSA public key file not found: /app/mysql-5.6.50/data//public_key.pem. Some authentication plugins will not work.</span><br><span class="line">2024-08-07 14:00:40 23552 [Note] Binlog end</span><br><span class="line">2024-08-07 14:00:40 23552 [Note] InnoDB: FTS optimize thread exiting.</span><br><span class="line">2024-08-07 14:00:40 23552 [Note] InnoDB: Starting shutdown...</span><br><span class="line">2024-08-07 14:00:41 23552 [Note] InnoDB: Shutdown completed; <span class="built_in">log</span> sequence number 1625977</span><br><span class="line">OK</span><br><span class="line"></span><br><span class="line">Filling <span class="built_in">help</span> tables...2024-08-07 14:00:41 0 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation <span class="keyword">for</span> more details).</span><br><span class="line">2024-08-07 14:00:41 0 [Note] Ignoring --secure-file-priv value as server is running with --bootstrap.</span><br><span class="line">2024-08-07 14:00:41 0 [Note] /app/mysql-5.6.50/bin/mysqld (mysqld 5.6.50) starting as process 23574 ...</span><br><span class="line">2024-08-07 14:00:41 23574 [Note] InnoDB: Using atomics to ref count buffer pool pages</span><br><span class="line">2024-08-07 14:00:41 23574 [Note] InnoDB: The InnoDB memory heap is disabled</span><br><span class="line">2024-08-07 14:00:41 23574 [Note] InnoDB: Mutexes and rw_locks use GCC atomic builtins</span><br><span class="line">2024-08-07 14:00:41 23574 [Note] InnoDB: Memory barrier is not used</span><br><span class="line">2024-08-07 14:00:41 23574 [Note] InnoDB: Compressed tables use zlib 1.2.11</span><br><span class="line">2024-08-07 14:00:41 23574 [Note] InnoDB: Using Linux native AIO</span><br><span class="line">2024-08-07 14:00:41 23574 [Note] InnoDB: Using CPU crc32 instructions</span><br><span class="line">2024-08-07 14:00:41 23574 [Note] InnoDB: Initializing buffer pool, size = 128.0M</span><br><span class="line">2024-08-07 14:00:41 23574 [Note] InnoDB: Completed initialization of buffer pool</span><br><span class="line">2024-08-07 14:00:41 23574 [Note] InnoDB: Highest supported file format is Barracuda.</span><br><span class="line">2024-08-07 14:00:41 23574 [Note] InnoDB: 128 rollback segment(s) are active.</span><br><span class="line">2024-08-07 14:00:41 23574 [Note] InnoDB: Waiting <span class="keyword">for</span> purge to start</span><br><span class="line">2024-08-07 14:00:41 23574 [Note] InnoDB: 5.6.50 started; <span class="built_in">log</span> sequence number 1625977</span><br><span class="line">2024-08-07 14:00:41 23574 [Note] RSA private key file not found: /app/mysql-5.6.50/data//private_key.pem. Some authentication plugins will not work.</span><br><span class="line">2024-08-07 14:00:41 23574 [Note] RSA public key file not found: /app/mysql-5.6.50/data//public_key.pem. Some authentication plugins will not work.</span><br><span class="line">2024-08-07 14:00:41 23574 [Note] Binlog end</span><br><span class="line">2024-08-07 14:00:41 23574 [Note] InnoDB: FTS optimize thread exiting.</span><br><span class="line">2024-08-07 14:00:41 23574 [Note] InnoDB: Starting shutdown...</span><br><span class="line">2024-08-07 14:00:43 23574 [Note] InnoDB: Shutdown completed; <span class="built_in">log</span> sequence number 1625987</span><br><span class="line">OK</span><br><span class="line"></span><br><span class="line">To start mysqld at boot time you have to copy</span><br><span class="line">support-files/mysql.server to the right place <span class="keyword">for</span> your system</span><br><span class="line"></span><br><span class="line">PLEASE REMEMBER TO SET A PASSWORD FOR THE MySQL root USER !</span><br><span class="line">To <span class="keyword">do</span> so, start the server, <span class="keyword">then</span> issue the following commands:</span><br><span class="line"></span><br><span class="line">  /app/mysql-5.6.50/bin/mysqladmin -u root password <span class="string">&#x27;new-password&#x27;</span></span><br><span class="line">  /app/mysql-5.6.50/bin/mysqladmin -u root -h db01 password <span class="string">&#x27;new-password&#x27;</span></span><br><span class="line"></span><br><span class="line">Alternatively you can run:</span><br><span class="line"></span><br><span class="line">  /app/mysql-5.6.50/bin/mysql_secure_installation</span><br><span class="line"></span><br><span class="line"><span class="built_in">which</span> will also give you the option of removing the <span class="built_in">test</span></span><br><span class="line">databases and anonymous user created by default.  This is</span><br><span class="line">strongly recommended <span class="keyword">for</span> production servers.</span><br><span class="line"></span><br><span class="line">See the manual <span class="keyword">for</span> more instructions.</span><br><span class="line"></span><br><span class="line">You can start the MySQL daemon with:</span><br><span class="line"></span><br><span class="line">  <span class="built_in">cd</span> . ; /app/mysql-5.6.50/bin/mysqld_safe &amp;</span><br><span class="line"></span><br><span class="line">You can <span class="built_in">test</span> the MySQL daemon with mysql-test-run.pl</span><br><span class="line"></span><br><span class="line">  <span class="built_in">cd</span> mysql-test ; perl mysql-test-run.pl</span><br><span class="line"></span><br><span class="line">Please report any problems at http://bugs.mysql.com/</span><br><span class="line"></span><br><span class="line">The latest information about MySQL is available on the web at</span><br><span class="line"></span><br><span class="line">  http://www.mysql.com</span><br><span class="line"></span><br><span class="line">Support MySQL by buying support/licenses at http://shop.mysql.com</span><br><span class="line"></span><br><span class="line">New default config file was created as /app/mysql-5.6.50/my.cnf and</span><br><span class="line">will be used by default by the server when you start it.</span><br><span class="line">You may edit this file to change server settings</span><br><span class="line"></span><br><span class="line">WARNING: Default config file /etc/my.cnf exists on the system</span><br><span class="line">This file will be <span class="built_in">read</span> by default by the MySQL server</span><br><span class="line">If you <span class="keyword">do</span> not want to use this, either remove it, or use the</span><br><span class="line">--defaults-file argument to mysqld_safe when starting the server</span><br><span class="line"></span><br><span class="line">执行完毕后 ，过程中会有两个OK</span><br><span class="line">[root@db01 ~]# <span class="built_in">echo</span> $?</span><br><span class="line">0</span><br></pre></td></tr></table></figure><h4 id="二进制安装启动失败解决">二进制安装启动失败解决</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#启动mysql</span></span><br><span class="line">[root@db02 mysql-5.6.50]#  /etc/init.d/mysqld start</span><br><span class="line">/etc/init.d/mysqld: line 244: my_print_defaults: <span class="built_in">command</span> not found</span><br><span class="line">/etc/init.d/mysqld: line 264: <span class="built_in">cd</span>: /usr/local/mysql: No such file or directory</span><br><span class="line">Starting MySQL ERROR! Couldn<span class="string">&#x27;t find MySQL server (/usr/local/mysql/bin/mysqld_safe)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">报错分析：</span></span><br><span class="line"><span class="string">去/usr/local/mysql找my_print_defaults这个命令，但是发现找不到</span></span><br><span class="line"><span class="string">#为啥要去这个目录去找？</span></span><br><span class="line"><span class="string">源码安装时候我们指定了它的安装目录，但是我们二进制安装的MySQL，MySQL没有安装在官方默认的/usr/local/mysql目录下，我们使用二进制安装是官方指定了安装目录，所以找不到这个命令</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#查看二进制安装的启动脚本</span></span><br><span class="line"><span class="string">得知，官方指定默认安装位置是/usr/local</span></span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/QQ_1723015813800.png" alt="QQ_1723015813800"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">解决：</span><br><span class="line">1.</span><br><span class="line"><span class="comment"># 报错原因：二进制安装的MySQL，MySQL没有安装在默认的/usr/local/mysql目录下</span></span><br><span class="line"><span class="comment"># 解决方案：</span></span><br><span class="line">1） 方法一：修改脚本</span><br><span class="line">:%s#/usr/local/mysql#/app/mysql-5.6.50#g</span><br><span class="line"></span><br><span class="line">2）方法二：修改配置文件</span><br><span class="line">[root@db02 ~]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">basedir=/app/mysql-5.6.50</span><br><span class="line">datadir=/app/mysql-5.6.50/data</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/QQ_1723016585520.png" alt="QQ_1723016585520"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@db02 mysql-5.6.50]#  /etc/init.d/mysqld start</span><br><span class="line">Starting MySQL.Logging to <span class="string">&#x27;/app/mysql-5.6.50/data/db02.err&#x27;</span>.</span><br><span class="line">. SUCCESS! </span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#使用二进制安装的mysql的socket文件在哪？</span></span><br><span class="line">/tmp</span><br><span class="line"><span class="comment">#为啥要在这？</span></span><br><span class="line">官方也不知道你要在哪安装mysql，所有把socket文件放在tmp下，所有用户都有权限执行文件</span><br></pre></td></tr></table></figure><h4 id="连接mysql">连接mysql</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#添加环境变量</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;export PATH=&quot;/app/mysql-5.6.50/bin:$PATH&quot;&#x27;</span> &gt;/etc/profile.d/mysql.sh</span><br><span class="line"></span><br><span class="line"><span class="comment">#加载环境变量</span></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br><span class="line">msyql</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection <span class="built_in">id</span> is 1</span><br><span class="line">Server version: 5.6.50 Source distribution</span><br><span class="line">Copyright (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners</span><br><span class="line">Type <span class="string">&#x27;help;&#x27;</span> or <span class="string">&#x27;\h&#x27;</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">&#x27;\c&#x27;</span> to clear the current input statement.</span><br><span class="line">mysql&gt; </span><br></pre></td></tr></table></figure><h3 id="源码安装MySQL5-7">源码安装MySQL5.7</h3><h4 id="下载-编译">下载 &amp;&amp; 编译</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1.下载5.7msyql源码</span></span><br><span class="line">wget https://downloads.mysql.com/archives/get/p/23/file/mysql-boost-5.7.40.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.解压并进入目录</span></span><br><span class="line">tar xf mysql-boost-5.7.40.tar.gz</span><br><span class="line"><span class="built_in">cd</span> mysql-5.7.40</span><br><span class="line"></span><br><span class="line"><span class="comment">#Boost是一个十分强大的C++库，它包含了一系列为C++语言提升的扩展库，比如正则表达式、线程、文件系统操作等。编译器在编译依赖Boost库的C++代码时，需要找到相应版本的Boost库头文件和库文件</span></span><br><span class="line"></span><br><span class="line">编译MySQL5.7以及更高的版本时，都需要下载并引用或者直接安装boost库，否则在执行cmake命令时会报如下错误：</span><br><span class="line">-- Packaging as: mysql-5.7.40-Linux-x86_64</span><br><span class="line">-- Looked <span class="keyword">for</span> boost/version.hpp <span class="keyword">in</span>  and </span><br><span class="line">-- BOOST_INCLUDE_DIR BOOST_INCLUDE_DIR-NOTFOUND</span><br><span class="line">-- LOCAL_BOOST_DIR </span><br><span class="line">-- LOCAL_BOOST_ZIP </span><br><span class="line">-- Could not find (the correct version of) boost.</span><br><span class="line">-- MySQL currently requires boost_1_59_0</span><br><span class="line">CMake Error at cmake/boost.cmake:88 (MESSAGE):</span><br><span class="line">  You can download it with -DDOWNLOAD_BOOST=1 -DWITH_BOOST=&lt;directory&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#解决</span></span><br><span class="line">先下载Boost库，然后通过在cmake命令后面添加参数 -DWITH_BOOST=Boost库路径即可</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.下载boosts库</span></span><br><span class="line"><span class="built_in">mkdir</span> /usr/local/boost</span><br><span class="line"><span class="built_in">cd</span> /usr/local/boost</span><br><span class="line">wget http://www.sourceforge.net/projects/boost/files/boost/1.59.0/boost_1_59_0.tar.gz</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#4.安装依赖</span></span><br><span class="line">yum -y install openssl-devel ncurses-devel autoconf libaio-devel cmake</span><br><span class="line"></span><br><span class="line"><span class="comment">#5.回到解压的源码目录并执行cmake</span></span><br><span class="line">cmake . -DCMAKE_INSTALL_PREFIX=/app/mysql-5.7.40 \</span><br><span class="line">-DMYSQL_DATADIR=/app/mysql-5.7.40/data \</span><br><span class="line">-DMYSQL_UNIX_ADDR=/app/mysql-5.7.40/tmp/mysql.sock \</span><br><span class="line">-DDEFAULT_CHARSET=utf8 \</span><br><span class="line">-DDEFAULT_COLLATION=utf8_general_ci \</span><br><span class="line">-DWITH_EXTRA_CHARSETS=all \</span><br><span class="line">-DWITH_INNOBASE_STORAGE_ENGINE=1 \</span><br><span class="line">-DWITH_FEDERATED_STORAGE_ENGINE=1 \</span><br><span class="line">-DWITH_BLACKHOLE_STORAGE_ENGINE=1 \</span><br><span class="line">-DWITHOUT_EXAMPLE_STORAGE_ENGINE=1 \</span><br><span class="line">-DWITH_ZLIB=bundled \</span><br><span class="line">-DWITH_SSL=system \</span><br><span class="line">-DENABLED_LOCAL_INFILE=1 \</span><br><span class="line">-DWITH_EMBEDDED_SERVER=1 \</span><br><span class="line">-DENABLE_DOWNLOADS=1 \</span><br><span class="line">-DWITH_DEBUG=0 \</span><br><span class="line">-DWITH_BOOST=/usr/local/boost/boost_1_59_0.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看是否cmake成功</span></span><br><span class="line">[root@db03 mysql-5.7.40]#  <span class="built_in">echo</span> $?</span><br><span class="line">0</span><br><span class="line"></span><br><span class="line"><span class="comment">#6.编译 &amp;&amp; 安装</span></span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h4 id="初始化数据库">初始化数据库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1.拷贝启动脚本到init.d下</span></span><br><span class="line"><span class="built_in">cp</span> /app/mysql-5.7.40/support-files/mysql.server /etc/init.d/mysqld</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.创建MySQL程序用户</span></span><br><span class="line">useradd mysql -s /sbin/nologin -M</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.初始化数据库目录（注意保存初始密码）(注意要先设置环境变量)</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;export PATH=&quot;/app/mysql-5.7.40/bin:$PATH&quot;&#x27;</span> &gt;/etc/profile.d/mysql57.sh</span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment">#初始化后带密码</span></span><br><span class="line">mysqld --initialize --user=mysql --basedir=/app/mysql-5.7.40 --datadir=/app/mysql-5.7.40/data</span><br><span class="line"></span><br><span class="line"><span class="comment">#初始化后不带密码</span></span><br><span class="line">mysqld --initialize-insecure --user=mysql --basedir=/app/mysql-5.7.40 --datadir=/app/mysql-5.7.40/data</span><br><span class="line"></span><br><span class="line">user：root</span><br><span class="line">password：5?U1o9/PhQfl</span><br></pre></td></tr></table></figure><h4 id="启动MySQL">启动MySQL</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#4.启动mysql</span></span><br><span class="line">/etc/init.d/mysqld start</span><br><span class="line">[root@db03 mysql-5.7.40]# /etc/init.d/mysqld start</span><br><span class="line">Starting MySQL.2024-08-07T13:40:09.004006Z mysqld_safe error: log-error <span class="built_in">set</span> to <span class="string">&#x27;/var/log/mariadb/mariadb.log&#x27;</span>, however file don<span class="string">&#x27;t exists. Create writable for user &#x27;</span>mysql<span class="string">&#x27;.</span></span><br><span class="line"><span class="string">ERROR! The server quit without updating PID file (/var/lib/mysql/db03.pid).</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#解决报错</span></span><br><span class="line"><span class="string">发现系统中有mariadb，日志文件不能写入</span></span><br><span class="line"><span class="string">解决：删除mariadb</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[root@db03 mysql-5.7.40]# rpm -qa|grep mariadb</span></span><br><span class="line"><span class="string">mariadb-libs-5.5.60-1.el7_5.x86_64</span></span><br><span class="line"><span class="string">[root@db03 mysql-5.7.40]# rpm -e --nodeps mariadb-libs-5.5.60-1.el7_5.x86_64</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#4.1再次启动mysql</span></span><br><span class="line"><span class="string">/etc/init.d/mysqld start</span></span><br><span class="line"><span class="string">Starting MySQL.Logging to &#x27;</span>/app/mysql-5.7.40/data/db03.err<span class="string">&#x27;.</span></span><br><span class="line"><span class="string">2024-08-07T13:44:36.244147Z mysqld_safe Directory &#x27;</span>/app/mysql-5.7.40/tmp<span class="string">&#x27; for UNIX socket file don&#x27;</span>t exists.</span><br><span class="line"> ERROR! The server quit without updating PID file (/app/mysql-5.7.40/data/db03.pid).</span><br><span class="line"> </span><br><span class="line"><span class="comment">#同5.6一样，没有tmp目录无法写入socket文件</span></span><br><span class="line">解决：</span><br><span class="line"><span class="built_in">mkdir</span> /app/mysql-5.7.40/tmp</span><br><span class="line"></span><br><span class="line">授权：否则无法写入文件</span><br><span class="line"><span class="built_in">chown</span> -R mysql.mysql /app/mysql-5.7.40/</span><br><span class="line"></span><br><span class="line"><span class="comment">#再次启动服务（愉快启动了）</span></span><br><span class="line">[root@db03 mysql-5.7.40]# /etc/init.d/mysqld start</span><br><span class="line">Starting MySQL.Logging to <span class="string">&#x27;/app/mysql-5.7.40/data/db03.err&#x27;</span>.</span><br><span class="line"> SUCCESS! </span><br></pre></td></tr></table></figure><h4 id="连接数据库">连接数据库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 写入环境变量</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;export PATH=&quot;/app/mysql-5.7.40/bin:$PATH&quot;&#x27;</span> &gt;/etc/profile.d/mysql57.sh</span><br><span class="line"></span><br><span class="line"><span class="comment">#重新加载环境变量</span></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment">#连接数据库（</span></span><br><span class="line">[root@db03 mysql-5.7.40]# mysql</span><br><span class="line">ERROR 1045 (28000): Access denied <span class="keyword">for</span> user <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> (using password: NO)</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用给的密码登录</span></span><br><span class="line">mysql -uroot -p<span class="string">&#x27;5?U1o9/PhQfl&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#重置密码</span></span><br><span class="line">mysql&gt; alter user root@localhost identified by <span class="string">&#x27;123&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="二进制安装MySQL5-7">二进制安装MySQL5.7</h3><h4 id="安装mysql">安装mysql</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1.下载5.7版本包</span></span><br><span class="line">wget https://downloads.mysql.com/archives/get/p/23/file/mysql-5.7.40-linux-glibc2.12-x86_64.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.创建安装目录</span></span><br><span class="line"><span class="built_in">mkdir</span> /app</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.安装依赖</span></span><br><span class="line">yum -y install openssl-devel ncurses-devel autoconf libaio-devel</span><br><span class="line"></span><br><span class="line"><span class="comment">#4.解压至/app目录</span></span><br><span class="line">tar xf mysql-5.7.40-linux-glibc2.12-x86_64.tar.gz -C /app</span><br><span class="line"></span><br><span class="line"><span class="comment">#5.改名</span></span><br><span class="line"><span class="built_in">mv</span> /app/mysql-5.7.40-linux-glibc2.12-x86_64/ /app/mysql-5.7.40</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 6.创建MySQL程序用户</span></span><br><span class="line">useradd mysql -s /sbin/nologin -M</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7.创建MySQL的配置文件到/etc/下（注意查看系统是否自带mariadb）</span></span><br><span class="line"><span class="comment">#查看系统是否有maroadb</span></span><br><span class="line">[root@db04 mysql-5.7.40]# rpm -qa |grep mariadb</span><br><span class="line">mariadb-libs-5.5.60-1.el7_5.x86_64</span><br><span class="line"></span><br><span class="line"><span class="comment">#卸载（如果有就卸载）</span></span><br><span class="line">[root@db04 mysql-5.7.40]# rpm -e --nodeps mariadb-libs-5.5.60-1.el7_5.x86_64</span><br><span class="line">warning: /etc/my.cnf saved as /etc/my.cnf.rpmsave</span><br><span class="line"></span><br><span class="line"><span class="comment">#编辑my.cnf</span></span><br><span class="line">[root@db01 mysql-5.6.50]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 8.拷贝启动脚本</span></span><br><span class="line"><span class="built_in">cp</span> /app/mysql-5.7.40/support-files/mysql.server /etc/init.d/mysqld</span><br><span class="line"></span><br><span class="line"><span class="comment">#初始化数据库 （注意保存最后的密码）（先加环境变量）</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;export PATH=&quot;/app/mysql-5.7.40/bin:$PATH&quot;&#x27;</span> &gt;/etc/profile.d/mysql57.sh</span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment">#初始化数据库目录</span></span><br><span class="line">mysqld --initialize-insecure --user=mysql --basedir=/app/mysql-5.7.40 --datadir=/app/mysql-5.7.40/data</span><br><span class="line"></span><br><span class="line">[root@db04 mysql-5.7.40]# bin/mysqld --initialize --user=mysql --basedir=/app/mysql-5.7.40 --datadir=/app/mysql-5.7.40/data</span><br><span class="line">2024-08-07T12:41:19.116519Z 0 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation <span class="keyword">for</span> more details).</span><br><span class="line">2024-08-07T12:41:19.599490Z 0 [Warning] InnoDB: New <span class="built_in">log</span> files created, LSN=45790</span><br><span class="line">2024-08-07T12:41:19.676071Z 0 [Warning] InnoDB: Creating foreign key constraint system tables.</span><br><span class="line">2024-08-07T12:41:19.731472Z 0 [Warning] No existing UUID has been found, so we assume that this is the first time that this server has been started. Generating a new UUID: 58819e51-54ba-11ef-861d-000c290f3f79.</span><br><span class="line">2024-08-07T12:41:19.732381Z 0 [Warning] Gtid table is not ready to be used. Table <span class="string">&#x27;mysql.gtid_executed&#x27;</span> cannot be opened.</span><br><span class="line">2024-08-07T12:41:19.926326Z 0 [Warning] A deprecated TLS version TLSv1 is enabled. Please use TLSv1.2 or higher.</span><br><span class="line">2024-08-07T12:41:19.926344Z 0 [Warning] A deprecated TLS version TLSv1.1 is enabled. Please use TLSv1.2 or higher.</span><br><span class="line">2024-08-07T12:41:19.927081Z 0 [Warning] CA certificate ca.pem is self signed.</span><br><span class="line">2024-08-07T12:41:20.019287Z 1 [Note] A temporary password is generated <span class="keyword">for</span> root@localhost: a=G&amp;ufhfb4=*</span><br><span class="line">[root@db04 mysql-5.7.40]# <span class="built_in">echo</span> $?</span><br><span class="line">0</span><br><span class="line"></span><br><span class="line">mysql</span><br><span class="line">user：root</span><br><span class="line">password:-jDYsiuZ1?y#</span><br></pre></td></tr></table></figure><h4 id="启动mysql">启动mysql</h4><p><strong>启动失败解决</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@db04 mysql-5.7.40]# service mysqld start</span><br><span class="line">/etc/init.d/mysqld: line 239: my_print_defaults: <span class="built_in">command</span> not found</span><br><span class="line">/etc/init.d/mysqld: line 259: <span class="built_in">cd</span>: /usr/local/mysql: No such file or directory</span><br><span class="line">Starting MySQL ERROR! Couldn<span class="string">&#x27;t find MySQL server (/usr/local/mysql/bin/mysqld_safe)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#和5.6启动失败一样，默认去找/usr/local/mysql下找启动命令</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">解决：</span></span><br><span class="line"><span class="string">1） 方法一：修改脚本</span></span><br><span class="line"><span class="string">:%s#/usr/local/mysql#/app/mysql-5.7.40#g</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">2）方法二：修改配置文件（建议）</span></span><br><span class="line"><span class="string">[root@db02 ~]# vim /etc/my.cnf</span></span><br><span class="line"><span class="string">[mysqld]</span></span><br><span class="line"><span class="string">basedir=/app/mysql-5.7.40</span></span><br><span class="line"><span class="string">datadir=/app/mysql-5.7.40/data</span></span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/QQ_1723035262266.png" alt="QQ_1723035262266"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#再次启动</span></span><br><span class="line">[root@db04 mysql-5.7.40]# service mysqld start</span><br><span class="line">Starting MySQL.Logging to <span class="string">&#x27;/app/mysql-5.7.40/data/db04.err&#x27;</span>.</span><br><span class="line">. SUCCESS! </span><br></pre></td></tr></table></figure><h4 id="连接mysql-2">连接mysql</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># 写入环境变量</span><br><span class="line">echo <span class="string">&#x27;export PATH=&quot;/app/mysql-5.7.40/bin:$PATH&quot;&#x27;</span> <span class="operator">&gt;</span><span class="operator">/</span>etc<span class="operator">/</span>profile.d<span class="operator">/</span>mysql57.sh</span><br><span class="line"></span><br><span class="line">#重新加载环境变量</span><br><span class="line">source <span class="operator">/</span>etc<span class="operator">/</span>profile</span><br><span class="line"></span><br><span class="line">#连接数据库（</span><br><span class="line">[root<span class="variable">@db03</span> mysql<span class="number">-5.7</span><span class="number">.40</span>]# mysql</span><br><span class="line">ERROR <span class="number">1045</span> (<span class="number">28000</span>): Access denied <span class="keyword">for</span> <span class="keyword">user</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> (<span class="keyword">using</span> password: <span class="keyword">NO</span>)</span><br><span class="line"></span><br><span class="line">#使用给的密码登录</span><br><span class="line">mysql <span class="operator">-</span>uroot <span class="operator">-</span>p<span class="string">&#x27;a=G&amp;ufhfb4=*&#x27;</span></span><br><span class="line"></span><br><span class="line">#重置密码</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">alter</span> <span class="keyword">user</span> root<span class="variable">@localhost</span> identified <span class="keyword">by</span> <span class="string">&#x27;123&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="3-启动systemd管理">3.启动systemd管理</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@db03 ~]# vim /usr/lib/systemd/system/mysqld.service </span><br><span class="line">[Unit]</span><br><span class="line">Description=MySQL Server</span><br><span class="line">After=network.target</span><br><span class="line">Wants=multi-user.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/app/mysql5.7.40/bin/mysqld_safe --defaults-file=/etc/my.cnf</span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=42s</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line"><span class="comment">#重新加载下</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>01.虚拟机使用及xshell</title>
      <link href="/posts/bc179bbe.html"/>
      <url>/posts/bc179bbe.html</url>
      
        <content type="html"><![CDATA[<div class='wow animate__heartBeat' data-wow-duration='' data-wow-delay='1s' data-wow-offset=''  data-wow-iteration='2' ><div class="note red icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p><a href="https://www.lukeme.top/posts/4c7367cf.html">告别小白，点击直达</a></p></div></div><h2 id="虚拟机基础">虚拟机基础</h2><blockquote><p>自行下载Vmware使用</p></blockquote><h3 id="虚拟机网络">虚拟机网络</h3><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">桥接模式：使物理机和虚拟机共用同一块网卡，称作网桥</span><br><span class="line">仅主机模式：将物理机当做是一个没有网络的交换机，所有虚拟连接在这个交换机上，不能上外网，只能互相</span><br><span class="line">通信</span><br><span class="line"><span class="symbol">NAT</span>模式：将一个公网的<span class="built_in">IP</span>地址，通过路由器动态转换，转换成多个虚拟机的私有<span class="built_in">IP</span>地址</span><br><span class="line"><span class="comment"># 为什么使用NAT模式</span></span><br><span class="line"><span class="number">1</span>.使用桥接模式，虚拟机的网络必须和物理机在同一个网段，<span class="built_in">IP</span>地址不够用</span><br><span class="line"><span class="number">2</span>.仅主机模式，无法上外网</span><br></pre></td></tr></table></figure><h3 id="网络相关内容">网络相关内容</h3><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">物理地址（MAC地址）：买来电脑，网卡生产出来后，需要打上一个<span class="string">&quot;身份证号&quot;</span></span><br><span class="line"><span class="built_in">IP</span>地址（IPADDR）：两台设备之间，互相通信的<span class="string">&quot;手机号&quot;</span></span><br><span class="line">子网掩码（NETMASK）：划分网段，判断<span class="built_in">IP</span>地址是否在同一个网络（两个<span class="built_in">IP</span>之间是否能通信，取决于子网掩</span><br><span class="line">码）<span class="string">&quot;运营商&quot;</span></span><br><span class="line">网关（GATEWAY）：如果设备想要上局域网之外的外网，需要一个网关<span class="string">&quot;海关&quot;</span></span><br><span class="line">DNS：域名解析器，将域名解析成一个<span class="built_in">IP</span>地址</span><br><span class="line">域名解析：<span class="number">1</span>）正向解析</span><br><span class="line"><span class="number">2</span>）反向解析</span><br></pre></td></tr></table></figure><h3 id="获取IP的方式">获取IP的方式</h3><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">动态分配DHCP:自动分配<span class="built_in">IP</span>地址，<span class="built_in">IP</span>地址会存在一个租期</span><br><span class="line">静态分配：手动配置<span class="built_in">IP</span>地址，固定<span class="built_in">IP</span>地址</span><br></pre></td></tr></table></figure><h3 id="磁盘分区">磁盘分区</h3><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/：根分区，存储数据</span><br><span class="line">/boot：存放系统启动文件 <span class="number">500</span>M~<span class="number">1</span>G</span><br><span class="line"><span class="keyword">swap</span>：虚拟内存（把磁盘这一部分空间，当内存） 给内存的<span class="number">1</span><span class="number">-2</span>倍，最高上限<span class="number">8</span>G</span><br></pre></td></tr></table></figure><h3 id="linux在虚拟机中的安装">linux在虚拟机中的安装</h3><p><img src="https://cos.lukme.top/Pic/image-20240328135426458.png" alt="image-20240328135426458"></p><p><img src="https://cos.lukme.top/Pic/%E8%99%9A%E6%8B%9F%E6%9C%BAstep01.png" alt="image-20240328135426458"></p><p><img src="https://cos.lukme.top/Pic/%E8%99%9A%E6%8B%9F%E6%9C%BAstep02.png" alt="image-20240328135426458"></p><p><img src="https://cos.lukme.top/Pic/%E8%99%9A%E6%8B%9F%E6%9C%BAstep03.png" alt="image-20240328135426458"></p><p><img src="https://cos.lukme.top/Pic/%E8%99%9A%E6%8B%9F%E6%9C%BAstep04.png" alt="image-20240328135426458"></p><h3 id="虚拟机的网卡配置">虚拟机的网卡配置</h3><p><img src="https://cos.lukme.top/Pic/%E8%99%9A%E6%8B%9F%E6%9C%BAstep05.png" alt="image-20240328135426458"></p><p><img src="https://cos.lukme.top/Pic/%E8%99%9A%E6%8B%9F%E6%9C%BAstep06.png" alt="image-20240328135426458"></p><h2 id="网络">网络</h2><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">ip地址：设备之间互相通信 xxx.xxx.xxx.xxx <span class="number">4</span>段 点分十进制 范围：<span class="number">0</span>-<span class="number">255</span> <span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span> -<span class="number">255</span>.<span class="number">255</span>.<span class="number">255</span>.<span class="number">255</span></span><br><span class="line">子网掩码：划分网段，判断ip是否在同一个局域网内 <span class="number">255</span>.<span class="number">255</span>.<span class="number">255</span>.<span class="number">0</span> 子网一样就是在同一网段</span><br><span class="line">网关：让设备上局域网以外的网站，需要出网关（出国的海关）网关地址就是路由器的IP</span><br><span class="line">DNS：domain name server 域名解析服务</span><br><span class="line">若子下面两个ip网掩码前三位一样，最后一位不一样，则前三位是网络位）</span><br><span class="line">子网掩码            网络位       主机位</span><br><span class="line"><span class="number">255.255.255.0</span>        <span class="number">192</span>.<span class="number">168</span>.<span class="number">0</span>.   <span class="number">69</span></span><br><span class="line"><span class="number">255.255.255.1</span>        <span class="number">192</span>.<span class="number">168</span>.<span class="number">0</span>.   <span class="number">37</span></span><br><span class="line">若子下面两个ip网掩码前两位一样，最后两位不一样，则前两位是网络位</span><br><span class="line">子网掩码            网络位       主机位</span><br><span class="line"><span class="number">255.255.0.241</span>      <span class="number">192</span>.<span class="number">168</span>.     <span class="number">1</span>.<span class="number">5</span>       </span><br><span class="line"><span class="number">255.255.1.67</span>       <span class="number">192</span>.<span class="number">168</span>.     <span class="number">0</span>.<span class="number">241</span></span><br><span class="line"></span><br><span class="line">Windows：cmd中  ipconfig -all查看ip</span><br></pre></td></tr></table></figure><h3 id="验证设备之间是否可以通信">验证设备之间是否可以通信</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ping www.baidu.com</span><br><span class="line">ping 192.168.0.33</span><br><span class="line"><span class="comment"># 正常通信</span></span><br><span class="line">来自 192.168.0.33 的回复: 字节=32 时间=1ms TTL=128</span><br><span class="line">来自 192.168.0.33 的回复: 字节=32 时间&lt;1ms TTL=128</span><br><span class="line">来自 192.168.0.33 的回复: 字节=32 时间&lt;1ms TTL=128</span><br><span class="line">来自 192.168.0.33 的回复: 字节=32 时间&lt;1ms TTL=128</span><br><span class="line"><span class="comment"># 非正常通信</span></span><br><span class="line">正在 Ping 192.168.3.13 具有 32 字节的数据:</span><br><span class="line">请求超时。</span><br><span class="line">请求超时。</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20240328140421320.png" alt="image-20240328140421320"></p><h3 id="IP分配分配方式">IP分配分配方式</h3><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">静态<span class="built_in">IP</span>：手动配置<span class="built_in">IP</span>地址（固定<span class="built_in">IP</span>）</span><br><span class="line">动态<span class="built_in">IP</span>：自动分配<span class="built_in">IP</span>地址（<span class="built_in">IP</span>不固定）</span><br><span class="line"><span class="symbol">DHCP</span>服务器：分配地址</span><br><span class="line">划分VLAN</span><br></pre></td></tr></table></figure><h2 id="虚拟机的网络模式">虚拟机的网络模式</h2><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">桥接模式：将物理机的网卡和虚拟机的网卡连接在一块（网桥）作用：共享物理机的网络，让虚拟机的IP和物理机的IP在同一个网段（局域网）</span><br><span class="line"><span class="number">192.168.10.142</span></span><br><span class="line"><span class="number">192</span>.<span class="number">168</span>.<span class="number">10</span>.xxx</span><br><span class="line">NAT模式：将物理机的IP地址，动态转换成虚拟机的私网IP，这个私网IP也可以自定义</span><br><span class="line">仅主机模式：将物理机看成是一个没有路由器的交换机，所有的虚拟机都连接在这个交换机上，所有虚拟机之间可以互相通信，但是无法上外网</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20240328140752681.png" alt="image-20240328140752681"></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#网卡名：</span></span><br><span class="line"><span class="attribute">eth0</span></span><br><span class="line">eth1</span><br><span class="line">eth2</span><br><span class="line">eth3</span><br></pre></td></tr></table></figure><h2 id="网卡">网卡</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">以太网：买完电脑都会有自带的一块网卡 作用：如果虚拟机想要使用桥接模式，必须使用以太网网卡</span><br><span class="line">（VMnet0）</span><br><span class="line">VMnet1：安装完VMware Workstation 作用：如果虚拟机想要使用仅主机模式，那么必须使用VMnet1</span><br><span class="line">网卡（相当于没有外网的交换机）</span><br><span class="line">VMnet8：安装完VMware Workstation 作用：如果虚拟机想要使用NAT模式，那么必须使用VMnet8网</span><br><span class="line">卡（相当于NAT模式的交换机）</span><br><span class="line"></span><br><span class="line"><span class="comment">### 为什么使用NAT模式</span></span><br><span class="line">1.使用桥接模式，虚拟机的网络必须和物理机在同一个网段，IP地址不够用</span><br><span class="line">2.仅主机模式，无法上外网</span><br></pre></td></tr></table></figure><h3 id="配置虚拟机的路由器">配置虚拟机的路由器</h3><p><img src="https://cos.lukme.top/Pic/image-20240328140923241.png" alt="image-20240328140923241"></p><p><img src="https://cos.lukme.top/Pic/image-20240328141009976.png" alt="image-20240328141009976"></p><h3 id="安装系统内配置网卡信息">安装系统内配置网卡信息</h3><p><img src="https://cos.lukme.top/Pic/image-20240328141241797.png" alt="image-20240328141241797"></p><p><img src="https://cos.lukme.top/Pic/image-20240328141353938.png" alt="image-20240328141353938"></p><h2 id="使用命令配置网卡">使用命令配置网卡</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">1.[root@localhost ~]# nmtui   <span class="comment">#图形化配置</span></span><br><span class="line">2.[root@localhost ~]# vi /etc/sysconfig/network-scripts/ifcfg-ens33</span><br><span class="line">输入i：进入编辑模式 -- INSERT --</span><br><span class="line">：wq保存退出</span><br><span class="line"><span class="comment">#修改完重启网卡</span></span><br><span class="line">[root@localhost ~]# systemctl restart network     </span><br><span class="line"><span class="comment">## 保存退出</span></span><br><span class="line">按ESC</span><br><span class="line">输入冒号（英文）</span><br><span class="line">再输入wq</span><br><span class="line">:wq 保存并退出</span><br><span class="line">:q 直接退出</span><br><span class="line">:q! 强制退出</span><br><span class="line">w：write 写入</span><br><span class="line">q：quit 退出</span><br></pre></td></tr></table></figure><h3 id="图形化配置">图形化配置</h3><p><img src="https://cos.lukme.top/Pic/nmtui%E5%91%BD%E4%BB%A4%E6%AD%A5%E9%AA%A4.png" alt="image-20240328135426458"></p><h3 id="命令行配置">命令行配置</h3><p><img src="https://cos.lukme.top/Pic/image-20240328142122532.png" alt="image-20240328142122532"></p><p><img src="https://cos.lukme.top/Pic/image-20240328142637912.png" alt="image-20240328142637912"></p><h2 id="Linux远程连接">Linux远程连接</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">协议：SSH ssh:// 端口：22 连接linux</span><br><span class="line">协议：rdp remote desktop protocol 端口：3389连接windows，桌面控制</span><br><span class="line">http://协议    端口80</span><br><span class="line">https://协议    端口443</span><br><span class="line">file:// 端口   浏览器访问桌面文件协议</span><br></pre></td></tr></table></figure><h3 id="认识使用xshell">认识使用xshell</h3><p><img src="https://cos.lukme.top/Pic/image-20240401212225509.png" alt="image-20240401212225509"></p><p><img src="https://cos.lukme.top/Pic/image-20240401212249382.png" alt="image-20240401212249382"></p><h2 id="Xshell连接不上虚拟机排查">Xshell连接不上虚拟机排查</h2><h3 id="1-查看虚拟机网卡配置">1.查看虚拟机网卡配置</h3><p><img src="https://cos.lukme.top/Pic/image-20240401212405053.png" alt="image-20240401212405053"></p><h3 id="2-检查路由器-虚拟网络编辑器-配置">2.检查路由器 (虚拟网络编辑器)配置</h3><p><img src="https://cos.lukme.top/Pic/image-20240401212612086.png" alt="image-20240401212612086"></p><h3 id="3-虚拟机网卡配置文件内容">3.虚拟机网卡配置文件内容</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">BOOTPROTO=nonenone/dhcp/static</span><br><span class="line">DEFROUTE=<span class="built_in">yes</span></span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">NAME=ens33</span><br><span class="line">DEVICE=ens33</span><br><span class="line">ONBOOT=<span class="built_in">yes</span>开机启动网卡</span><br><span class="line">IPADDR=10.0.0.250ip</span><br><span class="line">NETMASK=255.255.255.0子网掩码</span><br><span class="line">GATEWAY=10.0.0.2网关</span><br><span class="line">DNS1=223.5.5.5首选DNS</span><br><span class="line">DNS2=223.6.6.6备用DNS</span><br><span class="line">IPV6INIT=no</span><br><span class="line">UUID=c96bc909-188e-ec64-3a96-6a90982b08ad</span><br></pre></td></tr></table></figure><h3 id="4-测试虚拟机是否能上外网-ping-baidu-com">4.测试虚拟机是否能上外网 ping <a href="http://baidu.com">baidu.com</a></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 测试虚拟机是否能上外网</span></span><br><span class="line">ping baidu.com</span><br><span class="line">在xshell里ping10.0.0.250，谁连接谁，就用谁去ping谁</span><br></pre></td></tr></table></figure><p>5.检查下端口是不是22（ssh协议端口22）</p><p>telnet 10.0.0.250 22 [c:~]$ telnet 10.0.0.250 22</p><p>Windows开启telnet</p><p><img src="https://cos.lukme.top/Pic/image-20240401213429309.png" alt="image-20240401213429309"></p>]]></content>
      
      
      <categories>
          
          <category> Linux敲门 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>04.基础创建命令</title>
      <link href="/posts/866ee0b1.html"/>
      <url>/posts/866ee0b1.html</url>
      
        <content type="html"><![CDATA[<div class='wow animate__heartBeat' data-wow-duration='' data-wow-delay='1s' data-wow-offset=''  data-wow-iteration='2' ><div class="note red icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p><a href="https://www.lukeme.top/posts/4c7367cf.html">告别小白，点击直达</a></p></div></div><h3 id="文件管理命令-cd">文件管理命令-- cd</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">change directory <span class="comment">#交换 切换 目录</span></span><br><span class="line">Windows上鼠标双击 不能<span class="built_in">cd</span>文件</span><br><span class="line"><span class="comment">## 语法:</span></span><br><span class="line"><span class="built_in">cd</span> 目标目录</span><br><span class="line"><span class="comment">## 目标目录</span></span><br><span class="line">绝对路径的目录</span><br><span class="line">相对路径的目录</span><br><span class="line"><span class="comment">##回到当前用户的家目录</span></span><br><span class="line">[root@lb02 ~]# <span class="built_in">cd</span></span><br><span class="line">[root@lb02 ~]# <span class="built_in">cd</span> ~</span><br><span class="line"><span class="comment">## 回到上一次所在的目录   cd -</span></span><br><span class="line">[root@lb02 ~]# <span class="built_in">cd</span> /etc/</span><br><span class="line">[root@lb02 etc]# <span class="built_in">cd</span> /etc/sysconfig/</span><br><span class="line">[root@lb02 sysconfig]# <span class="built_in">cd</span> -</span><br><span class="line">/etc</span><br><span class="line"></span><br><span class="line"><span class="comment">## 进入当前目录</span></span><br><span class="line">[root@lb02 etc]# <span class="built_in">cd</span> .</span><br><span class="line"><span class="comment">## 返回上一级目录</span></span><br><span class="line">[root@lb02 etc]# <span class="built_in">cd</span> ..</span><br></pre></td></tr></table></figure><p>查看帮助语法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看帮助时，见到语法中的[]，代表 []中括号中的内容 可有可无</span></span><br><span class="line"><span class="built_in">ls</span> [OPTION]... [FILE]...</span><br></pre></td></tr></table></figure><h3 id="文件管理命令–ls">文件管理命令–ls</h3><table><thead><tr><th>选项</th><th>作用</th></tr></thead><tbody><tr><td>-l</td><td>查看目录下文件的名字和详细信息</td></tr><tr><td>-a</td><td>查看目录下所有文件包括隐藏文件</td></tr><tr><td>-h（一般配合-l使用）</td><td>以人类可读的方式查看文件详细信息</td></tr><tr><td>-t（一般配合-l使用）</td><td>按照文件修改日期排序，最新的在最上面</td></tr><tr><td>-r（一般配合-l使用）</td><td>reverse翻转（倒叙排序）</td></tr><tr><td>-d（一般配合-l使用）</td><td>只查看目录本身信息不查看文件</td></tr><tr><td>-i（一般配合-l使用）</td><td>显示inode号</td></tr><tr><td>-S(一般配合-l使用)</td><td>依据内容大小将文件排序显示</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">list <span class="comment">#列表</span></span><br><span class="line"><span class="comment">##  查看当前目录下所有文件名(不包含隐藏文件)</span></span><br><span class="line">[root@lb02 ~]# <span class="built_in">ls</span></span><br><span class="line">anaconda-ks.cfg  ip_host.sh  ip_host.sh~</span><br><span class="line"><span class="comment">##查看当前目录下所有文件的名和详细信息(不包含隐藏文件)</span></span><br><span class="line">-l use a long listing format 使用一个长的列表格式</span><br><span class="line">[root@lb02 ~]# <span class="built_in">ls</span> -l</span><br><span class="line">total 12</span><br><span class="line">-rw-------. 1 root root 1447 Mar 27 12:11 anaconda-ks.cfg</span><br><span class="line">-rw-r--r--. 1 root root  377 Mar 27 23:50 ip_host.sh</span><br><span class="line">-rw-r--r--. 1 root root  366 Mar 27 23:33 ip_host.sh~</span><br><span class="line"></span><br><span class="line">[root@lb02 ~]# ll</span><br><span class="line">total 12</span><br><span class="line">-rw-------. 1 root root 1447 Mar 27 12:11 anaconda-ks.cfg</span><br><span class="line">-rw-r--r--. 1 root root  377 Mar 27 23:50 ip_host.sh</span><br><span class="line">-rw-r--r--. 1 root root  366 Mar 27 23:33 ip_host.sh~</span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看指定目录下的所有文件详细信息（不包含隐藏文件）</span></span><br><span class="line">[root@lb02 ~]# <span class="built_in">ls</span> -l /etc/sysconfig/</span><br><span class="line">total 84</span><br><span class="line">-rw-r--r--. 1 root root  379 Mar 27 12:11 anaconda</span><br><span class="line">-rw-r--r--. 1 root root  483 Mar 27 12:10 authconfig</span><br><span class="line">drwxr-xr-x. 2 root root   43 Mar 27 12:07 cbq</span><br><span class="line">drwxr-xr-x. 2 root root    6 Oct 31  2018 console</span><br><span class="line"></span><br><span class="line"><span class="comment">#在linux中，隐藏文件名字以&#x27;.&#x27;开头</span></span><br><span class="line"><span class="comment">## 查看所有文件包括隐藏文件（多个选项可以合并执行）</span></span><br><span class="line">-a，--all <span class="keyword">do</span> not ignore entries starting with . <span class="comment"># 不忽略以点开头的文件</span></span><br><span class="line">[root@lb02 ~]# <span class="built_in">ls</span> -l -a   或者[root@lb02 ~]# <span class="built_in">ls</span> -la/ls -al</span><br><span class="line">[root@lb02 ~]# <span class="built_in">ls</span> -l -a</span><br><span class="line">total 48</span><br><span class="line">dr-xr-x---.  2 root root   195 Mar 27 23:50 .</span><br><span class="line">dr-xr-xr-x. 17 root root   224 Mar 27 12:10 ..</span><br><span class="line">-rw-------.  1 root root  1447 Mar 27 12:11 anaconda-ks.cfg</span><br><span class="line"></span><br><span class="line"><span class="comment">## 以人类可读的方式查看文件详细信息（大小+单位 配合-l使用）</span></span><br><span class="line">[root@lb02 ~]# <span class="built_in">ls</span> -l /etc/sysconfig/ebtables-config </span><br><span class="line">-rw-------. 1 root root 1390 Apr 11  2018 /etc/sysconfig/ebtables-config</span><br><span class="line">[root@lb02 ~]# <span class="built_in">ls</span> -hl /etc/sysconfig/ebtables-config </span><br><span class="line">-rw-------. 1 root root 1.4K Apr 11  2018 /etc/sysconfig/ebtables-config</span><br><span class="line"></span><br><span class="line"><span class="comment">## 按照修改日期排序（最新的在最上面）</span></span><br><span class="line">[root@lb02 ~]# <span class="built_in">ls</span> -l    //不排序</span><br><span class="line">total 12</span><br><span class="line">-rw-------. 1 root root 1447 Mar 27 12:11 anaconda-ks.cfg</span><br><span class="line">-rw-r--r--. 1 root root  377 Mar 27 23:50 ip_host.sh</span><br><span class="line">-rw-r--r--. 1 root root  366 Mar 27 23:33 ip_host.sh~</span><br><span class="line">[root@lb02 ~]# <span class="built_in">ls</span> -lt</span><br><span class="line">total 12</span><br><span class="line">-rw-r--r--. 1 root root  377 Mar 27 23:50 ip_host.sh</span><br><span class="line">-rw-r--r--. 1 root root  366 Mar 27 23:33 ip_host.sh~</span><br><span class="line">-rw-------. 1 root root 1447 Mar 27 12:11 anaconda-ks.cfg</span><br><span class="line"></span><br><span class="line"><span class="comment">## 按照修改时间，倒叙排序（最新的在最下面）</span></span><br><span class="line">[root@lb02 ~]# <span class="built_in">ls</span> -ltr</span><br><span class="line">total 12</span><br><span class="line">-rw-------. 1 root root 1447 Mar 27 12:11 anaconda-ks.cfg</span><br><span class="line">-rw-r--r--. 1 root root  366 Mar 27 23:33 ip_host.sh~</span><br><span class="line">-rw-r--r--. 1 root root  377 Mar 27 23:50 ip_host.sh</span><br><span class="line"></span><br><span class="line"><span class="comment">## 只查看目录本身，不查看目录下面的所有文件</span></span><br><span class="line">[root@lb02 ~]# <span class="built_in">ls</span> -ld /etc/sysconfig</span><br><span class="line">drwxr-xr-x. 6 root root 4096 Mar 27 12:11 /etc/sysconfig</span><br></pre></td></tr></table></figure><h3 id="文件管理命令–mkdir">文件管理命令–mkdir</h3><table><thead><tr><th>选项</th><th>作用</th></tr></thead><tbody><tr><td>-p</td><td>递归创建，如果目录已存在则不创建，如果目录不存在则创建</td></tr><tr><td>-v</td><td>显示创建的详细信息（创建的过程）</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">make directory</span><br><span class="line"><span class="comment">## 语法：</span></span><br><span class="line"><span class="built_in">mkdir</span> 目标目录</span><br><span class="line"><span class="comment">#同时创建多个目录</span></span><br><span class="line">[root@lb02 ~]# <span class="built_in">mkdir</span> /abc /123 /456  每个目录要有空格</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建层级目录</span></span><br><span class="line">[root@lb02 ~]# <span class="built_in">mkdir</span> -p /abc/123/456 789  789是在当前目录下创建的</span><br><span class="line"></span><br><span class="line"><span class="comment"># 当要创建的目标目录已经存在时 会报错</span></span><br><span class="line">[root@lb02 ~]# <span class="built_in">mkdir</span> a</span><br><span class="line"><span class="built_in">mkdir</span>: cannot create directory ‘a’: File exists</span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看创建过程</span></span><br><span class="line">[root@lb02 ~]# <span class="built_in">mkdir</span> -pv a/b/c     </span><br><span class="line"><span class="built_in">mkdir</span>: created directory ‘a/b’   因为a已经存在，若不存在则会有<span class="built_in">mkdir</span>: created directory ‘a’</span><br><span class="line"><span class="built_in">mkdir</span>: created directory ‘a/b/c’</span><br><span class="line"></span><br><span class="line"><span class="comment">## 不能在文件下面创建目录</span></span><br><span class="line">[root@lb02 ~]# <span class="built_in">mkdir</span> /etc/passwd/123</span><br><span class="line"><span class="built_in">mkdir</span>: cannot create directory ‘/etc/passwd/123’: Not a directory     // 不是一个目录</span><br><span class="line"></span><br><span class="line"><span class="comment">## 创建多个序列目录</span></span><br><span class="line">[root@lb01 ~]# <span class="built_in">mkdir</span> &#123;a..c&#125;</span><br><span class="line">[root@lb01 ~]# <span class="built_in">ls</span></span><br><span class="line">a  b  c</span><br><span class="line"></span><br><span class="line"><span class="comment">## 指定目录下创建平级目录</span></span><br><span class="line">[root@lb01 ~]#  <span class="built_in">mkdir</span> /tmp/&#123;a,b,c,d&#125;在/tmp下创建a,b,c,d四个目录</span><br><span class="line"></span><br><span class="line"><span class="comment">#-p：递归创建目录，没报错（如果目录不存在，就创建，目录存在，就不执行命令）</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">mkdir</span> -p 111/&#123;2,3&#125;/abc分别在111/2和111/3创建abc</span><br><span class="line">目录</span><br><span class="line"><span class="comment"># 创建目录：</span></span><br><span class="line">/tmp/a</span><br><span class="line">/tmp/b</span><br><span class="line">/tmp/1</span><br><span class="line">/tmp/2</span><br><span class="line">1.[root@www ~]# <span class="built_in">mkdir</span> &#123;/tmp/a,/tmp/b,/tmp/1,/tmp/2</span><br><span class="line"></span><br><span class="line">2.[root@www ~]# <span class="built_in">mkdir</span> /tmp/&#123;a,b,1,2&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Linux中的特殊符号">Linux中的特殊符号</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">\：转义符，让特殊符号，做他本身</span><br><span class="line">&#123;&#125;：序列符号,有规律的序列使用<span class="string">&#x27;..&#x27;</span> 没有规律的序列使用<span class="string">&#x27;,&#x27;</span>隔开</span><br></pre></td></tr></table></figure><h3 id="文件管理命令–touch">文件管理命令–touch</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建普通文件（可编辑文件）</span></span><br><span class="line"><span class="built_in">touch</span> 目标文件</span><br><span class="line"><span class="built_in">touch</span> [OPTION]... FILE...</span><br><span class="line"><span class="comment">## 创建多个文件</span></span><br><span class="line">[root@www ~]# <span class="built_in">touch</span> 1.txt abc/2.txt /tmp/3.txt</span><br><span class="line"><span class="comment">## 报错：创建文件前提，上一级目录必须存在</span></span><br><span class="line">[root@www ~]# <span class="built_in">touch</span> /iskshda/1.txt</span><br><span class="line"><span class="built_in">touch</span>: cannot <span class="built_in">touch</span> ‘/iskshda/1.txt’: No such file or directory</span><br><span class="line"><span class="comment">## 当创建的目标文件已经存在时，不会报错，但会更新修改时间</span></span><br><span class="line">[root@www ~]# <span class="built_in">touch</span> 1.txt</span><br><span class="line"></span><br><span class="line">1）当创建的目标文件不存在，则创建一个普通文件</span><br><span class="line">2）当创建的目标文件存在时，则修改该文件的时间</span><br><span class="line">3）当创建的目标是一个目录时，则修改目录的时间</span><br><span class="line"><span class="comment">#在linux系统中，严格区分大小写</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux敲门 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>02.Bash初识</title>
      <link href="/posts/6da43e5c.html"/>
      <url>/posts/6da43e5c.html</url>
      
        <content type="html"><![CDATA[<div class='wow animate__heartBeat' data-wow-duration='' data-wow-delay='1s' data-wow-offset=''  data-wow-iteration='2' ><div class="note red icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p><a href="https://www.lukeme.top/posts/4c7367cf.html">告别小白，点击直达</a></p></div></div><h2 id="变量">变量</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">可变的量</span><br><span class="line"><span class="comment">## 如何定义变量</span></span><br><span class="line">变量名=变量值     age=18</span><br><span class="line">age：变量名</span><br><span class="line">=：赋值符号</span><br><span class="line">18：变量值</span><br><span class="line"><span class="comment"># 如何调用变量</span></span><br><span class="line">在变量名前面加上<span class="string">&#x27;$&#x27;</span>就可以调用变量</span><br><span class="line">    <span class="string">&#x27;$&#x27;</span> + 变量名</span><br><span class="line"><span class="built_in">echo</span>：打印输出   作用 所见即所得</span><br><span class="line"></span><br><span class="line">[root@localhost tmp]# <span class="built_in">echo</span> <span class="variable">$age</span></span><br><span class="line">18</span><br><span class="line"><span class="comment">##  name=oldboy</span></span><br><span class="line">1.<span class="built_in">echo</span> <span class="string">&#x27;$oldboy&#x27;</span> 结果是什么？ </span><br><span class="line"><span class="variable">$oldboy</span></span><br><span class="line">2.<span class="built_in">echo</span> <span class="string">&#x27;$name&#x27;</span> 结果是什么？</span><br><span class="line"><span class="variable">$name</span></span><br><span class="line">3.<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$name</span>&quot;</span> 结果是什么？</span><br><span class="line">oldboy </span><br><span class="line">4.1.<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$oldboy</span>&#x27; 结果是什么？ </span></span><br><span class="line"><span class="string">空值</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">old_ip=`ip a s ens33|awk -F &#x27;[ /.]+&#x27; &#x27;NR==3&#123;print <span class="variable">$6</span>&#125;&#x27;`</span></span><br><span class="line"><span class="string">old_ip=<span class="subst">$(ip a s ens33|awk -F &#x27;[ /.]+&#x27; &#x27;NR==3&#123;print $6&#125;&#x27;)</span></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#Linux中的符号：</span></span><br><span class="line"><span class="string">&#x27;&#x27;：所见即所得，引用字符串</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;：默认情况下和&#x27;&#x27;一样，用来引用字符串</span></span><br><span class="line"><span class="string">``：反引号,反引号中的内容，会当做命令执行后，结果留下</span></span><br><span class="line"><span class="string">区别：在于引用变量，双引号引用变量可以输出变量的值</span></span><br><span class="line"><span class="string">[root@localhost tmp]# echo &quot;</span><span class="variable">$age</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">18</span></span><br><span class="line"><span class="string">[root@localhost tmp]# echo &#x27;<span class="variable">$age</span>&#x27;</span></span><br><span class="line"><span class="string"><span class="variable">$age</span></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">echo &#123;1..5..2&#125;每隔2个数在1-5取数</span></span><br></pre></td></tr></table></figure><h2 id="环境变量（系统变量）">环境变量（系统变量）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 系统安装完成后，系统自带的变量</span></span><br><span class="line">[root@localhost ~] <span class="built_in">declare</span>    <span class="comment">#可以查看系统自带的所有变量 </span></span><br><span class="line"><span class="comment">## 系统环境变量配置文件</span></span><br><span class="line">1.[root@localhost ~]# ll /root/.bashrc</span><br><span class="line">-rw-r--r--. 1 root root 176 Dec 29  2013 /root/.bashrc</span><br><span class="line"></span><br><span class="line">2.[root@localhost ~]# ll /etc/bashrc </span><br><span class="line">-rw-r--r--. 1 root root 2853 Oct 31  2018 /etc/bashrc</span><br><span class="line"></span><br><span class="line">3.[root@localhost ~]# ll /etc/profile</span><br><span class="line">-rw-r--r--. 1 root root 1819 Oct 31  2018 /etc/profile</span><br><span class="line"></span><br><span class="line">4.[root@localhost ~]# ll /etc/profile.d/</span><br><span class="line">256term.csh  colorgrep.csh  colorls.csh  csh.local  lang.sh   less.sh   which2.csh</span><br><span class="line">256term.sh   colorgrep.sh   colorls.sh   lang.csh   less.csh  sh.local  which2.sh</span><br></pre></td></tr></table></figure><h3 id="命令提示符变量">命令提示符变量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# <span class="built_in">echo</span> <span class="variable">$PS1</span></span><br><span class="line">[\u@\h \W]\$</span><br><span class="line"></span><br><span class="line">在命令行中设置变量，是临时的</span><br><span class="line">将变量写到环境变量文件中，则是永久的、</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20240327165009589.png" alt="image-20240327165009589"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">修改家目录下的.bashrc文件  vi ~/.bashrc  vi家目录下的.bashrc文件</span><br><span class="line">[root@lb01 ~]# vi ~/.bashrc     /root/.bashrc</span><br><span class="line">[lgj@lb01 root]$ vi ~/.bashrc      /home/lgj/.bushrc</span><br><span class="line">若root用户修改</span><br><span class="line">超级用户和普通用户家目录：</span><br><span class="line">超级用户root：/root</span><br><span class="line">普通用户：/home/普通用户名</span><br></pre></td></tr></table></figure><h2 id="BASH特性——Tab补全">BASH特性——Tab补全</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">命令 选项 参数</span><br><span class="line">补全命令</span><br><span class="line">补全参数</span><br><span class="line">补全选项：yum install -y bash-completio</span><br></pre></td></tr></table></figure><h2 id="BASH特性——快捷键">BASH特性——快捷键</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Ctrl + w <span class="comment"># 将光标所在字符前面的内容删除，一直删除到空格</span></span><br><span class="line">Ctrl + z <span class="comment"># 将一个进程放在后台运行</span></span><br><span class="line">Ctrl + k <span class="comment"># 将光标所在字符和后面所有内容，全部删除</span></span><br><span class="line">Ctrl + u <span class="comment"># 将光标所在字符前面的内容全部删除（光标所在字符不会删除）</span></span><br><span class="line">Ctrl + s <span class="comment"># 锁屏</span></span><br><span class="line">Ctrl + q <span class="comment"># 解锁</span></span><br><span class="line">Ctrl + 左右 <span class="comment"># 按照单词跳转光标</span></span><br><span class="line"><span class="comment">###########################################</span></span><br><span class="line">Ctrl + a <span class="comment"># 将光标移动到命令行首</span></span><br><span class="line">Ctrl + e <span class="comment"># 将光标移动到命令行末</span></span><br><span class="line">Ctrl + c <span class="comment"># 将命令终止</span></span><br><span class="line">Ctrl + l <span class="comment"># 清屏</span></span><br><span class="line">BASH特性——历史命令</span><br><span class="line">BASH特性——命令别名</span><br><span class="line">Ctrl + d <span class="comment"># 退出当前一个BASH终端 （注销当前用户）</span></span><br><span class="line">Ctrl + r <span class="comment"># 搜索历史命令</span></span><br><span class="line">ESC + . <span class="comment"># 将上一条命令最后一个空格 后面的内容，补全到当前命令行</span></span><br><span class="line"><span class="string">&#x27;井号&#x27;</span> <span class="comment"># :在BASH中代表注释，系统不认识，bash也不会翻译</span></span><br></pre></td></tr></table></figure><h2 id="BASH特性——历史命令">BASH特性——历史命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 作用：用来对用户进行审计</span></span><br><span class="line"><span class="comment">## 查看历史命令     -history</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">history</span> </span><br><span class="line">    1  age=18</span><br><span class="line">    2  <span class="built_in">echo</span> age</span><br><span class="line">    3  <span class="built_in">echo</span> <span class="string">&quot;age&quot;</span></span><br><span class="line">    4  jjjsjsjsjsjsjjsjjsjsjjjsjss</span><br><span class="line">    5  <span class="built_in">history</span> </span><br><span class="line">    6  <span class="built_in">history</span> -d 1</span><br><span class="line">    7  hi</span><br><span class="line">    8  <span class="built_in">history</span> </span><br><span class="line">    9  ll /tmp</span><br><span class="line">   10  <span class="built_in">cd</span> /tmp0</span><br><span class="line"><span class="comment">## 保存历史记录(write)     历史记录保存在 ~/.bash_history    普通用户/home/lgj/.bash_history</span></span><br><span class="line"><span class="built_in">history</span> -w</span><br><span class="line">[root@localhost ~]# <span class="built_in">history</span> -w</span><br><span class="line"><span class="comment">## 清除所有历史记录（clear）</span></span><br><span class="line"><span class="built_in">history</span> -c</span><br><span class="line">[root@localhost ~]# <span class="built_in">history</span> -c</span><br><span class="line"><span class="comment">## 删除指定的一条历史记录（delete）</span></span><br><span class="line"><span class="built_in">history</span> -d 4</span><br><span class="line">[root@localhost ~]# <span class="built_in">history</span> -d 4</span><br><span class="line"></span><br><span class="line"><span class="comment">## 执行上一条开头是vi的命令</span></span><br><span class="line">[root@localhost ~]# !vi</span><br><span class="line"><span class="comment">## 执行上一条命令</span></span><br><span class="line">[root@localhost ~]# !!</span><br><span class="line"><span class="comment">## 使用!+编号，重新执行命令</span></span><br><span class="line">[root@localhost ~]# !10</span><br><span class="line"></span><br><span class="line"><span class="comment">## 重复执行历史命令的快捷方法</span></span><br><span class="line">!字符串    !vi 执行上一条vi的命令</span><br><span class="line">!!         执行上一条的命令</span><br><span class="line">!编号      执行指定行号历史记录</span><br></pre></td></tr></table></figure><h2 id="BASH特性——命令别名">BASH特性——命令别名</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 查看系统中的所有别名（查）    alias</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">alias</span></span><br><span class="line"><span class="built_in">alias</span> <span class="built_in">cp</span>=<span class="string">&#x27;cp -i&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> egrep=<span class="string">&#x27;egrep --color=auto</span></span><br><span class="line"><span class="string">alias ens33=&#x27;</span>ip address show ens33<span class="string">&#x27;</span></span><br><span class="line"><span class="string">alias fgrep=&#x27;</span>fgrep --color=auto<span class="string">&#x27;</span></span><br><span class="line"><span class="string">alias grep=&#x27;</span>grep --color=auto<span class="string">&#x27;</span></span><br><span class="line"><span class="string">alias l.=&#x27;</span><span class="built_in">ls</span> -d .* --color=auto<span class="string">&#x27;</span></span><br><span class="line"><span class="string">alias ll=&#x27;</span><span class="built_in">ls</span> -l --color=auto<span class="string">&#x27;</span></span><br><span class="line"><span class="string">alias ls=&#x27;</span><span class="built_in">ls</span> --color=auto<span class="string">&#x27;</span></span><br><span class="line"><span class="string">alias mv=&#x27;</span><span class="built_in">mv</span> -i<span class="string">&#x27;</span></span><br><span class="line"><span class="string">alias net=&#x27;</span>vi /etc/sysconfig/network-scripts/ifcfg-ens33<span class="string">&#x27;</span></span><br><span class="line"><span class="string">alias rm=&#x27;</span><span class="built_in">rm</span> -i<span class="string">&#x27;</span></span><br><span class="line"><span class="string">alias which=&#x27;</span><span class="built_in">alias</span> | /usr/bin/which --tty-only --read-alias --show-dot --showtilde<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">## 设置别名（增）临时</span></span><br><span class="line"><span class="string">alias 别名=&#x27;</span>命令<span class="string">&#x27;</span></span><br><span class="line"><span class="string">[root@localhost ~]# alias ens33=&#x27;</span>ip address show ens33<span class="string">&#x27;</span></span><br><span class="line"><span class="string">## 删除别名（删）</span></span><br><span class="line"><span class="string">unalias 别名</span></span><br><span class="line"><span class="string">[root@localhost ~]# unalias net</span></span><br><span class="line"><span class="string">## 修改别名（改）</span></span><br><span class="line"><span class="string">alias 别名=&#x27;</span>命令<span class="string">&#x27;</span></span><br><span class="line"><span class="string">alias net=&#x27;</span>vi /etc/sysconfig/network-scripts/ifcfg-ens34</span><br><span class="line"><span class="comment">## 别名永久生效</span></span><br><span class="line">[root@localhost ~]# vi ~/.bashrc</span><br><span class="line"><span class="built_in">alias</span> net=<span class="string">&#x27;vi /etc/sysconfig/network-scripts/ifcfg-ens33&#x27;</span></span><br><span class="line"></span><br><span class="line">扩展：ip address show enss33  展示ip</span><br></pre></td></tr></table></figure><h2 id="BASH特性——获取命令帮助">BASH特性——获取命令帮助</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">man 命令</span><br><span class="line">命令 --<span class="built_in">help</span></span><br><span class="line">http://linux.51yip.com/</span><br></pre></td></tr></table></figure><h3 id="修改ip-主机名">修改ip&amp;主机名</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">脚本</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;请输入要修改的IP地址最后一位: &quot;</span> ip</span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;请输入要修改的主机名: &quot;</span> host_name</span><br><span class="line">sed -i <span class="string">&quot;s#128#<span class="variable">$ip</span>#g&quot;</span> /etc/sysconfig/network-scripts/ifcfg-ens33</span><br><span class="line">hostnamectl set-hostname <span class="variable">$host_name</span></span><br><span class="line">systemctl restart network</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux敲门 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>03.目录结构</title>
      <link href="/posts/1f886c8a.html"/>
      <url>/posts/1f886c8a.html</url>
      
        <content type="html"><![CDATA[<div class='wow animate__heartBeat' data-wow-duration='' data-wow-delay='1s' data-wow-offset=''  data-wow-iteration='2' ><div class="note red icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p><a href="https://www.lukeme.top/posts/4c7367cf.html">告别小白，点击直达</a></p></div></div><blockquote><p>文件管理无非就是</p><p>创建    复制   移动   查看   编辑    压缩    查找    删除 等等</p><p>不过先认识下目录结构吧</p></blockquote><h2 id="系统目录结构">系统目录结构</h2><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">  几乎所有的计算机操作系统都是使用目录结构组织文件。具体来说就是在一个目录中存放子目录和文件，而在子目录中又会进一步存放子目录和文件，以此类推形成一个树状的文件结构，由于其结构很像一棵树的分支，所以该结构又被称为目录树。</span><br><span class="line">windows：一多根的方式组织文件C:<span class="string">\</span> D:<span class="string">\</span></span><br><span class="line">Linux：以单根的方式组织文件 /</span><br></pre></td></tr></table></figure><h3 id="目录层次的标准FHS">目录层次的标准FHS</h3><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">FHS全称（<span class="keyword">File</span><span class="params">system</span> Hierarchy Standard），中文意思是目录层次标准，是Linux的目录规范标准。</span><br><span class="line">FHS定义了两次规范：</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>.“/”目录下的各个目录应该放什么文件数据。</span><br><span class="line"><span class="number">2</span>.针对/usr 和 /<span class="keyword">var</span> 这两个目录的子目录来定义。</span><br></pre></td></tr></table></figure><blockquote><p>bin -&gt; usr/bin   这个是usr/bin的快捷方式</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">-rw-r--r--.   1 root root    0 Mar 28 11:29 1.txt</span><br><span class="line">lrwxrwxrwx.   1 root root    7 Mar 27 12:07 bin -&gt; usr/bin</span><br><span class="line">dr-xr-xr-x.   5 root root 4096 Mar 27 12:11 boot</span><br><span class="line">-开头的是文件</span><br><span class="line">l开头的是快捷方式   -&gt;</span><br><span class="line">dr开头的是文件夹</span><br><span class="line"><span class="comment">## /目录下</span></span><br><span class="line"><span class="comment">###系统命令</span></span><br><span class="line">bin -&gt; usr/bin <span class="comment"># 存放系统命令（普通用户可以执行）</span></span><br><span class="line">sbin -&gt; usr/sbin <span class="comment"># 存放系统命令（大部分命令只能超级用户执行）</span></span><br><span class="line"><span class="comment">#系统库文件目录</span></span><br><span class="line">lib -&gt; usr/lib <span class="comment"># 库文件（操作系统需要用到的组件 插件...）</span></span><br><span class="line">lib64 -&gt; usr/lib64 <span class="comment"># 库文件（64位操作系统库文件）</span></span><br><span class="line"><span class="comment"># 系统启动时文件目录</span></span><br><span class="line">boot    <span class="comment"># 存放系统启动文件</span></span><br><span class="line"><span class="comment">#空文件夹</span></span><br><span class="line">media   <span class="comment"># 媒体库目录（可以存放视频，图片...）      //媒体库 存放视频，图片，音乐</span></span><br><span class="line">mnt     <span class="comment"># mount 如果有U盘 光驱以外的设备，挂载目录     //挂载目录   mount </span></span><br><span class="line"><span class="comment">#临时挂载的文件系统。比如cdrom,u盘等，直接插入光驱无法使用，要先挂载后使用  /dev/cdrom /mnt</span></span><br><span class="line"></span><br><span class="line">opt      <span class="comment"># 存放第三方应用安装包的目录</span></span><br><span class="line">srv    <span class="comment"># 网站数据存放目录</span></span><br><span class="line"></span><br><span class="line">*****重点*****</span><br><span class="line">1）root    <span class="comment"># 超级用户root的家目录</span></span><br><span class="line">2）home    <span class="comment"># 普通用户的家目录</span></span><br><span class="line">3）run    <span class="comment"># 存放系统中运行的所有进程PID文件(#系统启动后, 运行的程序产生的运行时数据, 包括进程的pid文件,锁文件等)</span></span><br><span class="line">4）sys    <span class="comment"># 操作系统相关文件存放目录</span></span><br><span class="line">5)tmp      <span class="comment"># 所有用户都可以操作的目录（回收站）存放临时文件, 一般存放超过10天以上都会自动删除,可以更改删除临时文件的期限</span></span><br><span class="line">6)usr   <span class="comment"># 用户文件存放目录</span></span><br><span class="line"> <span class="comment">#默认软件都会存于该目录下。用于存储只读用户数据的第二层次；包含绝大多数的(多)用户工具和应用程序。</span></span><br><span class="line">7)dev    <span class="comment"># 设备文件</span></span><br><span class="line">8)etc    <span class="comment"># 系统配置文件 .conf .cfg .configure .cnf 以及常用配置文件</span></span><br><span class="line">9)proc    <span class="comment"># 系统信息都存放这目录下（硬件信息，进程信息 变化信息)</span></span><br><span class="line">10)var    <span class="comment"># 存放一些系统中变量文件，和一些不断发生变化的可变文件</span></span><br></pre></td></tr></table></figure><h3 id="dev目录">/dev目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">/dev/sda <span class="comment"># 系统中的第一块硬盘</span></span><br><span class="line">/dev/sda1 <span class="comment"># 系统中的第一块硬盘的第一个分区</span></span><br><span class="line">/dev/sda2 <span class="comment"># 系统中的第一块硬盘的第二个分区</span></span><br><span class="line">/dev/sdb <span class="comment"># 系统中的第二块硬盘</span></span><br><span class="line">/dev/random <span class="comment"># 生成随机数的</span></span><br><span class="line">/dev/null <span class="comment"># 黑洞，将终端上输出的内容，放入黑洞</span></span><br><span class="line">/dev/cdrom <span class="comment"># 光驱</span></span><br><span class="line">/dev/pts/&#123;0 1 2 3&#125; <span class="comment"># 连接服务器的虚拟终端设备</span></span><br></pre></td></tr></table></figure><h3 id="etc目录">/etc目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/etc/hosts <span class="comment"># 本地DNS解析文件      ip 域名</span></span><br><span class="line">/etc/passwd <span class="comment"># 存放用户信息文件</span></span><br><span class="line">/etc/sysconfig/network-scripts/ifcfg-网卡名 <span class="comment"># 网卡配置文件</span></span><br><span class="line">/etc/hostname <span class="comment"># 主机名配置文件</span></span><br><span class="line">/etc/resolv.conf <span class="comment"># DNS配置文件</span></span><br></pre></td></tr></table></figure><h3 id="etc其它目录-了解">/etc其它目录     *了解</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/etc/opt/       <span class="comment">#/opt/的配置文件</span></span><br><span class="line">/etc/X11/       <span class="comment">#X_Window系统(版本11)的配置文件</span></span><br><span class="line">/etc/sgml/      <span class="comment">#SGML的配置文件</span></span><br><span class="line">/etc/xml/       <span class="comment">#XML的配置文件</span></span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20240328131046094.png" alt="image-20240328131046094"></p><h3 id="proc目录">/proc目录</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/proc/m</span>eminfo <span class="comment"># 内存信息</span></span><br><span class="line"><span class="regexp">/proc/</span>cpuinfo <span class="comment"># CPU信息</span></span><br><span class="line">在Linux中，对应Procfs格式挂载。该目录下文件只能看不能改（包括root）</span><br></pre></td></tr></table></figure><h3 id="var目录">/var目录</h3><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/var/<span class="built_in">log</span>/messages <span class="meta"># 系统日志</span></span><br><span class="line">/var/<span class="built_in">log</span>/secure <span class="meta"># 系统登录日志</span></span><br><span class="line"><span class="meta">#变量文件——在正常运行的系统中其内容不断变化的文件，如日志，脱机文件和临时电子邮件文件。有时是一个单独的分区。如果不单独分区，有可能会把整个分区充满。如果单独分区，给大给小都不合适。</span></span><br></pre></td></tr></table></figure><h3 id="文件的路径定位">文件的路径定位</h3><p><img src="https://cos.lukme.top/Pic/image-20240328131213563.png" alt="image-20240328131213563"></p><h3 id="特殊目录’-’-和’…’">特殊目录’.’ 和’…’</h3><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">.. </span>：当前目录的上一级目录</span><br><span class="line"><span class="bullet">. </span>：当前目录</span><br></pre></td></tr></table></figure><h3 id="其它目录">其它目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/lost+found     <span class="comment">#在ext3文件系统中，当系统意外崩溃或机器意外关机，会产生一些文件碎片在这里。当系统在开机启动的过程中fsck工具会检查这里，并修复已经损坏的文件系统。当系统发生问题。可能会有文件被移动到这个目录中，可能需要用手工的方式来修复，或移到文件到原来的位置上。</span></span><br></pre></td></tr></table></figure><h3 id="相对路径和绝对路径">相对路径和绝对路径</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">相对路径：浦东新区/建韵路<span class="number">399</span>号</span><br><span class="line">绝对路径（完整路径）：中国<span class="regexp">/上海/</span>浦东新区/建韵路<span class="number">399</span>号</span><br><span class="line">以 <span class="string">&#x27;/&#x27;</span> 开头的路径，都是绝对路径</span><br><span class="line">不以<span class="string">&#x27;/&#x27;</span>开头的都是相对路径</span><br></pre></td></tr></table></figure><h4 id="其它目录-2">其它目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## /etc/目录</span></span><br><span class="line"></span><br><span class="line">/etc/rc /etc/rc.d   ***** <span class="comment">#/etc/rc*.d 启动、或改变运行级时运行的scripts或scripts的目录.</span></span><br><span class="line">/etc/hosts          ***** <span class="comment">#本地域名解析文件</span></span><br><span class="line">/etc/sysconfig/network  ***** <span class="comment">#IP、掩码、网关、主机名配置</span></span><br><span class="line">/etc/resolv.conf    ***** <span class="comment">#DNS服务器配置</span></span><br><span class="line">/etc/fstab          ***** <span class="comment">#开机自动挂载系统，所有分区开机都会自动挂载</span></span><br><span class="line">/etc/inittab        ***** <span class="comment">#设定系统启动时Init进程将把系统设置成什么样的runlevel及加载相关的启动文件配置</span></span><br><span class="line">/etc/exports        ***** <span class="comment">#设置NFS系统用的配置文件路径</span></span><br><span class="line">/etc/init.d/        ***** <span class="comment">#这个目录来存放系统启动脚本</span></span><br><span class="line">/etc/profile        ***** <span class="comment">#全局系统环境配置变量</span></span><br><span class="line">/etc/csh.login,  /etc/csh.cshrc</span><br><span class="line">/etc/issue          ***** <span class="comment">#认证前的输出信息，默认输出版本内核信息</span></span><br><span class="line">/etc/motd           <span class="comment">#设置认证后的输出信息</span></span><br><span class="line">/etc/mtab           <span class="comment">#当前安装的文件系统列表.由scripts初始化，并由mount 命令自动更新.需要一个当前安装的文件系统的列表时使用，例如df 命令</span></span><br><span class="line">/etc/group          ***** <span class="comment">#类似/etc/passwd ，但说明的不是用户而是组.</span></span><br><span class="line">/etc/passwd         ***** <span class="comment">#用户数据库，其中的域给出了用户名、真实姓名、家目录、加密的口令和用户的其他信息.</span></span><br><span class="line">/etc/shadow         ****** <span class="comment">#在安装了影子口令软件的系统上的影子口令文件.影子口令文件将/etc/passwd 文件中的加密口令移动到/etc/shadow 中，而后者只对root可读.这使破译口令更困难.</span></span><br><span class="line">/etc/sudoers        ***** <span class="comment">#可以sudo命令的配置文件</span></span><br><span class="line">/etc/syslog.conf    ***** <span class="comment">#系统日志参数配置</span></span><br><span class="line">/etc/login.defs     <span class="comment">#设置用户帐号限制的文件</span></span><br><span class="line">/etc/securetty      <span class="comment">#确认安全终端，即哪个终端允许root登录.一般只列出虚拟控制台，这样就不可能(至少很困难)通过modem或网络闯入系统并得到超级用户特权.</span></span><br><span class="line">/etc/printca        <span class="comment">#类似/etc/termcap ，但针对打印机.语法不同.</span></span><br><span class="line">/etc/shells         <span class="comment">#列出可信任的shell.chsh 命令允许用户在本文件指定范围内改变登录shell.提供一台机器FTP服务的服务进程ftpd 检查用户shell是否列在 /etc/shells 文件中，如果不是将不允许该用户登录.</span></span><br><span class="line">/etc/xinetd.d       <span class="comment">#如果服务器是通过xinetd模式运行的，它的脚本要放在这个目录下。有些系统没有这个目录，比如Slackware，有些老的版本也没有。在Redhat Fedora中比较新的版本中存在。</span></span><br><span class="line">/etc/opt/           <span class="comment">#/opt/的配置文件</span></span><br><span class="line">/etc/X11/           <span class="comment">#X_Window系统(版本11)的配置文件</span></span><br><span class="line">/etc/sgml/          <span class="comment">#SGML的配置文件</span></span><br><span class="line">/etc/xml/           <span class="comment">#XML的配置文件</span></span><br><span class="line">/etc/skel/          ***** <span class="comment">#默认创建用户时，把该目录拷贝到家目录下</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##usr/目录</span></span><br><span class="line"></span><br><span class="line">/usr/X11R6          <span class="comment">#存放X-Windows的目录；</span></span><br><span class="line">/usr/games          <span class="comment">#存放着XteamLinux自带的小游戏；</span></span><br><span class="line">/usr/doc            <span class="comment">#Linux技术文档；</span></span><br><span class="line">/usr/include        <span class="comment">#用来存放Linux下开发和编译应用程序所需要的头文件；</span></span><br><span class="line">/usr/lib            <span class="comment">#存放一些常用的动态链接共享库和静态档案库；</span></span><br><span class="line">/usr/man            <span class="comment">#帮助文档所在的目录；</span></span><br><span class="line">/usr/src            <span class="comment">#Linux开放的源代码，就存在这个目录，爱好者们别放过哦；</span></span><br><span class="line">/usr/bin/           <span class="comment">#非必要可执行文件 (在单用户模式中不需要)；面向所有用户。</span></span><br><span class="line">/usr/lib/           <span class="comment">#/usr/bin/和/usr/sbin/中二进制文件的库。</span></span><br><span class="line">/usr/sbin/          <span class="comment">#非必要的系统二进制文件，例如：大量网络服务的守护进程。</span></span><br><span class="line">/usr/share/         <span class="comment">#体系结构无关（共享）数据。</span></span><br><span class="line">/usr/src/           <span class="comment">#源代码,例如:内核源代码及其头文件。</span></span><br><span class="line">/usr/X11R6/         <span class="comment">#X Window系统版本 11, Release 6.</span></span><br><span class="line">/usr/local/         <span class="comment">#本地数据的第三层次，具体到本台主机。通常而言有进一步的子目录，例如：bin/、lib/、share/.这是提供给一般用户的/usr目录，在这里安装一般的应用软件；</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## /var/目录  </span></span><br><span class="line"></span><br><span class="line">/var/log/message            ***** <span class="comment">#系统日志信息，按周自动轮询</span></span><br><span class="line">/var/spool/cron/root        ***** <span class="comment">#定时器配置文件目录，默认按用户命名</span></span><br><span class="line">/var/log/secure             ***** <span class="comment">#记录登陆系统存取信息的文件，不管认证成功还是认证失败都会记录</span></span><br><span class="line">/var/log/wtmp               <span class="comment">#记录登陆者信息的文件，last,who,w命令信息来源于此</span></span><br><span class="line">/var/spool/clientmqueue/    <span class="comment">#当邮件服务未开启时，所有应发给系统管理员的邮件都将堆放在此</span></span><br><span class="line">/var/spool/mail/            <span class="comment">#邮件目录</span></span><br><span class="line">/var/tmp                    <span class="comment">#比/tmp 允许的大或需要存在较长时间的临时文件. (虽然系统管理员可能不允许/var/tmp 有很旧的文件.)</span></span><br><span class="line">/var/lib                    <span class="comment">#系统正常运行时要改变的文件.  </span></span><br><span class="line">/var/local                  <span class="comment">#/usr/local 中安装的程序的可变数据(即系统管理员安装的程序).注意，如果必要，即使本地安装的程序也会使用其他/var 目录，例如/var/lock .  </span></span><br><span class="line">/var/lock                   <span class="comment">#锁定文件.许多程序遵循在/var/lock 中产生一个锁定文件的约定，以支持他们正在使用某个特定的设备或文件.其他程序注意到这个锁定文件，将不试图使用这个设备或文件.</span></span><br><span class="line">/var/log/                   ***** <span class="comment">#各种程序的Log文件，特别是login   (/var/log/wtmp log所有到系统的登录和注销) 和syslog (/var/log/messages 里存储所有核心和系统程序信息. /var/log 里的文件经常不确定地增长，应该定期清除.  </span></span><br><span class="line">/var/run                    <span class="comment">#保存到下次引导前有效的关于系统的信息文件.例如， /var/run/utmp 包含当前登录的用户的信息.</span></span><br><span class="line">/var/cache/                 <span class="comment">#应用程序缓存数据。这些数据是在本地生成的一个耗时的I/O或计算结果。应用程序必须能够再生或恢复数据。缓存的文件可以被删除而不导致数据丢失。</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## /proc/目录</span></span><br><span class="line"></span><br><span class="line">/proc/meminfo           ***** <span class="comment">#查看内存信息</span></span><br><span class="line">/proc/loadavg           ***** <span class="comment">#还记得 top 以及 uptime 吧？没错！上头的三个平均数值就是记录在此！</span></span><br><span class="line">/proc/uptime            ***** <span class="comment">#就是用 uptime 的时候，会出现的资讯啦！</span></span><br><span class="line">/proc/cpuinfo           ***** <span class="comment">#关于处理器的信息，如类型、厂家、型号和性能等。</span></span><br><span class="line">/proc/cmdline           <span class="comment">#加载 kernel 时所下达的相关参数！查阅此文件，可了解系统是如何启动的！</span></span><br><span class="line">/proc/filesystems       <span class="comment">#目前系统已经加载的文件系统罗！</span></span><br><span class="line">/proc/interrupts        <span class="comment">#目前系统上面的 IRQ 分配状态。</span></span><br><span class="line">/proc/ioports           <span class="comment">#目前系统上面各个装置所配置的 I/O 位址。</span></span><br><span class="line">/proc/kcore             <span class="comment">#这个就是内存的大小啦！好大对吧！但是不要读他啦！</span></span><br><span class="line">/proc/modules           <span class="comment">#目前我们的 Linux 已经加载的模块列表，也可以想成是驱动程序啦！</span></span><br><span class="line">/proc/mounts            <span class="comment">#系统已经挂载的数据，就是用 mount 这个命令呼叫出来的数据啦！</span></span><br><span class="line">/proc/swaps             <span class="comment">#到底系统挂加载的内存在哪里？呵呵！使用掉的 partition 就记录在此啦！</span></span><br><span class="line">/proc/partitions        <span class="comment">#使用 fdisk -l 会出现目前所有的 partition 吧？在这个文件当中也有纪录喔！</span></span><br><span class="line">/proc/pci               <span class="comment">#在 PCI 汇流排上面，每个装置的详细情况！可用 lspci 来查阅！</span></span><br><span class="line">/proc/version           <span class="comment">#核心的版本，就是用 uname -a 显示的内容啦！</span></span><br><span class="line">/proc/bus/*             <span class="comment">#一些汇流排的装置，还有 U盘的装置也记录在此喔！</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/dev/目录·</span></span><br><span class="line"></span><br><span class="line">/dev/hd[a-t]            <span class="comment">#IDE设备</span></span><br><span class="line">/dev/sd[a-z]            <span class="comment">#SCSI设备</span></span><br><span class="line">/dev/fd[0-7]            <span class="comment">#标准软驱</span></span><br><span class="line">/dev/md[0-31]           <span class="comment">#软raid设备</span></span><br><span class="line">/dev/loop[0-7]          <span class="comment">#本地回环设备</span></span><br><span class="line">/dev/ram[0-15]          <span class="comment">#内存</span></span><br><span class="line">/dev/null               <span class="comment">#无限数据接收设备,相当于黑洞</span></span><br><span class="line">/dev/zero               <span class="comment">#无限零资源</span></span><br><span class="line">/dev/tty[0-63]          <span class="comment">#虚拟终端</span></span><br><span class="line">/dev/ttyS[0-3]          <span class="comment">#串口</span></span><br><span class="line">/dev/lp[0-3]            <span class="comment">#并口</span></span><br><span class="line">/dev/console            <span class="comment">#控制台</span></span><br><span class="line">/dev/fb[0-31]           <span class="comment">#framebuffer</span></span><br><span class="line">/dev/cdrom              <span class="comment">#=&gt; /dev/hdc</span></span><br><span class="line">/dev/modem              <span class="comment">#=&gt; /dev/ttyS[0-9]</span></span><br><span class="line">/dev/pilot              <span class="comment">#=&gt; /dev/ttyS[0-9]</span></span><br><span class="line">/dev/random             <span class="comment">#随机数设备</span></span><br><span class="line">/dev/urandom            <span class="comment">#随机数设备</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux敲门 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>06.文件查找命令</title>
      <link href="/posts/b1e58ba1.html"/>
      <url>/posts/b1e58ba1.html</url>
      
        <content type="html"><![CDATA[<div class='wow animate__heartBeat' data-wow-duration='' data-wow-delay='1s' data-wow-offset=''  data-wow-iteration='2' ><div class="note red icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p><a href="https://www.lukeme.top/posts/4c7367cf.html">告别小白，点击直达</a></p></div></div><h2 id="文件管理命令">文件管理命令</h2><h3 id="查—cat">查—cat</h3><table><thead><tr><th>选项</th><th>作用</th></tr></thead><tbody><tr><td>-n</td><td>显示行号</td></tr><tr><td>-T</td><td>用来区分文件中是否有制表符</td></tr><tr><td>-E</td><td>判断文件中内容每一行结束位置</td></tr><tr><td>-A</td><td>相当于-E -T</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 语法</span></span><br><span class="line"><span class="built_in">cat</span> [选项]... [文件]...</span><br><span class="line"><span class="built_in">cat</span> [OPTION]... [FILE]...</span><br><span class="line"><span class="comment">## 查看/etc/passwd文件内容</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> /etc/passwd</span><br><span class="line"><span class="comment">## 查看多个文件内容</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> 1.txt 2.txt</span><br><span class="line">123</span><br><span class="line">abc</span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> 2.txt 1.txt</span><br><span class="line">abc</span><br><span class="line">123</span><br><span class="line"><span class="comment">## 标准输出：当执行一个命令后，命令执行正确，所产生的结果（在终端上能看到的输出结果）</span></span><br><span class="line">OOM： out of memory 内存溢出</span><br><span class="line">OOM killer</span><br><span class="line"><span class="comment">## -n：显示行号</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> -n /etc/passwd</span><br><span class="line">1 root:x:0:0:root:/root:/bin/bash</span><br><span class="line">2 bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">3 daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">4 adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line">5 lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br><span class="line">6 <span class="built_in">sync</span>:x:5:0:<span class="built_in">sync</span>:/sbin:/bin/sync</span><br><span class="line">7 shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown</span><br><span class="line">8 halt:x:7:0:halt:/sbin:/sbin/halt</span><br><span class="line">9 mail:x:8:12:mail:/var/spool/mail:/sbin/nologin</span><br><span class="line">10 operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line"><span class="comment">## -T：用来区分文件中是否有制表符（一个制表符用^I来表示）</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> -T 1.txt</span><br><span class="line">abc 123 789</span><br><span class="line">qwe^Iwww^I777</span><br><span class="line">a^I^I^I^I</span><br><span class="line">aaaaa</span><br><span class="line">bbbb</span><br><span class="line"><span class="comment">## -E：判断文件中内容每一行结束位置（查看是否有多余的空格）结尾用$表示</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> -E 1.txt</span><br><span class="line">abc 123 789$</span><br><span class="line">$</span><br><span class="line">qwe www 777 $</span><br><span class="line">aaaa$</span><br><span class="line">$</span><br><span class="line">$</span><br><span class="line"><span class="comment">## -A：相当于-E -T</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> -A 1.txt</span><br><span class="line">abc 123 789$</span><br><span class="line">$</span><br><span class="line">qwe^Iwww^I777 $</span><br><span class="line">aaaa$</span><br><span class="line">$</span><br><span class="line">Tab 制表符</span><br><span class="line">回车 换行符</span><br><span class="line"><span class="comment">## 往文件中写入内容</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> &gt;&gt; suibian.txt &lt;&lt;<span class="string">EOF(不一定是Eof，起到终止作用)</span></span><br><span class="line"><span class="string">但使龙城free将在</span></span><br><span class="line"><span class="string">xxx</span></span><br><span class="line"><span class="string">aaa</span></span><br><span class="line"><span class="string">ccc</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> &gt;&gt; gushi.txt &lt;&lt;<span class="string">zls （这里就不一定是Eof）</span></span><br><span class="line"><span class="string">&gt; 1111</span></span><br><span class="line"><span class="string">&gt; 2222</span></span><br><span class="line"><span class="string">&gt; 3333</span></span><br><span class="line"><span class="string">&gt; zls</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> &gt; 1.txt &lt;&lt;<span class="string">EOF#一个 &gt; 是写入新内容并覆盖</span></span><br><span class="line"><span class="string">&gt; abc</span></span><br><span class="line"><span class="string">&gt; EOF</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> 1.txt</span><br><span class="line">abc</span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> &gt;&gt; 1.txt &lt;&lt;<span class="string">EOF  #两个&gt;&gt;是追加内容不覆盖</span></span><br><span class="line"><span class="string">&gt; 123</span></span><br><span class="line"><span class="string">&gt; 456</span></span><br><span class="line"><span class="string">&gt; EOF</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> 1.txt</span><br><span class="line">abc</span><br><span class="line">123</span><br><span class="line">456</span><br></pre></td></tr></table></figure><h3 id="查—more">查—more</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@db04 ~]# more /etc/services</span><br></pre></td></tr></table></figure><h3 id="查—less">查—less</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@db04 ~]# less /etc/services</span><br><span class="line"><span class="comment">#显示行号，缺陷：文件内容过多不能显示最后一行的内容，需要使用翻页键PageDown向后翻</span></span><br><span class="line">[root@db04 ~]# less -N /etc/services</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="查—head">查—head</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#选项：-n</span></span><br><span class="line">作用：指定查看多少行 number</span><br><span class="line"><span class="comment">## 默认情况下head查看一个文件的前10行内容</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">head</span> /etc/passwd</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line">lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br><span class="line"><span class="built_in">sync</span>:x:5:0:<span class="built_in">sync</span>:/sbin:/bin/sync</span><br><span class="line">shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown</span><br><span class="line">halt:x:7:0:halt:/sbin:/sbin/halt</span><br><span class="line">mail:x:8:12:mail:/var/spool/mail:/sbin/nologin</span><br><span class="line">operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line"><span class="comment">## 查看指定行数-n3/-n 3/-3都可以查看前三行内容  n也可省略</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">head</span> -n3 /etc/passwd</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">[root@localhost ~]# <span class="built_in">head</span> -n 3 /etc/passwd</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">[root@localhost ~]# <span class="built_in">head</span> -3 /etc/passwd</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="查—tail">查—tail</h3><table><thead><tr><th>选项</th><th>作用</th></tr></thead><tbody><tr><td>-n</td><td>指定查看多少行 number</td></tr><tr><td>-f</td><td>follow 跟随，跟踪文件末尾</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 默认情况下tail查看一个文件的后10行内容</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">tail</span> /etc/passwd</span><br><span class="line">ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin</span><br><span class="line">nobody:x:99:99:Nobody:/:/sbin/nologin</span><br><span class="line">systemd-network:x:192:192:systemd Network Management:/:/sbin/nologin</span><br><span class="line">dbus:x:81:81:System message bus:/:/sbin/nologin</span><br><span class="line">polkitd:x:999:998:User <span class="keyword">for</span> polkitd:/:/sbin/nologin</span><br><span class="line">sshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin</span><br><span class="line">postfix:x:89:89::/var/spool/postfix:/sbin/nologin</span><br><span class="line">zls1:x:1000:1000::/home/zls1:/bin/bash</span><br><span class="line">apache:x:48:48:Apache:/usr/share/httpd:/sbin/nologin</span><br><span class="line">zls100:x:1001:1001::/home/zls100:/bin/bash</span><br><span class="line"><span class="comment">## 查看指定行数</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">tail</span> -n2 /etc/passwd</span><br><span class="line">apache:x:48:48:Apache:/usr/share/httpd:/sbin/nologin</span><br><span class="line">zls100:x:1001:1001::/home/zls100:/bin/bash</span><br><span class="line">[root@localhost ~]# <span class="built_in">tail</span> -2 /etc/passwd</span><br><span class="line">apache:x:48:48:Apache:/usr/share/httpd:/sbin/nologin</span><br><span class="line">zls100:x:1001:1001::/home/zls100:/bin/bash</span><br><span class="line"><span class="comment">## 实时追踪日志文件末尾tail -f == tailf</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">tail</span> -f 1.txt</span><br><span class="line">可以查看实时更新的日志</span><br></pre></td></tr></table></figure><h3 id="查—grep（主要用于过滤文件内容）">查—grep（主要用于过滤文件内容）</h3><table><thead><tr><th>选项</th><th>作用</th></tr></thead><tbody><tr><td>-n</td><td>显示行号</td></tr><tr><td>-A</td><td>After 过滤关键字并打印出后N行</td></tr><tr><td>-B</td><td>Before 过滤关键字并打印出前N行</td></tr><tr><td>-C</td><td>Center 过滤关键字并打印出前后N行</td></tr><tr><td>-v</td><td>取反</td></tr><tr><td>-o</td><td>只显示关键字内容</td></tr><tr><td>-i</td><td>忽略大小写</td></tr><tr><td>-w</td><td>精确匹配,显示匹配的这一行</td></tr><tr><td>-c</td><td>相当于count，用于统计行数</td></tr><tr><td>-r/-R</td><td>递归搜索目录及目录下得文件</td></tr></tbody></table><table><thead><tr><th>关键字可以使用的符号</th><th>作用</th></tr></thead><tbody><tr><td>^</td><td>以…开头</td></tr><tr><td>$</td><td>以…结尾     ^$可以表示空行</td></tr><tr><td>.</td><td>任意一个字符</td></tr><tr><td>*</td><td>*号前面的单个字符匹配0次或多次</td></tr><tr><td>|</td><td>正则表达式里面或者意思，grep默认不支持正则表达式，需要用-E</td></tr><tr><td>\b</td><td>边界符</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 语法：</span></span><br><span class="line">grep [选项]... <span class="string">&#x27;关键字&#x27;</span> [文件名]...</span><br><span class="line"><span class="comment">## 过滤关键字</span></span><br><span class="line">[root@localhost ~]# grep <span class="string">&#x27;风景&#x27;</span> zls.txt</span><br><span class="line">江山风景美如画，</span><br><span class="line"><span class="comment">## 过滤关键字并显示行号</span></span><br><span class="line">[root@localhost ~]# grep -n <span class="string">&#x27;root&#x27;</span> /etc/passwd</span><br><span class="line">1:root:x:0:0:root:/root:/bin/bash</span><br><span class="line">10:operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> zls.txt</span><br><span class="line">卧槽</span><br><span class="line">作者：曾老湿</span><br><span class="line">江山风景美如画，</span><br><span class="line">本想吟诗赠天下。</span><br><span class="line">奈何自己没文化，</span><br><span class="line">一句卧槽风好大。</span><br><span class="line">就这么地吧。</span><br><span class="line">谢谢大家。</span><br><span class="line">一二三四五六七，</span><br><span class="line">七六五四三二一。</span><br><span class="line"><span class="comment">## 过滤出zls.txt文件中 包含一的行</span></span><br><span class="line">[root@localhost ~]#grep <span class="string">&#x27;一&#x27;</span> zls.txt</span><br><span class="line">一句卧槽风好大。</span><br><span class="line">一二三四五六七，</span><br><span class="line">七六五四三二一。</span><br><span class="line"><span class="comment">## 过滤出zls.txt文件中以一开头的行</span></span><br><span class="line">[root@localhost ~]#grep <span class="string">&#x27;^一&#x27;</span> zls.txtt</span><br><span class="line">一句卧槽风好大。</span><br><span class="line">一二三四五六七，</span><br><span class="line"><span class="comment">## 过滤出zls.txt文件中以一开头的行，并显示行号</span></span><br><span class="line">[root@localhost ~]# grep -n <span class="string">&#x27;^一&#x27;</span> zls.txt</span><br><span class="line">6:一句卧槽风好大。</span><br><span class="line">9:一二三四五六七，</span><br><span class="line"><span class="comment">## 过滤出/etc/passwd文件中，以login结尾的行</span></span><br><span class="line">[root@localhost ~]# grep <span class="string">&#x27;login$&#x27;</span> /etc/passwd</span><br><span class="line"><span class="comment">## 过滤出mail关键字所在行及后两行内容</span></span><br><span class="line">[root@localhost ~]# grep <span class="string">&#x27;mail&#x27;</span> -A 2 /etc/passwd</span><br><span class="line">mail:x:8:12:mail:/var/spool/mail:/sbin/nologin</span><br><span class="line">operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line">games:x:12:100:games:/usr/games:/sbin/nologin</span><br><span class="line"><span class="comment">## 过滤出mail关键字所在行及前两行内容</span></span><br><span class="line">[root@localhost ~]# grep -B 2 <span class="string">&#x27;mail&#x27;</span> /etc/passwd</span><br><span class="line">shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown</span><br><span class="line">halt:x:7:0:halt:/sbin:/sbin/halt</span><br><span class="line">mail:x:8:12:mail:/var/spool/mail:/sbin/nologin</span><br><span class="line"><span class="comment">## 过滤出mail关键字所在行及前两行内容和后三行内容</span></span><br><span class="line">[root@localhost ~]# grep -A3 -B2 <span class="string">&#x27;mail&#x27;</span> /etc/passwd</span><br><span class="line">shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown</span><br><span class="line">halt:x:7:0:halt:/sbin:/sbin/halt</span><br><span class="line">mail:x:8:12:mail:/var/spool/mail:/sbin/nologin</span><br><span class="line">operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line">games:x:12:100:games:/usr/games:/sbin/nologin</span><br><span class="line">ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin</span><br><span class="line"><span class="comment">## ## 过滤出mail关键字所在行及前两行内容和后两行内容</span></span><br><span class="line">[root@localhost ~]# grep -C2 <span class="string">&#x27;mail&#x27;</span> /etc/passwd</span><br><span class="line">shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown</span><br><span class="line">halt:x:7:0:halt:/sbin:/sbin/halt</span><br><span class="line">mail:x:8:12:mail:/var/spool/mail:/sbin/nologin</span><br><span class="line">operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line">games:x:12:100:games:/usr/games:/sbin/nologin</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Linux中的管道符">Linux中的管道符</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">|：Shift + \ 作用：将管道符左边命令的标准输出交给管道符右边命令来处理</span><br><span class="line"><span class="built_in">command</span>|<span class="built_in">command</span>|<span class="built_in">command</span></span><br><span class="line"><span class="comment">## 过滤出/etc/services文件中以 http开头的行且以L结尾的行</span></span><br><span class="line">[root@localhost ~]# grep <span class="string">&#x27;^http&#x27;</span> /etc/services</span><br><span class="line">http 80/tcp www www-http <span class="comment"># WorldWideWeb HTTP</span></span><br><span class="line">http 80/udp www www-http <span class="comment"># HyperText Transfer Protocol</span></span><br><span class="line">http 80/sctp <span class="comment"># HyperText Transfer Protocol</span></span><br><span class="line">https 443/tcp <span class="comment"># http protocol over TLS/SSL</span></span><br><span class="line">https 443/udp <span class="comment"># http protocol over TLS/SSL</span></span><br><span class="line">https 443/sctp <span class="comment"># http protocol over TLS/SSL</span></span><br><span class="line">http-mgmt 280/tcp <span class="comment"># http-mgmt</span></span><br><span class="line">http-mgmt 280/udp <span class="comment"># http-mgmt</span></span><br><span class="line">http-rpc-epmap 593/tcp <span class="comment"># HTTP RPC Ep Map</span></span><br><span class="line">http-rpc-epmap 593/udp <span class="comment"># HTTP RPC Ep Map</span></span><br><span class="line">httpx 4180/tcp <span class="comment"># HTTPX</span></span><br><span class="line">httpx 4180/udp <span class="comment"># HTTPX</span></span><br><span class="line">http-wmap 8990/tcp <span class="comment"># webmail HTTP service</span></span><br><span class="line">http-wmap 8990/udp <span class="comment"># webmail HTTP service</span></span><br><span class="line">https-wmap 8991/tcp <span class="comment"># webmail HTTPS service</span></span><br><span class="line">https-wmap 8991/udp <span class="comment"># webmail HTTPS service</span></span><br><span class="line"></span><br><span class="line">[root@localhost ~]# grep <span class="string">&#x27;^http&#x27;</span> /etc/services|grep <span class="string">&#x27;L$&#x27;</span></span><br><span class="line">https 443/tcp <span class="comment"># http protocol over TLS/SSL</span></span><br><span class="line">https 443/udp <span class="comment"># http protocol over TLS/SSL</span></span><br><span class="line">https 443/sctp <span class="comment"># http protocol over TLS/SSL</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux敲门 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>05.文件操作命令</title>
      <link href="/posts/3f8f4a3c.html"/>
      <url>/posts/3f8f4a3c.html</url>
      
        <content type="html"><![CDATA[<div class='wow animate__heartBeat' data-wow-duration='' data-wow-delay='1s' data-wow-offset=''  data-wow-iteration='2' ><div class="note red icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p><a href="https://www.lukme.top/posts/4c7367cf.html">告别小白，点击直达</a></p></div></div><h2 id="文件管理命令–tree">文件管理命令–tree</h2><table><thead><tr><th>选项</th><th>作用</th></tr></thead><tbody><tr><td>-L</td><td>指定层级显示结构</td></tr><tr><td>-d</td><td>只查看目录不查看文件</td></tr><tr><td>-a</td><td>显示所有文件和目录包括隐藏文件</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 命令找不到</span></span><br><span class="line">[root@localhost ~]# tree</span><br><span class="line">-bash: tree: <span class="built_in">command</span> not found</span><br><span class="line"><span class="comment">## 安装命令</span></span><br><span class="line">[root@localhost ~]# yum install -y tree</span><br><span class="line"><span class="comment">#tree功能：以树状结构显示文件和目录</span></span><br><span class="line"><span class="comment">## 查看目录结构   </span></span><br><span class="line">[root@lb01 ~]# tree /usr/local/</span><br><span class="line">/usr/local/</span><br><span class="line">├── bin</span><br><span class="line">├── etc</span><br><span class="line">│   ├── applications</span><br><span class="line">│   ├── info</span><br><span class="line">│   └── man</span><br><span class="line">│       ├── man1</span><br><span class="line">│       ├── man1x</span><br><span class="line">│       ├── man2</span><br><span class="line">│       ├── man2x</span><br><span class="line">│       ├── man3</span><br><span class="line">│       ├── man9x</span><br><span class="line">│       └── mann</span><br><span class="line">└── src</span><br><span class="line">32 directories, 0 files</span><br><span class="line"></span><br><span class="line"><span class="comment"># -L：level 查看指定层级的目录结构   如果目录层级太多，可以查看指定几层目录</span></span><br><span class="line">[root@lb01 ~]# tree -L 2 /usr/local/</span><br><span class="line"></span><br><span class="line"><span class="comment">## -d：只查看目录不查看文件，查看指定目录层级的所有目录</span></span><br><span class="line">[root@localhost ~]# tree -L 2 -d /etc/</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="文件管理命令—cp">文件管理命令—cp</h2><table><thead><tr><th>选项</th><th>作用</th></tr></thead><tbody><tr><td>-r、-R</td><td>递归复制目录（包括目录下的所有内容）</td></tr><tr><td>-v</td><td>显示复制的详细信息，复制过程</td></tr><tr><td>-p</td><td>保持文件属性</td></tr><tr><td>-a</td><td>即保持目录属性，又可以递归拷贝目录</td></tr><tr><td>-i</td><td>询问 （是否覆盖）</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">copy 复制，拷贝</span><br><span class="line"><span class="comment">#语法</span></span><br><span class="line">1.<span class="built_in">cp</span> [选项]... [-T] 源文件 目标 （备份）</span><br><span class="line">2.<span class="built_in">cp</span> [选项]... 源文件... 目录</span><br><span class="line">3.<span class="built_in">cp</span> [选项]... -t 目录 源文件...</span><br><span class="line"></span><br><span class="line"><span class="comment">## 语法一：cp [选项]... [-T] 源文件 目标 （备份）</span></span><br><span class="line"><span class="built_in">cp</span> [OPTION]... [-T] SOURCE DEST</span><br><span class="line"><span class="comment">## 将saomiao.sh脚本复制到当前目录下并改名为123</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cp</span> saomiao.sh 123</span><br><span class="line"><span class="comment">## 将saomiao.sh脚本复制到/opt目录下并改名为abc</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cp</span> saomiao.sh /opt/abc</span><br><span class="line"></span><br><span class="line"><span class="comment">## 语法二：cp [选项]... 源文件... 目录</span></span><br><span class="line"><span class="built_in">cp</span> [OPTION]... SOURCE... DIRECTORY</span><br><span class="line"><span class="comment">## 将saomiao.sh脚本复制到/tmp目录下</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cp</span> saomiao.sh /tmp/</span><br><span class="line"><span class="comment">## 将saomiao.sh脚本拷贝到/tmp下并改名为2.txt，若2.txt文件已存在会询问，是否要覆盖</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cp</span> saomiao.sh /tmp/2.txt</span><br><span class="line"><span class="comment">## 一次性复制多个文件</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cp</span> 123 saomiao.sh cheak_student.sh anaconda-ks.cfg /opt/</span><br><span class="line"><span class="comment">## 报错示范</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cp</span> 123 saomiao.sh cheak_student.sh anaconda-ks.cfg abc（必须是目录，不能是文件）</span><br><span class="line"><span class="built_in">cp</span>: target ‘abc’ is not a directory</span><br><span class="line"><span class="comment">## 复制目录</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cp</span> -r /opt/ /tmp/将opt目录下所有文件复制到tmp下，包括opt目录</span><br><span class="line"><span class="comment">## 改名</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cp</span> -r /opt/ /root/xxx</span><br><span class="line"><span class="comment">## 复制目录下的所有文件，但不复制目录本身</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cp</span> -r /opt/* /tmp/</span><br><span class="line"><span class="comment">## 复制多个文件    显示复制过程</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cp</span> -rv 123 anaconda-ks.cfg </span><br><span class="line">/tmp/</span><br><span class="line">‘123’ -&gt; ‘/tmp/123’</span><br><span class="line">‘anaconda-ks.cfg’ -&gt; ‘/tmp/anaconda-ks.cfg’</span><br><span class="line"></span><br><span class="line"><span class="comment">## 保持文件属性</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cp</span> -rp /home/zls1 /tmp/</span><br><span class="line"><span class="comment">## 语法二：cp [选项]... 源文件... 目录</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cp</span> -a /home/zls1 /tmp/</span><br><span class="line">----</span><br><span class="line"><span class="comment">## 语法三：cp [选项]... -t 目录 源文件... (反人类)</span></span><br><span class="line"><span class="built_in">cp</span> [OPTION]... -t DIRECTORY SOURCE...</span><br><span class="line">[root@localhost ~]# <span class="built_in">cp</span> -t /tmp/ saomiao.sh</span><br><span class="line"><span class="comment">## 总结：</span></span><br><span class="line">1.当复制的目标不存在时，将源文件复制出来并改名为目标名</span><br><span class="line">2.当复制目标存在时，且是一个目录，则直接将文件复制到指定的目录下（名字不变）</span><br><span class="line">3.当复制目标存在时，且是一个普通文件，则提示是否要覆盖，输入y是覆盖，输入n是不覆盖</span><br><span class="line">4.当复制多个文件时，最后一个必须写已存在的目录，否则会报错</span><br><span class="line">5.<span class="built_in">cp</span>命令默认情况下无法拷贝目录，必须加-r选项，递归复制目录</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="文件管理命令–mv">文件管理命令–mv</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">-i询问（是否要覆盖）</span><br><span class="line">move 移动，剪切</span><br><span class="line">1.<span class="built_in">mv</span> [选项]... [-T] 源文件 目标（重命名）</span><br><span class="line">2.<span class="built_in">mv</span> [选项]... 源文件... 目录</span><br><span class="line">3.<span class="built_in">mv</span> [选项]... -t 目录 源文件... (反人类)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 语法一：mv [选项]... [-T] 源文件 目标（重命名）</span></span><br><span class="line"><span class="built_in">mv</span> [OPTION]... [-T] SOURCE DEST</span><br><span class="line"><span class="comment">## 给saomiao.sh文件改名内容覆盖并改名，源文件消失</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">mv</span> saomiao.sh zls.sh</span><br><span class="line"><span class="comment">## 语法二：mv [选项]... 源文件... 目录</span></span><br><span class="line"><span class="built_in">mv</span> [OPTION]... SOURCE... DIRECTORY</span><br><span class="line">[root@localhost ~]# <span class="built_in">mv</span> zls.sh /opt/</span><br><span class="line"><span class="comment">## 覆盖文件</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">mv</span> nginx.conf 123</span><br><span class="line"><span class="built_in">mv</span>: overwrite ‘123’? y</span><br><span class="line"><span class="comment">## 移动多个文件    移动文件到当前目录</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">mv</span> /tmp/&#123;123,anaconda,ks.cfg,cheak_student.sh,nginx.conf.bak&#125; .</span><br><span class="line">[root@localhost ~]# ll</span><br><span class="line">total 8</span><br><span class="line">-rw-r--r--. 1 root root 0 Apr 1 19:18 123</span><br><span class="line">-rw-------. 1 root root 1379 Mar 21 20:58 anaconda-ks.cfg</span><br><span class="line">-rw-r--r--. 1 root root 392 Aug 11 2022 cheak_student.sh</span><br><span class="line">-rw-r--r--. 1 root root 0 Apr 1 19:18 nginx.conf.bak</span><br><span class="line"><span class="comment">## 错误演示</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">mv</span> 123 anaconda-ks.cfg cheak_student.sh nginx.conf.bak abc同<span class="built_in">cp</span>，abc不是目录</span><br><span class="line"><span class="built_in">mv</span>: target ‘abc’ is not a directory</span><br><span class="line"><span class="comment">## 总结：</span></span><br><span class="line">1.当移动的目标不存在时，将源文件重命名</span><br><span class="line">2.当移动目标存在时，且是一个目录，则直接将文件剪切到指定的目录下（名字不变）</span><br><span class="line">3.当移动目标存在时，且是一个普通文件，则提示是否要覆盖，输入y是覆盖，输入n是不覆盖</span><br><span class="line">4.当移动多个文件时，最后一个必须写已存在的目录，否则会报错</span><br><span class="line"><span class="comment">## 语法三：mv [选项]... -t 目录 源文件... (反人类)</span></span><br><span class="line"><span class="built_in">mv</span> [OPTION]... -t DIRECTORY SOURCE...</span><br></pre></td></tr></table></figure><h2 id="文件管理命令—rm">文件管理命令—rm</h2><table><thead><tr><th>选项</th><th>作用</th></tr></thead><tbody><tr><td>-i</td><td>询问（是否要删除）</td></tr><tr><td>-r</td><td>递归删除</td></tr><tr><td>-f</td><td>force 强制删除</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">remove 删除（delete）</span><br><span class="line"><span class="comment">## 语法：rm [选项]... 文件...</span></span><br><span class="line"><span class="built_in">rm</span> [OPTION]... FILE...</span><br><span class="line"><span class="comment">## 删除文件</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">rm</span> 123</span><br><span class="line"><span class="comment">## 删除目录</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">rm</span> -r zls2</span><br><span class="line"><span class="comment">## 删除目录下的所有内容，不包括目录本身</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">rm</span> -r zls2/*</span><br><span class="line"><span class="built_in">rm</span>: remove regular empty file ‘123’? y</span><br><span class="line"><span class="comment">## 强制删除</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">rm</span> -rf zls2/</span><br><span class="line">[root@localhost ~]# <span class="built_in">rm</span> -fr /tmp/*</span><br><span class="line">1.<span class="built_in">rm</span>删除普通文件的命令，默认只能删除普通文件</span><br><span class="line">[root@localhost ~]# <span class="built_in">rm</span> zls1</span><br><span class="line"><span class="built_in">rm</span>: cannot remove ‘zls1’: Is a directory</span><br><span class="line">2.删除文件，不想询问，<span class="built_in">rm</span> -f</span><br><span class="line">3.删除目录，不想询问，<span class="built_in">rm</span> -fr 、 <span class="built_in">rm</span> -rf</span><br><span class="line"><span class="comment">## 两种让命令不走别名的方法：例如rm -i（提醒）别名是alias rm=&#x27;rm -i&#x27;，如果不想让rm走别名提醒</span></span><br><span class="line">1.在命令前面加\（转义符）[root@lb01 ~]# \<span class="built_in">rm</span> -r ac</span><br><span class="line">2.使用命令的绝对路径    查看命令的绝对路径在哪<span class="built_in">which</span> <span class="built_in">rm</span>    /usr/bin/rm </span><br><span class="line">使用绝对路径删除/usr/bin/rm -r ab  就没有提醒是否删除即不走别名</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux敲门 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>07.文件截取过滤命令</title>
      <link href="/posts/f88bbfea.html"/>
      <url>/posts/f88bbfea.html</url>
      
        <content type="html"><![CDATA[<div class='wow animate__heartBeat' data-wow-duration='' data-wow-delay='1s' data-wow-offset=''  data-wow-iteration='2' ><div class="note red icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p><a href="https://www.lukeme.top/posts/4c7367cf.html">告别小白，点击直达</a></p></div></div><h3 id="文件上传下载命令wget">文件上传下载命令wget</h3><table><thead><tr><th>选项</th><th>作用</th></tr></thead><tbody><tr><td>-O</td><td>指定下载路径，也可以给它改名</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 下载</span></span><br><span class="line">wget 可以用外网下载东西到服务器中</span><br><span class="line">-bash: wget: <span class="built_in">command</span> not found没有找到wget命令</span><br><span class="line">[root@localhost ~]# yum install -y wget</span><br><span class="line">[root@localhost ~]# wget https://dldir1.qq.com/qqfile/qq/QQNT/Linux/QQ_3.2.7_240401_x86_64_01.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment">##服务器上传下载</span></span><br><span class="line">[root@localhost ~]# yum install -y lrzsz</span><br><span class="line"><span class="comment">## 虚拟机文件下载到物理机</span></span><br><span class="line">[root@localhost ~]# sz w700d1q75cms.jpg</span><br><span class="line"><span class="comment">## 物理机文件上传到虚拟机</span></span><br><span class="line">[root@localhost ~]# rz</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="文件查找命令">文件查找命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 查看命令的绝对路径</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">which</span> <span class="built_in">ls</span></span><br><span class="line"><span class="built_in">alias</span> <span class="built_in">ls</span>=<span class="string">&#x27;ls --color=auto&#x27;</span></span><br><span class="line">/usr/bin/ls</span><br><span class="line">[root@localhost ~]# <span class="built_in">which</span> ifconfig</span><br><span class="line">/usr/sbin/ifconfig</span><br></pre></td></tr></table></figure><h3 id="字符串处理命令sort">字符串处理命令sort</h3><table><thead><tr><th>选项</th><th>作用</th></tr></thead><tbody><tr><td>-k</td><td>按照指定列进行排序（默认以空格为分隔符）</td></tr><tr><td>-t</td><td>指定文件的分隔符</td></tr><tr><td>-n</td><td>以阿拉伯数字的形式进行排序</td></tr><tr><td>-r</td><td>reverse 倒叙排序</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line"><span class="built_in">sort</span> [选项]... [文件]...</span><br><span class="line"><span class="comment">## 排序1.txt文件</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">sort</span> 1.txt</span><br><span class="line">a:4</span><br><span class="line">b:3</span><br><span class="line">c:2</span><br><span class="line">d:1</span><br><span class="line">e:5</span><br><span class="line">f:11</span><br><span class="line">总结：</span><br><span class="line">1）默认情况下 <span class="built_in">sort</span>按照文件每一行的首字母进行排序</span><br><span class="line">2）默认情况下 在<span class="built_in">sort</span>眼里分隔符只有空格</span><br><span class="line">3）在<span class="built_in">sort</span>命令中，分隔符，必须是一个字符，不能为空</span><br><span class="line"><span class="comment">## 如果第四列默认相同，还可以加一个-k2再以第二列排序</span></span><br><span class="line"><span class="built_in">sort</span> -k2 -k4 11.txt</span><br></pre></td></tr></table></figure><h3 id="去重复命令—uniq">去重复命令—uniq</h3><table><thead><tr><th>选项</th><th>作用</th></tr></thead><tbody><tr><td>-c</td><td>统计重复次数，并显示</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">uniq</span> [选项]... [文件]...</span><br><span class="line">前提条件：重复行的内容，必须挨着，否则无法去重</span><br><span class="line"><span class="comment">## 无法去重</span></span><br><span class="line">abc</span><br><span class="line">123</span><br><span class="line">abc</span><br><span class="line">123</span><br><span class="line"><span class="comment">## 可以去重</span></span><br><span class="line">abc</span><br><span class="line">abc</span><br><span class="line">123</span><br><span class="line">123</span><br><span class="line"><span class="comment">## 只去重</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> uniq.txt</span><br><span class="line">abc</span><br><span class="line">123</span><br><span class="line">abc</span><br><span class="line">123</span><br><span class="line">[root@localhost ~]# <span class="built_in">sort</span> uniq.txt |<span class="built_in">uniq</span></span><br><span class="line">123</span><br><span class="line">abc</span><br><span class="line"><span class="comment">## 去重并统计重复次数</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">sort</span> uniq.txt|<span class="built_in">uniq</span> -c</span><br><span class="line">2 123</span><br><span class="line">2 abc</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="截取命令—cut">截取命令—cut</h3><table><thead><tr><th>选项</th><th>作用</th></tr></thead><tbody><tr><td>-d</td><td>指定分隔符</td></tr><tr><td>-f</td><td>指定区域</td></tr><tr><td>-n</td><td>指定行</td></tr><tr><td>-c</td><td>按照字符截取</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 语法</span></span><br><span class="line"><span class="built_in">cut</span> OPTION... [FILE]...</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# <span class="built_in">cut</span> -d <span class="string">&#x27; &#x27;</span> -f 6 4.txt  </span><br><span class="line"><span class="comment">#截取以空格为分隔符，第6列内容</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#-f可以截取多段，-f </span></span><br><span class="line">[root@lb01 ~]# ifconfig ens33|grep -w <span class="string">&#x27;inet&#x27;</span>|<span class="built_in">cut</span> -d <span class="string">&#x27; &#x27;</span> -f 10,13</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# <span class="built_in">cut</span> -c 9-10 4.txt</span><br><span class="line"><span class="comment">#截取以字符来算第9-10为内容（需要数字符数，不好用）</span></span><br><span class="line">使用awk命令截取使用示例</span><br><span class="line">[root@lb02 ~]# ip a|awk -F <span class="string">&#x27;[ /]&#x27;</span> <span class="string">&#x27;NR==9&#123;print $6&#125;&#x27;</span></span><br><span class="line">10.0.0.6</span><br><span class="line">注意：</span><br><span class="line">1）<span class="built_in">cut</span>默认没有分隔符，必须指定</span><br></pre></td></tr></table></figure><h3 id="文件统计命令—wc">文件统计命令—wc</h3><table><thead><tr><th>选项</th><th>作用</th></tr></thead><tbody><tr><td>-l</td><td>line 统计行数</td></tr><tr><td>-w</td><td>word 统计单词数量</td></tr><tr><td>-c</td><td>char 统计字符数量</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">wc</span> [option]... file...</span><br><span class="line"><span class="comment">## 统计文件的 行数 单词数 字符数</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">wc</span> /etc/services</span><br><span class="line">11176 61033 670293 /etc/services</span><br><span class="line">[root@localhost ~]# <span class="built_in">wc</span> -l /etc/services</span><br><span class="line">11176 /etc/services</span><br><span class="line">[root@localhost ~]# <span class="built_in">wc</span> -w /etc/services</span><br><span class="line">61033 /etc/services</span><br><span class="line">[root@localhost ~]# <span class="built_in">wc</span> -c /etc/services</span><br><span class="line">670293 /etc/services</span><br><span class="line"><span class="comment">## 需要统计的内容，不是一个文件的内容，左边是一个人命令输出结果可以需要使用管道符</span></span><br><span class="line">[root@localhost ~]# ifconfig |<span class="built_in">wc</span> -w</span><br><span class="line">108</span><br><span class="line">[root@localhost ~]# ip a |<span class="built_in">wc</span> -w</span><br></pre></td></tr></table></figure><h3 id="文件管理命令——替换tr">文件管理命令——替换tr</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## tr只能按照字符 一一对应取替换，如果出现相同的字符，那么后面的赋值会将前面的赋值覆盖</span></span><br><span class="line"><span class="built_in">tr</span> <span class="string">&#x27;被替换的内容&#x27;</span> <span class="string">&#x27;替换内容&#x27;</span> &lt; 文件名</span><br><span class="line">[root@localhost ~]# <span class="built_in">tr</span> <span class="string">&#x27;name&#x27;</span> <span class="string">&#x27;address&#x27;</span> &lt; 2.txt</span><br><span class="line">addr=10.0.0.100</span><br><span class="line">[root@localhost ~]# <span class="built_in">tr</span> <span class="string">&#x27;nameqws&#x27;</span> <span class="string">&#x27;address&#x27;</span> &lt; 2.txt</span><br><span class="line">address=10.0.0.100</span><br><span class="line"><span class="comment">## 语法</span></span><br><span class="line">sed <span class="string">&#x27;s/被替换内容/替换内容/g&#x27;</span> 文件名</span><br><span class="line">[root@localhost ~]# sed <span class="string">&#x27;s///g&#x27;</span> 2.txt</span><br><span class="line">[root@localhost ~]# sed <span class="string">&#x27;s/name/address/g&#x27;</span> 2.txt</span><br><span class="line">address=10.0.0.100</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux敲门 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>08.文件属性</title>
      <link href="/posts/1fbc6f0a.html"/>
      <url>/posts/1fbc6f0a.html</url>
      
        <content type="html"><![CDATA[<div class='wow animate__heartBeat' data-wow-duration='' data-wow-delay='1s' data-wow-offset=''  data-wow-iteration='2' ><div class="note red icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p><a href="https://www.lukeme.top/posts/4c7367cf.html">告别小白，点击直达</a></p></div></div><h3 id="文件的属性">文件的属性</h3><table><thead><tr><th>文件字符类型</th><th>文件类型</th></tr></thead><tbody><tr><td>-</td><td>file 普通文件</td></tr><tr><td>d</td><td>directory 目录</td></tr><tr><td>c</td><td>char 字符设备</td></tr><tr><td>b</td><td>block 块设备</td></tr><tr><td>l</td><td>link 链接文件</td></tr><tr><td>s</td><td>socket 安全 （套接字）文件</td></tr><tr><td>p</td><td>pipe 管道文件</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 文件类型 文件权限r：read 读 w：write 写 x：execute执行 </span></span><br><span class="line">             硬链接数 所属用户 所属用户组 文件大小      时间        文件名</span><br><span class="line">- rw-r--r--.    1     root     root       289    Apr 7 16:40     11.txt</span><br><span class="line">d rwxr-xr-x.    4     root     root       41     Apr 3 18:04     zls</span><br><span class="line"><span class="comment">## 文件类型</span></span><br><span class="line">[root@localhost ~]# ll /dev/null -d</span><br><span class="line">crw-rw-rw-. 1 root root 1, 3 Apr 7 16:21 /dev/null</span><br><span class="line">[root@localhost ~]# ll /dev/sda1</span><br><span class="line">brw-rw----. 1 root disk 8, 1 Apr 7 16:21 /dev/sda1</span><br><span class="line">[root@localhost ~]# ll /run/systemd/initctl/fifo</span><br><span class="line">prw-------. 1 root root 0 Apr 7 16:21 /run/systemd/initctl/fifo</span><br><span class="line">[root@localhost ~]# ll /dev/log</span><br><span class="line">srw-rw-rw-. 1 root root 0 Apr 7 16:21 /dev/log</span><br><span class="line">[root@localhost ~]# ll -d zls/</span><br><span class="line">drwxr-xr-x. 4 root root 41 Apr 3 18:04 zls/</span><br><span class="line">[root@localhost ~]# ll</span><br><span class="line">-rw-r--r--. 1 root root 289 Apr 7 16:40 11.txt</span><br></pre></td></tr></table></figure><h3 id="使用file命令来鉴别文件类型">使用file命令来鉴别文件类型</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# ll *.jpg</span><br><span class="line">-rw-r--r--. 1 root root 20735 Mar 13 09:08 w700d1q75cms.jpg</span><br><span class="line">-rw-r--r--. 1 root root 4 Apr 7 19:50 zls.jpg</span><br><span class="line">[root@localhost ~]# file w700d1q75cms.jpg</span><br><span class="line">w700d1q75cms.jpg: JPEG image data, EXIF standard</span><br><span class="line">[root@localhost ~]# file zls.jpg</span><br><span class="line">zls.jpg: empty</span><br><span class="line">[root@localhost ~]# <span class="built_in">echo</span> 111 &gt; zls.jpg</span><br><span class="line">[root@localhost ~]# file zls.jpg</span><br><span class="line">zls.jpg: ASCII text</span><br><span class="line"><span class="comment">## 查看文件类型</span></span><br><span class="line">[root@localhost ~]# file /dev/null</span><br><span class="line">/dev/null: character special</span><br><span class="line">[root@localhost ~]# file /dev/sda1</span><br><span class="line">/dev/sda1: block special</span><br><span class="line">[root@localhost ~]# file /run/systemd/initctl/fifo</span><br><span class="line">/run/systemd/initctl/fifo: fifo (named pipe)</span><br><span class="line">[root@localhost ~]# file /dev/log</span><br><span class="line">/dev/log: socket</span><br><span class="line">[root@localhost ~]# file /root/zls</span><br><span class="line">/root/zls: directory</span><br><span class="line"><span class="comment">##注意: Linux文件扩展名不代表任何含义, 仅仅是为了运维人员便于识别</span></span><br></pre></td></tr></table></figure><h3 id="系统链接文件">系统链接文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">文件有文件名和数据，在Linux上被分成两个部分：用户数据(user data)与元数据(metadata)</span><br><span class="line"></span><br><span class="line">用户数据：文件数据块(data block),数据块是记录文件真实内容的地方，我们将其称为#Block</span><br><span class="line">元数据：文件的附加属性，例如：文件大小，创建时间，属组，属主等，我们称其为#Inode</span><br><span class="line">在Linux中，inode是文件元数据的一部分，但其并不包含文件名，inode号即索引节点号</span><br><span class="line">文件名仅是为了方便人们的记忆和使用，系统或者程序通过inode号寻找正确的文件数据块。</span><br><span class="line"></span><br><span class="line"><span class="comment">#inode描述</span></span><br><span class="line">在Linux中，inode（索引节点）是文件系统中的一个数据结构，用于存储文件或目录的元数据信息，包括文件类型、权限、所有者、大小、数据块的位置等。它通过一个唯一的标识符来标识文件或目录，并且在文件系统中具有固定的位置。简而言之，inode是文件系统中用于描述文件或目录属性的数据结构。</span><br><span class="line"></span><br><span class="line"><span class="comment">#元数据：用来描述数据的数据</span></span><br><span class="line"><span class="comment">#真实数据：用户产生的数据（文件内容）</span></span><br><span class="line"><span class="comment">#inode:用于存储文件或目录元数据信息的数据结构。</span></span><br><span class="line"><span class="comment">#block:用于存放用户真实数据的部分</span></span><br><span class="line"><span class="built_in">cat</span> 1.txt</span><br><span class="line">aaa</span><br><span class="line">-rw-r--r--. 1 root root   583919 Oct 29 02:33 1.txt  &gt;&gt;==元数据inode</span><br><span class="line">aaa 真实数据   Block</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="文件读取流程">文件读取流程</h3><p><img src="https://cos.lukme.top/Pic/image-20240407164513997.png" alt="image-20240407164513997"></p><h3 id="block介绍">block介绍</h3><p><img src="https://cos.lukme.top/Pic/image-20240407164729805.png" alt="image-20240407164729805"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">block默认大小为4k</span><br><span class="line"></span><br><span class="line"><span class="comment"># 磁盘存储数据会被分为两个部分：</span></span><br><span class="line">一部分存储元数据，存储元数据的部分叫做inode，每个文件都有一个自己的inode号，这个inode号可以理解为文件存储在磁盘上的房间号</span><br><span class="line">一部分存储真实数据，存储真实数据的部分叫做block，一个block默认是4k</span><br><span class="line"></span><br><span class="line"><span class="comment">#  如上图，当存放的一个block不足4k时，再次存新文件不会占用上次不足4k的block</span></span><br></pre></td></tr></table></figure><h3 id="软链接">软链接</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 软链接的创建方式 ln（link）</span></span><br><span class="line">软链接 ==&gt; 符号链接</span><br><span class="line">soft_link symbolic <span class="built_in">link</span></span><br><span class="line"><span class="built_in">ln</span> -s 源文件（要给谁创建快捷方式） 目标文件（快捷方式的位置）</span><br><span class="line">[root@localhost ~]# ll -i zls111 1.txt</span><br><span class="line">16803484 -rw-r--r--. 1 root root 279 Apr 7 17:55 1.txt</span><br><span class="line">16799371 lrwxrwxrwx. 1 root root 11 Apr 7 22:34 zls111 -&gt; /root/1.txt</span><br><span class="line">[root@localhost ~]# <span class="built_in">ln</span> -s /root/1.txt /opt</span><br><span class="line">总结：</span><br><span class="line">1）创建软链接时，直接接一个已存在的目录，以源文件名字来命名新的文件名创建到指定目录下</span><br><span class="line">2）创建软链接时，指定一个目录下的文件，如果该文件不存在，则创建软链接并改名</span><br><span class="line">2）创建软链接时，指定一个目录下的文件，如果该文件存在，则报错，无法创建</span><br><span class="line">[root@localhost ~]# <span class="built_in">ln</span> -s /root/1.txt /tmp/1.txt</span><br><span class="line"><span class="built_in">ln</span>: failed to create symbolic <span class="built_in">link</span> ‘/tmp/1.txt’: File exists</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="硬链接">硬链接</h3><p>若一个 inode 号对应多个文件名，则称这些文件为硬链接。换句话说，硬链接就是同一个文件使用了多 个别名，如下图所示 hard link 就是file的一个别名，他们有共同的 inode</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 创建硬链接方式</span></span><br><span class="line"><span class="built_in">ln</span> 源文件（要给谁创建硬链接） 目标文件（硬链接的位置）</span><br><span class="line">[root@localhost ~]# ll -i</span><br><span class="line">total 24</span><br><span class="line">16797812 lrwxrwxrwx. 1 root root 11 Apr 7 23:35 123 -&gt; /root/1.txt</span><br><span class="line">16797823 -rw-r--r--. 6 root root 4 Apr 7 23:37 1.txt</span><br><span class="line">16797823 -rw-r--r--. 6 root root 4 Apr 7 23:37 abc</span><br><span class="line">16797823 -rw-r--r--. 6 root root 4 Apr 7 23:37 abc1</span><br><span class="line">16797823 -rw-r--r--. 6 root root 4 Apr 7 23:37 abc2</span><br><span class="line">16797823 -rw-r--r--. 6 root root 4 Apr 7 23:37 abc3</span><br><span class="line">16797823 -rw-r--r--. 6 root root 4 Apr 7 23:37 abc4</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20240407201426083.png" alt="image-20240407201426083"></p><h3 id="硬链接和软链接的区别">硬链接和软链接的区别</h3><table><thead><tr><th>区别</th><th>硬链接</th><th>软链接</th></tr></thead><tbody><tr><td>命令</td><td>ln</td><td>ln -s</td></tr><tr><td>inode</td><td>和源文件inode号相同</td><td>和源文件inode号不同</td></tr><tr><td>源文件</td><td>删除源文件不影响链接文件</td><td>删除源文件影响链接文件</td></tr><tr><td>跨分区创建</td><td>不能</td><td>可以</td></tr><tr><td>目录创建</td><td>不能</td><td>可以</td></tr><tr><td>文件类型</td><td>普通文件</td><td>l 链接文件</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看磁盘命令</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">df</span></span><br><span class="line">Filesystem 1K-blocks Used Available Use% Mounted on</span><br><span class="line">/dev/sda3 8913920 1609880 7304040 19% /</span><br><span class="line">devtmpfs 487048 0 487048 0% /dev</span><br><span class="line">tmpfs 497948 0 497948 0% /dev/shm</span><br><span class="line">tmpfs 497948 7748 490200 2% /run</span><br><span class="line">tmpfs 497948 0 497948 0% /sys/fs/cgroup</span><br><span class="line">/dev/sda1 508580 122216 386364 25% /boot</span><br><span class="line">tmpfs 99592 0 99592 0% /run/user/0</span><br><span class="line"><span class="comment"># -h以人类可读的方式显示，磁盘大小加上了单位</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">df</span> -h</span><br><span class="line">Filesystem Size Used Avail Use% Mounted on</span><br><span class="line">/dev/sda3 8.6G 1.6G 7.0G 19% /</span><br><span class="line">devtmpfs 476M 0 476M 0% /dev</span><br><span class="line">tmpfs 487M 0 487M 0% /dev/shm</span><br><span class="line">tmpfs 487M 7.6M 479M 2% /run</span><br><span class="line">tmpfs 487M 0 487M 0% /sys/fs/cgroup</span><br><span class="line">/dev/sda1 497M 120M 378M 25% /boot</span><br><span class="line">tmpfs 98M 0 98M 0% /run/user/0</span><br><span class="line"><span class="comment"># -i 查看inode可用空间</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">df</span> -i</span><br><span class="line">Filesystem Inodes IUsed IFree IUse% Mounted on</span><br><span class="line">/dev/sda3 4462080 34791 4427289 1% /</span><br><span class="line">devtmpfs 121762 380 121382 1% /dev</span><br><span class="line">tmpfs 124487 1 124486 1% /dev/shm</span><br><span class="line">tmpfs 124487 699 123788 1% /run</span><br><span class="line">tmpfs 124487 16 124471 1% /sys/fs/cgroup</span><br><span class="line">/dev/sda1 256000 326 255674 1% /boot</span><br><span class="line">tmpfs 124487 1 124486 1% /run/user/0</span><br><span class="line">[root@localhost ~]# <span class="built_in">df</span> -ih</span><br><span class="line">Filesystem Inodes IUsed IFree IUse% Mounted on</span><br><span class="line">/dev/sda3 4.3M 34K 4.3M 1% /</span><br><span class="line">devtmpfs 119K 380 119K 1% /dev</span><br><span class="line">tmpfs 122K 1 122K 1% /dev/shm</span><br><span class="line">tmpfs 122K 699 121K 1% /run</span><br><span class="line">tmpfs 122K 16 122K 1% /sys/fs/cgroup</span><br><span class="line">/dev/sda1 250K 326 250K 1% /boot</span><br><span class="line">tmpfs 122K 1 122K 1% /run/user/0</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CentOS 6：默认使用的是ext4的文件系统13。</span><br><span class="line">CentOS 7：默认使用的是xfs（eXtended File System）文件系统类型</span><br></pre></td></tr></table></figure><p>当前磁盘空间还剩余500G，但是就无法往里面写入数据，报错，磁盘空间满了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.inode号储存磁盘空间不足</span><br><span class="line">2.block储存用户真实数据磁盘空间不足</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux敲门 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>09.vim编辑器</title>
      <link href="/posts/473690bb.html"/>
      <url>/posts/473690bb.html</url>
      
        <content type="html"><![CDATA[<div class='wow animate__heartBeat' data-wow-duration='' data-wow-delay='1s' data-wow-offset=''  data-wow-iteration='2' ><div class="note red icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p><a href="https://www.lukeme.top/posts/4c7367cf.html">告别小白，点击直达</a></p></div></div><h3 id="VIM文本编辑器">VIM文本编辑器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vi 和 vim 命令是linux中强大的文本编辑器, 由于Linux系统一切皆文件，而配置一个服务就是在修改其</span><br><span class="line">配置文件的参数。</span><br><span class="line">vim 编辑器是运维工程师必须掌握的一个工具, 没有它很多工作都无法完成。</span><br><span class="line">vim 其实是 vi 的升级版</span><br></pre></td></tr></table></figure><h3 id="vim三种工作模式">vim三种工作模式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Vim编辑器中设置了三种模式: 命令模式、编辑模式、末行模式，每种模式分别又支持多种不同的命令快捷键，大大提高了工作效率，而且用户在习惯之后也会觉得相当顺手。要想高效率地操作文本，就必须先搞清这三种模式的操作区别以及模式之间的切换方法。</span><br></pre></td></tr></table></figure><h3 id="命令模式">命令模式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#进行快捷键操作</span></span><br><span class="line"><span class="comment">##光标的跳转</span></span><br><span class="line">Shift + g |G    //将光标跳转到文件最后一行</span><br><span class="line">gg              //将光标跳转到文件的第一行</span><br><span class="line">Ngg   //将光标跳转到指定行(N为阿拉伯数字)</span><br><span class="line">Shift +4 |$    //将光标跳转到当前所在行的行末</span><br><span class="line">Shift +6 |^  |0 // 将光标跳转到当前所在行的行首</span><br><span class="line"><span class="comment">## 复制粘贴</span></span><br><span class="line">yy   //复制光标所在行的整行内容</span><br><span class="line">p(小写p)  //将复制的内容粘贴到光标所在行的下一行</span><br><span class="line">P(大写P)  //将复制的内容粘贴到光标所在行的上一行</span><br><span class="line">Nyy | yNy    //将光标所在行整行内容及下面N-1行内容复制(N为阿拉伯数字)</span><br><span class="line"><span class="comment">## 剪切删除</span></span><br><span class="line"><span class="built_in">dd</span>   // 将光标所在行一整行内容，剪切(删除)</span><br><span class="line">Ndd | dNd    //将光标所在行及下面N-1行内容剪切(N为阿拉伯数字)</span><br><span class="line">Shift + d|D// 将光标所在字符及后面整行内容剪切(删除)</span><br><span class="line">x   // 删除当前光标所在字符</span><br><span class="line">Shift +x|X    //将光标所在当前字符的前一个字符删除</span><br><span class="line">d+<span class="built_in">shift</span> +g|dG  //将光标所在行及后面所有行内容删除</span><br><span class="line"><span class="comment">## 撤销回滚替换</span></span><br><span class="line">U        // 撤销上一次操作</span><br><span class="line">Ctrl + r//恢复上一次撤销的操作</span><br><span class="line">r// 替换光标当前所在的一个字符</span><br><span class="line">Shift +r |R//从光标所在字符开始进行替换直到按ESC结束</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 翻页</span></span><br><span class="line">Ctrl + b // 向前翻页</span><br><span class="line">Ctrl + f // 向后翻页</span><br></pre></td></tr></table></figure><h3 id="编辑模式">编辑模式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">-- INSERT --</span><br><span class="line">像正常的Windows文本编辑器一样，可以随意写入内容</span><br><span class="line"><span class="comment">## 从命令模式如何进入编辑模式</span></span><br><span class="line">i // 在光标所在位置进入编辑模式（输入内容在光标之前）</span><br><span class="line">I // 将光标跳转到光标所在行的行首并进入编辑模式（输入内容在光标之前）</span><br><span class="line">a // 将光标跳转到光标所在字符的后一个字符并进入编辑模式（输入内容在光标之前）</span><br><span class="line">A // 将光标跳转到光标所在行的行末并进入编辑模式（输入内容在光标之前）</span><br><span class="line">s // 将光标所在字符删除并进入编辑模式（输入内容在光标之前）</span><br><span class="line">S // 将光标所在行的整行内容删除并进入编辑模式</span><br><span class="line">o // 将光标移动到当前所在行的下一行并进入编辑模式</span><br><span class="line">O // 将光标移动到光标所在行的上一行并进入编辑模式</span><br><span class="line"><span class="comment">## 从编辑模式返回命令模式</span></span><br><span class="line">ESC</span><br></pre></td></tr></table></figure><h3 id="末行模式（底行模式）–保持退出">末行模式（底行模式）–保持退出</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在编辑器的左下角进行操作</span></span><br><span class="line">显示行号、搜索、替换、保存、退出 ...</span><br><span class="line"><span class="comment"># 进入末行模式的方法</span></span><br><span class="line">1）在命令模式下，输入冒号</span><br><span class="line">2）在命令模式下，输入/</span><br><span class="line"><span class="comment">## 保存退出</span></span><br><span class="line">w：write写入（保存</span><br><span class="line">q：quit退出</span><br><span class="line">:w // 只保存但是不退出</span><br><span class="line">:q // 退出但不保存 （没有改内容）</span><br><span class="line">:wq // 保存退出 快捷键 Shift + zz | ZZ</span><br><span class="line">:x // 保存退出 和:wq相等</span><br><span class="line">:q! // 强制退出</span><br><span class="line">:w! // 强制保存</span><br><span class="line">:wq! // 强制保存并退出</span><br><span class="line"><span class="comment">########### 错误 ###########</span></span><br><span class="line">:qw // 错误写法，先退出后保存</span><br><span class="line">E37: No write since last change (add ! to override) // 文件写入内容，没有保存，无法直接退出，除非强制退出</span><br><span class="line">E45: <span class="string">&#x27;readonly&#x27;</span> option is <span class="built_in">set</span> (add ! to override) // 只读文件，无法保存退出，只有root用户可以强制保存退出</span><br><span class="line">E212: Unable to open and write files // 文件无法写入</span><br><span class="line">E212: Can<span class="string">&#x27;t open file for writing // 文件无法写入，出现原因：1.没有写入权限2.文件写入到一个不存在的目录中</span></span><br></pre></td></tr></table></figure><h3 id="末行模式—搜索">末行模式—搜索</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/想要搜索的内容</span><br><span class="line">n：下翻，查找下一个</span><br><span class="line">N：上翻，查找上一个</span><br></pre></td></tr></table></figure><h3 id="末行模式—替换">末行模式—替换</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">:%s#要被替换的内容#替换的内容#g</span><br><span class="line">%：所有行</span><br><span class="line">s：search 搜索</span><br><span class="line">g：全局替换</span><br></pre></td></tr></table></figure><h3 id="末行模式—光标跳转及命令">末行模式—光标跳转及命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 显示行号</span></span><br><span class="line">:<span class="built_in">set</span> number 简写 :<span class="built_in">set</span> nu</span><br><span class="line"><span class="comment">## 取消显示行号</span></span><br><span class="line">:<span class="built_in">set</span> nonumber 简写 :<span class="built_in">set</span> nonu</span><br><span class="line"><span class="comment">## 光标跳转到指定行</span></span><br><span class="line">:N (N为阿拉伯数字)</span><br><span class="line"><span class="comment">## 忽略大小写</span></span><br><span class="line">:<span class="built_in">set</span> ic</span><br><span class="line"><span class="comment">## 取消忽略大小写</span></span><br><span class="line">:<span class="built_in">set</span> noic</span><br><span class="line"><span class="comment">## 自动缩进</span></span><br><span class="line">:<span class="built_in">set</span> ai</span><br><span class="line"><span class="comment">## 取消自动缩进</span></span><br><span class="line">:<span class="built_in">set</span> noai</span><br><span class="line"><span class="comment">## 显示制表符，结束符...</span></span><br><span class="line">:<span class="built_in">set</span> list</span><br><span class="line"><span class="comment">## 取消</span></span><br><span class="line">:<span class="built_in">set</span> nolist</span><br><span class="line"><span class="comment">## 设置环境变量 在当前登录用户的家目录下 创建一个 .vimrc</span></span><br><span class="line"><span class="built_in">set</span> fenc=utf-8</span><br><span class="line"><span class="built_in">set</span> fencs=utf-8,usc-bom,euc-jp,gb18030,gbk,gb2312,cp936</span><br><span class="line"><span class="built_in">set</span> number</span><br><span class="line"><span class="built_in">set</span> autoindent</span><br><span class="line"><span class="built_in">set</span> smartindent</span><br><span class="line"><span class="built_in">set</span> tabstop=4</span><br><span class="line"><span class="built_in">set</span> shiftwidth=4</span><br><span class="line"><span class="built_in">set</span> ruler</span><br><span class="line"><span class="built_in">set</span> incsearch</span><br><span class="line"><span class="built_in">set</span> showmatch</span><br><span class="line"><span class="built_in">set</span> matchtime=10</span><br><span class="line"><span class="built_in">set</span> ignorecase</span><br><span class="line"><span class="built_in">set</span> cursorline</span><br><span class="line"><span class="built_in">set</span> t_Co=256</span><br><span class="line"><span class="comment">#设定默认解码</span></span><br><span class="line"><span class="built_in">set</span>?fenc=utf-8?</span><br><span class="line"><span class="built_in">set</span>?fencs=utf-8,usc-bom,euc-jp,gb18030,gbk,gb2312,cp936</span><br><span class="line"><span class="comment">#显示行号</span></span><br><span class="line"><span class="built_in">set</span> number</span><br><span class="line"><span class="comment">#vim使用自动对齐，也就是把当前行的对齐格式应用到下一行</span></span><br><span class="line"><span class="built_in">set</span> autoindent </span><br><span class="line"><span class="comment">#依据上面的对齐格式，智能的选择对齐方式</span></span><br><span class="line"><span class="built_in">set</span> smartindent </span><br><span class="line"><span class="comment">#设置tab键为4个空格</span></span><br><span class="line"><span class="built_in">set</span> tabstop=4</span><br><span class="line"><span class="comment">#设置当行之间交错时使用4个空格</span></span><br><span class="line"><span class="built_in">set</span> shiftwidth=4</span><br><span class="line"><span class="comment">#设置在编辑过程中,于右下角显示光标位置的状态行</span></span><br><span class="line"><span class="built_in">set</span> ruler</span><br><span class="line"><span class="comment">#设置增量搜索,这样的查询比较smart</span></span><br><span class="line"><span class="built_in">set</span> incsearch </span><br><span class="line"><span class="comment">#高亮显示匹配的括号</span></span><br><span class="line"><span class="built_in">set</span> showmatch </span><br><span class="line"><span class="comment">#匹配括号高亮时间(单位为 1/10 s)</span></span><br><span class="line"><span class="built_in">set</span> matchtime=10 </span><br><span class="line"><span class="comment">#在搜索的时候忽略大小写</span></span><br><span class="line"><span class="built_in">set</span> ignorecase </span><br><span class="line"><span class="comment">#禁止生成临时</span></span><br><span class="line"><span class="comment">#set nobackup </span></span><br><span class="line"><span class="comment">#当前行高亮</span></span><br><span class="line"><span class="built_in">set</span> cursorline </span><br><span class="line"><span class="comment">#支持256色</span></span><br><span class="line"><span class="built_in">set</span> t_Co=256</span><br></pre></td></tr></table></figure><h3 id="vim编辑器写入流程">vim编辑器写入流程</h3><p><img src="C:%5CUsers%5CDell%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Caaa.jpg" alt="aaa"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">当我们在使用vim编辑文件时</span><br><span class="line">1）首先会在源文件目录下生成一个.swp的临时文件</span><br><span class="line">2）如果vim非正常退出的情况下，该临时文件一直存在</span><br><span class="line">3）下一次编辑则会提示</span><br><span class="line">[O]pen Read-Only, (E)dit anyway, (R)ecover, (Q)uit, (A)bort:</span><br><span class="line">只读模式打开 继续编辑 覆盖 退出</span><br><span class="line">解决方案：</span><br><span class="line">1）查看modified状态 如果是<span class="built_in">yes</span>，则需要覆盖源文件</span><br><span class="line">- vim -r /etc/sysconfig/network-scripts/ifcfg-ens33</span><br><span class="line">- vim /etc/sysconfig/network-scripts/ifcfg-ens3</span><br><span class="line">(R)ecover 按 r</span><br><span class="line">2）删除.swp临时文件即可</span><br><span class="line"><span class="built_in">rm</span> -f /etc/sysconfig/network-scripts/.ifcfg-ens33.swp</span><br><span class="line">1）查看modified状态 如果是no，则需要覆盖源文件</span><br><span class="line">(Q)uit 按q退出</span><br><span class="line">2）直接删除.swp临时文件</span><br><span class="line"><span class="built_in">rm</span> -f /etc/sysconfig/network-scripts/.ifcfg-ens33.swp</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="视图模式（命令模式）">视图模式（命令模式）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">块视图模式 -- VISUAL BLOCK -- Ctrl + v</span><br><span class="line"><span class="comment"># 批量注释</span></span><br><span class="line">1）Ctrl + v 进入块视图模式</span><br><span class="line">2）按键盘的上下左右，选中想要的内容</span><br><span class="line">3）如果是在行前加入内容，Shift + i</span><br><span class="line">4）如果是在行后加入内容，Shift + a</span><br><span class="line">5）输入想要的内容后，返回命令模式（ESC）</span><br><span class="line">行视图模式 -- VISUAL LINE -- Shit + v</span><br></pre></td></tr></table></figure><h3 id="vim扩展知识">vim扩展知识</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 编辑文件直接跳转到指定行</span></span><br><span class="line">[root@localhost ~]# vim +N 1.txt // N为阿拉伯数字</span><br><span class="line">[root@localhost ~]# vim +3 1.txt</span><br><span class="line"><span class="comment">## 对比文件不同之处</span></span><br><span class="line">[root@localhost ~]# vimdiff 1.txt 2.txt</span><br><span class="line">[root@localhost ~]# diff 1.txt 3.txt</span><br><span class="line">3,6c3,6</span><br><span class="line">&lt; http://pxost.baidu.com/index.html</span><br><span class="line">&lt; http://mp3.baiadu.com/index.html</span><br><span class="line">&lt; http://www.baidu.com/3.html</span><br><span class="line">&lt; http://post.baidxu.com/2.html</span><br><span class="line">---</span><br><span class="line">&gt; http:aaaaa//pxost.baidu.com/index.html</span><br><span class="line">&gt; http://mp3xxx.baiadu.com/index.html</span><br><span class="line">&gt; http://www.baxxidu.com/3.html</span><br><span class="line">&gt; http://post.baixxdxu.com/2.html</span><br><span class="line"><span class="comment">## 同时编辑多个文件 （使用Ctrl + ww 进行切换）</span></span><br><span class="line">[root@localhost ~]# vim -o 1.txt 2.txt // 水平拆分</span><br><span class="line">[root@localhost ~]# vim -O 1.txt 2.txt // 垂直拆分</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux敲门 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>03.系统命令</title>
      <link href="/posts/f8f45c19.html"/>
      <url>/posts/f8f45c19.html</url>
      
        <content type="html"><![CDATA[<div class='wow animate__heartBeat' data-wow-duration='' data-wow-delay='1s' data-wow-offset=''  data-wow-iteration='2' ><div class="note red icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p><a href="https://www.lukeme.top/posts/4c7367cf.html">告别小白，点击直达</a></p></div></div><h3 id="用户管理">用户管理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##Linux下的用户有什么作用</span></span><br><span class="line">1）系统上的每一个进程(运行的程序)都需要特定的用户运行</span><br><span class="line">2）每一个文件都有特定的用户拥有，所以访问一个文件或目录受到用户的限制</span><br><span class="line">3）进程能够以何种方式访问某一个文件或目录, 与进程所关联的用户有关</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20240409145014306.png" alt="image-20240409145014306"></p><h3 id="用户相关查看命令">用户相关查看命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 语法</span></span><br><span class="line"><span class="built_in">id</span> [option] [user]</span><br><span class="line"><span class="built_in">id</span> [选项] [用户名]</span><br><span class="line">[root@localhost ~]# <span class="built_in">id</span></span><br><span class="line">uid=0(root) gid=0(root) <span class="built_in">groups</span>=0(root)</span><br><span class="line">uid：user <span class="built_in">id</span>号</span><br><span class="line">gid：group <span class="built_in">id</span>号</span><br><span class="line"><span class="built_in">groups</span>：组名</span><br><span class="line"><span class="comment">## 只显示uid</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">id</span> -u root</span><br><span class="line">0</span><br><span class="line"><span class="comment">## 只显示gid</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">id</span> -g root</span><br><span class="line">0</span><br><span class="line">系统只认uid，用户名是给运维人员看的</span><br><span class="line">在Linux系统中，uid为0的用户才是超级用户</span><br><span class="line"><span class="comment">## 查看用户登录哪个终端，登录时间   who</span></span><br><span class="line">root     tty1         2024-04-09 14:54</span><br><span class="line">root     pts/0        2024-04-09 11:09 (10.0.0.1)</span><br><span class="line">root     pts/1        2024-04-09 11:33 (10.0.0.1)</span><br><span class="line"><span class="built_in">tty</span>代表的是服务器终端登录</span><br><span class="line">pts代表的是远程链接工具登录</span><br><span class="line">[root@localhost ~]# <span class="built_in">whoami</span><span class="comment">## 查看当前登录的用户名</span></span><br><span class="line">root</span><br><span class="line"><span class="comment">## 查看用户信息文件</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> /etc/passwd</span><br></pre></td></tr></table></figure><h3 id="用户信息文件-etc-passwd">用户信息文件 /etc/passwd</h3><p><img src="https://cos.lukme.top/Pic/image-20240409145743758.png" alt="image-20240409145743758"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 以冒号为分隔符的情况下，文件被分为7列</span></span><br><span class="line">[root@lb02 ~]# <span class="built_in">cat</span> /etc/passwd</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line">lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br><span class="line"><span class="built_in">sync</span>:x:5:0:<span class="built_in">sync</span>:/sbin:/bin/sync</span><br><span class="line"></span><br><span class="line">[zls@localhost ~]# useradd wyl -c <span class="string">&#x27;abc&#x27;</span>  添加备注</span><br><span class="line"></span><br><span class="line">第一列：用户名</span><br><span class="line">第二列：密码占位符</span><br><span class="line">第三列：用户的uid</span><br><span class="line">第四列：用户所在组的gid</span><br><span class="line">第五列：用户的描述信息（备注、注释）</span><br><span class="line">第六列：用户家目录所在路径</span><br><span class="line">第七列：用户登录使用的bash</span><br><span class="line"><span class="comment">##  /sbin/nologin 不允许登录的用户 bash</span></span><br></pre></td></tr></table></figure><h3 id="用户密码存放文件-etc-shadow">用户密码存放文件/etc/shadow</h3><p><img src="https://cos.lukme.top/Pic/image-20240409150039322.png" alt="image-20240409150039322"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">daemon:*:17834:0:99999:7:2:6627567:</span><br><span class="line">第一列：用户名</span><br><span class="line">第二列：密码   *和!! 代表没有密码</span><br><span class="line">第三列：密码修改的时间 从1970年开始计算到上一次变更密码的时间过了多少天</span><br><span class="line">第四列：密码最少使用天数 0代表无限制</span><br><span class="line">第五列：密码最长使用天数 99999代表无限制</span><br><span class="line">第六列：密码到期之前多少天开始提醒 提前7天提醒需要改密码了</span><br><span class="line">第七列：密码过期后N天强制变更密码 密码过期后2天，强制改密码</span><br><span class="line">第八列：账户失效时间，从1970年开始计算多少天</span><br><span class="line">第九列：空 保留列</span><br></pre></td></tr></table></figure><p>练习创建1000个用户，密码都为1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;1&#x27;</span> |passwd --stdin lgj</span><br><span class="line"></span><br><span class="line">；分号可以衔接多个命令执行，</span><br><span class="line">&amp;&amp;衔接多个命令，但是需要判断前面的命令执行成功后，再执行后面的命令</span><br><span class="line"><span class="comment">#衔接命令</span></span><br><span class="line">useradd lgj1;<span class="built_in">echo</span> <span class="string">&quot;1&quot;</span> | passwd --stdin lgj1  ==&gt;;分号两边分别执行结果</span><br><span class="line"></span><br><span class="line">[root@lb01 ~]# <span class="built_in">seq</span> 1000|awk <span class="string">&#x27;&#123;print &quot;useradd lgj&quot;$1&quot;;echo 1|passwd --stdin lgj&quot;$1&#125;&#x27;</span>|bash</span><br><span class="line"></span><br><span class="line"><span class="comment">#脚本</span></span><br><span class="line">vim useradd.sh</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;1..1000&#125;; <span class="keyword">do</span></span><br><span class="line">  username=<span class="string">&quot;lgj<span class="variable">$i</span>&quot;</span></span><br><span class="line">  useradd <span class="variable">$username</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;1&quot;</span> | passwd --stdin <span class="variable">$username</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">运行sh文件</span><br><span class="line">sh useradd.sh &gt; /dev/null</span><br></pre></td></tr></table></figure><h3 id="Linux系统中用户的约定和规范">Linux系统中用户的约定和规范</h3><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">centOS7</th><th style="text-align:center"></th><th style="text-align:center">centOS7</th></tr></thead><tbody><tr><td style="text-align:center">用户UID</td><td style="text-align:center">作用</td><td style="text-align:center">用户UID</td><td style="text-align:center">作用</td></tr><tr><td style="text-align:center">0</td><td style="text-align:center">系统管理员（超级用户）</td><td style="text-align:center">0</td><td style="text-align:center">系统管理员（超级用户）</td></tr><tr><td style="text-align:center">1-200</td><td style="text-align:center">系统用户，由系统分配给进程使用</td><td style="text-align:center">1-500</td><td style="text-align:center">系统用户，由系统分配给进程使用运行服务，不需要登录系统</td></tr><tr><td style="text-align:center">201-999</td><td style="text-align:center">系统用户，运行服务，不需要登录系统</td><td style="text-align:center">500+</td><td style="text-align:center">常规的普通用户</td></tr><tr><td style="text-align:center">1000+</td><td style="text-align:center">常规的普通用户</td><td style="text-align:center"><strong>/</strong></td><td style="text-align:center"><strong>/</strong></td></tr></tbody></table><h3 id="修改用户密码相关信息-chage-（了解）">修改用户密码相关信息 chage   （了解）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">bin:*:17834:0:99999:7:10::</span><br><span class="line">-d //设置最近一次更改密码时间, 0下次登陆系统强制修改密码 // /etc/shadow 第三列</span><br><span class="line">-m //设置用户两次改变密码之间使用<span class="string">&quot;最小天数&quot;</span> // /etc/shadow 第四列</span><br><span class="line">-M //设置用户两次改变密码之间使用<span class="string">&quot;最大天数&quot;</span> // /etc/shadow 第五列</span><br><span class="line">-W //设置密码更改警告时间 将过期警告天数设为“警告天数” // /etc/shadow 第六列</span><br><span class="line">-I //设置密码过期天数后, 密码为失效状态 // /etc/shadow 第七列</span><br><span class="line">-E //设置用户过期时间, 账户失效后无法登陆 // /etc/shadow 第八列</span><br><span class="line">-l //显示用户信息</span><br><span class="line">[root@lgj ~]# chage -l lgj</span><br><span class="line">Last password change : Sep 01, 2014    //最近一次更改密码时间</span><br><span class="line">Password expires : Sep 16, 2014    //密码过期时间</span><br><span class="line">Password inactive : Sep 21, 2014    //密码失效时间</span><br><span class="line">Account expires : Aug 31, 2015   //用户失效时间</span><br><span class="line">Minimum number of days between password change : 2 //密码最短使用时间</span><br><span class="line">Maximum number of days between password change : 15 //密码最长使用时间</span><br><span class="line">Number of days of warning before password expires : 7 //密码过期前警告天数</span><br></pre></td></tr></table></figure><h3 id="用户相关命令–创建用户（增）">用户相关命令–创建用户（增）</h3><table><thead><tr><th style="text-align:center">选项</th><th>作用</th></tr></thead><tbody><tr><td style="text-align:center">-u</td><td>指定uid</td></tr><tr><td style="text-align:center">-g</td><td>指定gid（必须指定一个已存在的组）</td></tr><tr><td style="text-align:center">-c</td><td>指定用户的备注（注释）</td></tr><tr><td style="text-align:center">-d</td><td>指定用户的家目录</td></tr><tr><td style="text-align:center">-M</td><td>不创建家目录</td></tr><tr><td style="text-align:center">-s</td><td>指定用户登录的shell</td></tr><tr><td style="text-align:center">-G</td><td>指定附加组</td></tr><tr><td style="text-align:center">-r</td><td>创建一个用户uid在200 - 999之间</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">使用useradd创建用户将影响到四个文件</span><br><span class="line">/etc/passwd存放用户名等信息</span><br><span class="line">/etc/shadow存放密码等信息</span><br><span class="line">/etc/group存放组信息</span><br><span class="line">/etc/gshadow存放组密码信息</span><br><span class="line"></span><br><span class="line">如果手动创建用户不使用命令，需要分别在1./etc/passwd  2./etc/shadow  3./etc/group  4./etc/gshadow创建用户名组等信息，5.创建用户名的家目录6.拷贝环境变量文件<span class="built_in">cp</span> /etc/skel/.bash* /home/abc111/</span><br><span class="line"></span><br><span class="line"><span class="comment">##创建用户命令 useradd</span></span><br><span class="line">useradd [选项]... 用户名</span><br><span class="line"></span><br><span class="line">创建用户名是lgj2 uid1004 用户组1001 备注-c是高杰大大   <span class="comment">#//其中-g指定gid需要指定已经存在的uid</span></span><br><span class="line">[root@lb01 ~]# useradd -u 1004 -g 1001 -c 高杰大大 lgj2</span><br><span class="line"></span><br><span class="line">-d创建用户lgj6并指定家目录（如果指定的家目录已经存在，如指定aaa（存在）为家目录，会报错目录家目录已经存在，但是还是会创建有lgj6用户，但是没有环境变量）</span><br><span class="line">[root@lb01 ~]# useradd lgj6 -d /root/aaa/lgj666</span><br><span class="line">[root@lb01 ~]# useradd lgj7 -M   不创建家目录</span><br><span class="line"></span><br><span class="line"><span class="comment">## 指定用户附加组</span></span><br><span class="line">[root@lb01 ~]# useradd lgj7 -G 1001,1005</span><br><span class="line">[root@lb01 ~]# useradd lgj8 -G lgj,lgj5    同样指定的组需要已存在</span><br><span class="line">[root@lb01 ~]# <span class="built_in">id</span> lgj7</span><br><span class="line">uid=1007(lgj7) gid=1007(lgj7) <span class="built_in">groups</span>=1007(lgj7),1001(lgj),1005(lgj5)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="用户相关命令–修改用户信息（改）">用户相关命令–修改用户信息（改）</h3><table><thead><tr><th>用户</th><th>作用</th></tr></thead><tbody><tr><td>-u</td><td>指定用户的uid</td></tr><tr><td>-g</td><td>指定用户的gid，更换用户所在的主组（指定的组必须存在）</td></tr><tr><td>-c</td><td>修改备注信息</td></tr><tr><td>-d</td><td>修改用户家目录，修改/etc/passwd文件内容</td></tr><tr><td>-m</td><td>配合-d选项，修改完家目录后，迁移家目录</td></tr><tr><td>-s</td><td>修改用户登录的shell</td></tr><tr><td>-G</td><td>修改用户的附加组，会替换原来的附加组</td></tr><tr><td>-a</td><td>修改用户的附加组，配合-G使用，追加附加组</td></tr><tr><td>-L</td><td>锁定用户（封号）</td></tr><tr><td>-U</td><td>解锁用户（解封）</td></tr><tr><td>-l</td><td>修改用户名</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## user modify</span></span><br><span class="line">usermod [选项]... 用户名</span><br><span class="line"></span><br><span class="line">修改用户lgj2的uid为1002，gid为1000，备注信息是你好   <span class="comment">#指定的gid需要已存在</span></span><br><span class="line">[root@lb01 ~]# usermod  lgj2 -u 1002 -g 1000 -c 你好 </span><br><span class="line"></span><br><span class="line"><span class="comment">## 修改用户家目录 注意：不能只使用-d</span></span><br><span class="line">[root@localhost ~]# usermod zls000 -d /home/zls000家目录下的环境变量不会迁移过去</span><br><span class="line">[root@localhost ~]# usermod zls66 -m -d /opt/zls666   需要配合-m使用</span><br><span class="line"></span><br><span class="line">如果lgj2主要组不在lgj2里（通过usermod修改了），那么使用userdel删除用户的时候lgj2用户组不会被删除，会提醒lgj2用户的现在用户组不是lgj2的主要组</span><br><span class="line"></span><br><span class="line">[root@lb01 ~]# usermod lgj -G 0   修改lgj的附加组（覆盖原有的）</span><br><span class="line">[root@lb01 ~]# usermod lgj -aG 100，110   修改lgj的附加组（追加用户组）</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改用户登录的shell</span></span><br><span class="line">[root@lb01 ~]# usermod lgj -s /sbin/nologin</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#修改用户名</span></span><br><span class="line">[root@lb01 ~]# usermod lgj1 -l lgj2  </span><br><span class="line">如果修改完将提醒旧的邮箱lgj1将不属于lgj1用户了，var/spool/mail/</span><br></pre></td></tr></table></figure><h3 id="用户相关命令–删除用户（删）">用户相关命令–删除用户（删）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># user delete</span></span><br><span class="line">userdel [选项]... 用户名</span><br><span class="line"><span class="comment">## 直接删除用户，类似于在/etc/passwd文件中把该用户行信息删除（家目录还在和所有用户相关文件都在）</span></span><br><span class="line">[root@localhost ~]# userdel abd</span><br><span class="line"><span class="comment">## 递归删除用户及用户所有相关文件</span></span><br><span class="line">[root@localhost ~]# userdel -r wyl</span><br><span class="line"></span><br><span class="line"><span class="comment">## 因为用户创建时没有创建家目录，所以会有提示，但是用户实际上还是被删除了</span></span><br><span class="line">[root@localhost ~]# userdel -r zls888</span><br><span class="line">userdel: zls888 home directory (/home/zls888) not found</span><br></pre></td></tr></table></figure><hr><h3 id="用户扩展知识">用户扩展知识</h3><p>创建用户时候会以下两个文件作为参照物</p><p>/etc/login.defs</p><p>/etc/defaults/useradd</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 创建用户时，useradd命令需要读取的配置文件</span></span><br><span class="line">过滤不需要的空行</span><br><span class="line">[root@localhost ~]# grep -i <span class="string">&#x27;^[a-z]&#x27;</span> /etc/login.defs </span><br><span class="line">[root@localhost ~]# grep -Ev <span class="string">&#x27;^$|^#&#x27;</span> /etc/login.defs</span><br><span class="line"><span class="comment">## 用户存放邮件的目录</span></span><br><span class="line">MAIL_DIR/var/spool/mail</span><br><span class="line"><span class="comment">## 用户默认密码最长使用天数</span></span><br><span class="line">PASS_MAX_DAYS 99999</span><br><span class="line"><span class="comment">## 用户默认密码最短使用天数</span></span><br><span class="line">PASS_MIN_DAYS 0</span><br><span class="line"><span class="comment">## 密码最小长度5位数</span></span><br><span class="line">PASS_MIN_LEN 5</span><br><span class="line"><span class="comment">## 密码快过期后，提前7天提醒</span></span><br><span class="line">PASS_WARN_AGE 7</span><br><span class="line"><span class="comment">## 普通用户最小UID</span></span><br><span class="line">UID_MIN 1000</span><br><span class="line"><span class="comment">## 普通用户最大UID</span></span><br><span class="line">UID_MAX 60000</span><br><span class="line"><span class="comment">## 系统用户最小UID</span></span><br><span class="line">SYS_UID_MIN 201</span><br><span class="line"><span class="comment">## 系统用户最大UID</span></span><br><span class="line">SYS_UID_MAX 999</span><br><span class="line"><span class="comment">## 组最小ID</span></span><br><span class="line">GID_MIN 1000</span><br><span class="line"><span class="comment">## 组最大ID</span></span><br><span class="line">GID_MAX 60000</span><br><span class="line"><span class="comment">## 系统组最小ID</span></span><br><span class="line">SYS_GID_MIN 201</span><br><span class="line"><span class="comment">## 系统组最大ID</span></span><br><span class="line">SYS_GID_MAX 999</span><br><span class="line"><span class="comment">## 默认情况下，创建用户会创建该用户的家目录</span></span><br><span class="line">CREATE_HOME <span class="built_in">yes</span></span><br><span class="line"><span class="comment">## 创建用户家目录时，权限的umask为077，也就是用户家目录的目录权限为700</span></span><br><span class="line">UMASK 077</span><br><span class="line"><span class="comment">## 创建用户时，是否创建出用户的同名组 yes：创建 no：不创建</span></span><br><span class="line">USERGROUPS_ENAB <span class="built_in">yes</span></span><br><span class="line"><span class="comment">## 用户密码的加密算法</span></span><br><span class="line">ENCRYPT_METHOD SHA512</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 创建用户时，useradd命令需要读取的配置文件</span></span><br><span class="line">[root@localhost ~] <span class="built_in">cat</span> /etc/default/useradd</span><br><span class="line"><span class="comment">## 如果/etc/login.defs 中的USERGROUPS_ENAB是yes，那就不读取改行配置</span></span><br><span class="line"><span class="comment">## 如果/etc/login.defs 中的USERGROUPS_ENAB是no，那就走该行配置，把创建的用户加入gid为100的组</span></span><br><span class="line">GROUP=100</span><br><span class="line"><span class="comment">## 创建用户时，默认用户家目录放在/home下</span></span><br><span class="line">HOME=/home</span><br><span class="line"><span class="comment">## 用户账户有没有期限 -1表示不启用</span></span><br><span class="line">INACTIVE=-1</span><br><span class="line"><span class="comment">## 账号终止日期，不设置表示不启用</span></span><br><span class="line">EXPIRE=</span><br><span class="line"><span class="comment">## 用户登录时的shell</span></span><br><span class="line">SHELL=/bin/bash</span><br><span class="line"><span class="comment">## 用户家目录下的环境变量文件存放原始目录</span></span><br><span class="line">SKEL=/etc/skel</span><br><span class="line"><span class="comment">## 创建用户是否同时创建邮箱</span></span><br><span class="line">CREATE_MAIL_SPOOL=<span class="built_in">yes</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux敲门 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>11.用户组管理</title>
      <link href="/posts/17033fe9.html"/>
      <url>/posts/17033fe9.html</url>
      
        <content type="html"><![CDATA[<div class='wow animate__heartBeat' data-wow-duration='' data-wow-delay='1s' data-wow-offset=''  data-wow-iteration='2' ><div class="note red icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p><a href="https://www.lukeme.top/posts/4c7367cf.html">告别小白，点击直达</a></p></div></div><h3 id="用户密码管理">用户密码管理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">passwd 用户名</span><br><span class="line"><span class="comment">## 默认修改当前登录用户的密码</span></span><br><span class="line">[root@localhost ~]# passwd</span><br><span class="line"><span class="comment">## 该命令只有超级用户可以执行</span></span><br><span class="line">[root@localhost ~]# passwd zls</span><br><span class="line"><span class="comment">## 普通用户只能修改自己的密码</span></span><br><span class="line">[zls@localhost ~]$ passwd</span><br><span class="line">Changing password <span class="keyword">for</span> user zls.</span><br><span class="line">Changing password <span class="keyword">for</span> zls.</span><br><span class="line">(current) UNIX password:</span><br><span class="line">原密码：</span><br><span class="line">新密码：</span><br><span class="line">确认密码：</span><br><span class="line"></span><br><span class="line"><span class="comment">## 免交互改密码</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;密码&#x27;</span>|passwd --stdin 用户名</span><br><span class="line">CMDB：资产管理系统</span><br><span class="line"></span><br><span class="line"><span class="comment">## 生成随机密码</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">echo</span> <span class="variable">$RANDOM</span>|<span class="built_in">md5sum</span>|<span class="built_in">cut</span> -c <span class="string">&#x27;1-10&#x27;</span></span><br><span class="line">be1e4bbb9b</span><br><span class="line">md5：校验文件完整性</span><br><span class="line"><span class="built_in">md5sum</span>：可以给一个字符串生成一段加密后的字符串</span><br><span class="line"><span class="comment"># -l：指定密码总长度</span></span><br><span class="line"><span class="comment"># -d：指定数字的个数</span></span><br><span class="line"><span class="comment"># -c：指定小写字母个数</span></span><br><span class="line"><span class="comment"># -C：指定大写字母个数</span></span><br><span class="line"><span class="comment"># -s：指定特殊符号个数</span></span><br><span class="line">[root@localhost ~]# mkpasswd -l 24 -d 3 -c 6 -C 7 -s 8</span><br><span class="line">%t[.xl5&amp;74<span class="string">&quot;LP&#x27;inQPr+_PWY</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><h3 id="用户组管理（简单了解）">用户组管理（简单了解）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##相关文件</span></span><br><span class="line">/etc/group</span><br><span class="line">/etc/gshadow</span><br><span class="line"><span class="comment">#group每列作用</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">head</span> -1 /etc/group</span><br><span class="line">root:x:0:zls444444,zls666</span><br><span class="line">第一列：组名</span><br><span class="line">第二列：组密码占位符</span><br><span class="line">第三列：组GID</span><br><span class="line">第四列：组中的附加成员</span><br><span class="line"></span><br><span class="line"><span class="comment">#gshadow每列作用</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">head</span> -1 /etc/gshadow</span><br><span class="line">root:::zls444444,zls666</span><br><span class="line">root:$6<span class="variable">$q0sHS</span>/5GA2D/ARX<span class="variable">$KlEkprHkTddlN9tTej7</span>/ONeMswVmIFASVnhTQMfwN.ue2hDTmqlqXhiM</span><br><span class="line">b6oBz8vDCQ/zBzDU2gS88j3pNoIXO.::zls444444,zls666</span><br><span class="line">第一列：组名</span><br><span class="line">第二列：组密码</span><br><span class="line">第三列：组管理员</span><br><span class="line">第四列：组中的附加成员</span><br></pre></td></tr></table></figure><h3 id="组相关命令">组相关命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#增</span></span><br><span class="line">groupadd [选项] 组名</span><br><span class="line"><span class="comment">## 创建组</span></span><br><span class="line">[root@localhost ~]# groupadd ooo</span><br><span class="line"><span class="comment">## 创建组并指定GID</span></span><br><span class="line">[root@localhost ~]# groupadd ppp -g 666</span><br><span class="line"></span><br><span class="line"><span class="comment">#改</span></span><br><span class="line"><span class="comment">## 修改组的gid</span></span><br><span class="line">[root@localhost ~]# groupmod ooo -g 888</span><br><span class="line"><span class="comment">## 修改组名</span></span><br><span class="line">[root@localhost ~]# groupmod ooo -n xxx</span><br><span class="line"></span><br><span class="line"><span class="comment">#删</span></span><br><span class="line">[root@localhost ~]# groupdel xxx</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置组密码</span></span><br><span class="line">[root@localhost ~]# gpasswd ppp</span><br><span class="line">Changing the password <span class="keyword">for</span> group ppp</span><br><span class="line">New Password</span><br><span class="line"></span><br><span class="line"><span class="comment">#切换组身份</span></span><br><span class="line">[root@localhost ~]# newgrp 组名</span><br></pre></td></tr></table></figure><h3 id="Linux中用户身份切换">Linux中用户身份切换</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">su 切换用户，使用普通用户登录，然后使用su命令切换到root。</span><br><span class="line">优点：简单，方便</span><br><span class="line">缺点：需要知道root密码,不安全，切换到root没有日志审计功能</span><br><span class="line"></span><br><span class="line">su - 用户名 -c <span class="string">&#x27;命令&#x27;</span>（<span class="string">&#x27;touch 1.txt&#x27;</span>） 可以不切换用户但是以普通用户执行命令</span><br><span class="line"></span><br><span class="line">su - 用户名su 用户名，会少加载一个profile的全局变量</span><br><span class="line"><span class="comment">## 从root用户切换到其他用户，不需要输入密码</span></span><br><span class="line"><span class="comment">## 普通用户切换到其他用户，需要输入密码</span></span><br><span class="line"><span class="comment">## 加载顺序</span></span><br><span class="line">/etc/profile &gt; /etc/profile.d/1.sh &gt; /root/.bashrc &gt; /etc/bashrc</span><br><span class="line">/etc/profile</span><br><span class="line">/etc/profile.d/1.sh</span><br><span class="line">.bash_profile</span><br><span class="line">/root/.bashrc</span><br><span class="line">/etc/bashrc</span><br><span class="line">个人配置文件： ~/.bash_profile ~/.bashrc</span><br><span class="line">全局配置文件：/etc/profile /etc/profile.d/*.sh /etc/bashrc</span><br></pre></td></tr></table></figure><h3 id="用户身份提权">用户身份提权</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> 提权，当需要使用root权限时，进行提权，而无需切换至root用户。</span><br><span class="line">优点：安全，方便</span><br><span class="line">缺点：复杂</span><br><span class="line"></span><br><span class="line"><span class="comment">## 提权执行命令</span></span><br><span class="line">[zls@localhost ~]$ <span class="built_in">sudo</span> <span class="built_in">mkdir</span> /opt/abc</span><br><span class="line">We trust you have received the usual lecture from the <span class="built_in">local</span> System</span><br><span class="line">Administrator. It usually boils down to these three things:</span><br><span class="line"><span class="comment">#1) Respect the privacy of others.</span></span><br><span class="line"><span class="comment">#2) Think before you type.</span></span><br><span class="line"><span class="comment">#3) With great power comes great responsibility.</span></span><br><span class="line">[<span class="built_in">sudo</span>] password <span class="keyword">for</span> zls:</span><br><span class="line">zls is not <span class="keyword">in</span> the sudoers file. This incident will be reported.</span><br><span class="line"><span class="comment">## 颁发圣旨（提权配置文件）</span></span><br><span class="line">[root@localhost ~]# vim /etc/sudoers</span><br><span class="line">在里面添加lgj用户权限</span><br><span class="line">或者visudo命令添加，例如</span><br><span class="line"><span class="comment">## Allow root to run any commands anywhere</span></span><br><span class="line">root    ALL=(ALL)       ALL</span><br><span class="line">lgj     ALL=(ALL)       ALL</span><br><span class="line"></span><br><span class="line">上面注释的有别名，写上别名就可以设置权限，或者自己写某个命令的目录</span><br><span class="line">root    ALL=(ALL)       ALL</span><br><span class="line">lgj     ALL=(ALL)/usr/bin/mkdir（这里也可也把上面某个别名注释去掉，写上别名即可使用那个权限）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 设置命令别名</span></span><br><span class="line">Cmnd_Alias CREATE = /bin/mkdir,/bin/touch</span><br><span class="line"><span class="comment">## 用户提权方法：</span></span><br><span class="line">方法一：</span><br><span class="line"><span class="comment">### visudo不设置用户密码</span></span><br><span class="line">[root@localhost ~]# visudo</span><br><span class="line"><span class="comment">## Allow root to run any commands anywhere</span></span><br><span class="line">root ALL=(ALL) ALL</span><br><span class="line">zls ALL=(ALL) CREATE</span><br><span class="line">cls1 ALL=(ALL) NOPASSWD: ALL</span><br><span class="line">方法二：只要给用户加入wheel组中，就有<span class="built_in">sudo</span>权限</span><br><span class="line"><span class="comment">## Allows people in group wheel to run all commands</span></span><br><span class="line">%wheel ALL=(ALL) ALL</span><br><span class="line">%lgj ALL=(ALL) NOPASSWD: ALL</span><br><span class="line">[root@localhost ~]# useradd lhq1 -G wheel</span><br><span class="line"><span class="comment">## 切换成普通用户可以查看我这个用户能执行哪些命令</span></span><br><span class="line">[lhq2@localhost ~]$ <span class="built_in">sudo</span> -l</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux敲门 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>12.用户权限管理</title>
      <link href="/posts/9341c2be.html"/>
      <url>/posts/9341c2be.html</url>
      
        <content type="html"><![CDATA[<div class='wow animate__heartBeat' data-wow-duration='' data-wow-delay='1s' data-wow-offset=''  data-wow-iteration='2' ><div class="note red icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p><a href="https://www.lukeme.top/posts/4c7367cf.html">告别小白，点击直达</a></p></div></div><h3 id="权限管理">权限管理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#权限和用户的关系</span></span><br><span class="line">Linux中的文件或目录的权限和用户及用户组关联很大，Linux中每个文件或目录都有一组共9个基础权</span><br><span class="line">限位，每三个字符被分为一组，他们分别是属主权限位(占三个字符)、属组权限位(占三个字符)、其他用</span><br><span class="line">户权限位(占三个字符)</span><br><span class="line">比如 rwxr-xr-x linux中正是这9个权限位来控制文件属主(User)、属组(Group)、其他用户(Other)基础权</span><br><span class="line">限。</span><br><span class="line">每种身份，又对应了3种权限：r（readable）、w（writeable）、x（excutable）</span><br><span class="line">r=4</span><br><span class="line">w=2</span><br><span class="line">x=1</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20240413153515306.png" alt="image-20240413153515306"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">User</span><br><span class="line">Group</span><br><span class="line">Other</span><br><span class="line"><span class="comment">## 所属用户：属主</span></span><br><span class="line"><span class="comment">## 所属用户组：属组</span></span><br><span class="line"><span class="comment">## ugo权限</span></span><br><span class="line">//用户对资源来说, 有三种角色</span><br><span class="line">User(u): 属主用户(文件所有者)</span><br><span class="line">Group(g): 属组用户(包含组成员)</span><br><span class="line">Other(o): 其他用户</span><br></pre></td></tr></table></figure><table><thead><tr><th>字母</th><th>含义</th><th>对应权限</th></tr></thead><tbody><tr><td>r(read)</td><td>读取权限</td><td>4</td></tr><tr><td>w(write)</td><td>写入权限</td><td>2</td></tr><tr><td>x(execute)</td><td>执行权限</td><td>1</td></tr><tr><td>-(没有权限)</td><td>没有权限</td><td>0</td></tr></tbody></table><h3 id="修改权限命令">修改权限命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># change mode</span></span><br><span class="line"><span class="built_in">chmod</span> [选项] 权限 文件名</span><br><span class="line"><span class="comment">## 数字修改方式</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> 777 test1.txt</span><br><span class="line">[root@localhost ~]# ll test1.txt</span><br><span class="line">-rwxrwxrwx. 1 root root 0 Apr 12 17:01 test1.txt</span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> 700 test1.txt</span><br><span class="line">[root@localhost ~]# ll test1.txt</span><br><span class="line">-rwx------. 1 root root 0 Apr 12 17:01 test1.txt</span><br><span class="line"><span class="comment">## ugo修改方式</span></span><br><span class="line"><span class="comment"># 加权限</span></span><br><span class="line"><span class="comment">## u+权限 rwx</span></span><br><span class="line"><span class="comment">## g+权限 w</span></span><br><span class="line"><span class="comment">## o+权限 x</span></span><br><span class="line"><span class="comment">## a+权限 即a是all   可省略a +x +r +w +rw +rx +rwx +wx</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> g+xw test1.txt</span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> +x test1.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改ugo三个权限</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> u=rwx,g=w,o=x test1.txt 不如直接修改数字方式</span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> 721 test1.txt</span><br><span class="line"><span class="comment">## 递归修改目录权限</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> -R 222 zls121</span><br><span class="line">[root@localhost ~]# ll -d zls121/</span><br><span class="line">d-w--w--w-. 3 zls121 zls121 139 Apr 12 18:31 zls121/</span><br><span class="line">[root@localhost ~]# ll zls121/</span><br><span class="line">total 0</span><br><span class="line">--w--w--w-. 1 root root 0 Apr 12 18:30 1.txt</span><br><span class="line">--w--w--w-. 1 root root 0 Apr 12 18:30 2.txt</span><br><span class="line">--w--w--w-. 1 root root 0 Apr 12 18:30 3.txt</span><br><span class="line">--w--w--w-. 1 root root 0 Apr 12 18:30 4.txt</span><br><span class="line">[root@localhost ~]# ll zls121/zls1/</span><br><span class="line">total 0</span><br><span class="line">--w--w--w-. 1 root root 0 Apr 12 18:31 1.txt</span><br></pre></td></tr></table></figure><h3 id="权限对文件的影响">权限对文件的影响</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">当文件只有r权限时，可以查看内容，不能写入（文件所属用户可以使用vi强制保存），不能执行</span><br><span class="line">当文件只有w权限时，不能查看，只能写入（使用vi会覆盖文件内容，使用<span class="built_in">echo</span> &gt;&gt;可以追加），不能执行</span><br><span class="line">当文件只有x权限时，不能查看，不能写入，不能执行(都看不了无法执行)</span><br><span class="line"></span><br><span class="line">当文件只有rw权限时，可以查看，可以写入，不能执行</span><br><span class="line">当文件只有rx权限时，可以查看，不能写入，可以执行</span><br><span class="line">当文件只有wx权限时，不能看，能写入，不能执行</span><br><span class="line"></span><br><span class="line">当文件有rwx权限时，可以查看，可以写入，可以执行</span><br><span class="line"></span><br><span class="line"><span class="comment">##总结：x权限不能单独出现，需要配合r权限使用，也不能配合w（因为没有读取权限，就不知道文件内容，所以没法执行）</span></span><br></pre></td></tr></table></figure><h3 id="权限对目录的影响">权限对目录的影响</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[zls@localhost ~]$ ll /opt/</span><br><span class="line"><span class="built_in">ls</span>: cannot open directory /opt/: Permission denied</span><br><span class="line">[zls@localhost ~]$ <span class="built_in">mkdir</span> /opt/zls</span><br><span class="line"><span class="built_in">mkdir</span>: cannot create directory ‘/opt/zls’: Permission denied</span><br><span class="line">[zls@localhost ~]$ ./opt</span><br><span class="line">-bash: ./opt: No such file or directory</span><br><span class="line">当目录权限为---时，不能查看，不能进入，不能拷贝，不能移动，不能创建，不能删除</span><br><span class="line">当目录权限为r时，能查看目录下的文件名（看不到文件属性），不能进入，不能拷贝，不能移动，不能创建，不能删除</span><br><span class="line">当目录权限为w时，不能查看，不能进入，不能拷贝，不能移动，不能创建，不能删除</span><br><span class="line">当目录权限为x时，不能查看，能进入，不能拷贝，不能移动，不能创建，不能删除</span><br><span class="line"></span><br><span class="line">当目录权限为rw时，能查看目录下的文件名（看不到文件属性），不能进入，不能拷贝，不能移动，不能创建，不能删除</span><br><span class="line">当目录权限为rx时，可以查看，能进入，能拷贝，不能移动，不能创建，不能删除</span><br><span class="line">当目录权限为wx时，不能查看，能进入，能拷贝，能移动，能创建，能删除</span><br><span class="line"><span class="comment">## 只有x权限才能cd进入</span></span><br><span class="line"><span class="comment">## 目录权限，必须两两组合使用</span></span><br><span class="line"><span class="comment">## 目录权限，必须组合x权限使用</span></span><br><span class="line"><span class="comment">## 目录权限，一般情况下，普通用户，只给rx，超级用户 rwx</span></span><br></pre></td></tr></table></figure><h3 id="文件属主属组修改">文件属主属组修改</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## change owner</span></span><br><span class="line"><span class="built_in">chown</span> [选项] 属主:属组 文件名</span><br><span class="line"><span class="comment">## 修改属主和属组</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chown</span> zls:zls student.txt</span><br><span class="line">[root@localhost ~]# <span class="built_in">chown</span> root.root student.txt</span><br><span class="line"><span class="comment">## 属主不变，修改属组</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chown</span> :tls student.txt</span><br><span class="line"><span class="comment">## 属组不变，修改属主  只加一个默认就是修改属主</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chown</span> zls student.txt    </span><br><span class="line"></span><br><span class="line">一个用户，创建出来的文件，不一定权限属于他的主组，newgrp只要切换过组，在哪个组工作，创建出的文件属组就属于哪个组</span><br><span class="line"><span class="comment">## 修改目录属主和属组下面文件权限不变</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chown</span> www.www /code/</span><br><span class="line"><span class="comment">## 递归修改目录的属主和属组</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chown</span> -R www.www /code/s</span><br></pre></td></tr></table></figure><h2 id="Linux中的特殊权限"><strong>Linux</strong>中的特殊权限</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">普通用户可以修改自己的密码，在于passwd命令，该命令拥有特殊权限，SetUID，也就是咱们看到的，在属主的权限位的执行权限上是 s.当...普通用户使用passwd命令来更改自己的密码时，实际上是在用passwd命令的所有者，所有者是谁？就是root的身份在执行passwd命令</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">在 Linux 系统中，有三种特殊权限，分别是 SUID 权限、SGID 权限和 SBIT 权限：</span><br><span class="line"><span class="comment">#sUID 权限（Set User ID）：</span></span><br><span class="line">允许用户在执行可执行文件时以文件所有者的身份运行。具有 SUID 权限的文件在执行时将继承文件所有者的权限，而不是执行者自己的权限。这对于需要特定权限才能执行的程序非常有用。</span><br><span class="line"></span><br><span class="line"><span class="comment">#SGID 权限（Set Group ID）：</span></span><br><span class="line">SGID 权限类似于 SUID 权限，但是它是针对群组而不是用户。具有 SGID 权限的文件在执行时将继承文件所属群组的权限，而不是执行者所属群组的权限。</span><br><span class="line"></span><br><span class="line"><span class="comment">#SBIT 权限（Sticky Bit）：</span></span><br><span class="line">主要用于目录。当目录具有 SBIT 权限时，只有目录所有者、文件所有者和 root 用户才能删除或移动该目录中的文件。这可以防止其他用户意外删除或移动他人的文件</span><br></pre></td></tr></table></figure><h3 id="特殊权限suid介绍（set-uid）">特殊权限suid介绍（set uid）</h3><p><img src="https://cos.lukme.top/Pic/image-20240415143350501.png" alt="image-20240415143350501"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 修改密码的命令</span></span><br><span class="line">[root@localhost ~]# passwd</span><br><span class="line"><span class="comment">## 修改密码的命令位置</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">which</span> passwd</span><br><span class="line">/usr/bin/passwd</span><br><span class="line"><span class="comment">## 用户密码信息存放文件</span></span><br><span class="line">[root@localhost ~]# ll /etc/shadow</span><br><span class="line">----------. 1 root root 641 Apr 12 19:50 /etc/shadow</span><br><span class="line"><span class="comment">## 用户密码信息存放文件</span></span><br><span class="line">文件权限：000</span><br><span class="line">所有用户，没有读取权限，写入权限，执行权限</span><br><span class="line"><span class="comment">## 一个普通用户，是否可以修改密码？</span></span><br><span class="line">只能修改自己的密码</span><br><span class="line"><span class="comment">## 问题：为什么一个普通用户，对/etc/shadow文件没有任何操作权限，却可以修改自己的密码？</span></span><br><span class="line"><span class="comment">## 原因：因为passwd命令，属主权限位上有个s权限</span></span><br><span class="line">[zls@localhost ~]$ ll /usr/bin/passwd</span><br><span class="line">-rwsr-xr-x. 1 root root 27832 Jun 10 2014 /usr/bin/passwd</span><br><span class="line">suid授权方式</span><br><span class="line">特殊权限——setgid</span><br><span class="line">授权方式</span><br><span class="line">如果在一个文件的属主权限位上，出现s权限，代表，该文件具有<span class="built_in">set</span> uid权限</span><br><span class="line"><span class="built_in">set</span> uid（suid）权限作用：让使用该文件的用户，以该文件的属主身份执行</span><br><span class="line"><span class="comment">## 因为passwd命令有suid权限，那么普通用户可以以root身份执行该命令，但是为啥不能修改其他用户密码</span></span><br><span class="line">原因：普通用户在执行passwd命令时，有个判断，就是该命令后面不能加任何参数</span><br></pre></td></tr></table></figure><h3 id="suid授权方式">suid授权方式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">suid数字权限：4000</span><br><span class="line"><span class="comment">## 数字权限授权</span></span><br><span class="line"><span class="built_in">chmod</span> 4xxx 文件名</span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> 4644 cheak_student.sh</span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> 4755 /bin/passwd</span><br><span class="line"><span class="comment">## ugo方式</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> u+s student.txt</span><br><span class="line">s：代表该文件的属主权限位上，本身有x（执行）权限</span><br><span class="line">S：代表该文件的属主权限位上，本身没有x（执行）权限</span><br><span class="line"><span class="comment">## 总结：</span></span><br><span class="line">1.让普通用户对可执行的二进制文件，临时拥有二进制文件的所属权限</span><br><span class="line">2.如果设置的二进制文件没有执行权限，那么suid的权限显示就是S</span><br><span class="line">3.特殊权限suid仅对二进制可执行程序有效，其他文件或目录则无效</span><br><span class="line">注意：suid极其危险，不信可以尝试对vim或者<span class="built_in">rm</span>命令进行设定suid</span><br></pre></td></tr></table></figure><h3 id="特殊权限——setgid">特殊权限——setgid</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">将目录设置为SGID后，如果在该目录下创建文件，都将与该目录的所属组保持一致</span><br><span class="line"><span class="comment">## 在文件的属组权限位上出现s权限</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">mkdir</span> /opt/test</span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> g+s /opt/test/</span><br><span class="line">[root@localhost ~]# ll /opt/test/ -d</span><br><span class="line">drwxr-sr-x. 2 root root 6 Apr 15 18:40 /opt/test/</span><br></pre></td></tr></table></figure><h3 id="授权方式">授权方式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">sgid数字权限：2000</span><br><span class="line"><span class="comment">## 数字权限授权</span></span><br><span class="line"><span class="built_in">chmod</span> 2xxx 文件名</span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> 2644 dir1</span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> 2755 dir1</span><br><span class="line">小练习</span><br><span class="line"><span class="comment">## ugo方式</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> g+s dir1</span><br><span class="line">s：代表该文件的属组权限位上，本身有x（执行）权限</span><br><span class="line">S：代表该文件的属组权限位上，本身没有x（执行）权限</span><br><span class="line"><span class="comment">## 总结：</span></span><br><span class="line">1.针对用户组权限位修改，用户创建的目录或文件所属组和该目录的所属组一致。</span><br><span class="line">2.当某个目录设置了sgid后，在该目录中新建的文件不在是创建该文件的默认所属组</span><br><span class="line">3.使用sgid可以使得多个用户之间共享一个目录的所有文件变得简单。</span><br></pre></td></tr></table></figure><h3 id="特殊权限——粘滞位权限（SBIT）">特殊权限——粘滞位权限（SBIT）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sticky（SI TI KI）粘滞，目前只对目录有效，作用如下：</span><br><span class="line">普通用户对该目录拥有w和x权限，即普通用户可以在此目录中拥有写入权限，如果没有粘滞位，那么普通用户拥有w权限，就可以删除此目录下的所有文件，包括其他用户简历的文件。但是一旦被赋予了粘滞位，除了root可以删除所有文件，普通用户就算有w权限也只能删除自己建立的文件，而不能删除其他用户简历的文件。系统中存在的/tmp目录是经典的粘滞位目录，谁都有写权限，因此安全成问题，常常是木马第一手跳板。</span><br></pre></td></tr></table></figure><h3 id="授权方式-2">授权方式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">SBIT数字权限：1000</span><br><span class="line">suid=4000</span><br><span class="line">sgid=2000</span><br><span class="line">sbit=1000</span><br><span class="line">r=4</span><br><span class="line">w=2</span><br><span class="line">x=1</span><br><span class="line">-=0</span><br><span class="line"><span class="comment">## 数字权限授权</span></span><br><span class="line"><span class="built_in">chmod</span> 1xxx 文件名</span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> 1644 dir1</span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> 1755 dir1</span><br><span class="line"><span class="comment">## ugo方式</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> o+t dir1</span><br><span class="line">t：代表该文件的其他用户权限位上，本身有x（执行）权限</span><br><span class="line">T：代表该文件的其他用户权限位上，本身没有x（执行）权限</span><br><span class="line"><span class="comment">## 总结：</span></span><br><span class="line">1.让多个用户都具有写权限的目录，并让每个用户只能删自己的文件（root除外）。</span><br><span class="line">2.特殊sticky目录表现在others的x位，用小t表示，如果没有执行权限是T</span><br><span class="line">3.一个目录即使它的权限为<span class="string">&quot;777&quot;</span>如果是设置了粘滞位，除了目录的属主和<span class="string">&quot;root&quot;</span>用户有权限删除，除此之</span><br><span class="line">外其他用户都不允许删除该目录下的所有文件</span><br></pre></td></tr></table></figure><h3 id="chattr权限">chattr权限</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">chattr只有root用户可以使用，用来修改文件系统的权限属性，建立凌驾于rwx基础权限之上的授权</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看有没有加chattr权限</span></span><br><span class="line">lsattr /etc/passwd </span><br><span class="line"></span><br><span class="line"><span class="comment"># 授权方式</span></span><br><span class="line">[root@localhost ~]# chattr +i /etc/passwd</span><br><span class="line">chattr命令格式：chattr [+-=][选项] 文件名或目录名</span><br><span class="line"><span class="comment">#i：不得任意更动文件或目录</span></span><br><span class="line"><span class="comment">#a：append可以追加，但无法更改文件内容</span></span><br><span class="line">[root@localhost ~]# chattr +a /etc/passwd /etc/shadow /etc/group /etc/gshadow</span><br></pre></td></tr></table></figure><h3 id="Linux进程掩码umask">Linux进程掩码umask</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">系统默认<span class="built_in">umask</span>为022，那么当我们创建一个目录时，正常情况下目录的权限应该是777，但是<span class="built_in">umask</span>表示要减</span><br><span class="line">去的值，所以新目录文件的权限应该是777-022=755。至于文件的权限也依次类推：666-022=644</span><br><span class="line"><span class="comment">## 查看系统默认umask</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">umask</span></span><br><span class="line">0022</span><br><span class="line"><span class="comment">## 目录权限使用777-umask</span></span><br><span class="line"><span class="comment">## 文件权限使用666-umask</span></span><br><span class="line">但是当<span class="built_in">umask</span>出现奇数位时，需要在该位上得到结果后+1</span><br><span class="line"><span class="comment">## umask 147</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">umask</span> 147</span><br><span class="line">[root@localhost ~]# <span class="built_in">mkdir</span> zls789 // 630</span><br><span class="line">[root@localhost ~]# <span class="built_in">touch</span> zls456 // 620</span><br><span class="line"><span class="comment">## 条件</span></span><br><span class="line">[root@localhost ~]# <span class="comment"># 1.uid &gt; 199</span></span><br><span class="line">[root@localhost ~]# <span class="comment"># 2.uid name = gid name</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> /etc/profile</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$UID</span> -gt 199 ] &amp;&amp; [ <span class="string">&quot;`/usr/bin/id -gn`&quot;</span> = <span class="string">&quot;`/usr/bin/id -un`&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">umask</span> 002</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">umask</span> 022</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment"># UID大于199 并且 用户名和组名子一样 此时 ： umask=002    (平台用户)</span></span><br><span class="line"><span class="comment"># UID小于199时 此时 umask=022（root用户）</span></span><br><span class="line"><span class="comment"># 用户名和组名不一样时 此时umask=022</span></span><br><span class="line"></span><br><span class="line">用户家目录<span class="built_in">umask</span> 077</span><br><span class="line">[root@lb01 ~]# <span class="built_in">cat</span> /etc/login.defs  </span><br><span class="line"></span><br><span class="line"><span class="comment">#查看文件的数字权限</span></span><br><span class="line"><span class="built_in">stat</span> -c a% 文件   </span><br><span class="line"><span class="built_in">stat</span> 文件</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux敲门 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>13.重定向</title>
      <link href="/posts/30ec03be.html"/>
      <url>/posts/30ec03be.html</url>
      
        <content type="html"><![CDATA[<div class='wow animate__heartBeat' data-wow-duration='' data-wow-delay='1s' data-wow-offset=''  data-wow-iteration='2' ><div class="note red icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p><a href="https://www.lukeme.top/posts/4c7367cf.html">告别小白，点击直达</a></p></div></div><h3 id="重定向">重定向</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">将原本要输出到屏幕的数据信息，重新定向到指定的文件中。</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#使用重定向场景</span></span><br><span class="line">1.当屏幕输出的信息很重要，而且希望保存重要的信息时。</span><br><span class="line">2.后台执行中的程序，不希望他干扰屏幕正常的输出结果时。</span><br><span class="line">3.系统的例行命令，例如定时任务的执行结果，希望他可以存下来时。</span><br><span class="line">4.一些执行命令，我们已经知道他可能出现错误信息，想将他直接丢弃时。</span><br><span class="line">5.执行一个命令，可能报错和正确的输出并存，类似错误日志与标准正确日志需要分别输出至不同的文件。</span><br></pre></td></tr></table></figure><p>执行一个shell程序时通常会自动打开三个文件描述符</p><table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">文件描述符</th><th style="text-align:center">作用</th></tr></thead><tbody><tr><td style="text-align:center">标准输入 (stdin)</td><td style="text-align:center">0</td><td style="text-align:center">通常是键盘，也可以是其他文件或者命令的输出的内容可以作为标准输入</td></tr><tr><td style="text-align:center">标准输出 (stdout)</td><td style="text-align:center">1</td><td style="text-align:center">默认输出到屏幕</td></tr><tr><td style="text-align:center">错误输出 (stderr)</td><td style="text-align:center">2</td><td style="text-align:center">默认输出到屏幕</td></tr><tr><td style="text-align:center">文件名称 (filename)</td><td style="text-align:center">3+</td><td style="text-align:center"></td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">标准输入：stdin</span><br><span class="line">标准输出：stdout</span><br><span class="line">错误输出：stderr</span><br><span class="line">[root@localhost ~]# ll /dev/std*</span><br><span class="line">lrwxrwxrwx. 1 root root 15 Apr 16 15:52 /dev/stderr -&gt; /proc/self/fd/2</span><br><span class="line">lrwxrwxrwx. 1 root root 15 Apr 16 15:52 /dev/stdin -&gt; /proc/self/fd/0</span><br><span class="line">lrwxrwxrwx. 1 root root 15 Apr 16 15:52 /dev/stdout -&gt; /proc/self/fd/1</span><br><span class="line">文件描述符fd：一个命令或者程序在执行过程中，至少要打开4个文件描述符</span><br><span class="line">文件描述符0：标准输入</span><br><span class="line">文件描述符1：标准输出</span><br><span class="line">文件描述符2：错误输出</span><br><span class="line">文件描述符3+：文件名</span><br><span class="line"></span><br></pre></td></tr></table></figure><table><thead><tr><th>输入输出</th><th>符号</th></tr></thead><tbody><tr><td>标准输入重定向</td><td>&lt; 或 0&lt;</td></tr><tr><td>标准输出重定向</td><td>&gt; 或 1&gt;</td></tr><tr><td>错误输出重定向</td><td>2&gt;</td></tr></tbody></table><p>查看标准输入输出设备</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01 ~]# ll /dev/std*</span><br><span class="line">lrwxrwxrwx. 1 root root 15 Apr 16 08:16 /dev/stderr -&gt; /proc/self/fd/2错误输出</span><br><span class="line">lrwxrwxrwx. 1 root root 15 Apr 16 08:16 /dev/stdin -&gt; /proc/self/fd/0标准输入</span><br><span class="line">lrwxrwxrwx. 1 root root 15 Apr 16 08:16 /dev/stdout -&gt; /proc/self/fd/1标准输出</span><br></pre></td></tr></table></figure><table><thead><tr><th>类型</th><th>操作符</th><th>用途</th></tr></thead><tbody><tr><td>标准覆盖输出重定向</td><td>1&gt;或&gt;</td><td>将命令的执行结果输出到指定的文件中, 而不是直接显示在屏幕上</td></tr><tr><td>标准追加输出重定向</td><td>&gt;&gt;1或1&gt;&gt;</td><td>将命令执行的结果追加输出到指定文件</td></tr><tr><td>错误覆盖输出重定向</td><td>2&gt;</td><td>将程序的错误结果输出到执行的文件中，会覆盖源文件内容</td></tr><tr><td>错误追加输出重定向</td><td>2&gt;&gt;</td><td>将程序输出的错误结果以追加的方式输出到指定文件中，不会覆盖源文件</td></tr><tr><td>标准输入重定向</td><td>&lt;&lt;</td><td>将命令中接收输入的途径由默认的键盘更改为指定的文件</td></tr></tbody></table><h3 id="重定向使用">重定向使用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">标准输出追加重定向</span><br><span class="line">[root@lb01 ~]# <span class="built_in">echo</span> <span class="string">&quot;111&quot;</span> &gt;&gt;1.txt</span><br><span class="line">标准输出覆盖重定向</span><br><span class="line">[root@lb01 ~]# <span class="built_in">echo</span> <span class="string">&quot;111&quot;</span> &gt;1.txt</span><br><span class="line">错误输出覆盖重定向</span><br><span class="line">[root@lb01 ~]# nginx -V 2&gt;&gt; 1.txt</span><br><span class="line">错误输出追加重定向</span><br><span class="line">[root@lb01 ~]# nginx -V 2&gt; 1.txt</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="错误输出和正确输出，都输出到同一个文件中">错误输出和正确输出，都输出到同一个文件中</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 方法一：</span></span><br><span class="line">[root@lb01 ~]# find /etc/ -<span class="built_in">type</span> d &gt; /tmp/1.<span class="built_in">log</span> 2&gt;/tmp/1.<span class="built_in">log</span></span><br><span class="line"><span class="comment">## 方法二：</span></span><br><span class="line">标准输出到2.<span class="built_in">log</span>文件里，错误输出到和标准输出一样位置</span><br><span class="line">[root@lb01 ~]# find /etc/ -<span class="built_in">type</span> d 1&gt; /tmp/2.<span class="built_in">log</span> 2&gt;&amp;1</span><br><span class="line">和上面相反</span><br><span class="line">[root@lb01 ~]# find /etc/ -<span class="built_in">type</span> d 2&gt; /tmp/6.<span class="built_in">log</span> 1&gt;&amp;2</span><br><span class="line"><span class="comment">## 方法三：</span></span><br><span class="line">[root@lb01 ~]# find /etc/ -<span class="built_in">type</span> d &amp;&gt; /tmp/11.<span class="built_in">log</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#将命令结果重定向到黑洞</span></span><br><span class="line">[zls@localhost ~]$ find /etc/ -<span class="built_in">type</span> d 1&gt; /tmp/6.<span class="built_in">log</span> 2&gt;/dev/null 标准输出到6.<span class="built_in">log</span>，错误输出到黑洞</span><br><span class="line">[zls@localhost ~]$ find /etc/ -<span class="built_in">type</span> d &amp;&gt;/dev/null  所有输出结果到黑洞</span><br></pre></td></tr></table></figure><h3 id="标准输出和错误输出到两个文件">标准输出和错误输出到两个文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /etc -name <span class="string">&quot;*.conf&quot;</span> 1&gt;a 2&gt;b</span><br></pre></td></tr></table></figure><p>#将标准输出和标准错误输出重定向到同一个文件, 混合输出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[zls@zls ~]$ find /etc -name <span class="string">&quot;*.conf&quot;</span> &amp;&gt;ab </span><br><span class="line">[zls@zls ~]$ find /etc -name <span class="string">&quot;*.conf&quot;</span> &gt;ab 2&amp;&gt;1</span><br><span class="line">[zls@zls ~]$ find /etc -name <span class="string">&quot;*.conf&quot;</span> &gt;ab 2&gt;&amp;1</span><br><span class="line">合并两个文件到一个文件</span><br><span class="line"><span class="built_in">cat</span> 1 2 &gt;3</span><br></pre></td></tr></table></figure><h3 id="输入重定向">输入重定向</h3><p>输入重定向，即原本从键盘等设备上获得的输入信息，重定向由命令的输出作为输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# cat &gt;1.txt等待键盘输入重定向到1.txt，Ctrl+c终止输入</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# cat &lt;&lt;EOF &gt; 1.txt   等待键盘输入，遇到Eof结束重定向到1.txt</span><br><span class="line">111</span><br><span class="line">222</span><br><span class="line">333</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="两条命令重定向">两条命令重定向</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# (<span class="built_in">ls</span>;ifconfig) &gt; /tmp/1.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">## 将内容输出到文件，然后放后台执行 加个&amp;</span></span><br><span class="line">[root@localhost ~]# ping baidu.com &amp;&gt;/tmp/a.log &amp;</span><br><span class="line"></span><br><span class="line">扩展点: subshell</span><br><span class="line">[root@zls ~]# <span class="built_in">cd</span> /boot; <span class="built_in">ls</span></span><br><span class="line"><span class="comment">#subshell 中执行</span></span><br><span class="line">[root@zls ~]# (<span class="built_in">cd</span> /boot; <span class="built_in">ls</span>)</span><br><span class="line"><span class="comment">#如果不希望某些命令的执行对当前 shell 环境产生影响，请在subshell中执行</span></span><br></pre></td></tr></table></figure><h3 id="管道技术">管道技术</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">管道符作用：将管道符左边命令的标准输出交给管道符右边命令的标准输入来处理</span><br><span class="line">1）左边命令他得是标准输出 1&gt;</span><br><span class="line">2）右边命令必须有标准输入</span><br></pre></td></tr></table></figure><h3 id="tee管道技术">tee管道技术</h3><p><img src="https://cos.lukme.top/Pic/image-20240416145607541.png" alt="image-20240416145607541"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">tee</span>相当于开个侧门输出重定向到某个文件，原理见上图</span><br><span class="line">[root@localhost ~]# <span class="built_in">echo</span> <span class="variable">$RANDOM</span>|<span class="built_in">tee</span> /dev/pts/3|passwd --stdin zls</span><br><span class="line">[root@localhost ~]# <span class="built_in">echo</span> <span class="variable">$RANDOM</span>|<span class="built_in">tee</span> /tmp/pass.txt|passwd --stdin zls</span><br><span class="line"><span class="comment">## -a：append 追加到文件中</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">echo</span> <span class="variable">$RANDOM</span>|<span class="built_in">tee</span> -a /tmp/pass.txt|passwd --stdin zls</span><br></pre></td></tr></table></figure><h3 id="xargs传参">xargs传参</h3><p><strong>xaras后面不识别别名</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">xargs将管道符前面命令的标准输出，当成结果，放到管道符右边xargs后面的命令的后面执行</span><br><span class="line">[root@localhost ~]# <span class="built_in">echo</span> &#123;1..10&#125;</span><br><span class="line">1 2 3 4 5 6 7 8 9 10</span><br><span class="line">[root@localhost ~]# <span class="built_in">echo</span> &#123;1..5&#125;|xargs -n1</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">[root@localhost ~]# <span class="built_in">echo</span> &#123;1..10&#125;|xargs -n2    -n2每两个一行 -n3每三个拍一行</span><br><span class="line">1 2</span><br><span class="line">3 4</span><br><span class="line">5 6</span><br><span class="line">7 8</span><br><span class="line">9 10</span><br><span class="line">[root@lb01 ~]# <span class="built_in">seq</span> 10|xargs -n3</span><br><span class="line">1 2 3</span><br><span class="line">4 5 6</span><br><span class="line">7 8 9</span><br><span class="line">10</span><br><span class="line"></span><br><span class="line"><span class="comment">## 找出来的文件拷贝到/tmp</span></span><br><span class="line">[root@localhost ~]# grep -rl <span class="string">&#x27;xxx&#x27;</span> ./|xargs <span class="built_in">cp</span> -t /tmp/</span><br><span class="line">[root@localhost ~]# grep -rl <span class="string">&#x27;xxx&#x27;</span> ./|xargs -I &#123;&#125; <span class="built_in">cp</span> &#123;&#125; /opt</span><br><span class="line"></span><br><span class="line">注意事项:</span><br><span class="line">1.在管道后面的命令，都不应该在写文件名</span><br><span class="line">2.在管道中只有标准输出才可以传递下一个命令, 标准错误输出会直接输出终端显示, 建议在使用管</span><br><span class="line">道前将标准错误输出重定向。</span><br><span class="line">例如: find /etc -name <span class="string">&quot;*.conf&quot;</span> 2&gt;/dev/null | grep rc</span><br><span class="line">3.有些命令不支持管道技术, 但是可以通过 xargs 来实现管道传递。</span><br><span class="line">例如: <span class="built_in">which</span> <span class="built_in">cat</span>|xargs ls-l</span><br><span class="line">例如: <span class="built_in">ls</span> |xargs <span class="built_in">rm</span> -rvf</span><br><span class="line">-I 选项作用是将前面输出结果打包到&#123;&#125;内</span><br><span class="line">例如: <span class="built_in">ls</span> |xargs <span class="built_in">cp</span> -rvft /tmp/ ==&gt; <span class="built_in">ls</span> | xargs -I &#123;&#125; <span class="built_in">cp</span> -rvf &#123;&#125; /tmp</span><br><span class="line">例如: <span class="built_in">ls</span> |xargs <span class="built_in">mv</span> -t /tmp/ ==&gt; <span class="built_in">ls</span> | xargs -I &#123;&#125; <span class="built_in">mv</span> &#123;&#125; /tmp</span><br></pre></td></tr></table></figure><table><thead><tr><th>-a</th><th>设置从文件中读取数据</th></tr></thead><tbody><tr><td>-d</td><td>设置自定义定界符</td></tr><tr><td>-l</td><td>设置替换字符串</td></tr><tr><td>-n</td><td>设置多行输出</td></tr><tr><td>-p</td><td>执行命令前询问用户是否确认</td></tr><tr><td>-r</td><td>如果输入数据为空，则不执行</td></tr><tr><td>-s</td><td>设置每条命令最大字符数</td></tr><tr><td>-t</td><td>显示xargs执行的命令</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Linux敲门 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>14.find查找</title>
      <link href="/posts/2f6f2c7.html"/>
      <url>/posts/2f6f2c7.html</url>
      
        <content type="html"><![CDATA[<div class='wow animate__heartBeat' data-wow-duration='' data-wow-delay='1s' data-wow-offset=''  data-wow-iteration='2' ><div class="note red icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p><a href="https://www.lukeme.top/posts/4c7367cf.html">告别小白，点击直达</a></p></div></div><h3 id="find用途">find用途</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1.忘了某个文件所在的位置，可以通过find来查找。</span><br><span class="line">2.可以查找某个目录下，所有小于1k的文件。</span><br><span class="line">3.可以查找某个目录下，7天之前创建的文件。</span><br><span class="line">4.可以查找某目录下所有以.sh结尾的脚本。</span><br><span class="line"></span><br><span class="line">它可以根据不同的条件来进行查找文件:例如权限、拥有者、修改日期/时间、文件大小等等。 同时find命令是Linux下必须掌握的。</span><br><span class="line"></span><br><span class="line">[root@lb01 code]# find /code/ -size -4k ! -<span class="built_in">type</span> d -delete</span><br></pre></td></tr></table></figure><table><thead><tr><th>命令</th><th>路径</th><th>选项</th><th>表达式</th><th>动作</th></tr></thead><tbody><tr><td>find</td><td>[path…]</td><td>[options…]</td><td>[expression]</td><td>[action]</td></tr></tbody></table><table><thead><tr><th>逻辑运算符</th><th>作用</th></tr></thead><tbody><tr><td>-a</td><td>且   &amp;&amp;</td></tr><tr><td>-o</td><td>或  ||</td></tr><tr><td>!</td><td>非</td></tr></tbody></table><p><strong>find的选项</strong></p><table><thead><tr><th>选项</th><th>作用</th></tr></thead><tbody><tr><td>-name<br />-iname</td><td>根据文件名查找<br />不区分文件名大小写查找</td></tr><tr><td>-type</td><td>根据文件类型查找</td></tr><tr><td>-size</td><td>根据文件大小找</td></tr><tr><td>-time</td><td>根据文件的时间找</td></tr><tr><td>-user <br />-group <br />-nouser <br />-nogroup</td><td>查找指定用户<br />查找指定用户组<br />查找没有用户的文件查找<br />没有用户组的文件</td></tr><tr><td>-perm</td><td>根据文件权限找</td></tr><tr><td>-maxdepth</td><td>根据句深度查找</td></tr><tr><td>-empty</td><td>查找空文件（和-type d配合可以指定空目录）</td></tr></tbody></table><h3 id="根据文件名查找">根据文件名查找</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">-name</span><br><span class="line"><span class="comment">## 找到/etc/目录下网卡信息配置文件在哪</span></span><br><span class="line">[root@localhost ~]# find /etc -name <span class="string">&#x27;*ens33*&#x27;</span>      加上*是模糊查找</span><br><span class="line"></span><br><span class="line"><span class="comment">## 在/etc/目录下找以.conf结尾的所有配置文件</span></span><br><span class="line">[root@localhost ~]# find /etc -name <span class="string">&#x27;*.conf&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 在/etc/目录下找到以.conf结尾的文件和.sh结尾的文件</span></span><br><span class="line">[root@localhost ~]# find /etc/ -name <span class="string">&#x27;*.conf&#x27;</span> &amp;&amp; find /etc/ -name <span class="string">&#x27;*.sh&#x27;</span></span><br><span class="line">[root@localhost ~]# find /etc/ -name <span class="string">&#x27;*.conf&#x27;</span>;find /etc/ -name <span class="string">&#x27;*.sh&#x27;</span></span><br><span class="line">[root@localhost ~]# find /etc/ -name <span class="string">&#x27;*.conf&#x27;</span> -o -name <span class="string">&#x27;*.sh&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 在/etc/目录下找到不是以.conf结尾的文件</span></span><br><span class="line">[root@localhost ~]# find /etc/ ! -name <span class="string">&#x27;*.conf&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 精确匹配</span></span><br><span class="line">[root@localhost ~]# find /etc/ -name <span class="string">&#x27;ifcfg-ens33&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 不区分大小写查找文件名</span></span><br><span class="line">[root@localhost ~]# find ./ -iname <span class="string">&#x27;*zls*&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="根据文件类型查找">根据文件类型查找</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">-<span class="built_in">type</span></span><br><span class="line"><span class="comment">## 文件类型</span></span><br><span class="line">普通文件：f</span><br><span class="line">目录：d</span><br><span class="line">软链接文件：l</span><br><span class="line">套接字文件：s</span><br><span class="line">字符设备文件：c</span><br><span class="line">块设备文件：b</span><br><span class="line">管道文件：p</span><br><span class="line">//f 文件</span><br><span class="line">[root@zls ~]# find /dev -<span class="built_in">type</span> f</span><br><span class="line">//d 目录</span><br><span class="line">[root@zls ~]# find /dev -<span class="built_in">type</span> d</span><br><span class="line">//l 链接</span><br><span class="line">[root@zls ~]# find /dev -<span class="built_in">type</span> l</span><br><span class="line">//b 块设备</span><br><span class="line">[root@zls ~]# find /dev -<span class="built_in">type</span> b</span><br><span class="line">//c 字符设备</span><br><span class="line">[root@zls ~]# find /dev -<span class="built_in">type</span> c</span><br><span class="line">//s 套接字</span><br><span class="line">[root@zls ~]# find /dev -<span class="built_in">type</span> s</span><br><span class="line">//p 管道文件</span><br><span class="line">[root@zls ~]# find /dev -<span class="built_in">type</span> p</span><br><span class="line"></span><br><span class="line"><span class="comment">## 查找/etc/目录下，文件名中包含conf的目录</span></span><br><span class="line">[root@localhost ~]# find /etc -name <span class="string">&#x27;*conf*&#x27;</span> -<span class="built_in">type</span> d</span><br><span class="line">[root@localhost ~]# find /etc -name <span class="string">&#x27;*conf*&#x27;</span> -<span class="built_in">type</span> d -<span class="built_in">ls</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="根据文件大小查找">根据文件大小查找</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">-size</span><br><span class="line">+：大于</span><br><span class="line">-：小于</span><br><span class="line"><span class="comment">## 找小于多少的文件</span></span><br><span class="line">[root@localhost ~]# find /tmp -size -4k</span><br><span class="line"><span class="comment">## 找大于多少的文件</span></span><br><span class="line">[root@localhost ~]# find /tmp -size +4k</span><br><span class="line"><span class="comment">## 找等于多少</span></span><br><span class="line">[root@localhost ~]# find /tmp -size 4k</span><br><span class="line"></span><br><span class="line"><span class="comment">## 找到/code目录下小于4k的文件并删除</span></span><br><span class="line">[root@localhost ~]# find /code -size -4k -delete</span><br><span class="line"></span><br><span class="line"><span class="comment">## 找到/code目录下小于4k的文件并删除（不删除目录）</span></span><br><span class="line">[root@localhost ~]# find /code -size -4k ! -<span class="built_in">type</span> d -delete   </span><br><span class="line"><span class="comment">##! -type d -delete非目录</span></span><br></pre></td></tr></table></figure><h3 id="根据文件的时间查找">根据文件的时间查找</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 一个文件的时间</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">stat</span> 1.txt</span><br><span class="line">File: ‘1.txt’</span><br><span class="line">Size: 4 Blocks: 8 IO Block: 4096 regular file</span><br><span class="line">Device: 803h/2051d Inode: 16797763 Links: 1</span><br><span class="line">Access: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)</span><br><span class="line">Context: unconfined_u:object_r:admin_home_t:s0</span><br><span class="line">Access: 2024-04-17 19:25:18.951724354 +0800</span><br><span class="line">Modify: 2024-04-17 19:25:18.951724354 +0800</span><br><span class="line">Change: 2024-04-17 19:25:18.951724354 +0800</span><br><span class="line"></span><br><span class="line">-mtime：Modify修改时间</span><br><span class="line">-atime：Access访问时间</span><br><span class="line">-ctime：Change时间戳修改时间</span><br><span class="line"></span><br><span class="line">+：查找N天之前的（不包含今天）</span><br><span class="line">-：查找N天之内的（包含今天）</span><br><span class="line">N：查找往前数第N天的（不包含今天）  （-mtime后只有数字的）</span><br><span class="line"></span><br><span class="line"><span class="comment">## 不加任何符号：查找不算今天往前数第7天的文件</span></span><br><span class="line">-mtime 7</span><br><span class="line">[root@localhost find]# find /root/find/ -mtime 7</span><br><span class="line"></span><br><span class="line"><span class="comment">## +7 不算今天往前数第七天之前的文件</span></span><br><span class="line">[root@localhost find]# find /root/find/ -mtime +7</span><br><span class="line"><span class="comment">## -7 算今天，最近7天的文件</span></span><br><span class="line">[root@localhost find]# find /root/find/ -mtime -7</span><br><span class="line"><span class="comment">## 需求：保留一周的数据</span></span><br><span class="line">[root@localhost find]# find /root/find/ ! -mtime -7 -delete</span><br></pre></td></tr></table></figure><h3 id="根据用户查找">根据用户查找</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">-user：查找指定用户</span><br><span class="line">-group：查找指定用户组</span><br><span class="line">-nouser：查找没有用户的文件</span><br><span class="line">-nogroup：查找没有用户组的文件</span><br><span class="line"><span class="comment">## 查找属于root用户adm组的文件</span></span><br><span class="line">[root@localhost ~]# find /root/ -user root -group adm -<span class="built_in">ls</span></span><br><span class="line"><span class="comment">## 查找user是zls，或group是adm组的文件</span></span><br><span class="line">[root@localhost ~]# find /root/ \( -group adm -o -user zls \) -<span class="built_in">ls</span></span><br><span class="line">16797763 4 -rw-r--r-- 1 zls root 4 Apr 17 2024 /root/1.txt</span><br><span class="line">16797778 4 -rw-r--r-- 1 zls root 4 Apr 16 2024 /root/2.txt</span><br><span class="line">16797816 4 -rw-r--r-- 1 root adm 4 Apr 17 2024</span><br><span class="line">/root/zls.txt</span><br><span class="line">16851189 4 -rw-r--r-- 1 root adm 4 Apr 16 2024</span><br><span class="line">/root/zls1.txt</span><br><span class="line">16851191 4 -rw-r--r-- 1 root adm 4 Apr 16 2024</span><br><span class="line">/root/zls2.txt</span><br><span class="line">16797780 4 -rw-r--r-- 1 root adm 4 Apr 16 2024</span><br><span class="line">/root/zls3.txt</span><br><span class="line">16797813 4 -rw-r--r-- 1 root adm 4 Apr 16 2024</span><br><span class="line">/root/zls4.txt</span><br><span class="line">[root@localhost ~]# find /root/ \( -user zls -o -group adm \)</span><br><span class="line">-rw-r--r--. 1 zls root 4 Apr 17 2024 /root/1.txt</span><br><span class="line">-rw-r--r--. 1 zls root 4 Apr 16 2024 /root/2.txt</span><br><span class="line">-rw-r--r--. 1 root adm 4 Apr 16 2024 /root/zls1.txt</span><br><span class="line">-rw-r--r--. 1 root adm 4 Apr 16 2024 /root/zls2.txt</span><br><span class="line">-rw-r--r--. 1 root adm 4 Apr 16 2024 /root/zls3.txt</span><br><span class="line">-rw-r--r--. 1 root adm 4 Apr 16 2024 /root/zls4.txt</span><br><span class="line">-rw-r--r--. 1 root adm 4 Apr 17 2024 /root/zls.txt</span><br><span class="line"><span class="comment">## 查找没有用户或者没有组的文件</span></span><br><span class="line">[root@localhost opt]# find /opt/ -nouser -o -nogroup</span><br></pre></td></tr></table></figure><h3 id="根据文件权限查找">根据文件权限查找</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">perm</span><br><span class="line"><span class="comment">## 精确查找文件的权限644</span></span><br><span class="line">[root@localhost opt]# find /opt/ -perm 644 -<span class="built_in">ls</span></span><br><span class="line">16851186 0 -rw-r--r-- 1 1000 oldboyedu 0 Apr 15 2024</span><br><span class="line">/opt/sbit/1.txt</span><br><span class="line">16851188 0 -rw-r--r-- 1 oldboy oldboyedu 0 Apr 15 2024</span><br><span class="line">/opt/sbit/2.txt</span><br><span class="line">8393463 0 -rw-r--r-- 1 1002 root 0 Mar 30 00:19 /opt/1.txt</span><br><span class="line">8393464 0 -rw-r--r-- 1 root 1000 0 Mar 30 00:19 /opt/2.txt</span><br><span class="line"><span class="comment">## -：代表该权限位上，必须包含该数字权限622 rw w w</span></span><br><span class="line">[root@localhost opt]# find /opt/ -perm -622 -<span class="built_in">ls</span></span><br><span class="line">16851181 0 drwxrwxrwt 2 root root 32 Apr 15 2024 /opt/sbit</span><br><span class="line"><span class="comment">## /：拥有者至少有r或w权限, 或者拥有组至少有w权限, 或者匿名至少有w权限</span></span><br><span class="line">[root@zls ~]# find /home -perm /622</span><br><span class="line">8405111 0 drwxr-xr-x 4 root root 77 Mar 30 00:19 /opt/</span><br><span class="line">16777 0 drwxr-sr-x 2 1000 root 19 Apr 15 2024 /opt/test</span><br><span class="line">16779 0 -rw-rw-r-- 1 1000 root 0 Apr 15 2024</span><br><span class="line">/opt/test/1.txt</span><br><span class="line">16851181 0 drwxrwxrwt 2 root root 32 Apr 15 2024 /opt/sbit</span><br><span class="line">16851186 0 -rw-r--r-- 1 1000 oldboyedu 0 Apr 15 2024</span><br><span class="line">/opt/sbit/1.txt</span><br><span class="line">16851188 0 -rw-r--r-- 1 oldboy oldboyedu 0 Apr 15 2024</span><br><span class="line">/opt/sbit/2.txt</span><br><span class="line">8393448 12 -rw------- 1 root root 9567 Apr 16 2024</span><br><span class="line">/opt/.bash_history</span><br><span class="line">8393463 0 -rw-r--r-- 1 1002 root 0 Mar 30 00:19 /opt/1.txt</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="根据深度查找">根据深度查找</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# find /etc/ -maxdepth 1 -<span class="built_in">type</span> d</span><br></pre></td></tr></table></figure><h3 id="动作">动作</h3><table><thead><tr><th>动作</th><th>作用</th></tr></thead><tbody><tr><td>-print</td><td>打印结果（find 默认就打印结果）</td></tr><tr><td>-ls</td><td>查看文件详细信息（如果有逻辑运算符，就只查看逻辑运算符后面文件详细信息，除非 使用小括号整体括起来）</td></tr><tr><td>- delete</td><td>删除查找到的文件（如果有逻辑运算符，就只查看逻辑运算符后面文件详细信息，除非 使用小括号整体括起来）</td></tr><tr><td>-ok</td><td>执行后面的shell命令（会询问）（如果有逻辑运算符，就只查看逻辑运算符后面文件详 细信息，除非使用小括号整体括起来）</td></tr><tr><td>-exec</td><td>执行后面的shell命令（不询问）（如果有逻辑运算符，就只查看逻辑运算符后面文件详 细信息，除非使用小括号整体括起来）</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# find /opt/ -<span class="built_in">type</span> f -o -name <span class="string">&#x27;*st&#x27;</span> -<span class="built_in">exec</span> <span class="built_in">rm</span> -fr &#123;&#125; \;</span><br><span class="line">[root@localhost ~]# find /opt/ -<span class="built_in">type</span> f -o -name <span class="string">&#x27;*st&#x27;</span> -ok <span class="built_in">rm</span> -fr &#123;&#125; \;</span><br><span class="line"><span class="comment">## 以后动作都改为xargs 后面加命令</span></span><br><span class="line">[root@localhost ~]# find /opt/ -<span class="built_in">type</span> f -o -name <span class="string">&#x27;*st&#x27;</span>|xargs <span class="built_in">rm</span> -fr</span><br><span class="line"><span class="comment">## 拷贝</span></span><br><span class="line">[root@localhost ~]# find /root/ -<span class="built_in">type</span> f|xargs <span class="built_in">cp</span> -t /tmp/</span><br><span class="line">[root@localhost ~]# find /root/ -<span class="built_in">type</span> d|xargs -I &#123;&#125; <span class="built_in">cp</span> -r &#123;&#125; /opt/</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux敲门 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>16.rpm包管理</title>
      <link href="/posts/ece47c22.html"/>
      <url>/posts/ece47c22.html</url>
      
        <content type="html"><![CDATA[<div class='wow animate__heartBeat' data-wow-duration='' data-wow-delay='1s' data-wow-offset=''  data-wow-iteration='2' ><div class="note red icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p><a href="https://www.lukeme.top/posts/4c7367cf.html">告别小白，点击直达</a></p></div></div><h3 id="RPM包管理">RPM包管理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># RPM全称 RPM Package Manager 缩写，由红帽开发用于软件包的安装，升级卸载与查询</span></span><br></pre></td></tr></table></figure><p><strong>RPM包名</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tree-  1.6.0  -  10        . el7      .     x86_64    .rpm</span><br><span class="line">包名   版本号   发布了10次   适用于7系系统    系统架构   文件后缀</span><br></pre></td></tr></table></figure><h3 id="Linux中软件包类型">Linux中软件包类型</h3><table><thead><tr><th>分类</th><th>安装</th><th>版本</th></tr></thead><tbody><tr><td>rpm包（需要安装）</td><td>预先编译打包,安装简单</td><td>软件版本偏低</td></tr><tr><td>源码包（需要编译、安装）</td><td>手动编译打包,安装繁琐</td><td>软件版本最新</td></tr><tr><td>二进制包(绿色免安装软件)</td><td>解压即可使用, 安装简单</td><td>版本跟官方保持一致，不能修改源码</td></tr></tbody></table><p>##注意: 不管是源码包，还是rpm包,安装时都可能会有依赖关系</p><h3 id="如何获取RPM包">如何获取RPM包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">1.RedHat光盘或官方网站 （通过挂载的方式访问）</span><br><span class="line">[root@localhost ~]# mount /dev/cdrom /mnt    mount挂载虚拟机设置镜像保持连接状态</span><br><span class="line">mount: /dev/sr0 is write-protected, mounting read-only</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> -1 /mnt/Packages/|<span class="built_in">wc</span> -l     <span class="built_in">ls</span> -1查看内容竖向排列</span><br><span class="line">4022</span><br><span class="line"><span class="built_in">df</span> -h   可以查看挂载情况</span><br><span class="line">[root@lb01 ~]# <span class="built_in">df</span> -h</span><br><span class="line">Filesystem      Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/sda3        19G  1.6G   18G   9% /</span><br><span class="line">devtmpfs        476M     0  476M   0% /dev</span><br><span class="line">tmpfs           487M     0  487M   0% /dev/shm</span><br><span class="line">tmpfs           487M  7.6M  479M   2% /run</span><br><span class="line">tmpfs           487M     0  487M   0% /sys/fs/cgroup</span><br><span class="line">/dev/sda1       497M  120M  378M  25% /boot</span><br><span class="line">tmpfs            98M     0   98M   0% /run/user/0</span><br><span class="line">/dev/sr0        4.3G  4.3G     0 100% /mnt</span><br><span class="line"></span><br><span class="line">2.RPM包官网 http://rpmfind.net/</span><br><span class="line">以后报错中，libCHARSET3-samba4.so .so结尾的文件不存在，需要安装，不知道输入哪个RPM包，去RPM官网查询即可</span><br><span class="line"></span><br><span class="line"><span class="comment">## 各大服务的官网</span></span><br><span class="line">mysql：https://www.mysql.com/</span><br><span class="line">nginx：https://www.nginx.org/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 各大镜像站（yum仓库，yum源）：</span></span><br><span class="line">阿里云：https://developer.aliyun.com/mirror/</span><br><span class="line">网易镜像站：https://mirrors.163.com/</span><br><span class="line">华为源：https://mirrors.huaweicloud.com/</span><br><span class="line">清华源：https://mirrors.tuna.tsinghua.edu.cn/</span><br><span class="line">中科大：https://mirrors.ustc.edu.cn/</span><br></pre></td></tr></table></figure><h3 id="RPM包管理-2">RPM包管理</h3><h3 id="–安装RPM包">–安装RPM包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 语法：</span></span><br><span class="line">rpm [选项] 安装包名</span><br><span class="line">i：install 安装</span><br><span class="line">v：显示安装过程</span><br><span class="line">h：显示进度条</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">--<span class="built_in">test</span>：检测是否能安装成功</span><br><span class="line">--force：强制安装</span><br><span class="line">--nodeps：忽略依赖关系</span><br><span class="line"></span><br><span class="line"><span class="comment">## 本地安装    需要挂载镜像进入到Packages文件里</span></span><br><span class="line">[root@localhost Packages]# rpm -i tree-1.6.0-10.el7.x86_64.rpm  </span><br><span class="line">[root@localhost ~]# rpm -ivh /mnt/Packages/unzip-6.0-19.el7.x86_64.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment">## 远程安装</span></span><br><span class="line">[root@localhost Packages]# rpm -i https://mirrors.aliyun.com/centos/7.9.2009/os/x86_64/Packages/tree-1.6.0-10.el7.x86_64.rpm</span><br><span class="line">[root@localhost Packages]# rpm -ivh https://mirrors.aliyun.com/centos/7.9.2009/os/x86_64/Packages/tree-1.6.0-10.el7.x86_64.rpm     </span><br><span class="line">显示进度条和安装过程</span><br></pre></td></tr></table></figure><h3 id="查询RPM包">查询RPM包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">-q： query 查询</span><br><span class="line">-qa：查询系统内所有安装过的包</span><br><span class="line">-ql：查询软件包安装完后，配置文件、帮助文档、程序....的所在目录（[# rpm -ql nginx）</span><br><span class="line">-qc：查询软件安装后配置文件  conf配置文件（# rpm -qc nginx）</span><br><span class="line">-qf：逆向查询，根据文件名，可以查出该文件是安装了哪个RPM包   （需要完整目录）（# rpm -qf /usr/sbin/nginx）</span><br><span class="line"><span class="comment">## 这个文件/etc/redhat-release属于哪个RPM包，该包的相关信息打印出来</span></span><br><span class="line">1.[root@localhost ~]# rpm -qi $(rpm -qf /etc/redhat-release)</span><br><span class="line">2.[root@localhost ~]# rpm -qf /etc/redhat-release|xargs rpm -qi</span><br><span class="line">3.[root@localhost ~]# rpm -qif /etc/redhat-release</span><br><span class="line"></span><br><span class="line">----</span><br><span class="line"><span class="comment">## -q --scripts 查询安装时要执行的脚本</span></span><br><span class="line">[root@localhost ~]# rpm -q --scripts nginx</span><br><span class="line">----</span><br><span class="line"></span><br><span class="line">-qi：查看已安装安装包的详细信息   (后面跟包名)</span><br><span class="line">-qd：查看帮助文档位置</span><br><span class="line">-qip：可以查看未安装的包详细信息  前提：得有这个包</span><br><span class="line">[root@localhost ~]# rpm -qip /mnt/Packages/zip-3.0-11.el7.x86_64.rpm</span><br><span class="line">-qlp：可以查看未安装的包，安装后会产生哪些文件</span><br><span class="line">[root@localhost ~]# rpm -qlp /mnt/Packages/zip-3.0-11.el7.x86_64.rpm</span><br><span class="line">/usr/bin/zip</span><br><span class="line">/usr/bin/zipcloak</span><br><span class="line">/usr/bin/zipnote</span><br><span class="line">/usr/bin/zipsplit</span><br><span class="line">/usr/share/doc/zip-3.0</span><br><span class="line">/usr/share/doc/zip-3.0/CHANGES</span><br><span class="line">/usr/share/doc/zip-3.0/LICENSE</span><br><span class="line"></span><br><span class="line"><span class="comment">## -q后面接包名</span></span><br><span class="line">[root@localhost ~]# rpm -q tree // 安装过了</span><br><span class="line">tree-1.6.0-10.el7.x86_64</span><br><span class="line">[root@localhost ~]# rpm -q tree // 没有安装</span><br><span class="line">package tree is not installed</span><br><span class="line"><span class="comment">## 过滤查询是否安装</span></span><br><span class="line">[root@localhost ~]# rpm -qa|grep tree</span><br><span class="line">tree-1.6.0-10.el7.x86_64</span><br><span class="line">[root@localhost ~]# rpm -qa|grep mysql</span><br><span class="line">[root@localhost ~]# rpm -qa|grep nginx</span><br><span class="line"><span class="comment">## 查看详细信息</span></span><br><span class="line">[root@localhost ~]# rpm -qi tree</span><br><span class="line">Name : tree</span><br><span class="line">Version : 1.6.0</span><br><span class="line">Release : 10.el7</span><br><span class="line">Architecture: x86_64</span><br><span class="line">Install Date: Fri 19 Apr 2024 08:05:31 PM CST</span><br><span class="line">Group : Applications/File</span><br><span class="line">Size : 89505</span><br><span class="line">License : GPLv2+</span><br><span class="line">Signature : RSA/SHA256, Fri 04 Jul 2014 01:36:46 PM CST, Key ID</span><br><span class="line">24c6a8a7f4a80eb5</span><br><span class="line">Source RPM : tree-1.6.0-10.el7.src.rpm</span><br><span class="line">Build Date : Tue 10 Jun 2014 03:28:53 AM CST</span><br><span class="line">Build Host : worker1.bsys.centos.org</span><br><span class="line">Relocations : (not relocatable)</span><br><span class="line">Packager : CentOS BuildSystem &lt;http://bugs.centos.org&gt;</span><br><span class="line">Vendor : CentOS</span><br><span class="line">URL : http://mama.indstate.edu/users/ice/tree/</span><br><span class="line">Summary : File system tree viewer</span><br><span class="line">Description :</span><br><span class="line">The tree utility recursively displays the contents of directories <span class="keyword">in</span> a</span><br><span class="line">tree-like format. Tree is basically a UNIX port of the DOS tree</span><br><span class="line">utility.</span><br><span class="line"><span class="comment">## 查找安装后程序的配置文件</span></span><br><span class="line">[root@localhost ~]# rpm -qc nginx</span><br><span class="line">/etc/logrotate.d/nginx</span><br><span class="line">/etc/nginx/fastcgi.conf</span><br><span class="line">/etc/nginx/fastcgi.conf.default</span><br><span class="line">/etc/nginx/fastcgi_params</span><br><span class="line">/etc/nginx/fastcgi_params.default</span><br><span class="line">/etc/nginx/koi-utf</span><br><span class="line">/etc/nginx/koi-win</span><br><span class="line">/etc/nginx/mime.types</span><br><span class="line">/etc/nginx/mime.types.default</span><br><span class="line">/etc/nginx/nginx.conf</span><br><span class="line">/etc/nginx/nginx.conf.default</span><br><span class="line">/etc/nginx/scgi_params</span><br><span class="line">/etc/nginx/scgi_params.default</span><br><span class="line">/etc/nginx/uwsgi_params</span><br><span class="line">/etc/nginx/uwsgi_params.default</span><br><span class="line">/etc/nginx/win-utf</span><br><span class="line"><span class="comment">## 逆向查询</span></span><br><span class="line">[root@localhost ~]# rpm -qf /etc/hosts</span><br><span class="line">setup-2.8.71-10.el7.noarch</span><br><span class="line">[root@localhost ~]# rpm -qf /usr/sbin/ifconfig</span><br><span class="line">net-tools-2.0-0.25.20131004git.el7.x86_64</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="卸载RPM包">卸载RPM包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 卸载</span></span><br><span class="line">[root@localhost ~]# rpm -e tree</span><br></pre></td></tr></table></figure><h3 id="升级RPM包">升级RPM包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-U 如果老版本不存在，就全新安装，如果存在有新版即升级</span><br><span class="line">-f 老版本必须存在</span><br><span class="line">[root@localhost ~]# rpm -fvh tree-1.8.0-2.mga8.x86_64.rpm</span><br><span class="line">[root@localhost ~]# rpm -Uvh tree-1.8.0-2.mga8.x86_64.rpm</span><br></pre></td></tr></table></figure><h3 id="rpm总结">rpm总结</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">缺陷</span><br><span class="line">1.rpm包管理无法解决包与包之间的依赖关系</span><br><span class="line">2.rpm包的查询，基本上都需要已经安装过的包</span><br><span class="line"></span><br><span class="line">优点：</span><br><span class="line">1.不需要网络安装</span><br><span class="line">2.安装速度快</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux敲门 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>15.文件解压缩</title>
      <link href="/posts/35303a1a.html"/>
      <url>/posts/35303a1a.html</url>
      
        <content type="html"><![CDATA[<div class='wow animate__heartBeat' data-wow-duration='' data-wow-delay='1s' data-wow-offset=''  data-wow-iteration='2' ><div class="note red icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p><a href="https://www.lukeme.top/posts/4c7367cf.html">告别小白，点击直达</a></p></div></div><h3 id="常见压缩包类型">常见压缩包类型</h3><table><thead><tr><th>格式</th><th>压缩工具</th></tr></thead><tbody><tr><td>.zip</td><td>zip压缩工具</td></tr><tr><td>.gz</td><td>gzip压缩工具，只能压缩文件，会删除源文件（通常配合tar使用）</td></tr><tr><td>bz2</td><td>bzip2压缩工具，只能压缩文件，会删除源文件（通常配合tar使用）</td></tr><tr><td>.tar.gz</td><td>先使用tar命令归档打包，然后使用gzip压缩</td></tr><tr><td>tar.bz2</td><td>先使用tar命令归档打包，然后使用bzip2压缩</td></tr></tbody></table><h3 id="压缩解压命令—gzip">压缩解压命令—gzip</h3><p>注意：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">使用打包压缩命令，最好到需要被打包目录的上级目录,</span><br><span class="line">解压时，-C最好不要指定/目录 可能会覆盖/下某些原文件</span><br><span class="line">[root@localhost ~]# tar xf mysql.tgz -C /  </span><br><span class="line">/etc/profile</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 压缩文件</span></span><br><span class="line">语法：gzip 文件名</span><br><span class="line">[root@localhost ~]# gzip file1</span><br><span class="line">[root@driver-zeng ~]# <span class="built_in">echo</span> 22222|gzip &gt; zls.txt.gz</span><br><span class="line"></span><br><span class="line"><span class="comment">## 解压    -d：解压文件</span></span><br><span class="line"></span><br><span class="line">[root@localhost ~]# gzip -d file1.gz</span><br><span class="line"><span class="comment">## 查看文件类型</span></span><br><span class="line">[root@localhost ~]# file file2.gz</span><br><span class="line">file2.gz: gzip compressed data, was <span class="string">&quot;file2&quot;</span>, from Unix, last modified: Thu Apr</span><br><span class="line">18 17:33:26 2024</span><br><span class="line"></span><br><span class="line"><span class="comment">## 可以直接查看压缩包中文件的内容</span></span><br><span class="line">[root@localhost ~]# zcat file4.gz</span><br><span class="line">xxx</span><br><span class="line"><span class="comment">## 特点：</span></span><br><span class="line">1.压缩包后缀.gz</span><br><span class="line">2.压缩后源文件不存在</span><br><span class="line">3.压缩率很高</span><br><span class="line">4.缺陷就是，不能压缩目录，不能压缩多个文件</span><br><span class="line">5.解压后，压缩包不在了，源文件出来了</span><br><span class="line">6.可以直接使用命令查看压缩包中文件的内容</span><br></pre></td></tr></table></figure><h3 id="压缩解压命令—zip">压缩解压命令—zip</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 安装</span></span><br><span class="line">[root@localhost ~]# yum install -y zip</span><br><span class="line"></span><br><span class="line"><span class="comment">## 语法：</span></span><br><span class="line">zip 包名 文件名...</span><br><span class="line"></span><br><span class="line"><span class="comment">## 压缩文件</span></span><br><span class="line">[root@localhost ~]# zip file1.zip file1</span><br><span class="line"></span><br><span class="line"><span class="comment">## 压缩多个文件</span></span><br><span class="line">[root@localhost ~]# zip file.zip file1 file10</span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看文件类型</span></span><br><span class="line">[root@localhost ~]# file file.zip</span><br><span class="line">file.zip: Zip archive data, at least v1.0 to extract</span><br><span class="line"></span><br><span class="line"><span class="comment">## 压缩目录    -r 包含目录内容一起压缩</span></span><br><span class="line">[root@localhost ~]# zip -r dir1.zip dir1/</span><br><span class="line"></span><br><span class="line"><span class="comment">## 指定路径压缩    压缩test下所有文件到tmp下，文件名是test.zip</span></span><br><span class="line">[root@localhost ~]# zip -r /tmp/test.zip <span class="built_in">test</span>/</span><br><span class="line"></span><br><span class="line"><span class="comment">## 解压</span></span><br><span class="line">[root@localhost ~]# yum install -y unzip</span><br><span class="line">[root@localhost opt]# unzip dir1.zip</span><br><span class="line">[root@localhost tmp]# unzip /opt/dir1.zip解压指定目录文件</span><br><span class="line"><span class="comment">## 查看包里有哪些文件或目录</span></span><br><span class="line">[root@localhost <span class="built_in">local</span>]# unzip -l /opt/dir1.zip</span><br><span class="line">Archive: /opt/dir1.zip</span><br><span class="line">Length Date Time Name</span><br><span class="line">--------- ---------- ----- ----</span><br><span class="line">0 04-18-2024 18:40 dir1/</span><br><span class="line">26 04-18-2024 18:40 dir1/file1.gz</span><br><span class="line">27 04-18-2024 18:40 dir1/file10.gz</span><br><span class="line">26 04-18-2024 18:40 dir1/file2.gz</span><br><span class="line">26 04-18-2024 18:40 dir1/file3.gz</span><br><span class="line">26 04-18-2024 18:40 dir1/file4.gz</span><br><span class="line">261 11 files</span><br><span class="line"><span class="comment">## 特点：</span></span><br><span class="line">1.压缩包后缀.zip</span><br><span class="line">2.压缩后源文件存在</span><br><span class="line">3.压缩率很高</span><br><span class="line">4.默认情况下不能压缩目录，能压缩多个文件，压缩目录需要选项</span><br><span class="line">5.压缩时可以指定压缩包的路径</span><br><span class="line">6.解压后，压缩包还在，源文件出来了</span><br><span class="line">7.不可以直接使用命令查看压缩包中文件的内容</span><br></pre></td></tr></table></figure><h3 id="压缩解压命令—tar">压缩解压命令—tar</h3><table><thead><tr><th>选项</th><th>作用</th></tr></thead><tbody><tr><td>c</td><td>创建归档文件</td></tr><tr><td>f</td><td>指定归档文件的包名</td></tr><tr><td>z</td><td>使用gzip来压缩归档后的文件，xf解压.tar.gz包</td></tr><tr><td>x</td><td>对归档文件进行解压</td></tr><tr><td>v</td><td>显示过程</td></tr><tr><td>t</td><td>查看压缩包中的所有文件和目录</td></tr><tr><td>X</td><td>可以排除多个不想打包的文件，指定文件名   (把不想打包的文件名写入一个文件，X指定这个文件就行，若排除的文件在嵌套目录，则把相对路径写上即可)</td></tr><tr><td>h</td><td>打包软链接的源文件</td></tr><tr><td></td><td></td></tr><tr><td>J</td><td>使用xz压缩归档后的文件，xf 解压.tar.xz包</td></tr><tr><td>-P</td><td>使用绝对路径打包</td></tr><tr><td>j</td><td>使用bzip2压缩归档后的文件，xf解压 .tar.bz2包</td></tr><tr><td>-C</td><td>解压到指定目录</td></tr><tr><td>–exclude</td><td>排除不想要的文件</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## tar命令本身只是一个归档命令</span></span><br><span class="line"><span class="comment">## 语法：</span></span><br><span class="line">tar [选项] 包名 文件...</span><br><span class="line">[root@localhost ~]# file abc.tar</span><br><span class="line">abc.tar: POSIX tar archive (GNU)</span><br><span class="line">[root@localhost ~]# file nginx-1.22.1.tar.gz</span><br><span class="line">nginx-1.22.1.tar.gz: gzip compressed data, from Unix, last modified: Wed Oct 19</span><br><span class="line">16:02:28 2022</span><br><span class="line"><span class="comment">## 文件归档</span></span><br><span class="line">[root@localhost ~]# tar cf dir1.tar dir1</span><br><span class="line"><span class="comment">## 文件归档并指定路径</span></span><br><span class="line">[root@localhost ~]# tar cf /tmp/dir1_xxx.tar dir1</span><br><span class="line"><span class="comment">## 压缩目录</span></span><br><span class="line">[root@localhost ~]# tar zcf dir1.tgz dir1/</span><br><span class="line"><span class="comment">## 压缩并显示过程</span></span><br><span class="line">[root@localhost ~]# tar zcvf dir1.tgz dir1/</span><br><span class="line"><span class="comment">## 解压</span></span><br><span class="line">[root@localhost ~]# tar zxf dir1.tgz</span><br><span class="line"><span class="comment">## 查看</span></span><br><span class="line">[root@localhost ~]# tar tf nginx-1.22.1.tar.gz</span><br><span class="line"><span class="comment">## 解压到指定目录</span></span><br><span class="line">[root@localhost ~]# tar zxf nginx-1.22.1.tar.gz -C /tmp/</span><br><span class="line"><span class="comment">## 打包时排除不想要的文件</span></span><br><span class="line">[root@localhost tmp]# tar zcf root2.tgz --exclude=file6 --exclude=file7 /root</span><br><span class="line">1.归档包后缀.tar</span><br><span class="line">2.归档后源文件存在</span><br><span class="line">3.没有压缩率</span><br><span class="line">4.默认情况下能归档目录，能归档多个文件</span><br><span class="line">5.归档时可以指定归档的路径</span><br><span class="line">6.解压后，压缩包还在，源文件出来了</span><br><span class="line">7.不可以直接使用命令查看压缩包中文件的内容</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#移动海量小文件使用tar</span></span><br><span class="line">[root@localhost abc]# tar czf - ./ | tar xzf - -C /tmp</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux敲门 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>17.yum管理</title>
      <link href="/posts/1efb0820.html"/>
      <url>/posts/1efb0820.html</url>
      
        <content type="html"><![CDATA[<div class='wow animate__heartBeat' data-wow-duration='' data-wow-delay='1s' data-wow-offset=''  data-wow-iteration='2' ><div class="note red icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p><a href="https://www.lukeme.top/posts/4c7367cf.html">告别小白，点击直达</a></p></div></div><h3 id="yum介绍">yum介绍</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">1.联网获取软件</span><br><span class="line">2.基于RPM管理</span><br><span class="line">3.自动解决依赖（前提：1.yum仓库中必须有该依赖包 2.版本要一致）</span><br><span class="line">4.命令简单好记</span><br><span class="line">5.生产最佳实践</span><br><span class="line"></span><br><span class="line">yum是RedHat以及CentOS中的软件包管理器，能够通过互联网下载以rpm结尾的包，并且安装，并可以自动</span><br><span class="line">处理依赖性关系，无需繁琐的一次次下载安装。</span><br><span class="line">yum仓库 | yum源</span><br><span class="line"><span class="comment"># CentOS7和7之前所有版本：YUM</span></span><br><span class="line">yum install -y xx</span><br><span class="line"><span class="comment"># CentOS8以后：dnf</span></span><br><span class="line">dnf install xxx</span><br><span class="line"><span class="comment">## 系统自带的基础包仓库</span></span><br><span class="line">Base源</span><br><span class="line"><span class="comment">## 更换yum源，一定要至少换两个源</span></span><br><span class="line">- Base源 基础包</span><br><span class="line">- epel源 扩展包</span><br></pre></td></tr></table></figure><h3 id="如何配置yum源">如何配置yum源</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">各大镜像源：</span><br><span class="line">阿里云：https://opsx.alibaba.com/mirror</span><br><span class="line">清华源：https://mirrors.tuna.tsinghua.edu.cn/</span><br><span class="line">163源：http://mirrors.163.com/</span><br><span class="line">华为源：https://mirrors.huaweicloud.com/</span><br><span class="line">科大源：http://mirrors.ustc.edu.cn/</span><br></pre></td></tr></table></figure><h3 id="配置Base源">配置Base源</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01 ~]# ll /etc/yum.repos.d/    yum源配置文件</span><br><span class="line"><span class="comment">## 注意：所有的配置文件，必须以repo结尾</span></span><br><span class="line">wget</span><br><span class="line">-O：指定保存的路径和文件名</span><br><span class="line">https://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line">curl -o = wget -O</span><br><span class="line"><span class="comment">## 换源步骤</span></span><br><span class="line">1）清空/etc/yum.repos.d下面所有源配置文件（<span class="built_in">mv</span> <span class="built_in">rm</span>）</span><br><span class="line">[root@localhost ~]# <span class="built_in">mv</span> /etc/yum.repos.d/*.repo /tmp/</span><br><span class="line">[root@localhost ~]# gzip /etc/yum.repos.d/*</span><br><span class="line">2）下载国内各大镜像站源</span><br><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line">curl -o /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="换源">换源</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##使用镜像站源</span></span><br><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-vault-8.5.2111.repo</span><br><span class="line"></span><br><span class="line"><span class="comment">## 其他镜像站换源方式   （缺陷：1.麻烦2.如果不是默认的官方base源，这个替换就不成立）</span></span><br><span class="line">sed -e <span class="string">&#x27;s|^mirrorlist=|#mirrorlist=|g&#x27;</span> \</span><br><span class="line">    -e <span class="string">&#x27;s|^#baseurl=http://mirror.centos.org/centos|baseurl=https://mirrors.tuna.tsinghua.edu.cn/centos|g&#x27;</span> \</span><br><span class="line">    -i.bak \</span><br><span class="line">    /etc/yum.repos.d/CentOS-*.repo</span><br></pre></td></tr></table></figure><h3 id="更换epel源">更换epel源</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# curl -o /etc/yum.repos.d/epel.repo https://mirrors.aliyun.com/repo/epel-7.repo</span><br><span class="line">[root@localhost ~]# ll /etc/yum.repos.d/</span><br><span class="line">total 8</span><br><span class="line">-rw-r--r--. 1 root root 1759 Apr 22 18:55 CentOS-Base.repo</span><br><span class="line">-rw-r--r--. 1 root root 664 Apr 22 19:08 epel.repo</span><br></pre></td></tr></table></figure><h3 id="yum管理命令">yum管理命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#根据命令搜索对应的包名</span></span><br><span class="line">[root@yum_repo ~]# yum provides pstree    注意：yum provides命令只能用于已经安装的软件包</span><br><span class="line">[root@yum_repo ~]# yum search pstree</span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看我当前配置的所有仓库中的可以安装的包</span></span><br><span class="line">[root@localhost ~]# yum list</span><br><span class="line">[root@localhost ~]# yum list|grep net-tools</span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看仓库中指定包的详细信息</span></span><br><span class="line">[root@localhost ~]# yum info 包名</span><br><span class="line">[root@localhost ~]# yum info tree</span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看当前所有可用仓库</span></span><br><span class="line">[root@lb01 yum.repos.d]# yum repolist</span><br><span class="line">Loaded plugins: fastestmirror</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line"><span class="comment">## 仓库ID名字 .repo文件中 [仓库ID]## 仓库描述信息 .repo文件中的name=## 状态：该仓库中有多少rpm包</span></span><br><span class="line">repo <span class="built_in">id</span>                               repo name                                                          status</span><br><span class="line">base/7/x86_64                         CentOS-7 - Base - mirrors.huaweicloud.com                          10,072</span><br><span class="line">extras/7/x86_64                       CentOS-7 - Extras - mirrors.huaweicloud.com                           526</span><br><span class="line">updates/7/x86_64                      CentOS-7 - Updates - mirrors.huaweicloud.com                        5,802</span><br><span class="line">repolist: 16,400</span><br><span class="line">repolist: 30,679<span class="comment">## 所有可用仓库总共包的数量</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看所有仓库信息，可用和不可用的都展示出来</span></span><br><span class="line">[root@localhost ~]# yum repolist all</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="yum安装命令">yum安装命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 安装指定软件</span></span><br><span class="line">[root@localhost ~]# yum install 包名</span><br><span class="line">[root@localhost ~]# yum install vim</span><br><span class="line">Is this ok [y/d/N]:</span><br><span class="line">输入y：<span class="built_in">yes</span>安装</span><br><span class="line">输入d：download 仅下载不安装</span><br><span class="line">输入N：No不安装</span><br><span class="line"><span class="comment">## 免交互安装</span></span><br><span class="line">[root@localhost ~]# yum install vim -y</span><br><span class="line">[root@localhost ~]# yum -y install vim</span><br><span class="line">[root@localhost ~]# yum install -y vim</span><br><span class="line"><span class="comment">## yum安装方式：</span></span><br><span class="line"><span class="comment"># 方式一：安装仓库中的包</span></span><br><span class="line">[root@localhost ~]# yum install vim</span><br><span class="line"><span class="comment"># 方式二：安装本地的包</span></span><br><span class="line">[root@localhost Packages]# yum localinstall -y wget-1.14-18.el7.x86_64.rpm</span><br><span class="line"><span class="comment"># 方式三：远程互联网安装</span></span><br><span class="line">[root@localhost Packages]# yum install -y http://test.driverzeng.com/MySQL_plugins/mha4mysql-node-0.56-0.el6.noarch.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment">## 指定目录下载</span></span><br><span class="line">[root@localhost ~]# yum install --downloadonly --downloaddir=/opt/ nginx</span><br></pre></td></tr></table></figure><h3 id="yum重装-更新-删除">yum重装/更新/删除</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 误删除服务的相关文件重装</span></span><br><span class="line">[root@localhost nginx]# yum reinstall -y nginx</span><br><span class="line"></span><br><span class="line"><span class="comment">## yum查询可以更新的软件</span></span><br><span class="line">[root@localhost nginx]# yum check-update</span><br><span class="line"><span class="comment">## 更新指定软件</span></span><br><span class="line">[root@localhost nginx]# yum update acl -y</span><br><span class="line"><span class="comment">##全部软件都更新（Waring：慎用）</span></span><br><span class="line">[root@localhost nginx]# yum update -y</span><br><span class="line"></span><br><span class="line"><span class="comment">## 删除指定软件</span></span><br><span class="line">[root@localhost nginx]# yum remove -y tree</span><br><span class="line">[root@localhost nginx]# yum erase -y tree</span><br></pre></td></tr></table></figure><h3 id="yum逆向查询-缓存">yum逆向查询/缓存</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查询某个命令属于哪个包</span></span><br><span class="line">[root@localhost nginx]# yum provides */ifconfig</span><br><span class="line"></span><br><span class="line"><span class="comment">## 加载缓存</span></span><br><span class="line">[root@localhost nginx]# yum makecache</span><br><span class="line"><span class="comment">## 清除缓存</span></span><br><span class="line">[root@localhost nginx]# yum clean all</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="爬取zabbix5-0相关所有rpm包">爬取zabbix5.0相关所有rpm包</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://mirrors.aliyun.com/zabbix/zabbix/5.0/rhel/7/x86_64/?spm=a2c6h.25603864.0.0.239b5d4a bvLbEB</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">1.指定下载目录</span><br><span class="line">[root@lb01 ~]# curl -s https://mirrors.aliyun.com/zabbix/zabbix/5.0/rhel/7/x86_64/?spm=a2c6h.25603864.0.0.239b5d4a bvLbEB|awk -F <span class="string">&#x27;&quot;&#x27;</span> <span class="string">&#x27;/rpm/&#123;print &quot;mkdir -p /repo/zabbix/;wget -O /repo/zabbix/&quot;$4&quot; https://mirrors.aliyun.com/zabbix/zabbix/5.0/rhel/7/x86_64/&quot;$4&#125;&#x27;</span>|bash</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2.下载到当前目录</span><br><span class="line">[root@lb01 ~]# curl -s https://mirrors.aliyun.com/zabbix/zabbix/5.0/rhel/7/x86_64|awk -F <span class="string">&#x27;&quot;&#x27;</span> <span class="string">&#x27;/rpm/&#123;print $4&#125;&#x27;</span>|sed <span class="string">&#x27;s#zabbix#https://mirrors.aliyun.com/zabbix/zabbix/5.0/rhel/7/x86_64/zabbix#g&#x27;</span>|xargs wget</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1.curl 网站获取网页内容</span><br><span class="line">[root@lb01 ~]# curl -s https://mirrors.aliyun.com/zabbix/zabbix/5.0/rhel/7/x86_64</span><br><span class="line">2.截取所有rpm包名</span><br><span class="line">[root@lb01 ~]# curl -s https://mirrors.aliyun.com/zabbix/zabbix/5.0/rhel/7/x86_64|awk -F <span class="string">&#x27;&quot;&#x27;</span> <span class="string">&#x27;/rpm/&#123;print $4&#125;&#x27;</span></span><br><span class="line">zabbix-agent-5.0.0-1.el7.x86_64.rpm</span><br><span class="line">zabbix-agent-5.0.1-1.el7.x86_64.rpm</span><br><span class="line">zabbix-agent-5.0.10-1.el7.x86_64.rpm</span><br><span class="line">zabbix-agent-5.0.11-1.el7.x86_64.rpm</span><br><span class="line">3.补全公共下载链接https://mirrors.aliyun.com/zabbix/zabbix/5.0/rhel/7/x86_64/?spm=a2c6h.25603864.0.0.239b5d4a bvLbEB</span><br><span class="line">sed <span class="string">&#x27;s#zabbix#https://mirrors.aliyun.com/zabbix/zabbix/5.0/rhel/7/x86_64/zabbix#g&#x27;</span></span><br><span class="line">4.拼接命令交给wget</span><br><span class="line">[root@lb01 ~]# curl -s https://mirrors.aliyun.com/zabbix/zabbix/5.0/rhel/7/x86_64|awk -F <span class="string">&#x27;&quot;&#x27;</span> <span class="string">&#x27;/rpm/&#123;print $4&#125;&#x27;</span>|sed <span class="string">&#x27;s#zabbix#https://mirrors.aliyun.com/zabbix/zabbix/5.0/rhel/7/x86_64/zabbix#g&#x27;</span>|xargs wget</span><br></pre></td></tr></table></figure><h3 id="yum程序的配置文件">yum程序的配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# <span class="built_in">cat</span> /etc/yum.conf</span><br><span class="line">cachedir=/var/cache/yum/<span class="variable">$basearch</span>/<span class="variable">$releasever</span> //缓存目录</span><br><span class="line">keepcache=0   //缓存软件包, 1启动 0 关闭</span><br><span class="line">debuglevel=2   //调试级别</span><br><span class="line">logfile=/var/log/yum.log //日志记录位置</span><br><span class="line">exactarch=1 //检查平台是否兼容</span><br><span class="line">obsoletes=1 //检查包是否废弃</span><br><span class="line">gpgcheck=1 //检查来源是否合法,需要有制作者的公钥信息</span><br><span class="line">plugins=1 //是否启用查询</span><br><span class="line">installonly_limit=5</span><br><span class="line">bugtracker_url</span><br><span class="line"><span class="comment"># metadata_expire=90m //每小时手动检查元数据</span></span><br><span class="line"><span class="comment"># in /etc/yum.repos.d //包含repos.d目录</span></span><br></pre></td></tr></table></figure><h3 id="yum包组相关命令">yum包组相关命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看有哪些包组</span></span><br><span class="line">[root@localhost ~]# yum <span class="built_in">groups</span> list</span><br><span class="line"><span class="comment"># 安装指定包组</span></span><br><span class="line">[root@localhost ~]# yum <span class="built_in">groups</span> install Development tools Compatibility libraries</span><br><span class="line">Base Debugging Tools</span><br><span class="line"><span class="comment"># 删除指定包组</span></span><br><span class="line">[root@localhost ~]# yum <span class="built_in">groups</span> remove -y Base</span><br></pre></td></tr></table></figure><h3 id="yum包历史相关命令">yum包历史相关命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 查看yum执行的历史</span></span><br><span class="line">[root@localhost ~]# yum <span class="built_in">history</span></span><br><span class="line">Loaded plugins: fastestmirror</span><br><span class="line">ID | Login user | Date and time | Action(s) | Altered</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">6 | root &lt;root&gt; | 2024-04-23 18:05 | Install | 1</span><br><span class="line">5 | root &lt;root&gt; | 2024-04-23 17:09 | Update | 2</span><br><span class="line">4 | root &lt;root&gt; | 2024-03-26 17:36 | Install | 1</span><br><span class="line">3 | root &lt;root&gt; | 2024-03-26 17:31 | Install | 1</span><br><span class="line">2 | root &lt;root&gt; | 2024-03-22 15:55 | Install | 1</span><br><span class="line">1 | System &lt;<span class="built_in">unset</span>&gt; | 2024-03-21 20:50 | Install | 308</span><br><span class="line"><span class="comment">## 查看指定历史记录的详细信息</span></span><br><span class="line">[root@localhost ~]# yum <span class="built_in">history</span> info 6</span><br><span class="line">Loaded plugins: fastestmirror</span><br><span class="line">Transaction ID : 6</span><br><span class="line">Begin time : Tue Apr 23 18:05:41 2024</span><br><span class="line">Begin rpmdb : 311:bc74a8339d5853ce2035d376bffbbeeb40d44ae3</span><br><span class="line">End time : 18:05:42 2024 (1 seconds)</span><br><span class="line">End rpmdb : 312:44280ba9419b586ea77d5fa483785725fe7e9758</span><br><span class="line">User : root &lt;root&gt;</span><br><span class="line">Return-Code : Success</span><br><span class="line">Command Line : install -y tree</span><br><span class="line">Transaction performed with:</span><br><span class="line">Installed rpm-4.11.3-35.el7.x86_64 @anaconda</span><br><span class="line">Installed yum-3.4.3-161.el7.centos.noarch @anaconda</span><br><span class="line">Installed yum-plugin-fastestmirror-1.1.31-50.el7.noarch @anaconda</span><br><span class="line">Packages Altered:</span><br><span class="line">Install tree-1.6.0-10.el7.x86_64 @base</span><br><span class="line"><span class="built_in">history</span> info</span><br><span class="line"><span class="comment">## 回滚指定操作</span></span><br><span class="line">[root@localhost ~]# yum <span class="built_in">history</span> undo 6 -y</span><br></pre></td></tr></table></figure><h2 id="制作yum仓库">制作yum仓库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">条件：</span><br><span class="line">1.制作仓库，一定要有存放rpm包的目录</span><br><span class="line">2.会配置repo仓库文件</span><br><span class="line"><span class="comment">## repo配置文件内容解析</span></span><br><span class="line"><span class="comment"># 仓库名</span></span><br><span class="line">[base]</span><br><span class="line"><span class="comment"># 描述信息</span></span><br><span class="line">name=CentOS-<span class="variable">$releasever</span> - Base - mirrors.aliyun.com</span><br><span class="line"><span class="comment"># 仓库地址</span></span><br><span class="line">baseurl=http://mirrors.aliyun.com/centos/<span class="variable">$releasever</span>/os/<span class="variable">$basearch</span>/</span><br><span class="line"><span class="comment"># 是否开启yum仓库签名机制检测</span></span><br><span class="line">gpgcheck=1 // 0 代表关闭，不检测 1 代表开启，检测</span><br><span class="line"><span class="comment"># gpg钥匙的地址</span></span><br><span class="line">gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7</span><br><span class="line"><span class="comment">## 是否开启yum仓库</span></span><br><span class="line">enabled=0 // 是否开启该仓库，0代表关闭 1代表开启</span><br><span class="line"><span class="comment">## 密钥对</span></span><br><span class="line">钥匙</span><br><span class="line">锁</span><br><span class="line"><span class="comment">## 仓库地址支持的协议：</span></span><br><span class="line">- http:// 远程协议</span><br><span class="line">- https:// 远程协议</span><br><span class="line">- ftp:// 远程协议</span><br><span class="line">- file:// 本地协议，只能访问本机</span><br></pre></td></tr></table></figure><h3 id="制作仓库（本地yum仓库）">制作仓库（本地yum仓库）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.安装createrepo命令</span></span><br><span class="line">[root@localhost ~]# yum install -y createrepo</span><br><span class="line"><span class="comment"># 2.让目录编程yum仓库 createrepo</span></span><br><span class="line">[root@localhost ~]# createrepo /repo/zabbix/</span><br><span class="line">Spawning worker 0 with 475 pkgs</span><br><span class="line"><span class="comment"># 3.配置仓库文件</span></span><br><span class="line">[root@localhost yum.repos.d]# vim zls.repo</span><br><span class="line">[zls_repo]</span><br><span class="line">name=zls<span class="string">&#x27;s yum repository xxxx</span></span><br><span class="line"><span class="string">baseurl=file:///repo/zabbix/</span></span><br><span class="line"><span class="string">gpgcheck=0</span></span><br><span class="line"><span class="string">enabled=1</span></span><br></pre></td></tr></table></figure><h3 id="如何在仓库中新加RPM包">如何在仓库中新加RPM包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.将rpm放入仓库</span></span><br><span class="line">wget <span class="built_in">cp</span> <span class="built_in">mv</span> ...</span><br><span class="line"><span class="comment"># 2.重新更新仓库</span></span><br><span class="line">[root@localhost repo]# createrepo --update /repo</span><br><span class="line"><span class="comment"># 3.用户使用仓库时，需要重新加载缓存</span></span><br><span class="line">[root@localhost ~]# yum makecache</span><br></pre></td></tr></table></figure><p><strong>需求：将/dev/cdrom中的rpm包，拷贝到 /zls/base目录下，然后将该目录制作成本地的yum仓库</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.创建目录</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">mkdir</span> -p /zls/base</span><br><span class="line"><span class="comment"># 2.挂载镜像</span></span><br><span class="line">[root@localhost ~]# mount /dev/cdrom /mnt</span><br><span class="line"><span class="comment"># 3.拷贝rpm包</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cp</span> /mnt/Packages/*.rpm /zls/base/</span><br><span class="line"><span class="comment"># 4.制作仓库</span></span><br><span class="line">[root@localhost ~]# createrepo /zls/base/</span><br><span class="line"><span class="comment"># 5.编写repo文件</span></span><br><span class="line">[root@localhost ~]# vi /etc/yum.repos.d/zls.repo</span><br><span class="line">[zls_repo]</span><br><span class="line">name=zls<span class="string">&#x27;s yum repository xxxx</span></span><br><span class="line"><span class="string">baseurl=file:///repo/</span></span><br><span class="line"><span class="string">gpgcheck=0</span></span><br><span class="line"><span class="string">enabled=1</span></span><br></pre></td></tr></table></figure><h3 id="制作远程yum仓库">制作远程yum仓库</h3><p><strong>环境准备</strong></p><table><thead><tr><th>主机</th><th>ip</th><th>角色</th></tr></thead><tbody><tr><td>yum_repo</td><td>10.0.0.101</td><td>yum仓库</td></tr><tr><td>web01</td><td>10.0.0.102</td><td>使用yum仓库的机器</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 可选协议：</span></span><br><span class="line">- http:// 远程协议</span><br><span class="line">- https:// 远程协议（别考虑）</span><br><span class="line">- ftp:// 远程协议</span><br><span class="line"><span class="comment">## 克隆新的主机修改主机名和IP</span></span><br><span class="line"><span class="comment"># 修改主机名</span></span><br><span class="line">[root@web01 ~]# hostnamectl set-hostname yum_repo</span><br><span class="line">[root@web01 ~]# hostnamectl set-hostname web01</span><br><span class="line"><span class="comment"># 修改IP</span></span><br><span class="line"><span class="comment">## 关闭防火墙</span></span><br><span class="line">[root@yum_repo ~]# systemctl stop firewalld</span><br><span class="line">[root@web01 ~]# systemctl stop firewalld</span><br><span class="line"><span class="comment">## 关闭selinux</span></span><br><span class="line">[root@web01 ~]# setenforce 0</span><br><span class="line">[root@web01 ~]# getenforce</span><br><span class="line">Permissive</span><br></pre></td></tr></table></figure><h3 id="使用ftp制作yum仓库">使用ftp制作yum仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.安装ftp协议的软件</span></span><br><span class="line">[root@yum_repo ~]# yum install -y vsftpd</span><br><span class="line"><span class="comment"># 2.启动vsftpd</span></span><br><span class="line">[root@yum_repo ~]# systemctl start vsftpd</span><br><span class="line">[root@yum_repo ~]# systemctl <span class="built_in">enable</span> vsftpd</span><br><span class="line"><span class="comment"># 3.打开浏览器访问 ftp://10.0.0.101</span></span><br><span class="line"><span class="comment"># 4.查找ftp的目录所在</span></span><br><span class="line">[root@yum_repo pub]# rpm -ql vsftpd|grep pub</span><br><span class="line">/var/ftp/pub</span><br><span class="line"><span class="comment"># 5.pub目录就可以当做yum仓库</span></span><br><span class="line">[root@yum_repo pub]# mount /dev/cdrom /mnt/</span><br><span class="line">[root@yum_repo pub]# <span class="built_in">cp</span> /mnt/Packages/tree-1.6.0-10.el7.x86_64.rpm /mnt/Packages/wget-1.14-18.el7.x86_64.rpm base/</span><br><span class="line"><span class="comment"># 6.安装制作仓库的命令</span></span><br><span class="line">[root@yum_repo ~]# yum install -y createrepo</span><br><span class="line"><span class="comment"># 7.制作yum仓库</span></span><br><span class="line">[root@yum_repo ~]# createrepo /var/ftp/pub/base/</span><br><span class="line">Spawning worker 0 with 2 pkgs</span><br><span class="line">Workers Finished</span><br><span class="line">Saving Primary metadata</span><br><span class="line">Saving file lists metadata</span><br><span class="line">Saving other metadata</span><br><span class="line">Generating sqlite DBs</span><br><span class="line">Sqlite DBs complete</span><br><span class="line"><span class="comment"># 8.准备repo文件</span></span><br><span class="line">[root@yum_repo base]# vim zls_base.repo</span><br><span class="line">[zls_base_repo]</span><br><span class="line">name=<span class="built_in">test</span></span><br><span class="line">baseurl=ftp://10.0.0.101/pub/base/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line"><span class="comment">## 其他用户想要使用该yum源，只需要下载</span></span><br><span class="line">[root@web01 ~]# curl -o /etc/yum.repos.d/zls_base.repo</span><br><span class="line">ftp://10.0.0.101/pub/base/zls_base.repo</span><br><span class="line">[root@web01 ~]# vim /etc/yum.repos.d/xxx.repo</span><br><span class="line">[zls_base_repo]</span><br><span class="line">name=<span class="built_in">test</span></span><br><span class="line">baseurl=ftp://10.0.0.101/pub/base/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br></pre></td></tr></table></figure><h3 id="使用nginx制作远程yum仓库">使用nginx制作远程yum仓库</h3><p><strong>环境准备</strong></p><table><thead><tr><th>主机</th><th>ip</th><th>角色</th></tr></thead><tbody><tr><td>yum_repo</td><td>10.0.0.101</td><td>yum仓库</td></tr><tr><td>web01</td><td>10.0.0.102</td><td>使用yum仓库的机器</td></tr></tbody></table><p><strong>前期准备</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#克隆虚拟机</span></span><br><span class="line"><span class="comment"># 克隆新的主机修改主机名和IP</span></span><br><span class="line">[root@web01 ~]# hostnamectl set-hostname yum_repo</span><br><span class="line">[root@web01 ~]# hostnamectl set-hostname web01</span><br><span class="line"><span class="comment"># 修改IP</span></span><br><span class="line"><span class="comment">## 关闭防火墙</span></span><br><span class="line">[root@yum_repo ~]# systemctl stop firewalld</span><br><span class="line">[root@web01 ~]# systemctl stop firewalld</span><br><span class="line"><span class="comment">## 关闭selinux</span></span><br><span class="line">[root@web01 ~]# setenforce 0</span><br><span class="line">[root@web01 ~]# getenforce</span><br><span class="line">Permissive</span><br></pre></td></tr></table></figure><p><strong>使用nginx制作yum仓库</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1.安装nginx</span></span><br><span class="line">[root@yum_repo ~]# yum -y install nginx</span><br><span class="line"><span class="comment">#2.启动nginx</span></span><br><span class="line">[root@yum_repo ~]# systemctl start nginx</span><br><span class="line">[root@yum_repo ~]# systemctl <span class="built_in">enable</span> nginx</span><br><span class="line"><span class="comment">#3.创建base源和zabbix的yum库</span></span><br><span class="line">[root@yum_repo yum]# <span class="built_in">mkdir</span> /etc/repo/yum/&#123;base,zabbix&#125; -p</span><br><span class="line"></span><br><span class="line">[root@yum_repo yum]# <span class="built_in">mkdir</span> /etc/repo/yum/base/ -p</span><br><span class="line">[root@yum_repo yum]# <span class="built_in">mkdir</span> /etc/repo/yum/zabbix/ -p</span><br><span class="line"><span class="comment">#获取base包</span></span><br><span class="line">[root@web01 ~]# mount /dev/cdrom /mnt/</span><br><span class="line">[root@yum_repo yum]# <span class="built_in">cp</span> /mnt/Packages/* /etc/repo/yum/base/</span><br><span class="line">拷贝爬取的zabbix的包到/etc/repo/yum/zabbix下</span><br><span class="line">[root@lb01 nginx]# <span class="built_in">cp</span> /repo/zabbix/* /etc/repo/yum/zabbix</span><br><span class="line"><span class="comment">#4.安装制作仓库的命令</span></span><br><span class="line">[root@yum_repo ~]# yum install -y createrepo</span><br><span class="line"><span class="comment">#5.制作yum仓库</span></span><br><span class="line">[root@yum_repo yum]# createrepo /etc/repo/yum/base/</span><br><span class="line">[root@yum_repo yum]# createrepo /etc/repo/yum/zabbix/</span><br><span class="line"><span class="comment">#6.修改ngingx配置文件</span></span><br><span class="line">[root@yum_repo nginx]# vim /etc/nginx/nginx.conf</span><br><span class="line"></span><br><span class="line"><span class="comment">#在nginx.confp配置文件中添加以下内容，</span></span><br><span class="line">location / &#123;</span><br><span class="line">    45        autoindex on;</span><br><span class="line">    46        root   /etc/repo/yum;<span class="comment">#指定本地yum仓库位置</span></span><br><span class="line">    47        &#125;</span><br><span class="line">    </span><br><span class="line">   <span class="comment"># 添加位置是在server&#123;&#125;里如下</span></span><br><span class="line">server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        listen       [::]:80;</span><br><span class="line">        server_name  _;</span><br><span class="line">       root         /usr/share/nginx/html;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">        autoindex on;</span><br><span class="line">        root   /etc/repo/yum;</span><br><span class="line">           &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="comment">#或者[root@yum_repo ~]# cat /etc/nginx/conf.d/yum_repo.conf</span></span><br><span class="line">这个前提是，nginx.confp配置文件里没有server&#123; &#125;这个内容，相当于把这段命令写在conf.d配置文件里</span><br><span class="line">server&#123;</span><br><span class="line">listen 80;</span><br><span class="line">server_name _;</span><br><span class="line">location /&#123;</span><br><span class="line">autoindex on;</span><br><span class="line">root /yum_repo;</span><br><span class="line">index index.html;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#检测语法有没有问题</span></span><br><span class="line">[root@yum_repo ~]# nginx -t</span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line"></span><br><span class="line"><span class="comment">#重启nginx</span></span><br><span class="line"> [root@yum_repo ~]# systemctl restart nginx</span><br><span class="line"><span class="comment">#7.准备repo文件</span></span><br><span class="line">[root@yum_repo base]# vim nginx.repo</span><br><span class="line">[nginx_repo]</span><br><span class="line">name=<span class="built_in">test</span></span><br><span class="line">baseurl=10.0.0.101/base/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line"></span><br><span class="line">[nginx_repo]</span><br><span class="line">name=<span class="built_in">test</span></span><br><span class="line">baseurl=10.0.0.101/zabbix/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line">可以将nginx.repo文件放在 /etc/repo/yum/目录下</span><br><span class="line"><span class="comment">#8.切换到web01客户端</span></span><br><span class="line">下载制作的nginx.repo源</span><br><span class="line">[root@web01 ~]# wget -O /etc/yum.repos.d/ http://10.0.0.101/nginx.repo</span><br><span class="line">删除web01客户端其它源，只留nginx.repo源，使用安装rpm包测试我们制作的yum源</span><br></pre></td></tr></table></figure><p><img src="C:%5CUsers%5CDell%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240423210955932.png" alt="image-20240423210955932"></p>]]></content>
      
      
      <categories>
          
          <category> Linux敲门 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>18.进程管理01</title>
      <link href="/posts/610ba7df.html"/>
      <url>/posts/610ba7df.html</url>
      
        <content type="html"><![CDATA[<div class='wow animate__heartBeat' data-wow-duration='' data-wow-delay='1s' data-wow-offset=''  data-wow-iteration='2' ><div class="note red icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p><a href="https://www.lukeme.top/posts/4c7367cf.html">告别小白，点击直达</a></p></div></div><h2 id="进程的基本概述">进程的基本概述</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">程序：它是一个静态的概念，开发人员写好的代码</span><br><span class="line">进程：它是一个动态的概念，将程序运行起来的过程，就叫做进程</span><br><span class="line">运行环境：能让程序正常运行的环境，对应开发语言写的代码，需要对应的环境来运行</span><br></pre></td></tr></table></figure><p><strong>注意:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.当程序运行为进程后，系统会为该进程分配内存，以及运行的身份和权限。 </span><br><span class="line">2.在进程运行的过程中，服务器上会有各种状态来表示当前进程的指标信息。</span><br></pre></td></tr></table></figure><p><strong>进程的生命周期</strong></p><p><img src="https://luay-1302975046.cos.ap-shanghai.myqcloud.com/Pic/image-20240424145131410.png" alt="image-20240424145131410"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#进程/父进程：</span></span><br><span class="line">- 等待：</span><br><span class="line">1）有没有用户的新请求来</span><br><span class="line">2）子进程是否处理完返回结果</span><br><span class="line"><span class="comment">#线程/子进程</span></span><br><span class="line">1）处理请求</span><br><span class="line">2）将结果返回给父进程</span><br><span class="line"><span class="comment">#进程状态：</span></span><br><span class="line">1）正常结束</span><br><span class="line">2）僵尸进程</span><br><span class="line">3）孤儿进程</span><br><span class="line"><span class="comment">#协程：python</span></span><br></pre></td></tr></table></figure><p><strong>僵尸进程</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#僵尸进程：</span></span><br><span class="line">子进程比父进程先结束,父进程没有回收子进程的资源,此时的子进程就称为<span class="string">&quot;僵尸进程&quot;</span></span><br><span class="line"><span class="comment">#产生原因：</span></span><br><span class="line">子进程的结束和父进程的运行是异步的,父进程永远不知道子进程什么时候结束,子进程在结束时，父进程繁忙来不及Wait子进程则会导致，子进程变成<span class="string">&quot;僵尸进程&quot;</span></span><br></pre></td></tr></table></figure><p><strong>孤儿进程</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#孤儿进程：</span></span><br><span class="line">父进程比子进程先结束,子进程还在执行任务，没有父进程管理,此时的子进程就称为<span class="string">&quot;孤儿进程&quot;</span></span><br><span class="line"><span class="comment">#产生原因：</span></span><br><span class="line">子进程的结束和父进程的运行是异步的,父进程永远不知道子进程什么时候结束,当父进程正常完成工作或其他原因被终止,则会导致，子进程变成<span class="string">&quot;孤儿进程&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.当父进程接收到任务调度时，会通过fork派生子进程来处理，那么子进程会集成父进程的衣钵。</span><br><span class="line">2.子进程在处理任务代码时，父进程会进入等待的状态...</span><br><span class="line">3.如果子进程在处理任务过程中，父进程退出了，子进程没有退出，那么这些子进程就没有父进程来管理了，就变成了孤儿进程。</span><br><span class="line">4.每个进程都会有自己的PID号，（process <span class="built_in">id</span>）子进程则PPID</span><br></pre></td></tr></table></figure><h2 id="进程管理命令">进程管理命令</h2><h3 id="ps命令（静态）">ps命令（静态）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">[root@yum_repo ~]# ps aux[root@yum_repo ~]# ps -ef也可以</span><br><span class="line">a：显示系统中所有和终端相关的进程</span><br><span class="line">u：显示每个进程运行的用户</span><br><span class="line">x：显示系统中所有和终端无关的进程</span><br><span class="line">[root@yum_repo ~]# ps aux|<span class="built_in">head</span></span><br><span class="line">USER        PID %CPU %MEM    VSZ   RSS   TTY    STAT START   TIME   COMMAND</span><br><span class="line">root         1  0.0  0.6 127864  6500    ?      Ss   08:38   0:01   /usr/lib/systemd/systemd --switched-root --system --deserialize 22</span><br><span class="line">root         2  0.0  0.0      0     0    ?      S    08:38   0:00   [kthreadd]</span><br><span class="line">root         3  0.0  0.0      0     0    ?      S    08:38   0:00   [ksoftirqd/0]</span><br><span class="line">root         5  0.0  0.0      0     0    ?      S&lt;   08:38   0:00   [kworker/0:0H]</span><br><span class="line">root         6  0.0  0.0      0     0    ?      S    08:38   0:00   [kworker/u256:0]</span><br><span class="line"></span><br><span class="line"><span class="comment">#个列代信息表意思</span></span><br><span class="line">USER：运行程序的用户</span><br><span class="line">PID：每个进程运行起来后，都会有自己的一个PID号，进程号Process ID</span><br><span class="line">%CPU：该进程占用CPU的百分比</span><br><span class="line">%MEM：该进程占用内存的百分比</span><br><span class="line">VSZ：该进程占用虚拟内存的大小</span><br><span class="line">RSS：该进程占用真实内存的大小</span><br><span class="line">TTY：终端</span><br><span class="line">- ?：由内核发起的终端</span><br><span class="line">- pts/0 pts/1：用户的虚拟终端</span><br><span class="line">- tty1：物理终端</span><br><span class="line">STAT：程序运行状态</span><br><span class="line">START：服务启动的时间</span><br><span class="line">TIME：该进程实际使用CPU的运行时间</span><br><span class="line">COMMAND：服务运行起来的命令</span><br><span class="line"></span><br><span class="line"><span class="comment">#STAT：状态</span></span><br><span class="line">D：无法中断的休眠状态（通IO的进程） 磁盘IO Input/Output 吞吐量（磁盘既写入又输出，例如tar打包数据时候）</span><br><span class="line">R：Running 正在运行的进程</span><br><span class="line">S：Sleeping 处于休眠状态的进程</span><br><span class="line">T：被暂停的进程状态  （Ctrl+z暂停进程）</span><br><span class="line">Z: 僵尸进程</span><br><span class="line">&lt;：优先级较高的进程</span><br><span class="line">N：优先级较低的进程</span><br><span class="line">s：父进程（并且它下面有子进程在运行）</span><br><span class="line">l：以线程的方式运行的进程</span><br><span class="line">|：多进程</span><br><span class="line">+：在前台运行的进程</span><br><span class="line">L：被锁进内存页的进程</span><br><span class="line">X:死掉的进程（少见）</span><br><span class="line">W:进入内存交换（从内核2.6开始无效）</span><br></pre></td></tr></table></figure><h2 id="stat命令">stat命令</h2><h3 id="介绍">介绍</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##stat命令来自英文单词status的缩写，其功能是显示文件的状态信息。在Linux系统中，每个文件都有3个“历史时间”——最后访问时间（ATIME）、最后修改时间（MTIME）、最后更改时间（CTIME），用户可以使用stat命令查看到它们，进而判别有没有其他人修改过文件内容。</span></span><br></pre></td></tr></table></figure><p><img src="https://luay-1302975046.cos.ap-shanghai.myqcloud.com/Pic/image-20240505095811234.png" alt="image-20240505095811234"></p><h3 id="应用">应用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##[root@localhost ~]# stat /etc/passwd</span></span><br><span class="line">  File: ‘/etc/passwd’</span><br><span class="line">  Size: 945       Blocks: 8          IO Block: 4096   regular file</span><br><span class="line">Device: fd00h/64768dInode: 8902609     Links: 1</span><br><span class="line">Access: (0644/-rw-r--r--)  Uid: (    0/    root)   Gid: (    0/    root)</span><br><span class="line">Context: system_u:object_r:passwd_file_t:s0</span><br><span class="line">Access: 2024-04-21 21:52:14.512000577 +0800</span><br><span class="line">Modify: 2024-04-20 13:49:48.339236224 +0800</span><br><span class="line">Change: 2024-04-20 13:49:48.341236224 +0800</span><br><span class="line"> Birth: -</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## -c直接看权限</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">stat</span> -c%a /etc/passwd</span><br><span class="line">644</span><br><span class="line">[root@localhost ~]# <span class="built_in">stat</span> -c%A /etc/passwd</span><br><span class="line">-rw-r--r--</span><br><span class="line"></span><br><span class="line"><span class="comment">##-c直接看inode结点号</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">stat</span> -c%i /etc/passwd</span><br><span class="line">8902609</span><br><span class="line"></span><br><span class="line"><span class="comment">##-c直接看uid和属主</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">stat</span> -c%u /etc/passwd</span><br><span class="line">0</span><br><span class="line">[root@localhost ~]# <span class="built_in">stat</span> -c%U /etc/passwd</span><br><span class="line">root</span><br><span class="line"></span><br><span class="line"><span class="comment">##-c直接看gid和属组</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">stat</span> -c%g /etc/passwd</span><br><span class="line">0</span><br><span class="line">[root@localhost ~]# <span class="built_in">stat</span> -c%G /etc/passwd</span><br><span class="line">root</span><br><span class="line"></span><br><span class="line"><span class="comment">##-c直接看文件大小</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">stat</span> -c%s /etc/passwd</span><br><span class="line">945</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## -f</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">stat</span> -f /etc/passwd</span><br><span class="line">  File: <span class="string">&quot;/etc/passwd&quot;</span></span><br><span class="line">    ID: fd0000000000 Namelen: 255     Type: xfs</span><br><span class="line">Block size: 4096       Fundamental block size: 4096</span><br><span class="line">Blocks: Total: 2361856    Free: 1896798    Available: 1896798</span><br><span class="line">Inodes: Total: 4728832    Free: 4664790</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-c后可以跟哪些占位符</span><br><span class="line"><span class="built_in">stat</span> -c %a file显示文件的八进制权限</span><br><span class="line"><span class="built_in">stat</span> -c %N file显示完整路径</span><br><span class="line"><span class="built_in">stat</span> -c %n file显示文件名。</span><br><span class="line"><span class="built_in">stat</span> -c %x file显示最后访问时间</span><br><span class="line"><span class="built_in">stat</span> -c %y file显示最后修改时间</span><br><span class="line"><span class="built_in">stat</span> -c <span class="string">&quot;%n %s %y&quot;</span> filename.txt这将输出文件名、文件大小和最后修改时间。</span><br></pre></td></tr></table></figure><h3 id="内存-端口">内存/端口</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># free 查看内存信息</span></span><br><span class="line">free -h  以人类可读方式读取显示内存信息</span><br><span class="line"></span><br><span class="line"><span class="comment"># 端口：</span></span><br><span class="line">[root@localhost ~]# netstat -lntup</span><br><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address Foreign Address State</span><br><span class="line">PID/Program name</span><br><span class="line">tcp 0 0 0.0.0.0:22 0.0.0.0:* LISTEN</span><br><span class="line">6866/sshd</span><br><span class="line">tcp 0 0 127.0.0.1:25 0.0.0.0:* LISTEN</span><br><span class="line">6950/master</span><br><span class="line">tcp6 0 0 :::22 :::* LISTEN</span><br><span class="line">6866/sshd</span><br><span class="line">tcp6 0 0 ::1:25 :::* LISTEN</span><br><span class="line">6950/master</span><br></pre></td></tr></table></figure><h4 id="ps其他选项">ps其他选项</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看最占用内存的进程</span></span><br><span class="line">[root@yum_repo ~]# ps aux|<span class="built_in">sort</span> -k 4 -nr</span><br><span class="line">[root@yum_repo ~]# ps aux --<span class="built_in">sort</span> %mem   (默认占比最小的显示最前)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义列</span></span><br><span class="line">[root@yum_repo ~]# ps axo user,pid,ppid,%mem,<span class="built_in">command</span>,%cpu</span><br><span class="line"></span><br><span class="line"><span class="comment">#如何检测服务是否启动成功？</span></span><br><span class="line">1.先查还有没有这个服务</span><br><span class="line">[root@localhost ~]# ps aux|grep nginx</span><br><span class="line">root 10021 0.0 0.0 39304 940 ? Ss 16:44 0:00 nginx: master</span><br><span class="line">process /usr/sbin/nginx</span><br><span class="line">nginx 10022 0.0 0.1 39692 1896 ? S 16:44 0:00 nginx: worker</span><br><span class="line">process</span><br><span class="line">2.使用端口号命令来查看该端口是否被监听。如果端口处于监听状态，则说明服务已经启动（nginx默认80端口，http协议）</span><br><span class="line"></span><br><span class="line">[root@lb01 ~]# netstat -lntup</span><br><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    </span><br><span class="line">tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      8752/nginx: master  </span><br><span class="line">tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      6625/sshd           </span><br><span class="line">tcp        0      0 127.0.0.1:25            0.0.0.0:*               LISTEN      6708/master         </span><br><span class="line">tcp6       0      0 :::80                   :::*                    LISTEN      8752/nginx: master  </span><br><span class="line">tcp6       0      0 :::22                   :::*                    LISTEN      6625/sshd           </span><br><span class="line">tcp6       0      0 ::1:25                  :::*                    LISTEN      6708/master</span><br><span class="line">[root@lb01 ~]# netstat -tulun</span><br><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State      </span><br><span class="line">tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN</span><br><span class="line"></span><br><span class="line"><span class="comment">## 写脚本用，判断服务是否存活</span></span><br><span class="line">[root@yum_repo ~]# ps aux |grep nginx|grep -v grep</span><br><span class="line">[root@yum_repo ~]# ps aux|grep nginx</span><br><span class="line">root 19740 0.0 0.1 39312 1044 ? Ss 12:00 0:00 nginx: master process /usr/sbin/nginx</span><br><span class="line">nginx 19741 0.0 0.1 39700 1816 ? S 12:00 0:00 nginx: worker process</span><br><span class="line">nginx 19742 0.0 0.1 39700 1816 ? S 12:00 0:00 nginx: worker process</span><br><span class="line">nginx 19759 0.0 0.1 39700 1816 ? S 12:00 0:00 nginx: worker process</span><br><span class="line">nginx 19760 0.0 0.1 39700 1556 ? S 12:00 0:00 nginx: worker process</span><br><span class="line">root 19823 0.0 0.0 112812 980 pts/2 R+ 12:05 0:00 grep -- color=auto nginx</span><br><span class="line"></span><br><span class="line">[root@yum_repo ~]# ps aux|grep [n]ginx grep nginx</span><br><span class="line">root 19823 0.0 0.0 112812 980 pts/2 R+ 12:05 0:00 grep --  color=auto [n]ginx</span><br><span class="line"></span><br><span class="line"><span class="comment">#检索pid号码 pgrep</span></span><br><span class="line"><span class="comment">#pgrep常用参数, -l -a</span></span><br><span class="line">[root@zls ~]# pgrep sshd</span><br><span class="line">869</span><br><span class="line">1194</span><br><span class="line">1307</span><br><span class="line">1574</span><br><span class="line">[root@zls ~]# pgrep -l sshd显示进程名及ID</span><br><span class="line">869 sshd</span><br><span class="line">1194 sshd</span><br><span class="line">1307 sshd</span><br><span class="line">1574 sshd</span><br><span class="line">[root@zls ~]# pgrep -l -a sshd</span><br><span class="line">869 /usr/sbin/sshd -D</span><br><span class="line">1194 sshd: root@pts/0</span><br><span class="line">1307 sshd: root@pts/1</span><br><span class="line">1574 sshd: root@pts/2</span><br><span class="line"><span class="comment">#查看进程的pid</span></span><br><span class="line">[root@zls ~]# pidof sshd</span><br><span class="line">1574 1307 1194 869</span><br><span class="line"><span class="comment">## 树状形式显示进程    需要安装psmisc支持pstree</span></span><br><span class="line">[root@yum_repo ~]# pstree</span><br><span class="line">systemd─┬─NetworkManager───2*[&#123;NetworkManager&#125;]</span><br><span class="line">├─VGAuthService</span><br><span class="line">├─agetty</span><br><span class="line">├─auditd───&#123;auditd&#125;</span><br><span class="line">├─crond───crond───sh───ntpdate</span><br><span class="line">├─dbus-daemon</span><br><span class="line">├─gssproxy───5*[&#123;gssproxy&#125;]</span><br><span class="line">├─nginx───20*[nginx]</span><br><span class="line">├─polkitd───6*[&#123;polkitd&#125;]</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux敲门 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>19.系统负载</title>
      <link href="/posts/17977f57.html"/>
      <url>/posts/17977f57.html</url>
      
        <content type="html"><![CDATA[<div class='wow animate__heartBeat' data-wow-duration='' data-wow-delay='1s' data-wow-offset=''  data-wow-iteration='2' ><div class="note red icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p><a href="https://www.lukeme.top/posts/4c7367cf.html">告别小白，点击直达</a></p></div></div><h3 id="进程优先级">进程优先级</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">作用：可以让优先级高的进程，优先使用系统资源，内存、CPU、磁盘、文件描述符...</span><br><span class="line"></span><br><span class="line"><span class="built_in">nice</span>值越高：表示优先级越低，例如19，该进程容易将CPU使用量让给其他进程。</span><br><span class="line"><span class="built_in">nice</span>值越低：表示优先级越高，例如-20，该进程更不倾向于让出CPU。</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 查看优先级</span></span><br><span class="line">[root@localhost ~]# top -n 1 -p 6884</span><br><span class="line">[root@localhost ~]# ps axo pid,user,<span class="built_in">nice</span>,<span class="built_in">command</span>|grep sshd</span><br><span class="line"><span class="comment">## 配置优先级</span></span><br><span class="line"><span class="comment"># 在进程启动命令之前，加上nice</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">nice</span> -n 优先级（-20 ~ 20） 程序启动命令（systemctl不行）</span><br><span class="line"><span class="comment">## 配置nginx优先级</span></span><br><span class="line"><span class="comment"># 1.正常启动nginx找到启动命令</span></span><br><span class="line">[root@localhost ~]# systemctl start nginx</span><br><span class="line">[root@localhost ~]# ps -ef|grep nginx</span><br><span class="line">root 10691 1 0 18:08 ? 00:00:00 nginx: master process</span><br><span class="line">/usr/sbin/nginx</span><br><span class="line"><span class="comment"># 2.先停止服务</span></span><br><span class="line">[root@localhost ~]# systemctl stop nginx</span><br><span class="line"><span class="comment"># 3.配置优先级启动</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">nice</span> -n -15 /usr/sbin/nginx</span><br><span class="line"><span class="comment"># 4.检查是否启动成功</span></span><br><span class="line">[root@localhost ~]# ps -ef|grep nginx</span><br><span class="line">[root@localhost ~]# netstat -lntup|grep nginx</span><br><span class="line">tcp 0 0 0.0.0.0:80 0.0.0.0:* LISTEN</span><br><span class="line">10770/nginx: master</span><br><span class="line">tcp6 0 0 :::80 :::* LISTEN</span><br><span class="line">10770/nginx: master</span><br><span class="line"><span class="comment"># 5.检查优先级</span></span><br><span class="line">[root@localhost ~]# top -p 10770</span><br><span class="line">PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND</span><br><span class="line">10770 root 5 -15</span><br><span class="line">39304 1068 124 S 0.0 0.1 0:00.00 nginx</span><br></pre></td></tr></table></figure><p><strong>Linux假死</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ping 通一台机器，一定能ssh连上这台机器吗？</span></span><br><span class="line">不一定 ping协议：icmp</span><br><span class="line">原因：ping 通，只能能说明icmp协议是通的，不能说明ssh协议是通的</span><br><span class="line"><span class="comment">#ping 不通一台机器，一定ssh连不上这台机器吗？</span></span><br><span class="line">不一定 ping协议：icmp</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Linux后台进程管理">Linux后台进程管理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如何将进程放入后台运行</span></span><br><span class="line"><span class="comment"># 1.方法一：在想要执行的命令后面加上&amp;</span></span><br><span class="line">[root@localhost ~]# ping baidu.com &amp;</span><br><span class="line">[root@localhost ~]# ping baidu.com &gt;&gt; /tmp/1.txt &amp;</span><br><span class="line"><span class="comment"># 2.方法二：在需要放入后台的命令前面加上nohup 后面加上 &amp;</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">nohup</span> ping baidu.com &amp; // 在当前目录下生成一个nohup.out文件，</span><br><span class="line">所有输出结果会放入该文件</span><br><span class="line"><span class="comment"># 3.方法三：将进程先暂停到后台 输入：bg 将程序放入后台运行（background）</span></span><br><span class="line">[root@localhost ~]# ping baidu.com</span><br><span class="line">Ctrl + Z // 将程序暂停到后台</span><br><span class="line"><span class="built_in">bg</span> // 将暂停的程序放入后台运行</span><br><span class="line"><span class="built_in">fg</span> // 将暂停的程序调到前台运行 根据编号，调用指定的进程到前台</span><br><span class="line"><span class="built_in">jobs</span> // 查看后台暂停的程序有哪些</span><br><span class="line"><span class="comment"># 4.方法四：使用screen，开启新屏幕</span></span><br><span class="line">[root@localhost ~]# yum install -y screen</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看screen后台运行任务</span></span><br><span class="line">[root@localhost ~]# screen -<span class="built_in">ls</span></span><br><span class="line">[root@localhost ~]# screen -list</span><br><span class="line">There are screens on:</span><br><span class="line">11050.sina (Detached)</span><br><span class="line"><span class="comment">## 创建卷轴</span></span><br><span class="line">[root@localhost ~]# screen // 没有命名的卷轴</span><br><span class="line">[root@localhost ~]# screen -S baidu // 指定名字</span><br><span class="line"><span class="comment">## 封印 回到前台界面</span></span><br><span class="line">Ctrl + a + d</span><br><span class="line"><span class="comment">## 删除窗口</span></span><br><span class="line">[root@localhost ~]# screen -S sina -X quit</span><br></pre></td></tr></table></figure><h3 id="系统平均负载">系统平均负载</h3><p>每次发现系统变慢时，我们通常做的第一件事，就是执行top或者uptime命令，来了解系统的负载情况。平均负载与CPU使用率并没有直接关系。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 查看系统负载情况</span></span><br><span class="line">[root@localhost ~]# w</span><br><span class="line">19:36:06 up 3:36, 3 <span class="built_in">users</span>, load average: 0.00, 0.01, 0.05</span><br><span class="line">[root@localhost ~]# <span class="built_in">uptime</span></span><br><span class="line">19:36:10 up 3:36, 3 <span class="built_in">users</span>, load average: 0.00, 0.01, 0.05</span><br><span class="line">[root@localhost ~]# top -n 1</span><br><span class="line">top - 19:36:15 up 3:36, 3 <span class="built_in">users</span>, load average: 0.00, 0.01, 0.05</span><br></pre></td></tr></table></figure><p><font color='red'><strong>平均负载是指，单位时间内，系统处于可运行状态和不可中断状态的平均进程数，也就是平均活跃进程数</strong></font></p><p><strong>可运行状态和不可中断状态是什么？</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.可运行状态进程，是指正在使用CPU或者正在等待CPU的进程，也就是我们用PS命令看的处于R状态的进程</span><br><span class="line">2.不可中断进程，（你在做什么事情的时候是不能被打断的呢？...不可描述）系统中最常见的是等待硬件设备的IO相应，也就是我们PS命令中看到的D状态（也成为Disk Sleep）的进程。平均负载其实就是单位时间内的活跃进程数</span><br></pre></td></tr></table></figure><p><strong>平均负载多少时合理？</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">最理想的状态是每个CPU上都刚还运行着一个进程，这样每个CPU都得到了充分利用。</span><br><span class="line">所以在评判负载时，首先你要知道系统有几个CPU，这可以通过top命令获取，或grep <span class="string">&#x27;model name&#x27;</span></span><br><span class="line">/proc/cpuinfo</span><br><span class="line"><span class="comment">## 如何查看当前系统CPU核心数</span></span><br><span class="line">[root@localhost ~]# top</span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> /proc/cpuinfo</span><br><span class="line">[root@localhost ~]# lscpu</span><br><span class="line">假设现在在4，2，1核的CPU上，如果平均负载为2时，意味着什么呢？</span><br><span class="line">1.在4个CPU的系统上，意味着CPU有50%空闲。</span><br><span class="line">2.在2个CPU的系统上，以为这所有的CPU都刚好完全被占用。</span><br><span class="line">3.在1个CPU的系统上，则意味着有一半的进程竞争不到CPU。</span><br><span class="line"></span><br><span class="line"><span class="comment">#三个值关注哪个合理</span></span><br><span class="line">1）三个值，不能只关注其中一个值（三个都要看）</span><br><span class="line">2）不能根据1分钟负载低情况来判断，当前负载处于下降状态（不关注服务器的问题）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#计算方式</span></span><br><span class="line">假设我们在有2个CPU系统上看到平均负载为2.73，6.90，12.98那么说明在过去1分钟内，系统有136%的超载</span><br><span class="line">1分钟：（2.73/2*100%=136%）</span><br><span class="line">5分钟：（6.90/2*100%=345%）</span><br><span class="line">15分钟：(12.98/2*100%=649%)</span><br><span class="line">计算公式：（负载/核心数）*100%</span><br></pre></td></tr></table></figure><p><strong>负载过高排查</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">web01机器很卡，找出原因</span><br><span class="line"><span class="comment">### 压测命令</span></span><br><span class="line">stress （K8S）是Linux系统压力测试工具，这里我们用作异常进程模拟平均负载升高的场景</span><br><span class="line"><span class="comment">##################################################################</span></span><br><span class="line"><span class="comment">### 排查工具</span></span><br><span class="line">mpstat是多核CPU性能分析工具，用来实时检查每个CPU的性能指标，以及所有CPU的平均指标。</span><br><span class="line">pidstat是一个常用的进程性能分析工具，用来实时查看进程的CPU，内存，IO，以及上下文切换等性能指标。</span><br></pre></td></tr></table></figure><h3 id="CPU对负载影响">CPU对负载影响</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# yum intall -y sysstat</span><br><span class="line"><span class="comment">## 分析CPU</span></span><br><span class="line">[root@localhost ~]# mpstat -P ALL 1</span><br><span class="line">[root@localhost ~]# top</span><br><span class="line">%Cpu0 : 99.2 us, 0.0 sy, 0.0 ni, 0.0 <span class="built_in">id</span>, 0.0 wa, 0.0 hi, 0.8 si, 0.0 st</span><br><span class="line">%Cpu1 :100.0 us, 0.0 sy, 0.0 ni, 0.0 <span class="built_in">id</span>, 0.0 wa, 0.0 hi, 0.0 si, 0.0 st</span><br><span class="line">%Cpu2 : 0.0 us, 0.0 sy, 0.0 ni, 99.0 <span class="built_in">id</span>, 0.0 wa, 0.0 hi, 1.0 si, 0.0 st</span><br><span class="line">%Cpu3 :100.0 us, 0.0 sy, 0.0 ni, 0.0 <span class="built_in">id</span>, 0.0 wa, 0.0 hi, 0.0 si, 0.0 st</span><br><span class="line">[root@localhost ~]# pidstat -u 5 1</span><br><span class="line">Linux 3.10.0-957.el7.x86_64 (localhost.localdomain) 04/26/2024 _x86_64_(4 CPU)</span><br><span class="line">08:21:50 PM UID PID %usr %system %guest %CPU CPU Command</span><br><span class="line">08:21:55 PM 0 9 0.00 0.20 0.00 0.20 0 rcu_sched</span><br><span class="line">08:21:55 PM 0 60 0.00 0.20 0.00 0.20 0 kworker/0:1</span><br><span class="line">08:21:55 PM 0 6618 0.00 0.20 0.00 0.20 0 sshd</span><br><span class="line">08:21:55 PM 0 6803 99.60 0.20 0.00 99.80 3 java</span><br><span class="line">08:21:55 PM 0 6804 99.40 0.40 0.00 99.80 2 java</span><br><span class="line">08:21:55 PM 0 6805 99.60 0.40 0.00 100.00 1 java</span><br><span class="line">08:21:55 PM 0 6815 0.00 0.20 0.00 0.20 0 pidstat</span><br><span class="line">Average: UID PID %usr %system %guest %CPU CPU Command</span><br><span class="line">Average: 0 9 0.00 0.20 0.00 0.20 - rcu_sched</span><br><span class="line">Average: 0 60 0.00 0.20 0.00 0.20 - kworker/0:1</span><br><span class="line">Average: 0 6618 0.00 0.20 0.00 0.20 - sshd</span><br><span class="line">Average: 0 6803 99.60 0.20 0.00 99.80 - java</span><br><span class="line">Average: 0 6804 99.40 0.40 0.00 99.80 - java</span><br><span class="line">Average: 0 6805 99.60 0.40 0.00 100.00 - java</span><br><span class="line">Average: 0 6815 0.00 0.20 0.00 0.20 - pidstat</span><br><span class="line"><span class="comment">## 查找对应程序的日志</span></span><br><span class="line"><span class="built_in">tail</span> -f /var/log/nginx/access.log</span><br><span class="line">tial -f /var/log/java/xxxx.log</span><br><span class="line">error：找到报错</span><br><span class="line"><span class="comment">## 将日志交给开发处理/分析</span></span><br></pre></td></tr></table></figure><h3 id="测试一下磁盘IO对负载影响">测试一下磁盘IO对负载影响</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## IO对CPU的影响</span></span><br><span class="line">[root@localhost ~]# mpstat -P ALL 3</span><br><span class="line">Linux 3.10.0-957.el7.x86_64 (localhost.localdomain) 04/26/2024 _x86_64_(4 CPU)</span><br><span class="line">08:29:48 PM CPU %usr %<span class="built_in">nice</span> %sys %iowait %irq %soft %steal %guest %gnice %idle</span><br><span class="line">08:29:51 PM all 0.17 0.00 73.85 0.00 0.00 0.00 0.00 0.00 0.00 25.98</span><br><span class="line">08:29:51 PM 0 0.00 0.00 66.93 0.00 0.00 0.00 0.00 0.00 0.00 33.07</span><br><span class="line">08:29:51 PM 1 0.00 0.00 68.15 0.00 0.00 0.00 0.00 0.00 0.00 31.85</span><br><span class="line">08:29:51 PM 2 0.00 0.00 79.87 0.00 0.00 0.00 0.00 0.00 0.00 20.13</span><br><span class="line">08:29:51 PM 3 0.00 0.00 78.92 0.00 0.00 0.00 0.00 0.00 0.00 21.08</span><br><span class="line"><span class="comment">## iostat 查看磁盘IO信息</span></span><br><span class="line">[root@localhost ~]# iostat</span><br><span class="line">Linux 3.10.0-957.el7.x86_64 (localhost.localdomain) 04/26/2024 _x86_64_(4 CPU)</span><br><span class="line">avg-cpu: %user %<span class="built_in">nice</span> %system %iowait %steal %idle</span><br><span class="line">16.40 0.00 3.49 0.01 0.00 80.10</span><br><span class="line">Device: tps kB_read/s kB_wrtn/s kB_read kB_wrtn</span><br><span class="line">scd0 0.01 0.53 0.00 1028 0</span><br><span class="line">sda 6.23 283.56 8.79 548598 17015</span><br><span class="line">[root@localhost ~]# pidstat -u 5 1</span><br><span class="line">08:30:36 PM 0 6831 0.40 76.74 0.00 77.14 3 stress</span><br><span class="line">08:30:36 PM 0 6832 0.00 78.13 0.00 78.13 1 stress</span><br><span class="line">08:30:36 PM 0 6833 0.00 74.55 0.00 74.55 3 stress</span><br></pre></td></tr></table></figure><h3 id="测试大量进程对负载影响">测试大量进程对负载影响</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# mpstat -P ALL 3</span><br><span class="line">Linux 3.10.0-957.el7.x86_64 (localhost.localdomain) 04/26/2024 _x86_64_(4 CPU)</span><br><span class="line">08:33:45 PM CPU %usr %<span class="built_in">nice</span> %sys %iowait %irq %soft %steal %guest %gnice %idle</span><br><span class="line">08:33:48 PM all 53.94 0.00 0.25 0.00 0.00 0.25 0.00 0.00 0.00 45.57</span><br><span class="line">08:33:48 PM 0 53.00 0.00 0.50 0.00 0.00 0.00 0.00 0.00 0.00 46.50</span><br><span class="line">08:33:48 PM 1 54.41 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 45.59</span><br><span class="line">08:33:48 PM 2 52.50 0.00 0.50 0.00 0.00 0.50 0.00 0.00 0.00 46.50</span><br><span class="line">08:33:48 PM 3 55.02 0.00 0.00 0.00 0.00 0.48 0.00 0.00 0.00 44.50</span><br><span class="line">[root@localhost ~]# pidstat -u 5 1</span><br><span class="line">08:30:36 PM 0 6831 0.40 76.74 0.00 77.14 3 stress</span><br><span class="line">08:30:36 PM 0 6832 0.00 78.13 0.00 78.13 1 stress</span><br><span class="line">08:30:36 PM 0 6833 0.00 74.55 0.00 74.55 3 stress</span><br><span class="line"><span class="comment"># 总结：</span></span><br><span class="line">1.平均负载高有可能是CPU密集型进程导致的</span><br><span class="line">2.平均负载高并不一定代表CPU的使用率就一定高，还有可能是I/O繁忙</span><br><span class="line">3.当发现负载高时，可以使用mpstat、pidstat等工具，快速定位到，负载高的原因，从而做出处理</span><br></pre></td></tr></table></figure><p><strong>负载达到多少时候需要注意</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">当平均负载高于CPU数量70%的时候，你就应该分析排查负载高的问题了，一旦负载过高，就可能导致进程相应变慢，进而影响服务的正常功能。</span><br><span class="line">但70%这个数字并不是绝对的，最推荐的方法，还是把系统的平均负载监控起来，然后根据更多的历史数据，判断负载的变化趋势，当发现负载有明显升高的趋势时，比如说负载翻倍了，你再去做分析和调查。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux敲门 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>20</title>
      <link href="/posts/8a707622.html"/>
      <url>/posts/8a707622.html</url>
      
        <content type="html"><![CDATA[<div class='wow animate__heartBeat' data-wow-duration='' data-wow-delay='1s' data-wow-offset=''  data-wow-iteration='2' ><div class="note red icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p><a href="https://www.lukeme.top/posts/4c7367cf.html">告别小白，点击直达</a></p></div></div><h3 id="CentOS6安装">CentOS6安装</h3><p><img src="https://cos.lukme.top/Pic/image-20240429164147100.png" alt="image-20240429164147100"></p><p><strong>1.选第一个，回车</strong></p><p><img src="C:%5CUsers%5CDell%5CDesktop%5CQQ%E6%88%AA%E5%9B%BE20240429144920.png" alt="QQ截图20240429144920"></p><p><img src="https://cos.lukme.top/Pic/image-20240429150439219.png" alt="image-20240429150439219"></p><p><img src="https://cos.lukme.top/Pic/image-20240429150817328.png" alt="image-20240429150817328"></p><p><img src="https://cos.lukme.top/Pic/image-20240429150932495.png" alt="image-20240429150932495"></p><p><img src="https://cos.lukme.top/Pic/image-20240429151041651.png" alt="image-20240429151041651"></p><p><strong>选择时区和填写密码等省略</strong></p><p><img src="https://cos.lukme.top/Pic/image-20240429151453854.png" alt="image-20240429151453854"></p><p><img src="https://cos.lukme.top/Pic/image-20240429151714208.png" alt=""></p><p><img src="https://cos.lukme.top/Pic/image-20240429151940449.png" alt="image-20240429151940449"></p><p>选择base和develop工具</p><p><img src="https://cos.lukme.top/Pic/image-20240429152056178.png" alt="image-20240429152056178"></p><h3 id="配置CentOS6网卡">配置CentOS6网卡</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# vi /etc/sysconfig/network-scripts/ifcfg-eth0 </span><br><span class="line">DEVICE=eth0</span><br><span class="line">HWADDR=00:0C:29:5A:FC:82</span><br><span class="line">TYPE=Ethernet</span><br><span class="line">UUID=65c55f51-b929-49fa-b8c9-541e6230e11b</span><br><span class="line">ONBOOT=<span class="built_in">yes</span></span><br><span class="line">NM_CONTROLLED=<span class="built_in">yes</span></span><br><span class="line">BOOTPROTO=none</span><br><span class="line">IPADDR=10.0.0.10</span><br><span class="line">NETMASK=255.255.255.0</span><br><span class="line">GETEWAY=10.0.0.254</span><br><span class="line">DNS=223.5.5.5</span><br><span class="line">:wq</span><br><span class="line">重启网卡 </span><br><span class="line">1./etc/init.d/network restart</span><br><span class="line">2.service network restart</span><br></pre></td></tr></table></figure><h3 id="CentOS6启动流程">CentOS6启动流程</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Centos6</span><br><span class="line">1.BIOS加电自检</span><br><span class="line">2.内核引导</span><br><span class="line">3.读取GRUB菜单</span><br><span class="line">4.运行init，读取/etc/inittab默认运行级别</span><br><span class="line">5.按顺序启动其他服务/etc/rcN.d  </span><br><span class="line">6.建立终端</span><br><span class="line">7.用户登录</span><br></pre></td></tr></table></figure><p><strong>2.内核引导</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">打开电源，BiOS加电自检</span><br><span class="line">检测硬件是否损坏：CPU、内存、磁盘</span><br><span class="line">读取/boot目录下的文件，加载启动文件，GRUB菜单</span><br><span class="line">GRUB菜单提供已安装系统的选项，如果是多系统，选择要进入的系统</span><br></pre></td></tr></table></figure><p><strong>3.运行init</strong></p><p>init运行级别 init 在CentOS中，是系统所有进程的起点，如果进程想启动，那必须有init，如果没有init，系统中的任 何进程都不会启动，那就相当于这个系统打不开</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">init是CentOS6中PID为0的进程，是所有进程启动的起点</span><br><span class="line">[root@localhost ~]# pstree</span><br><span class="line">init─┬─abrtd</span><br><span class="line">     ├─acpid</span><br><span class="line">     ├─atd</span><br><span class="line">     ├─auditd───&#123;auditd&#125;</span><br><span class="line">     ├─console-kit-dae───63*[&#123;console-kit-da&#125;]</span><br><span class="line">     ├─sshd───sshd───bash───pstree</span><br><span class="line">     └─udevd───2*[udevd]</span><br><span class="line">    </span><br></pre></td></tr></table></figure><h4 id="4-运行级别">4.运行级别</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">init程序首先是需要读取配置文件/etc/inittab</span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> /etc/inittab</span><br><span class="line"><span class="comment"># Default runlevel. The runlevels used are:</span></span><br><span class="line"><span class="comment"># 0 - halt (Do NOT set initdefault to this)</span></span><br><span class="line"><span class="comment"># 1 - Single user mode</span></span><br><span class="line"><span class="comment"># 2 - Multiuser, without NFS (The same as 3, if you do not have networking)</span></span><br><span class="line"><span class="comment"># 3 - Full multiuser mode</span></span><br><span class="line"><span class="comment"># 4 - unused</span></span><br><span class="line"><span class="comment"># 5 - X11</span></span><br><span class="line"><span class="comment"># 6 - reboot (Do NOT set initdefault to this)</span></span><br><span class="line"><span class="built_in">id</span>:3:initdefault:  <span class="comment">#设置运行级别为3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行级别：</span></span><br><span class="line">0：关机运行级别 <span class="comment">#开机即关机</span></span><br><span class="line">1：单用户模式运行级别</span><br><span class="line">2：多用户模式，但是没有文件系统，没有网络</span><br><span class="line">3：完整的多用户模式，有文件系统，有网络</span><br><span class="line">4：未被使用的运行级别</span><br><span class="line">5：图形化运行级别</span><br><span class="line">6：重启运行级别 <span class="comment">#默认运行级别不能设为6，否则不能正常启动</span></span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20240429154944112.png" alt="image-20240429154944112"></p><h4 id="查看当前运行级别">查看当前运行级别</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# runlevel</span><br><span class="line">N 3</span><br><span class="line"><span class="comment">#临时切换运行级别</span></span><br><span class="line">[root@localhost ~]# init 5</span><br><span class="line"><span class="comment">#永久切换运行级别</span></span><br><span class="line">[rootezls ~]vim /etc/inittab</span><br><span class="line"><span class="built_in">id</span>:3:initdefault</span><br></pre></td></tr></table></figure><p><strong>读取完配置文件，找到对应的运行级别 3</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">查询操作系统在每一个执行等级中会执行哪些系统服务，其中包括各类常驻服务。</span><br><span class="line">[root@localhost ~]# chkconfig</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# chkconfig |grep <span class="string">&#x27;3:on&#x27;</span></span><br><span class="line">auditd 0:off 1:off 2:on 3:on 4:on 5:on 6:off</span><br><span class="line">crond 0:off 1:off 2:on 3:on 4:on 5:on 6:off</span><br><span class="line">ip6tables 0:off 1:off 2:on 3:on 4:on 5:on 6:off</span><br><span class="line">iptables 0:off 1:off 2:on 3:on 4:on 5:on 6:off</span><br><span class="line">kdump 0:off 1:off 2:off 3:on 4:on 5:on 6:off</span><br><span class="line">mdmonitor 0:off 1:off 2:on 3:on 4:on 5:on 6:off</span><br><span class="line">netfs 0:off 1:off 2:off 3:on 4:on 5:on 6:off</span><br><span class="line">network 0:off 1:off 2:on 3:on 4:on 5:on 6:off</span><br><span class="line">postfix 0:off 1:off 2:on 3:on 4:on 5:on 6:off</span><br><span class="line">rsyslog 0:off 1:off 2:on 3:on 4:on 5:on 6:off</span><br><span class="line">sshd 0:off 1:off 2:on 3:on 4:on 5:on 6:off</span><br><span class="line">udev-post 0:off 1:on 2:on 3:on 4:on 5:on 6:off</span><br></pre></td></tr></table></figure><p><strong>5.系统初始化</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 读取3运行级别的服务启动顺序</span></span><br><span class="line"><span class="comment">##S开头的是关机服务停止顺序</span></span><br><span class="line">[root@localhost ~]# ll /etc/rc3.d/</span><br><span class="line">total 0</span><br><span class="line">lrwxrwxrwx. 1 root root 19 Apr 29 17:06 K10saslauthd -&gt; ../init.d/saslauthd</span><br><span class="line">lrwxrwxrwx. 1 root root 21 Apr 29 17:06 K87restorecond -&gt; ../init.d/restorecond</span><br><span class="line">lrwxrwxrwx. 1 root root 20 Apr 29 17:06 K89netconsole -&gt; ../init.d/netconsole</span><br><span class="line">lrwxrwxrwx. 1 root root 15 Apr 29 17:06 K89rdisc -&gt; ../init.d/rdisc</span><br><span class="line">lrwxrwxrwx. 1 root root 19 Apr 29 17:06 S08ip6tables -&gt; ../init.d/ip6tables</span><br><span class="line">lrwxrwxrwx. 1 root root 18 Apr 29 17:06 S08iptables -&gt; ../init.d/iptables</span><br><span class="line">lrwxrwxrwx. 1 root root 17 Apr 29 17:06 S10network -&gt; ../init.d/network</span><br><span class="line">lrwxrwxrwx. 1 root root 16 Apr 29 17:07 S11auditd -&gt; ../init.d/auditd</span><br><span class="line">lrwxrwxrwx. 1 root root 17 Apr 29 17:06 S12rsyslog -&gt; ../init.d/rsyslog</span><br><span class="line">lrwxrwxrwx. 1 root root 19 Apr 29 17:06 S15mdmonitor -&gt; ../init.d/mdmonitor</span><br><span class="line">lrwxrwxrwx. 1 root root 15 Apr 29 17:06 S25netfs -&gt; ../init.d/netfs</span><br><span class="line">lrwxrwxrwx. 1 root root 19 Apr 29 17:06 S26udev-post -&gt; ../init.d/udev-post</span><br><span class="line">lrwxrwxrwx. 1 root root 15 Apr 29 17:07 S50kdump -&gt; ../init.d/kdump</span><br><span class="line">lrwxrwxrwx. 1 root root 14 Apr 29 17:07 S55sshd -&gt; ../init.d/sshd</span><br><span class="line">lrwxrwxrwx. 1 root root 17 Apr 29 17:06 S80postfix -&gt; ../init.d/postfix</span><br><span class="line">lrwxrwxrwx. 1 root root 15 Apr 29 17:06 S90crond -&gt; ../init.d/crond</span><br><span class="line">lrwxrwxrwx. 1 root root 11 Apr 29 17:06 S99local -&gt; ../rc.local</span><br><span class="line"><span class="comment"># chkconfig: 2345 55 25</span></span><br><span class="line"><span class="comment"># CentOS6中所有脚本都是shell脚本</span></span><br><span class="line">[root@localhost ~]# ll /etc/init.d/      查看所有程序的启动脚本</span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> /etc/init.d/sshd</span><br><span class="line"><span class="comment"># chkconfig: 2345 55 25</span></span><br><span class="line">在2345运行级别上，默认开机自启</span><br><span class="line">55：开机第55个启动</span><br><span class="line">25：关机第25个关闭</span><br></pre></td></tr></table></figure><p><strong>建立终端</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">rc执行完毕后，返回init。这时基本系统环境已经设置好了，各种守护进程也已经启动了。 init接下来会打开6个终端，以便用户登录系统。在inittab中的以下6行就是定义了6个终端：</span><br><span class="line">1:2345:respawn:/sbin/mingetty tty1</span><br><span class="line">2:2345:respawn:/sbin/mingetty tty2</span><br><span class="line">3:2345:respawn:/sbin/mingetty tty3</span><br><span class="line">4:2345:respawn:/sbin/mingetty tty4</span><br><span class="line">5:2345:respawn:/sbin/mingetty tty5</span><br><span class="line">6:2345:respawn:/sbin/mingetty tty6</span><br><span class="line"></span><br><span class="line">远程连接工具</span><br><span class="line">pts/0</span><br></pre></td></tr></table></figure><p><strong>用户登录系统</strong></p><p>一般来说，用户的登录方式有三种：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">（1）命令行登录</span><br><span class="line">（2）ssh登录</span><br><span class="line">（3）图形界面登录</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20240429161712973.png" alt="image-20240429161712973"></p><h4 id="系统关机命令">系统关机命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 关机</span></span><br><span class="line">halt</span><br><span class="line">shutdown -h now</span><br><span class="line">poweroff</span><br><span class="line"></span><br><span class="line"><span class="built_in">sync</span> 将数据由内存同步到硬盘中。</span><br><span class="line">shutdown 关机指令</span><br><span class="line">shutdown –h 10      <span class="comment">#计算机将在10分钟后关机，并且会显示在登陆用户的当前屏幕中。</span></span><br><span class="line">shutdown –h now      <span class="comment">#立马关机</span></span><br><span class="line">shutdown –h 20:25  <span class="comment">#系统会在今天20:25关机</span></span><br><span class="line">shutdown –h +10      <span class="comment">#十分钟后关机</span></span><br><span class="line">shutdown –r now  <span class="comment">#系统立马重启</span></span><br><span class="line">shutdown –r +10  <span class="comment">#系统十分钟后重启</span></span><br><span class="line">reboot     <span class="comment">#就是重启，等同于 shutdown –r now</span></span><br><span class="line">halt     <span class="comment">#关闭系统，等同于shutdown –h now 和 poweroff</span></span><br><span class="line"><span class="comment">## 重启</span></span><br><span class="line">reboot</span><br><span class="line">init 6</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20240429162103002.png" alt="image-20240429162103002"></p><h3 id="CentOS6忘记root密码进入-单用户模式">CentOS6忘记root密码进入     单用户模式</h3><p><strong>1）重启系统，到grub菜单界面</strong></p><p><img src="https://cos.lukme.top/Pic/image-20240429164346037.png" alt="image-20240429164346037"></p><p><img src="https://cos.lukme.top/Pic/image-20240429164633863.png" alt="image-20240429164633863"></p><p><img src="https://cos.lukme.top/Pic/image-20240429165101506.png" alt="image-20240429165101506"></p><p><strong>回车返回内核菜单</strong></p><p><img src="https://cos.lukme.top/Pic/image-20240429164943845.png" alt="image-20240429164943845"></p><p><strong>进入后就可以重新设置密码了</strong></p><p><img src="https://cos.lukme.top/Pic/image-20240429165410448.png" alt="image-20240429165410448"></p><p>密码设置好重启就OK了</p><p>reboot   init6</p><h3 id="CentOS7系统启动顺序">CentOS7系统启动顺序</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># C7</span></span><br><span class="line">1.BIOS(开机自检)</span><br><span class="line">2.MBR ( Master Boot Record 主引导记录)</span><br><span class="line">3.GRUB2 Bootloader（引导菜单）</span><br><span class="line">4.Kernel（内核引导）</span><br><span class="line">5.Systemd （不再使用init，改成了systemd）</span><br><span class="line">6.按顺序启动其他服务 systemctl list-unit-files</span><br><span class="line">[root@lb01 ~]# systemctl list-unit-files</span><br><span class="line">UNIT FILE                                     STATE   </span><br><span class="line">proc-sys-fs-binfmt_misc.automount             static  </span><br><span class="line">dev-hugepages.mount                           static  </span><br><span class="line">dev-mqueue.mount                              static  </span><br><span class="line">proc-sys-fs-binfmt_misc.mount                 static  </span><br><span class="line">sys-fs-fuse-connections.mount                 static  </span><br><span class="line">sys-kernel-config.mount                       static  </span><br><span class="line">sys-kernel-debug.mount                        static</span><br><span class="line">7.建立终端</span><br><span class="line">8.用户登录</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行级别：</span></span><br><span class="line">/usr/lib/systemd/system/runlevel0.target -&gt; poweroff.target</span><br><span class="line">/usr/lib/systemd/system/runlevel1.target -&gt; rescue.target</span><br><span class="line">/usr/lib/systemd/system/runlevel2.target -&gt; multi-user.target</span><br><span class="line">/usr/lib/systemd/system/runlevel3.target -&gt; multi-user.target</span><br><span class="line">/usr/lib/systemd/system/runlevel4.target -&gt; multi-user.target</span><br><span class="line">/usr/lib/systemd/system/runlevel5.target -&gt; graphical.target</span><br><span class="line">/usr/lib/systemd/system/runlevel6.target -&gt; reboot.target</span><br><span class="line">0：关机运行级别 (Do NOT <span class="built_in">set</span> initdefault to this)</span><br><span class="line">1：单用户模式运行级别</span><br><span class="line">2，3，4：完整的多用户模式，有文件系统，有网络</span><br><span class="line">5：图形化运行级别</span><br><span class="line">6：重启运行级别 (Do NOT <span class="built_in">set</span> initdefault to this)</span><br><span class="line"><span class="comment">#查看当前运行级别：</span></span><br><span class="line">[root@yum_repo ~]# systemctl get-default</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# systemctl list-unit-files|grep <span class="string">&#x27;enabled&#x27;</span></span><br><span class="line"><span class="comment">## CentOS7中启动服务，所有服务的启动脚本</span></span><br><span class="line">/usr/lib/systemd/system/</span><br><span class="line"><span class="comment">#修改运行级别</span></span><br><span class="line">[root@yum_repo ~]# systemctl set-default multi-user.target    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 注意：centos7中所有服务的启动脚本，都不是shell且必须以.service结尾</span></span><br><span class="line"><span class="comment">## 开机自启动服务</span></span><br><span class="line">[root@localhost ~]# ll /etc/systemd/system/multi-user.target.wants/</span><br><span class="line">auditd.service -&gt; /usr/lib/systemd/system/auditd.service</span><br><span class="line">nginx.service -&gt; /usr/lib/systemd/system/nginx.service</span><br><span class="line">firewalld.service -&gt; /usr/lib/systemd/system/firewalld.service</span><br><span class="line">irqbalance.service -&gt; /usr/lib/systemd/system/irqbalance.service</span><br><span class="line">NetworkManager.service -&gt; /usr/lib/systemd/system/NetworkManager.service</span><br><span class="line">postfix.service -&gt; /usr/lib/systemd/system/postfix.service</span><br><span class="line">remote-fs.target -&gt; /usr/lib/systemd/system/remote-fs.target</span><br><span class="line">rhel-configure.service -&gt; /usr/lib/systemd/system/rhel-configure.service</span><br><span class="line">rsyslog.service -&gt; /usr/lib/systemd/system/rsyslog.service</span><br><span class="line">sshd.service -&gt; /usr/lib/systemd/system/sshd.service</span><br><span class="line">tuned.service -&gt; /usr/lib/systemd/system/tuned.service</span><br><span class="line">vmtoolsd.service -&gt; /usr/lib/systemd/system/vmtoolsd.service</span><br></pre></td></tr></table></figure><h3 id="CentOS7进入单用户模式">CentOS7进入单用户模式</h3><p><strong>1.重启系统</strong></p><p><img src="https://cos.lukme.top/Pic/image-20240429170437706.png" alt="image-20240429170437706"></p><p><strong>2.进入grub2菜单</strong></p><p><img src="https://cos.lukme.top/Pic/image-20240429170649081.png" alt="image-20240429170649081"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在linux16行的末尾输入,然后按下   Ctrl+X引导   组合键来运行修改过的内核程序</span></span><br><span class="line">enforcing=0 init=/bin/bash</span><br><span class="line">enforcing=0   关闭selinux（临时的），进入单用户后配置文件里关闭selinux，否则重新开机后密码就不生效了</span><br></pre></td></tr></table></figure><p><strong>不挂载方式</strong></p><p><img src="https://cos.lukme.top/Pic/image-20240429173119985.png" alt="image-20240429173119985"></p><p><strong>3.进入单用户模式</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.重新挂载/目录</span></span><br><span class="line">mount -o rw,remount /</span><br><span class="line"><span class="comment"># 2.修改密码</span></span><br><span class="line">passwd root</span><br><span class="line"><span class="comment"># 3.重新引导系统</span></span><br><span class="line"><span class="built_in">exec</span> /sbin/init</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20240429171621119.png" alt="image-20240429171621119"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">进入配置文件永久关闭selinux</span><br><span class="line">[root@lb01 ~]# vi /etc/selinux/config</span><br><span class="line">SELINUX=disabled    将permissive改为disabled</span><br><span class="line">SELINUXTYPE=targeted</span><br><span class="line"></span><br><span class="line">查看selinux开启状态</span><br><span class="line">[root@lb01 ~]# getenforce</span><br><span class="line">Disabled</span><br></pre></td></tr></table></figure><h4 id="修改CenOS7默认运行级别">修改CenOS7默认运行级别</h4><p><strong>如果centos7被设置为运行级别6，导致无限重启怎么解决？</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 查看</span></span><br><span class="line">[root@yum_repo ~]# systemctl get-default</span><br><span class="line">multi-user.target    <span class="comment">#完整多用户模式</span></span><br><span class="line"><span class="comment">## 修改</span></span><br><span class="line">[root@yum_repo ~]# systemctl set-default reboot.target     <span class="comment">#设置运行级别6重启（无限重启）</span></span><br></pre></td></tr></table></figure><p><strong>解决办法</strong></p><p>1.进入编辑模式</p><p><img src="https://cos.lukme.top/Pic/image-20240429173139767.png" alt="image-20240429173139767"></p><p>2.#在linux16行的末尾输入,然后按下   Ctrl+X   组合键来运行修改过的内核程序</p><p><img src="https://cos.lukme.top/Pic/image-20240429175105690.png" alt="image-20240429175105690"></p><p><img src="https://cos.lukme.top/Pic/image-20240429180423234.png" alt="image-20240429180423234"></p><p>exit退出，reboot重启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.重新挂载/sysroot目录</span></span><br><span class="line">mount -o rw,remount /sysroot</span><br><span class="line"><span class="comment"># 2.获取root权限</span></span><br><span class="line"><span class="built_in">chroot</span> /sysroot</span><br><span class="line"><span class="comment"># 3.修改密码</span></span><br><span class="line">passwd root</span><br><span class="line"><span class="comment"># 4.修改运行级别</span></span><br><span class="line">systemctl set-default multi-user.target</span><br><span class="line"><span class="comment"># 5.退出</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"><span class="comment"># 6.重启</span></span><br><span class="line">reboot</span><br><span class="line"><span class="comment">## 关闭selinux</span></span><br><span class="line"><span class="comment"># 临时关闭</span></span><br><span class="line">[root@yum_repo ~]# setenforce 0</span><br><span class="line"><span class="comment"># 永久关闭（重启系统生效）</span></span><br><span class="line">[root@yum_repo ~]# vi /etc/sysconfig/selinux</span><br><span class="line">SELINUX=disabled</span><br><span class="line"><span class="comment">## 两种进入单用户方法</span></span><br><span class="line">1）enforcing=0 init=/bin/bash // 修改密码</span><br><span class="line">2）rd.break // 修改运行级别</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux敲门 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>19.进程管理02</title>
      <link href="/posts/566a67f4.html"/>
      <url>/posts/566a67f4.html</url>
      
        <content type="html"><![CDATA[<div class='wow animate__heartBeat' data-wow-duration='' data-wow-delay='1s' data-wow-offset=''  data-wow-iteration='2' ><div class="note red icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p><a href="https://www.lukeme.top/posts/4c7367cf.html">告别小白，点击直达</a></p></div></div><h3 id="top（动态命令）">top（动态命令）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 第一行</span></span><br><span class="line">top - 14:41:23 up  3:38,  1 user,  load average: 0.00, 0.01, 0.05</span><br><span class="line">top：命令</span><br><span class="line">-：分隔符</span><br><span class="line">09:32:57 ：当前系统时间</span><br><span class="line">up 1:23 ：服务器运行时间</span><br><span class="line">1 user ：当前登录系统的用户数量</span><br><span class="line">load average: 系统负载</span><br><span class="line">0.00：1分钟</span><br><span class="line">0.01：5分钟</span><br><span class="line">0.05：15分钟</span><br><span class="line"><span class="comment"># 第二行</span></span><br><span class="line">Tasks:  98 total,   1 running,  97 sleeping,   0 stopped,   0 zombie</span><br><span class="line">Tasks: 任务，进程数量</span><br><span class="line">116 total // 进程总量</span><br><span class="line">1 running // 1个正在运行的进程 R</span><br><span class="line">115 sleeping // 115处于休眠状态的进程 S</span><br><span class="line">0 stopped // 0个被暂停状态的进程 T</span><br><span class="line">0 zombie // 0个僵尸进程 Z</span><br><span class="line"><span class="comment"># 第三行</span></span><br><span class="line">%Cpu(s):  0.0 us,  0.3 sy,  0.0 ni, 99.7 <span class="built_in">id</span>,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st</span><br><span class="line">%Cpu(s):</span><br><span class="line">0.0 us：user 用户态 用户使用程序占用CPU的百分比</span><br><span class="line">0.3 sy：system 内核态 系统使用程序占用CPU的百分比</span><br><span class="line">0.0 ni：<span class="built_in">nice</span> 优先级 优先级调度的进程占用CPU的百分比</span><br><span class="line">99.7 <span class="built_in">id</span>：idle 空闲 CPU的空闲率</span><br><span class="line">0.0 wa： <span class="built_in">wait</span> 等待 处于等待状态的进程占用CPU的百分比</span><br><span class="line">0.0 hi： 硬中断 硬中断占用CPU的百分比</span><br><span class="line">0.0 si： 软中断 软终端占用CPU的百分比</span><br><span class="line">0.0 st： 虚拟化 虚拟化占用CPU的百分比</span><br><span class="line"><span class="comment"># 第四行</span></span><br><span class="line">KiB Mem :   995896 total,   425312 free,   108804 used,   461780 buff/cache</span><br><span class="line">KiB Mem : 内存</span><br><span class="line">995896 total：总内存大小</span><br><span class="line">748564 free：空闲内存大小</span><br><span class="line">107768 used：已使用内存大小</span><br><span class="line">139564 buff/cache：缓冲区/缓存区使用内存大小</span><br><span class="line"><span class="comment"># 第五行</span></span><br><span class="line">KiB Swap:  1048572 total,  1048572 free,        0 used.   700372 avail Mem</span><br><span class="line">KiB Swap: 交换分区swap （虚拟内存）</span><br><span class="line">1048572 total：虚拟内存总大小</span><br><span class="line">1048572 free：虚拟内存空闲大小</span><br><span class="line">0 used：虚拟内存使用大小</span><br><span class="line">729176 avail Mem：虚拟内存可用大小</span><br><span class="line">Windows：NTFS、FAT32</span><br><span class="line">Linux：</span><br><span class="line">CentOS7：xfs file system</span><br><span class="line">CentOS6：ext4</span><br><span class="line"><span class="comment"># 第六行</span></span><br><span class="line">PID USER      PR  NI    VIRT    RES    SHR S %CPU %MEM     TIME+ COMMAND</span><br><span class="line">PID：进程ID号</span><br><span class="line">USER：进程启动用户</span><br><span class="line">PR NI：权重优先级 两者相差20，互斥</span><br><span class="line">VIRT：虚拟内存</span><br><span class="line">RES：真实物理内存</span><br><span class="line">SHR：闪存</span><br><span class="line">S：进程状态</span><br><span class="line">%CPU：CPU使用率</span><br><span class="line">%MEM：内存使用率</span><br><span class="line">TIME+ ：该进程在CPU内运行的时间</span><br><span class="line">COMMAND：服务启动的命令</span><br></pre></td></tr></table></figure><h3 id="中断">中断</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">中断是系统用来影响硬件设备请求的一种机制，它会打断进程的正常调度和执行，然后调用内核中的中断处理程序来影响设备的请求</span><br><span class="line"><span class="comment">#中断的作用：</span></span><br><span class="line">是为了让计算机可以处理更多的请求</span><br><span class="line"><span class="comment">#只有中断，存在的问题：</span></span><br><span class="line">会导致数据丢失</span><br><span class="line"><span class="comment">#解决办法：</span></span><br><span class="line">将中断，分为两个部分</span><br><span class="line">硬中断：快速处理任务，临时保存在内存里</span><br><span class="line">软中断：延迟处理未完成的任务</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="top命令的使用">top命令的使用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">[root@yum_repo ~]# yum install -y htop</span><br><span class="line">[root@yum_repo ~]# yum install -y glances</span><br><span class="line">[root@yum_repo ~]# top</span><br><span class="line">[root@yum_repo ~]# htop</span><br><span class="line">[root@yum_repo ~]# glances</span><br><span class="line"><span class="comment"># -n：指定查看几次结果</span></span><br><span class="line">[root@yum_repo ~]# top -n 5</span><br><span class="line"><span class="comment"># -d：指定更新时间（默认3s更新一次数据）</span></span><br><span class="line">[root@yum_repo ~]# top -d 1 -n 5</span><br><span class="line"><span class="comment"># -p：指定想查看的进程PID</span></span><br><span class="line">[root@yum_repo ~]# top -p 1278</span><br><span class="line">[root@yum_repo ~]# top -p $(pidof nginx|<span class="built_in">tr</span> <span class="string">&#x27; &#x27;</span> <span class="string">&#x27;,&#x27;</span>)</span><br><span class="line"><span class="comment"># -b：将多次结果保存到文件中</span></span><br><span class="line">[root@yum_repo ~]# top -d 1 -n 3 -b &gt; /tmp/1.txt</span><br><span class="line"></span><br><span class="line">注意：#不使用-b选项，只能写入最后一次的结果。top是动态的，只有结束才能够写入1.txt，结束的时候写入的也只是最后一次的结果</span><br><span class="line">top -n 3 &gt;1.txt   </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#top 常见指令</span></span><br><span class="line">h 查看帮出</span><br><span class="line">z 高亮显示</span><br><span class="line">1 显示所有CPU的负载</span><br><span class="line">s 设置刷新时间</span><br><span class="line">b 高亮现实处于R状态的进程</span><br><span class="line">M 按内存使用百分比排序输出</span><br><span class="line">P 按CPU使用百分比排序输出</span><br><span class="line">R 对排序进行反转</span><br><span class="line">f 自定义显示字段</span><br><span class="line">k <span class="built_in">kill</span>掉指定PID进程</span><br><span class="line">W 保存top环境设置 ~/.toprc</span><br><span class="line">q 退出</span><br></pre></td></tr></table></figure><h3 id="kill信号管理">kill信号管理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">[root@yum_repo ~]# <span class="built_in">kill</span> -l</span><br><span class="line">1) SIGHUP 2) SIGINT 3) SIGQUIT 4) SIGILL 5) SIGTRAP</span><br><span class="line">6) SIGABRT 7) SIGBUS 8) SIGFPE 9) SIGKILL 10) SIGUSR1</span><br><span class="line">11) SIGSEGV 12) SIGUSR2 13) SIGPIPE 14) SIGALRM 15) SIGTERM</span><br><span class="line">16) SIGSTKFLT 17) SIGCHLD 18) SIGCONT 19) SIGSTOP 20) SIGTSTP</span><br><span class="line">21) SIGTTIN 22) SIGTTOU 23) SIGURG 24) SIGXCPU 25) SIGXFSZ</span><br><span class="line">26) SIGVTALRM 27) SIGPROF 28) SIGWINCH 29) SIGIO 30) SIGPWR</span><br><span class="line">31) SIGSYS 34) SIGRTMIN 35) SIGRTMIN+1 36) SIGRTMIN+2 37) SIGRTMIN+3</span><br><span class="line">38) SIGRTMIN+4 39) SIGRTMIN+5 40) SIGRTMIN+6 41) SIGRTMIN+7 42) SIGRTMIN+8</span><br><span class="line">43) SIGRTMIN+9 44) SIGRTMIN+10 45) SIGRTMIN+11 46) SIGRTMIN+12 47) SIGRTMIN+13</span><br><span class="line">48) SIGRTMIN+14 49) SIGRTMIN+15 50) SIGRTMAX-14 51) SIGRTMAX-13 52) SIGRTMAX-12</span><br><span class="line">53) SIGRTMAX-11 54) SIGRTMAX-10 55) SIGRTMAX-9 56) SIGRTMAX-8 57) SIGRTMAX-7</span><br><span class="line">58) SIGRTMAX-6 59) SIGRTMAX-5 60) SIGRTMAX-4 61) SIGRTMAX-3 62) SIGRTMAX-2</span><br><span class="line">63) SIGRTMAX-1 64) SIGRTMAX</span><br><span class="line"></span><br><span class="line"><span class="comment">## 重启 restart</span></span><br><span class="line">先关闭服务，再开启服务</span><br><span class="line"><span class="comment">## 重新加载 reload</span></span><br><span class="line">只重新读取配置文件，不会停止服务</span><br><span class="line"></span><br><span class="line"><span class="comment">## 重新加载服务配置文件</span></span><br><span class="line">[root@yum_repo ~]# <span class="built_in">kill</span> -1 8582</span><br><span class="line">[root@yum_repo ~]# <span class="built_in">kill</span> -HUP 8582</span><br><span class="line"></span><br><span class="line"><span class="comment">## 中断一个正在运行的程序 Ctrl + c</span></span><br><span class="line">[root@yum_repo ~]# <span class="built_in">kill</span> -2 8779</span><br><span class="line">[root@yum_repo ~]# <span class="built_in">kill</span> -INT 8779</span><br><span class="line"><span class="comment">## 退出程序</span></span><br><span class="line">[root@yum_repo ~]# systemctl stop nginx</span><br><span class="line">[root@yum_repo ~]# <span class="built_in">kill</span> -3 8582</span><br><span class="line">[root@yum_repo ~]# <span class="built_in">kill</span> -QUIT 8582</span><br><span class="line"><span class="comment">## 强制结束程序，该信号不能被捕获</span></span><br><span class="line">[root@yum_repo ~]# <span class="built_in">kill</span> -9 8847</span><br><span class="line">[root@yum_repo ~]# <span class="built_in">kill</span> -KILL 8847</span><br><span class="line"><span class="comment">## 默认退出信号</span></span><br><span class="line">[root@yum_repo ~]# <span class="built_in">kill</span> 1122</span><br><span class="line">[root@yum_repo ~]# <span class="built_in">kill</span> -15 1122</span><br><span class="line">[root@yum_repo ~]# <span class="built_in">kill</span> -TERM 1122</span><br><span class="line"><span class="comment">## 让被暂停的程序恢复运行</span></span><br><span class="line">[root@yum_repo ~]# <span class="built_in">kill</span> -18 8870</span><br><span class="line"><span class="comment">## 让程序暂停 Ctrl + z</span></span><br><span class="line">[root@yum_repo ~]# <span class="built_in">kill</span> -19 8884</span><br><span class="line">[root@yum_repo ~]# <span class="built_in">kill</span> -20 8896</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux敲门 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>22.定时任务</title>
      <link href="/posts/d58f4e80.html"/>
      <url>/posts/d58f4e80.html</url>
      
        <content type="html"><![CDATA[<div class='wow animate__heartBeat' data-wow-duration='' data-wow-delay='1s' data-wow-offset=''  data-wow-iteration='2' ><div class="note red icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p><a href="https://www.lukeme.top/posts/4c7367cf.html">告别小白，点击直达</a></p></div></div><h3 id="定时任务crond">定时任务crond</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#什么是crond</span></span><br><span class="line">crond就是计划任务，类似于我们平时生活中的闹钟，定点执行。</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# ps aux|grep crond</span><br><span class="line">root 6349 0.0 0.1 126284 1612 ? Ss 16:00 0:00 /usr/sbin/crond -n</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#free 查看内存情况</span></span><br><span class="line">[root@lb01 ~]# free -m（以m显示内存多少）</span><br><span class="line">总内存 已使用空闲可使用内存</span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:            972          89         760           7         123         737</span><br><span class="line">Swap:          1023           0        1023</span><br><span class="line"></span><br><span class="line"><span class="comment">#Centos6可使用内存</span></span><br><span class="line">[root@localhost ~]# free</span><br><span class="line">总内存 已使用空闲</span><br><span class="line">             total       used       free     shared    buffers     cached</span><br><span class="line">Mem:       1004768     170984     833784        220      13336      48440</span><br><span class="line">-/+ buffers/cache:     109208     895560(可使用内存) </span><br><span class="line">Swap:      1048572          0    1048572</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#截取需要的内存信息</span></span><br><span class="line">总内存：free -m|awk <span class="string">&#x27;/^Mem/&#123;print $2&#125;&#x27;</span></span><br><span class="line">已使用内存：free -m|awk <span class="string">&#x27;/^Mem/&#123;print $3&#125;&#x27;</span></span><br><span class="line">可用内存：free -m|awk <span class="string">&#x27;/^Mem/&#123;print $NF&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#写进脚本</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">mem_total=`free -m|awk <span class="string">&#x27;/^Mem/&#123;print $2&#125;&#x27;</span>`</span><br><span class="line">mem_used=`free -m|awk <span class="string">&#x27;/^Mem/&#123;print $3&#125;&#x27;</span>`</span><br><span class="line">mem_ava=`free -m|awk <span class="string">&#x27;/^Mem/&#123;print $NF&#125;&#x27;</span>`</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;------ 内存信息 ------&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;总内存：<span class="variable">$&#123;mem_total&#125;</span>M&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;已使用内存：<span class="variable">$&#123;mem_used&#125;</span>M&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;可用内存：<span class="variable">$&#123;mem_ava&#125;</span>M&quot;</span></span><br></pre></td></tr></table></figure><h4 id="定时任务语法">定时任务语法</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#！！定时任务最小只能达到分钟级</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 定时任务配置文件</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> /etc/crontab</span><br><span class="line"><span class="comment">## 定时任务编写的语法</span></span><br><span class="line">SHELL=/bin/bash</span><br><span class="line"><span class="comment">## 可直接执行的命令（以后写在定时任务中的命令，最好加上绝对路径）</span></span><br><span class="line">PATH=/sbin:/bin:/usr/sbin:/usr/bin</span><br><span class="line"><span class="comment">## 定时任务输出的内容，会以邮件的形式发给root用户</span></span><br><span class="line">MAILTO=root</span><br><span class="line"><span class="comment"># For details see man 4 crontabs</span></span><br><span class="line"><span class="comment"># Example of job definition:</span></span><br><span class="line"><span class="comment"># .---------------- minute (0 - 59)</span></span><br><span class="line"><span class="comment"># | .------------- hour (0 - 23)</span></span><br><span class="line"><span class="comment"># | | .---------- day of month (1 - 31)</span></span><br><span class="line"><span class="comment"># | | | .------- month (1 - 12) OR jan,feb,mar,apr ...</span></span><br><span class="line"><span class="comment"># | | | | .---- day of week (0 - 6) (Sunday=0 or 7) OR</span></span><br><span class="line">sun,mon,tue,wed,thu,fri,sat</span><br><span class="line"><span class="comment"># | | | | |</span></span><br><span class="line"><span class="comment"># * * * * * user-name command to be executed</span></span><br><span class="line"><span class="comment"># PATH的作用：是一个环境变量，所有的可执行文件，可以不加路径直接执行</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">echo</span> <span class="variable">$PATH</span></span><br><span class="line">/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin</span><br><span class="line">* * * * * [用户] 可执行的命令</span><br><span class="line"></span><br><span class="line">分 时 日 月 周</span><br><span class="line">00 02 * * * <span class="built_in">ls</span> <span class="comment"># 每天凌晨两点整执行 ls 命令</span></span><br><span class="line"></span><br><span class="line">00 02 1 * * <span class="built_in">ls</span> <span class="comment"># 每月的1号凌晨两点执行 ls 命令</span></span><br><span class="line"></span><br><span class="line">00 02 14 2 * <span class="built_in">ls</span> <span class="comment"># 每年的2月14号凌晨2点执行 ls 命令</span></span><br><span class="line"></span><br><span class="line">00 02 * * 7 <span class="built_in">ls</span> <span class="comment"># 每周周日凌晨2点执行 ls 命令</span></span><br><span class="line"></span><br><span class="line">00 02 * 6 5 <span class="built_in">ls</span> <span class="comment"># 每个6月份的周五凌晨2点执行 ls 命令</span></span><br><span class="line"></span><br><span class="line">00 02 14 * 7 <span class="built_in">ls</span> <span class="comment"># 每个月的14号恰巧是周日时凌晨2点执行 ls 命令</span></span><br><span class="line"></span><br><span class="line">00 02 14 2 7 <span class="built_in">ls</span> <span class="comment"># 每年2月14日恰巧是周日的凌晨2点执行 ls 命令</span></span><br><span class="line"></span><br><span class="line">*/10 02 * * * <span class="built_in">ls</span> <span class="comment"># 每天凌晨2点开始每隔10分钟执行一次 ls 命令</span></span><br><span class="line"></span><br><span class="line">* * * * * <span class="built_in">ls</span> <span class="comment"># 每分钟执行一次ls命令</span></span><br><span class="line">*/1 * * * * <span class="built_in">ls</span> <span class="comment"># 每分钟执行一次ls命令</span></span><br><span class="line"></span><br><span class="line">00 00 14 2 * <span class="built_in">ls</span> <span class="comment"># 每个2月14日零点执行一次 ls 命令</span></span><br><span class="line"></span><br><span class="line">*/5 * * * * <span class="built_in">ls</span> <span class="comment"># 每隔五分钟执行一次 ls 命令</span></span><br><span class="line"></span><br><span class="line">00 02 * 1,5,8 * <span class="built_in">ls</span> <span class="comment"># 每年的1月5月8月的每天凌晨2点执行一次 ls 命令</span></span><br><span class="line"></span><br><span class="line">00 02 1-8 * * <span class="built_in">ls</span> <span class="comment"># 每个月的1号到8号的凌晨2点执行一次 ls 命令</span></span><br><span class="line"></span><br><span class="line">0 21 * * * <span class="built_in">ls</span> <span class="comment"># 每天晚上9点执行一次 ls 命令</span></span><br><span class="line">* 21 * * * <span class="built_in">ls</span> <span class="comment"># 每天晚上9点开始每一分钟都执行一次 ls 命令</span></span><br><span class="line"></span><br><span class="line">45 4 1,10,22 * * <span class="built_in">ls</span> <span class="comment"># 每个月的1号 10号 22号的凌晨4点45分执行一次 ls 命令</span></span><br><span class="line"></span><br><span class="line">45 4 1-10 * * <span class="built_in">ls</span> <span class="comment"># 每个月的1号到10号的凌晨4点45分执行一次 ls 命令</span></span><br><span class="line"></span><br><span class="line">3,15 8-11 */2 * * <span class="built_in">ls</span> <span class="comment"># 每隔两天的8点03 8点15 ... 11点03 11点15执行一次 ls 命令</span></span><br><span class="line"></span><br><span class="line">0 23-7/1 * * * <span class="built_in">ls</span> <span class="comment"># 每天的0点到7点和23点到0点整执行一次 ls 命令</span></span><br><span class="line"></span><br><span class="line">15 21 * * 1-5 <span class="built_in">ls</span> <span class="comment"># 每周一到周五晚上9点15分执行一次 ls 命令</span></span><br></pre></td></tr></table></figure><h4 id="crontab命令选项">crontab命令选项</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">-e：edit 编辑</span><br><span class="line">-l：查看当前登录用户都有哪些定时任务</span><br><span class="line">-u：指定用户查看定时任务</span><br><span class="line">-r：清空所有定时任务</span><br><span class="line"><span class="comment">## 每分钟，同步一下系统时间</span></span><br><span class="line">[root@localhost ~]# crontab -e</span><br><span class="line"><span class="comment"># By: zls Date: 2024-05-06 Name: sync system time</span></span><br><span class="line">* * * * * /usr/sbin/ntpdate ntp1.aliyun.com &amp;&gt;/dev/null</span><br><span class="line"><span class="comment"># 注意：</span></span><br><span class="line">1）命令绝对路径</span><br><span class="line">2）输出定向到空</span><br><span class="line">3）定时任务加注释</span><br><span class="line"><span class="comment">## 每天做备份，将/etc目录打包为：2024-05-06_hostname_etc.tar.gz</span></span><br><span class="line">[root@web01 /]# <span class="built_in">cd</span> / &amp;&amp; tar zcf /tmp/$(<span class="built_in">date</span> +%F)_$(hostname -s)_etc.tar.gz etc</span><br><span class="line">[root@web01 ~]# vi /opt/backup.sh</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="built_in">cd</span> / &amp;&amp; tar zcf /tmp/$(<span class="built_in">date</span> +%F)_$(hostname -s)_etc.tar.gz etc</span><br><span class="line"></span><br><span class="line"><span class="comment">#实时查看定时任务执行结果</span></span><br><span class="line">[root@lb01 ~]# <span class="built_in">tail</span> -f /var/log/cron</span><br><span class="line"></span><br><span class="line"><span class="comment"># 时间格式化输出：</span></span><br><span class="line"></span><br><span class="line">[root@localhost ~]# <span class="built_in">date</span> +%F-%H:%M:%S</span><br><span class="line">2024-05-13-17:35:25</span><br><span class="line"></span><br><span class="line">%F：年月日</span><br><span class="line">%Y：year 年</span><br><span class="line">%m：mouth 月</span><br><span class="line">%d：day 日</span><br><span class="line">%H：hour时</span><br><span class="line">%M：minute分</span><br><span class="line">%S：seconds秒</span><br><span class="line">%A:星期</span><br><span class="line">%w：星期（阿拉伯数字显示）</span><br></pre></td></tr></table></figure><h4 id="crontab注意事项">crontab注意事项</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1) 给定时任务注释</span><br><span class="line">2) 将需要定期执行的任务写入Shell脚本中，避免直接使用命令无法执行的情况tar <span class="built_in">date</span></span><br><span class="line">3) 定时任务的结尾一定要有&amp;&gt;/dev/null或者将结果追加重定向&gt;&gt;/tmp/date.log文件</span><br><span class="line">4) 注意有些命令是无法成功执行的 <span class="built_in">echo</span> <span class="string">&quot;123&quot;</span> &gt;&gt;/tmp/test.log &amp;&gt;/dev/null</span><br><span class="line">5.如果一定要是用命令，命令必须使用绝对路径</span><br></pre></td></tr></table></figure><h4 id="定时任务—做备份">定时任务—做备份</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# ll /var/spool/cron/</span><br><span class="line">total 8</span><br><span class="line">-rw------- 1 root root 165 May 6 11:32 root</span><br><span class="line">-rw------- 1 zls zls 27 May 6 2024 zls</span><br><span class="line"></span><br><span class="line"><span class="comment">#拒绝用户使用定时任务</span></span><br><span class="line">[root@web01 ~]# <span class="built_in">echo</span> <span class="string">&#x27;username&#x27;</span> &gt; /etc/cron.deny</span><br></pre></td></tr></table></figure><h4 id="计划任务调试思路">计划任务调试思路</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">1.crond调试</span><br><span class="line">1) 调整任务每分钟执行的频率, 以便做后续的调试。</span><br><span class="line">2) 如果使用cron运行脚本，请将脚本执行的结果写入指定日志文件, 观察日志内容是否正常。</span><br><span class="line">3) 命令使用绝对路径, 防止无法找到命令导致定时任务执行产生故障。</span><br><span class="line">4) 通过查看/var/log/cron日志，以便检查我们执行的结果，方便进行调试。</span><br><span class="line">2.crond编写思路</span><br><span class="line">1.手动执行命令，然后保留执行成功的结果。</span><br><span class="line">2.编写脚本</span><br><span class="line">脚本需要统一路径/scripts</span><br><span class="line">脚本内容复制执行成功的命令(减少每个环节出错几率)</span><br><span class="line">脚本内容尽可能的优化, 使用一些变量或使用简单的判断语句</span><br><span class="line">脚本执行的输出信息可以重定向至其他位置保留或写入/dev/null</span><br><span class="line">3.执行脚本</span><br><span class="line">使用bash命令执行, 防止脚本没有增加执行权限(/usr/bin/bash)</span><br><span class="line">执行脚本成功后，复制该执行的命令，以便写入cron</span><br><span class="line">4.编写计划任务</span><br><span class="line">加上必要的注释信息, 人、时间、任务</span><br><span class="line">设定计划任务执行的周期</span><br><span class="line">粘贴执行脚本的命令(不要手敲)</span><br><span class="line">5.调试计划任务</span><br><span class="line">增加任务频率测试</span><br><span class="line">检查环境变量问题</span><br><span class="line">检查crond服务日志</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="使用定时任务发邮件">使用定时任务发邮件</h4><p><strong>配置邮箱</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.安装发送邮件的工具</span></span><br><span class="line"></span><br><span class="line">[root@web01 ~]# yum install -y mailx</span><br><span class="line"><span class="comment"># 2.配置邮箱</span></span><br><span class="line">[root@web01 ~]# vi /etc/mail.rc</span><br><span class="line"><span class="built_in">set</span> from=邮箱<span class="comment">#发件人</span></span><br><span class="line"><span class="built_in">set</span> smtp=smtps://smtp.qq.com:465    <span class="comment">#邮箱协议，端口</span></span><br><span class="line"><span class="built_in">set</span> smtp-auth-user=邮箱 <span class="comment">#登录邮箱账号</span></span><br><span class="line"><span class="built_in">set</span> smtp-auth-password=客户端授权码   <span class="comment">#邮箱授权码</span></span><br><span class="line"><span class="built_in">set</span> smtp-auth=login</span><br><span class="line"><span class="built_in">set</span> ssl-verify=ignore</span><br><span class="line"><span class="built_in">set</span> nss-config-dir=/etc/pki/nssdb/</span><br></pre></td></tr></table></figure><p><strong>邮箱生成授权码</strong></p><p><img src="https://cos.lukme.top/Pic/image-20240506170025656.png" alt="image-20240506170025656"></p><p><strong>发邮件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# <span class="built_in">echo</span> <span class="string">&#x27;邮件内容&#x27;</span> |mail -s <span class="string">&#x27;邮件标题&#x27;</span> 3078155561@qq.com</span><br><span class="line">[root@web01 ~]# <span class="built_in">cat</span> /etc/passwd|mail -s <span class="string">&#x27;test&#x27;</span> 3078155561@qq.com</span><br><span class="line"><span class="built_in">cat</span> /root/backup.log.txt|mail -s <span class="string">&#x27;备份文件&#x27;</span> 3078155561@qq.com</span><br></pre></td></tr></table></figure><h3 id="定时任务实例">定时任务实例</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">需求：将备份命令写入一个脚本中 </span><br><span class="line">1.每天备份文件名要求格式：2018-0220_hostname_etc.tar.gz </span><br><span class="line">2.存放备份内容的目录要求只保留3天的数据 </span><br><span class="line">3.在执行计划任务时，不要输出任务信息 </span><br><span class="line">4.备份是否成功结果，发送邮件 </span><br><span class="line"><span class="comment">## 邮件内容：</span></span><br><span class="line">备份时间：精确到秒</span><br><span class="line">备份文件名：2024-05-06_web01_etc.tar.gz </span><br><span class="line">备份路径：/tmp </span><br><span class="line">是否成功：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">vim backup.sh</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#找到最近三天文件并打包</span></span><br><span class="line">find /etc/* -<span class="built_in">type</span> d -mtime -3|xargs tar zcf /tmp/$(<span class="built_in">date</span> +%F)_$(hostname -s)_etc.tar.gz</span><br><span class="line"><span class="comment">#echo &#x27;Backup Success!!!!&#x27;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;备份时间：<span class="subst">$(date +%Y/%m/%d\ %H:%M:%S)</span>&quot;</span> &gt;&gt;backuplog.txt</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;备份文件名：<span class="subst">$(date +%F)</span>_<span class="subst">$(hostname -s)</span>_etc.tar.gz&quot;</span> &gt;&gt;backuplog.txt</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;备份路径：/tmp&quot;</span> &gt;&gt;backuplog.txt</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;是否备份成功：是&quot;</span> &gt;&gt;backuplog.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建定时任务并发邮件</span></span><br><span class="line">[root@lb01 ~]# crontab -e</span><br><span class="line"><span class="comment"># By: lgj Date: 2024-05-06 Name:Backup</span></span><br><span class="line"></span><br><span class="line">0 23 * * * /usr/bin/sh backup.sh  &amp;&gt;/dev/null</span><br><span class="line">0 00 * * * /usr/bin/cat /root/backup.log.txt|mail -s <span class="string">&#x27;备份文件&#x27;</span> 3078155561@qq.com</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">需求：将备份命令写入一个脚本中</span><br><span class="line">任务：</span><br><span class="line">1.每天备份文件名要求格式：2018-02-20_hostname_etc.tar.gz</span><br><span class="line">2.存放备份内容的目录要求只保留3天的数据</span><br><span class="line">3.在执行计划任务时，不要输出任务信息</span><br><span class="line">4.备份是否成功结果，发送邮件</span><br><span class="line"><span class="comment">## 邮件内容：</span></span><br><span class="line">备份文件名：2024-05-06_web01_etc.tar.gz</span><br><span class="line">备份路径：/tmp</span><br><span class="line">是否成功：</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> / &amp;&amp; tar zcf $(<span class="built_in">date</span> +%F)_$(hostname -s)_etc.tar.gz</span><br><span class="line"></span><br><span class="line">find /etc/* -<span class="built_in">type</span> d -mtime -3</span><br><span class="line"></span><br><span class="line">tar zcf /tmp/$(<span class="built_in">date</span> +%F)_$(hostname -s)_etc.tar.gz /etc/*</span><br><span class="line"></span><br><span class="line">find /etc/* -<span class="built_in">type</span> d -mtime -3|xargs tar zcf /tmp/$(<span class="built_in">date</span> +%F)_$(hostname -s)_etc.tar.gz</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux敲门 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>21.systemd进程管理</title>
      <link href="/posts/4b44467c.html"/>
      <url>/posts/4b44467c.html</url>
      
        <content type="html"><![CDATA[<div class='wow animate__heartBeat' data-wow-duration='' data-wow-delay='1s' data-wow-offset=''  data-wow-iteration='2' ><div class="note red icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p><a href="https://www.lukeme.top/posts/4c7367cf.html">告别小白，点击直达</a></p></div></div><h3 id="救援模式">救援模式</h3><p>前提：虚拟机设置已经挂载iso镜像</p><h4 id="MBR引导被破坏怎么解决？">MBR引导被破坏怎么解决？</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#注：仅演示救援模式清空MBR！！！！！！！！！！！！！</span></span><br><span class="line"><span class="built_in">dd</span> &lt; /dev/zero &gt;/dev/sda bs=1 count=446</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#解决办法</span></span><br><span class="line"><span class="comment"># 1.获取root环境</span></span><br><span class="line"><span class="built_in">chroot</span> /mnt/sysimage</span><br><span class="line"><span class="comment"># 2.修复MBR</span></span><br><span class="line">grub2-install /dev/sda</span><br><span class="line"><span class="comment"># 3.退出</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"><span class="comment"># 4.重启</span></span><br><span class="line">reboo</span><br><span class="line">过程如下↓</span><br></pre></td></tr></table></figure><p><strong>MBR破坏后启动自动跳到这里</strong></p><p><img src="https://cos.lukme.top/Pic/image-20240501105112668.png" alt="image-20240501105112668"></p><p>进入救援模式前进入BISO,修改优先CD-ROM启动加载</p><p><img src="https://cos.lukme.top/Pic/image-20240501102743250.png" alt="image-20240501102743250"></p><p><img src="https://cos.lukme.top/Pic/image-20240501094910948.png" alt="image-20240501094910948"></p><p><img src="https://cos.lukme.top/Pic/image-20240501105511762.png" alt="image-20240501105511762"></p><p><img src="https://cos.lukme.top/Pic/image-20240501105829470.png" alt="image-20240501105829470"></p><p><img src="https://cos.lukme.top/Pic/image-20240501111423160.png" alt="image-20240501111423160"></p><h4 id="grub菜单误删怎么解决？">grub菜单误删怎么解决？</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#仅做演示删除gruub菜单！！！！！！！！！！！！</span></span><br><span class="line">[root@lb01 ~]# <span class="built_in">rm</span> -fr /boot/grub2</span><br><span class="line">[root@lb01 ~]# reboot</span><br></pre></td></tr></table></figure><p><strong>解决过程</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.获取root环境</span></span><br><span class="line"><span class="built_in">chroot</span> /mnt/sysimage</span><br><span class="line"><span class="comment"># 2.修复磁盘MBR</span></span><br><span class="line">grub2-install /dev/sda</span><br><span class="line"><span class="comment"># 3.修复grub菜单配置文件</span></span><br><span class="line">grub2-mkconfig -o /boot/grub2/grub.cfg</span><br><span class="line"><span class="comment"># 4.退出</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"><span class="comment"># 5.重启</span></span><br><span class="line">reboot</span><br><span class="line">过程图如下</span><br></pre></td></tr></table></figure><p><strong>grub菜单被删启动界面</strong></p><p><img src="https://cos.lukme.top/Pic/image-20240501112106766.png" alt="image-20240501112106766"></p><p><strong>同样进入救援模式</strong></p><p><img src="https://cos.lukme.top/Pic/image-20240501113156619.png" alt="image-20240501113156619"></p><h4 id="系统损坏拷贝文件？">系统损坏拷贝文件？</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">bash-4.2# mkfs.xfs -f /dev/sdc</span><br><span class="line">bash-4.2# <span class="built_in">mkdir</span> /data</span><br><span class="line">bash-4.2# mount /dev/sdc /data</span><br><span class="line">bash-4.2# <span class="built_in">cp</span> -a /raid0 /data</span><br><span class="line">bash-4.2# umount /dev/sdb</span><br></pre></td></tr></table></figure><h3 id="修改网卡名-了解">修改网卡名  了解</h3><p><img src="https://cos.lukme.top/Pic/image-20240501114139869.png" alt="image-20240501114139869"></p><p><img src="https://cos.lukme.top/Pic/image-20240501114157577.png" alt="image-20240501114157577"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">biosdevname=0 net.ifnames=0</span><br><span class="line">net.ifnames=0<span class="comment">#不是dell物理机环境</span></span><br></pre></td></tr></table></figure><h3 id="Systemd-进程管理">Systemd 进程管理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemd即为system daemon守护进程，systemd主要解决上文的问题而诞生，systemd的目标是，为系统的启动和管理提供一套完整的解决方案。</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#CentOS6启动</span></span><br><span class="line">1.启动时间长，init进程是串行启动，只有前一个进程启动完，才会启动下一个进程。</span><br><span class="line">2.启动脚本复杂，初始化完成后，系统会加载很多脚本，脚本都会处理各自的情况，这回让脚本多而复杂。</span><br><span class="line"><span class="comment">#CentOS7启动</span></span><br><span class="line">CtOS7所有进程无论有无依赖关系，都并行启动，当然有很多时候进程并没有真正的启动而是只有一个信号或者说是标记，在真正利用的时候，才会真正启动</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20240501114955720.png" alt="image-20240501114955720"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#systemd优势</span></span><br><span class="line">1.最新系统都采用systemd管理（RedHat7，CentOS7，Ubuntu15...）</span><br><span class="line">2.CentOS7 支持开机并行启动服务,显著提高开机启动效率</span><br><span class="line">3.CentOS7关机只关闭正在运行的服务，而CentOS6，全部都关闭一次。</span><br><span class="line">4.CentOS7服务的启动与停止不在使用脚本进行管理，也就是/etc/init.d下不在有脚本。</span><br><span class="line">5.CentOS7使用systemd解决原有模式缺陷，比如原有service不会关闭程序产生的子进程。</span><br></pre></td></tr></table></figure><table><thead><tr><th>相关配置文件</th><th>CentOS6</th><th>CentOS7</th></tr></thead><tbody><tr><td>服务启动脚本</td><td>/etc/init.d/</td><td>/usr/lib/systemd/system/</td></tr><tr><td>开机启动服务</td><td>/etc/rcN.d/</td><td>/etc/systemd/system/</td></tr></tbody></table><h4 id="systemd相关命令">systemd相关命令</h4><p><strong>启动重启服务</strong></p><table><thead><tr><th>System V init（6系统）</th><th>systemctl命令（7系统）</th><th>作用</th></tr></thead><tbody><tr><td>service nginx start <br />/etc/init.d/nginx start</td><td>systemctl start nginx.service</td><td>启动服务</td></tr><tr><td>service nginx stop <br />/etc/init.d/nginx stop</td><td>systemctl stop nginx.service</td><td>停止服务</td></tr><tr><td>service nginx restart <br />/etc/init.d/nginx restart</td><td>systemctl restart nginx.service</td><td>重启服务</td></tr><tr><td>service nginx reload <br />/etc/init.d/nginx reload</td><td>systemctl reload nginx.service</td><td>重新加载配置(不终止服务)</td></tr><tr><td>service nginx status <br />/etc/init.d/nginx status</td><td>systemctl status nginx.servre</td><td>查看服务运行状态</td></tr><tr><td></td><td>systemctl is-active sshd.service</td><td>查看服务是否在运行中</td></tr><tr><td></td><td>systemctl mask nginx.servre</td><td>禁止服务运行</td></tr><tr><td></td><td>systemctl unmask nginx.servre</td><td>取消禁止服务运行</td></tr></tbody></table><p><strong>设置服务开机自启，查看各级别下服务启动状态</strong></p><table><thead><tr><th>System V init（6系 统）</th><th>systemctl命令（7系统）</th><th>作用</th></tr></thead><tbody><tr><td>chkconfig nginx on</td><td>systemctl enable nginx.service</td><td>开机自动启动</td></tr><tr><td>chkconfig nginx off</td><td>systemctl disable nginx.service</td><td>开机不自动启动</td></tr><tr><td>chkconfig --list</td><td>systemctl list-unit-files</td><td>查看各个级别下服务的启动与禁 用</td></tr><tr><td>chkconfig --list nginx</td><td>systemctl is-enabled nginx.service</td><td>查看特定服务是否为开机自启动</td></tr><tr><td>chkconfig–add nginx</td><td>systemctl daemon-reload</td><td>创建新服务文件或者变更设置</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">设置开机自启相当于给启动脚本做个软链接</span><br><span class="line"><span class="comment"># CentOS7中开机自启</span></span><br><span class="line">[root@localhost ~]# systemctl <span class="built_in">enable</span> sshd</span><br><span class="line"><span class="built_in">ln</span> -s /usr/lib/systemd/system/sshd.service /etc/systemd/system/multiuser.target.wants/</span><br><span class="line"><span class="comment"># 取消开机自启</span></span><br><span class="line">[root@localhost ~]# systemctl <span class="built_in">disable</span> sshd</span><br><span class="line">Removed symlink /etc/systemd/system/multi-user.target.wants/sshd.service</span><br><span class="line"><span class="built_in">rm</span> -f /etc/systemd/system/multi-user.target.wants/sshd.service</span><br></pre></td></tr></table></figure><p><strong>systemctl服务状态说明</strong></p><table><thead><tr><th>服务状态</th><th>状态说明</th></tr></thead><tbody><tr><td>loaded</td><td>服务单元的配置文件已经被处理</td></tr><tr><td>active(running)</td><td>服务的一个或多个进程在运行中</td></tr><tr><td>active(exited)</td><td>一次性运行的服务成功被执行并退出(服务运行后完成任务,相关进程会自动退出)</td></tr><tr><td>active(waiting)</td><td>服务已经运行但在等待某个事件</td></tr><tr><td>inactive</td><td>服务没有在运行</td></tr><tr><td>enable</td><td>服务设定为开机运行</td></tr><tr><td>disabled</td><td>服务设定为开机不运行</td></tr><tr><td>static</td><td>服务不能被设定开机启动,但可以由其他服务启动该服务</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Linux敲门 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux基础总结版</title>
      <link href="/posts/4c7367cf.html"/>
      <url>/posts/4c7367cf.html</url>
      
        <content type="html"><![CDATA[<h2 id="【1】Linux基础">【1】Linux基础</h2><h3 id="1-网络相关">1.网络相关</h3><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">ip地址：设备之间互相通信 xxx.xxx.xxx.xxx <span class="number">4</span>段 点分十进制 范围：<span class="number">0</span>-<span class="number">255</span> <span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span> -<span class="number">255</span>.<span class="number">255</span>.<span class="number">255</span>.<span class="number">255</span></span><br><span class="line">子网掩码：划分网段，判断ip是否在同一个局域网内 <span class="number">255</span>.<span class="number">255</span>.<span class="number">255</span>.<span class="number">0</span> 子网一样就是在同一网段</span><br><span class="line">网关：让设备上局域网以外的网站，需要出网关（出国的海关）网关地址就是路由器的IP</span><br><span class="line">DNS：domain name server 域名解析服务</span><br><span class="line">若子下面两个ip网掩码前三位一样，最后一位不一样，则前三位是网络位）</span><br><span class="line">子网掩码            网络位       主机位</span><br><span class="line"><span class="number">255.255.255.0</span>        <span class="number">192</span>.<span class="number">168</span>.<span class="number">0</span>.   <span class="number">69</span></span><br><span class="line"><span class="number">255.255.255.1</span>        <span class="number">192</span>.<span class="number">168</span>.<span class="number">0</span>.   <span class="number">37</span></span><br><span class="line">若子下面两个ip网掩码前两位一样，最后两位不一样，则前两位是网络位</span><br><span class="line">子网掩码            网络位       主机位</span><br><span class="line"><span class="number">255.255.0.241</span>      <span class="number">192</span>.<span class="number">168</span>.     <span class="number">1</span>.<span class="number">5</span>       </span><br><span class="line"><span class="number">255.255.1.67</span>       <span class="number">192</span>.<span class="number">168</span>.     <span class="number">0</span>.<span class="number">241</span></span><br><span class="line"></span><br><span class="line">Windows：cmd中  ipconfig -all查看ip</span><br></pre></td></tr></table></figure><h4 id="1-虚拟机的网络模式">1.虚拟机的网络模式</h4><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">桥接模式：将物理机的网卡和虚拟机的网卡连接在一块（网桥）作用：共享物理机的网络，让虚拟机的IP和物理机的IP在同一个网段（局域网）</span><br><span class="line"><span class="number">192.168.10.142</span></span><br><span class="line"><span class="number">192</span>.<span class="number">168</span>.<span class="number">10</span>.xxx</span><br><span class="line">NAT模式：将物理机的IP地址，动态转换成虚拟机的私网IP，这个私网IP也可以自定义</span><br><span class="line">仅主机模式：将物理机看成是一个没有路由器的交换机，所有的虚拟机都连接在这个交换机上，所有虚拟机之间可以互相通信，但是无法上外网</span><br></pre></td></tr></table></figure><p><strong>NAT模式原理图</strong></p><p><img src="https://cos.lukme.top/Pic/image-20240328140421320.png" alt="image-20240328140421320"></p><p><img src="https://cos.lukme.top/Pic/image-20240328140752681.png" alt="image-20240328140752681"></p><h4 id="2-虚拟机网卡配置">2.虚拟机网卡配置</h4><p><img src="https://cos.lukme.top/Pic/image-20240328140923241.png" alt="image-20240328140923241"></p><p><img src="https://cos.lukme.top/Pic/image-20240328141009976.png" alt="image-20240328141009976"></p><p><img src="https://cos.lukme.top/Pic/image-20240328141241797.png" alt="image-20240328141241797"></p><p><img src="https://cos.lukme.top/Pic/image-20240328141353938.png" alt="image-20240328141353938"></p><h4 id="3-系统内配置网卡">3.系统内配置网卡</h4><p><strong>nmtui命令</strong></p><p><img src="https://cos.lukme.top/Pic/nmtui%E5%91%BD%E4%BB%A4%E6%AD%A5%E9%AA%A4.png" alt="image-20240328135426458"></p><p><strong>命令行配置</strong></p><p><img src="https://cos.lukme.top/Pic/image-20240328142122532.png" alt="image-20240328142122532"></p><p><img src="https://cos.lukme.top/Pic/image-20240328142637912.png" alt="image-20240328142637912"></p><h4 id="4-Xshell连接不上虚拟机排查">4.Xshell连接不上虚拟机排查</h4><p><strong>1.查看虚拟机网卡配置</strong></p><p><img src="https://cos.lukme.top/Pic/image-20240401212405053.png" alt="image-20240401212405053"></p><p><strong>2.检查路由器 (虚拟网络编辑器)配置</strong></p><p><img src="https://cos.lukme.top/Pic/image-20240401212612086.png" alt="image-20240401212612086"></p><p><strong>3.虚拟机网卡配置文件内容</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">BOOTPROTO=nonenone/dhcp/static</span><br><span class="line">DEFROUTE=<span class="built_in">yes</span></span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">NAME=ens33</span><br><span class="line">DEVICE=ens33</span><br><span class="line">ONBOOT=<span class="built_in">yes</span>开机启动网卡</span><br><span class="line">IPADDR=10.0.0.250ip</span><br><span class="line">NETMASK=255.255.255.0子网掩码</span><br><span class="line">GATEWAY=10.0.0.2网关</span><br><span class="line">DNS1=223.5.5.5首选DNS</span><br><span class="line">DNS2=223.6.6.6备用DNS</span><br><span class="line">IPV6INIT=no</span><br><span class="line">UUID=c96bc909-188e-ec64-3a96-6a90982b08ad</span><br></pre></td></tr></table></figure><p><strong>4.测试虚拟机是否能上外网 ping <a href="http://baidu.com">baidu.com</a></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 测试虚拟机是否能上外网</span></span><br><span class="line">ping baidu.com</span><br><span class="line">在xshell里ping10.0.0.250，谁连接谁，就用谁去ping谁</span><br></pre></td></tr></table></figure><p>5.检查下端口是不是22（ssh协议端口22）</p><p>telnet 10.0.0.250 22 [c:~]$ telnet 10.0.0.250 22</p><p>Windows开启telnet</p><p><img src="https://cos.lukme.top/Pic/image-20240401213429309.png" alt="image-20240401213429309"></p><h3 id="2-C6-C7安装">2.C6 &amp; C7安装</h3><h4 id="1-Centos-6-安装">1. Centos 6 安装</h4><p><img src="https://cos.lukme.top/Pic/image-20240429164147100.png" alt="image-20240429164147100"></p><p><strong>1.选第一个，回车</strong></p><p><img src="https://cos.lukme.top/Pic/202405202206220.png" alt="image-20240520220605042"></p><p><img src="https://cos.lukme.top/Pic/image-20240429150439219.png" alt="image-20240429150439219"></p><p><img src="https://cos.lukme.top/Pic/image-20240429150817328.png" alt="image-20240429150817328"></p><p><img src="https://cos.lukme.top/Pic/image-20240429150932495.png" alt="image-20240429150932495"></p><p><img src="https://cos.lukme.top/Pic/image-20240429151041651.png" alt="image-20240429151041651"></p><p><strong>选择时区和填写密码等省略</strong></p><p><img src="https://cos.lukme.top/Pic/image-20240429151453854.png" alt="image-20240429151453854"></p><p><img src="https://cos.lukme.top/Pic/image-20240429151714208.png" alt=""></p><p><img src="https://cos.lukme.top/Pic/image-20240429151940449.png" alt="image-20240429151940449"></p><p>选择base和develop工具</p><p><img src="https://cos.lukme.top/Pic/image-20240429152056178.png" alt="image-20240429152056178"></p><h4 id="2-配置CentOS6网卡">2.配置CentOS6网卡</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# vi /etc/sysconfig/network-scripts/ifcfg-eth0 </span><br><span class="line">DEVICE=eth0</span><br><span class="line">HWADDR=00:0C:29:5A:FC:82</span><br><span class="line">TYPE=Ethernet</span><br><span class="line">UUID=65c55f51-b929-49fa-b8c9-541e6230e11b</span><br><span class="line">ONBOOT=<span class="built_in">yes</span></span><br><span class="line">NM_CONTROLLED=<span class="built_in">yes</span></span><br><span class="line">BOOTPROTO=none</span><br><span class="line">IPADDR=10.0.0.10</span><br><span class="line">NETMASK=255.255.255.0</span><br><span class="line">GETEWAY=10.0.0.254</span><br><span class="line">DNS=223.5.5.5</span><br><span class="line">:wq</span><br><span class="line">重启网卡 </span><br><span class="line">1./etc/init.d/network restart</span><br><span class="line">2.service network restart</span><br></pre></td></tr></table></figure><h4 id="3-CentOS7安装">3.CentOS7安装</h4><p><img src="https://cos.lukme.top/Pic/%E8%99%9A%E6%8B%9F%E6%9C%BAstep01.png" alt="image-20240328135426458"></p><p><img src="https://cos.lukme.top/Pic/%E8%99%9A%E6%8B%9F%E6%9C%BAstep02.png" alt="image-20240328135426458"></p><p><img src="https://cos.lukme.top/Pic/%E8%99%9A%E6%8B%9F%E6%9C%BAstep03.png" alt="image-20240328135426458"></p><h3 id="3-变量">3.变量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 如何定义变量</span></span><br><span class="line">变量名=变量值     age=18</span><br><span class="line">[root@localhost tmp]# <span class="built_in">echo</span> <span class="variable">$age</span><span class="comment">#调用变量</span></span><br><span class="line">18</span><br><span class="line"><span class="comment">##  name=oldboy</span></span><br><span class="line">1.<span class="built_in">echo</span> <span class="string">&#x27;$oldboy&#x27;</span> 结果是什么？ </span><br><span class="line"><span class="variable">$oldboy</span></span><br><span class="line">2.<span class="built_in">echo</span> <span class="string">&#x27;$name&#x27;</span> 结果是什么？</span><br><span class="line"><span class="variable">$name</span></span><br><span class="line">3.<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$name</span>&quot;</span> 结果是什么？</span><br><span class="line">oldboy </span><br><span class="line">4.1.<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$oldboy</span>&#x27; 结果是什么？ </span></span><br><span class="line"><span class="string">空值</span></span><br><span class="line"><span class="string">echo &#123;1..5..2&#125;每隔2个数在1-5取数</span></span><br></pre></td></tr></table></figure><p><strong>环境变量（系统变量）</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] <span class="built_in">declare</span>    <span class="comment">#可以查看系统自带的所有变量 </span></span><br><span class="line">1.[root@localhost ~]# ll /root/.bashrc</span><br><span class="line">2.[root@localhost ~]# ll /etc/bashrc </span><br><span class="line">3.[root@localhost ~]# ll /etc/profile</span><br><span class="line">4.[root@localhost ~]# ll /etc/profile.d/</span><br></pre></td></tr></table></figure><p><strong>命令提示符变量</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# <span class="built_in">echo</span> <span class="variable">$PS1</span></span><br><span class="line">[\u@\h \W]\$</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20240327165009589.png" alt="image-20240327165009589"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">修改环境变量文件永久生效</span><br><span class="line">[root@lb01 ~]# vi ~/.bashrc     /root/.bashrc</span><br><span class="line">[lgj@lb01 root]$ vi ~/.bashrc      /home/lgj/.bushrc</span><br><span class="line">若root用户修改</span><br><span class="line">超级用户和普通用户家目录：</span><br><span class="line">超级用户root：/root</span><br><span class="line">普通用户：/home/普通用户名</span><br></pre></td></tr></table></figure><h4 id="BASH特性">BASH特性</h4><p><strong>BASH特性——Tab补全</strong></p><p><strong>BASH特性——快捷键</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Ctrl + w <span class="comment"># 将光标所在字符前面的内容删除，一直删除到空格</span></span><br><span class="line">Ctrl + z <span class="comment"># 将一个进程放在后台运行</span></span><br><span class="line">Ctrl + k <span class="comment"># 将光标所在字符和后面所有内容，全部删除</span></span><br><span class="line">Ctrl + u <span class="comment"># 将光标所在字符前面的内容全部删除（光标所在字符不会删除）</span></span><br><span class="line">Ctrl + s <span class="comment"># 锁屏</span></span><br><span class="line">Ctrl + q <span class="comment"># 解锁</span></span><br><span class="line">Ctrl + 左右 <span class="comment"># 按照单词跳转光标</span></span><br><span class="line"><span class="comment">###########################################</span></span><br><span class="line">Ctrl + a <span class="comment"># 将光标移动到命令行首</span></span><br><span class="line">Ctrl + e <span class="comment"># 将光标移动到命令行末</span></span><br><span class="line">Ctrl + c <span class="comment"># 将命令终止</span></span><br><span class="line">Ctrl + l <span class="comment"># 清屏</span></span><br><span class="line">BASH特性——历史命令</span><br><span class="line">BASH特性——命令别名</span><br><span class="line">Ctrl + d <span class="comment"># 退出当前一个BASH终端 （注销当前用户）</span></span><br><span class="line">Ctrl + r <span class="comment"># 搜索历史命令</span></span><br><span class="line">ESC + . <span class="comment"># 将上一条命令最后一个空格 后面的内容，补全到当前命令行</span></span><br><span class="line"><span class="string">&#x27;井号&#x27;</span> <span class="comment"># :在BASH中代表注释，系统不认识，bash也不会翻译</span></span><br></pre></td></tr></table></figure><p><strong>BASH特性——历史命令</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 查看历史命令 </span></span><br><span class="line">[root@localhost ~]# <span class="built_in">history</span> </span><br><span class="line">    1  age=18</span><br><span class="line">    2  <span class="built_in">echo</span> age</span><br><span class="line">    3  <span class="built_in">echo</span> <span class="string">&quot;age&quot;</span></span><br><span class="line">    4  jjjsjsjsjsjsjjsjjsjsjjjsjss</span><br><span class="line">    5  <span class="built_in">history</span> </span><br><span class="line"><span class="comment">## 保存历史记录(write)     历史记录保存在 ~/.bash_history    普通用户/home/lgj/.bash_history</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">history</span> -w</span><br><span class="line"><span class="comment">## 清除所有历史记录（clear）</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">history</span> -c</span><br><span class="line"><span class="comment">## 删除指定的一条历史记录（delete）</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">history</span> -d 4</span><br><span class="line"></span><br><span class="line"><span class="comment">## 执行上一条开头是vi的命令</span></span><br><span class="line">[root@localhost ~]# !vi</span><br><span class="line"><span class="comment">## 执行上一条命令</span></span><br><span class="line">[root@localhost ~]# !!</span><br><span class="line"><span class="comment">## 使用!+编号，重新执行命令</span></span><br><span class="line">[root@localhost ~]# !10</span><br></pre></td></tr></table></figure><p><strong>BASH特性——命令别名</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 查看系统中的所有别名（查）    alias</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">alias</span></span><br><span class="line"><span class="built_in">alias</span> <span class="built_in">cp</span>=<span class="string">&#x27;cp -i&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> egrep=<span class="string">&#x27;egrep --color=auto</span></span><br><span class="line"><span class="string">alias ens33=&#x27;</span>ip address show ens33<span class="string">&#x27;</span></span><br><span class="line"><span class="string">alias fgrep=&#x27;</span>fgrep --color=auto<span class="string">&#x27;</span></span><br><span class="line"><span class="string">alias grep=&#x27;</span>grep --color=auto<span class="string">&#x27;</span></span><br><span class="line"><span class="string">alias l.=&#x27;</span><span class="built_in">ls</span> -d .* --color=auto<span class="string">&#x27;</span></span><br><span class="line"><span class="string">alias ll=&#x27;</span><span class="built_in">ls</span> -l --color=auto<span class="string">&#x27;</span></span><br><span class="line"><span class="string">alias ls=&#x27;</span><span class="built_in">ls</span> --color=auto<span class="string">&#x27;</span></span><br><span class="line"><span class="string">alias mv=&#x27;</span><span class="built_in">mv</span> -i<span class="string">&#x27;</span></span><br><span class="line"><span class="string">alias net=&#x27;</span>vi /etc/sysconfig/network-scripts/ifcfg-ens33<span class="string">&#x27;</span></span><br><span class="line"><span class="string">alias rm=&#x27;</span><span class="built_in">rm</span> -i<span class="string">&#x27;</span></span><br><span class="line"><span class="string">alias which=&#x27;</span><span class="built_in">alias</span> | /usr/bin/which --tty-only --read-alias --show-dot --showtilde<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">## 设置别名（增）临时</span></span><br><span class="line"><span class="string">alias 别名=&#x27;</span>命令<span class="string">&#x27;</span></span><br><span class="line"><span class="string">[root@localhost ~]# alias ens33=&#x27;</span>ip address show ens33<span class="string">&#x27;</span></span><br><span class="line"><span class="string">## 删除别名（删）</span></span><br><span class="line"><span class="string">unalias 别名</span></span><br><span class="line"><span class="string">[root@localhost ~]# unalias ens33</span></span><br><span class="line"><span class="string">## 修改别名（改）</span></span><br><span class="line"><span class="string">alias 别名=&#x27;</span>命令<span class="string">&#x27;</span></span><br><span class="line"><span class="string">alias net=&#x27;</span>vi /etc/sysconfig/network-scripts/ifcfg-ens34</span><br><span class="line"><span class="comment">## 别名永久生效</span></span><br><span class="line">[root@localhost ~]# vi ~/.bashrc</span><br><span class="line"><span class="built_in">alias</span> net=<span class="string">&#x27;vi /etc/sysconfig/network-scripts/ifcfg-ens33&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>BASH特性——获取命令帮助</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">man 命令</span><br><span class="line">命令 --<span class="built_in">help</span></span><br><span class="line">http://linux.51yip.com/</span><br></pre></td></tr></table></figure><h3 id="4-单用户模式">4.单用户模式</h3><ul><li>忘记root账户密码导致无法登陆系统时，只需要进入emergency mode（单用户模式）更新root账户的密码即可。</li><li>单用户模式可以用来修改文件系统损坏、还原配置文件、移动用户数据等。</li></ul><h4 id="1-修改密码">1.修改密码</h4><p><strong>CentOS6</strong></p><p><strong>1）重启系统，到grub菜单界面</strong></p><p><img src="https://cos.lukme.top/Pic/image-20240429164346037.png" alt="image-20240429164346037"></p><p><img src="https://cos.lukme.top/Pic/image-20240429164633863.png" alt="image-20240429164633863"></p><p><img src="https://cos.lukme.top/Pic/image-20240429165101506.png" alt="image-20240429165101506"></p><p><strong>回车返回内核菜单</strong></p><p><img src="https://cos.lukme.top/Pic/image-20240429164943845.png" alt="image-20240429164943845"></p><p><strong>进入后就可以重新设置密码了</strong></p><p><img src="https://cos.lukme.top/Pic/image-20240429165410448.png" alt="image-20240429165410448"></p><p>密码设置好重启就OK了</p><p><strong>CentOs7</strong></p><p><strong>1.重启系统</strong></p><p><img src="https://cos.lukme.top/Pic/image-20240429170437706.png" alt="image-20240429170437706"></p><p><strong>2.进入grub2菜单</strong></p><p><img src="https://cos.lukme.top/Pic/image-20240429170649081.png" alt="image-20240429170649081"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在linux16行的末尾输入,然后按下   Ctrl+X引导   组合键来运行修改过的内核程序</span></span><br><span class="line">enforcing=0 init=/bin/bash</span><br><span class="line">enforcing=0   关闭selinux（临时的），进入单用户后配置文件里关闭selinux，否则重新开机后密码就不生效了</span><br></pre></td></tr></table></figure><p><strong>不挂载方式</strong></p><p><img src="https://cos.lukme.top/Pic/image-20240429173119985.png" alt="image-20240429173119985"></p><p><strong>3.进入单用户模式</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.重新挂载/目录</span></span><br><span class="line">mount -o rw,remount /</span><br><span class="line"><span class="comment"># 2.修改密码</span></span><br><span class="line">passwd root</span><br><span class="line"><span class="comment"># 3.重新引导系统</span></span><br><span class="line"><span class="built_in">exec</span> /sbin/init</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20240429171621119.png" alt="image-20240429171621119"></p><h4 id="2-修改运行级别">2.修改运行级别</h4><p><strong>如果centos7被设置为运行级别6，导致无限重启怎么解决？</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 查看</span></span><br><span class="line">[root@yum_repo ~]# systemctl get-default</span><br><span class="line">multi-user.target    <span class="comment">#完整多用户模式</span></span><br><span class="line"><span class="comment">## 修改</span></span><br><span class="line">[root@yum_repo ~]# systemctl set-default reboot.target     <span class="comment">#设置运行级别6重启（无限重启）</span></span><br></pre></td></tr></table></figure><p><strong>解决办法</strong></p><p>1.进入编辑模式</p><p><img src="https://cos.lukme.top/Pic/image-20240429173139767.png" alt="image-20240429173139767"></p><p>2.#在linux16行的末尾输入,然后按下   Ctrl+X   组合键来运行修改过的内核程序</p><p><img src="https://cos.lukme.top/Pic/image-20240429175105690.png" alt="image-20240429175105690"></p><p><img src="https://cos.lukme.top/Pic/image-20240429180423234.png" alt="image-20240429180423234"></p><p>exit退出，reboot重启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.重新挂载/sysroot目录</span></span><br><span class="line">mount -o rw,remount /sysroot</span><br><span class="line"><span class="comment"># 2.获取root权限</span></span><br><span class="line"><span class="built_in">chroot</span> /sysroot</span><br><span class="line"><span class="comment"># 3.修改密码</span></span><br><span class="line">passwd root</span><br><span class="line"><span class="comment"># 4.修改运行级别</span></span><br><span class="line">systemctl set-default multi-user.target</span><br><span class="line"><span class="comment"># 5.退出</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"><span class="comment"># 6.重启</span></span><br><span class="line">reboot</span><br><span class="line"><span class="comment">## 关闭selinux</span></span><br><span class="line"><span class="comment"># 临时关闭</span></span><br><span class="line">[root@yum_repo ~]# setenforce 0</span><br><span class="line"><span class="comment"># 永久关闭（重启系统生效）</span></span><br><span class="line">[root@yum_repo ~]# vi /etc/sysconfig/selinux</span><br><span class="line">SELINUX=disabled</span><br><span class="line"><span class="comment">## 两种进入单用户方法</span></span><br><span class="line">1）enforcing=0 init=/bin/bash // 修改密码</span><br><span class="line">2）rd.break // 修改运行级别</span><br></pre></td></tr></table></figure><h2 id="【2】文件和目录管理">【2】文件和目录管理</h2><h3 id="1-目录结构">1.目录结构</h3><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">  几乎所有的计算机操作系统都是使用目录结构组织文件。具体来说就是在一个目录中存放子目录和文件，而在子目录中又会进一步存放子目录和文件，以此类推形成一个树状的文件结构，由于其结构很像一棵树的分支，所以该结构又被称为目录树。</span><br><span class="line">windows：一多根的方式组织文件C:<span class="string">\</span> D:<span class="string">\</span></span><br><span class="line">Linux：以单根的方式组织文件 /</span><br></pre></td></tr></table></figure><p><strong>目录层次的标准FHS</strong></p><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">FHS全称（<span class="keyword">File</span><span class="params">system</span> Hierarchy Standard），中文意思是目录层次标准，是Linux的目录规范标准。</span><br><span class="line">FHS定义了两次规范：</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>.“/”目录下的各个目录应该放什么文件数据。</span><br><span class="line"><span class="number">2</span>.针对/usr 和 /<span class="keyword">var</span> 这两个目录的子目录来定义。</span><br></pre></td></tr></table></figure><blockquote><p>bin -&gt; usr/bin   这个是usr/bin的快捷方式</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">-rw-r--r--.   1 root root    0 Mar 28 11:29 1.txt</span><br><span class="line">lrwxrwxrwx.   1 root root    7 Mar 27 12:07 bin -&gt; usr/bin</span><br><span class="line">dr-xr-xr-x.   5 root root 4096 Mar 27 12:11 boot</span><br><span class="line">-开头的是文件</span><br><span class="line">l开头的是快捷方式   -&gt;</span><br><span class="line">dr开头的是文件夹</span><br><span class="line"><span class="comment">## /目录下</span></span><br><span class="line"><span class="comment">###系统命令</span></span><br><span class="line">bin -&gt; usr/bin <span class="comment"># 存放系统命令（普通用户可以执行）</span></span><br><span class="line">sbin -&gt; usr/sbin <span class="comment"># 存放系统命令（大部分命令只能超级用户执行）</span></span><br><span class="line"><span class="comment">#系统库文件目录</span></span><br><span class="line">lib -&gt; usr/lib <span class="comment"># 库文件（操作系统需要用到的组件 插件...）</span></span><br><span class="line">lib64 -&gt; usr/lib64 <span class="comment"># 库文件（64位操作系统库文件）</span></span><br><span class="line"><span class="comment"># 系统启动时文件目录</span></span><br><span class="line">boot    <span class="comment"># 存放系统启动文件</span></span><br><span class="line"><span class="comment">#空文件夹</span></span><br><span class="line">media   <span class="comment"># 媒体库目录（可以存放视频，图片...）      //媒体库 存放视频，图片，音乐</span></span><br><span class="line">mnt     <span class="comment"># mount 如果有U盘 光驱以外的设备，挂载目录     //挂载目录   mount </span></span><br><span class="line"><span class="comment">#临时挂载的文件系统。比如cdrom,u盘等，直接插入光驱无法使用，要先挂载后使用  /dev/cdrom /mnt</span></span><br><span class="line"></span><br><span class="line">opt      <span class="comment"># 存放第三方应用安装包的目录</span></span><br><span class="line">srv    <span class="comment"># 网站数据存放目录</span></span><br><span class="line"></span><br><span class="line">*****重点*****</span><br><span class="line">1）root    <span class="comment"># 超级用户root的家目录</span></span><br><span class="line">2）home    <span class="comment"># 普通用户的家目录</span></span><br><span class="line">3）run    <span class="comment"># 存放系统中运行的所有进程PID文件(#系统启动后, 运行的程序产生的运行时数据, 包括进程的pid文件,锁文件等)</span></span><br><span class="line">4）sys    <span class="comment"># 操作系统相关文件存放目录</span></span><br><span class="line">5)tmp      <span class="comment"># 所有用户都可以操作的目录（回收站）存放临时文件, 一般存放超过10天以上都会自动删除,可以更改删除临时文件的期限</span></span><br><span class="line">6)usr   <span class="comment"># 用户文件存放目录</span></span><br><span class="line"> <span class="comment">#默认软件都会存于该目录下。用于存储只读用户数据的第二层次；包含绝大多数的(多)用户工具和应用程序。</span></span><br><span class="line">7)dev    <span class="comment"># 设备文件</span></span><br><span class="line">8)etc    <span class="comment"># 系统配置文件 .conf .cfg .configure .cnf 以及常用配置文件</span></span><br><span class="line">9)proc    <span class="comment"># 系统信息都存放这目录下（硬件信息，进程信息 变化信息)</span></span><br><span class="line">10)var    <span class="comment"># 存放一些系统中变量文件，和一些不断发生变化的可变文件</span></span><br></pre></td></tr></table></figure><h4 id="①-dev目录">① /dev目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">/dev/sda <span class="comment"># 系统中的第一块硬盘</span></span><br><span class="line">/dev/sda1 <span class="comment"># 系统中的第一块硬盘的第一个分区</span></span><br><span class="line">/dev/sda2 <span class="comment"># 系统中的第一块硬盘的第二个分区</span></span><br><span class="line">/dev/sdb <span class="comment"># 系统中的第二块硬盘</span></span><br><span class="line">/dev/random <span class="comment"># 生成随机数的</span></span><br><span class="line">/dev/null <span class="comment"># 黑洞，将终端上输出的内容，放入黑洞</span></span><br><span class="line">/dev/cdrom <span class="comment"># 光驱</span></span><br><span class="line">/dev/pts/&#123;0 1 2 3&#125; <span class="comment"># 连接服务器的虚拟终端设备</span></span><br></pre></td></tr></table></figure><h4 id="②-etc目录">② /etc目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/etc/hosts <span class="comment"># 本地DNS解析文件      ip 域名</span></span><br><span class="line">/etc/passwd <span class="comment"># 存放用户信息文件</span></span><br><span class="line">/etc/sysconfig/network-scripts/ifcfg-网卡名 <span class="comment"># 网卡配置文件</span></span><br><span class="line">/etc/hostname <span class="comment"># 主机名配置文件</span></span><br><span class="line">/etc/resolv.conf <span class="comment"># DNS配置文件</span></span><br></pre></td></tr></table></figure><h4 id="③-etc其它目录-了解">③ /etc其它目录     *了解</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/etc/opt/       <span class="comment">#/opt/的配置文件</span></span><br><span class="line">/etc/X11/       <span class="comment">#X_Window系统(版本11)的配置文件</span></span><br><span class="line">/etc/sgml/      <span class="comment">#SGML的配置文件</span></span><br><span class="line">/etc/xml/       <span class="comment">#XML的配置文件</span></span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20240328131046094.png" alt="image-20240328131046094"></p><h4 id="④-proc和-var目录">④ /proc和/var目录</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/proc/m</span>eminfo <span class="comment"># 内存信息</span></span><br><span class="line"><span class="regexp">/proc/</span>cpuinfo <span class="comment"># CPU信息</span></span><br><span class="line">在Linux中，对应Procfs格式挂载。该目录下文件只能看不能改（包括root）</span><br></pre></td></tr></table></figure><p><strong>/var目录</strong></p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/var/<span class="built_in">log</span>/messages <span class="meta"># 系统日志</span></span><br><span class="line">/var/<span class="built_in">log</span>/secure <span class="meta"># 系统登录日志</span></span><br><span class="line"><span class="meta">#变量文件——在正常运行的系统中其内容不断变化的文件，如日志，脱机文件和临时电子邮件文件。有时是一个单独的分区。如果不单独分区，有可能会把整个分区充满。如果单独分区，给大给小都不合适。</span></span><br></pre></td></tr></table></figure><p><strong>文件的路径定位</strong></p><p><img src="https://cos.lukme.top/Pic/image-20240328131213563.png" alt="image-20240328131213563"></p><p><strong>特殊目录’.’ 和’…’</strong></p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">.. </span>：当前目录的上一级目录</span><br><span class="line"><span class="bullet">. </span>：当前目录</span><br></pre></td></tr></table></figure><h4 id="⑤-其它目录">⑤ 其它目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/lost+found     <span class="comment">#在ext3文件系统中，当系统意外崩溃或机器意外关机，会产生一些文件碎片在这里。当系统在开机启动的过程中fsck工具会检查这里，并修复已经损坏的文件系统。当系统发生问题。可能会有文件被移动到这个目录中，可能需要用手工的方式来修复，或移到文件到原来的位置上。</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## /etc/目录</span></span><br><span class="line"></span><br><span class="line">/etc/rc /etc/rc.d   ***** <span class="comment">#/etc/rc*.d 启动、或改变运行级时运行的scripts或scripts的目录.</span></span><br><span class="line">/etc/hosts          ***** <span class="comment">#本地域名解析文件</span></span><br><span class="line">/etc/sysconfig/network  ***** <span class="comment">#IP、掩码、网关、主机名配置</span></span><br><span class="line">/etc/resolv.conf    ***** <span class="comment">#DNS服务器配置</span></span><br><span class="line">/etc/fstab          ***** <span class="comment">#开机自动挂载系统，所有分区开机都会自动挂载</span></span><br><span class="line">/etc/inittab        ***** <span class="comment">#设定系统启动时Init进程将把系统设置成什么样的runlevel及加载相关的启动文件配置</span></span><br><span class="line">/etc/exports        ***** <span class="comment">#设置NFS系统用的配置文件路径</span></span><br><span class="line">/etc/init.d/        ***** <span class="comment">#这个目录来存放系统启动脚本</span></span><br><span class="line">/etc/profile        ***** <span class="comment">#全局系统环境配置变量</span></span><br><span class="line">/etc/csh.login,  /etc/csh.cshrc</span><br><span class="line">/etc/issue          ***** <span class="comment">#认证前的输出信息，默认输出版本内核信息</span></span><br><span class="line">/etc/motd           <span class="comment">#设置认证后的输出信息</span></span><br><span class="line">/etc/mtab           <span class="comment">#当前安装的文件系统列表.由scripts初始化，并由mount 命令自动更新.需要一个当前安装的文件系统的列表时使用，例如df 命令</span></span><br><span class="line">/etc/group          ***** <span class="comment">#类似/etc/passwd ，但说明的不是用户而是组.</span></span><br><span class="line">/etc/passwd         ***** <span class="comment">#用户数据库，其中的域给出了用户名、真实姓名、家目录、加密的口令和用户的其他信息.</span></span><br><span class="line">/etc/shadow         ****** <span class="comment">#在安装了影子口令软件的系统上的影子口令文件.影子口令文件将/etc/passwd 文件中的加密口令移动到/etc/shadow 中，而后者只对root可读.这使破译口令更困难.</span></span><br><span class="line">/etc/sudoers        ***** <span class="comment">#可以sudo命令的配置文件</span></span><br><span class="line">/etc/syslog.conf    ***** <span class="comment">#系统日志参数配置</span></span><br><span class="line">/etc/login.defs     <span class="comment">#设置用户帐号限制的文件</span></span><br><span class="line">/etc/securetty      <span class="comment">#确认安全终端，即哪个终端允许root登录.一般只列出虚拟控制台，这样就不可能(至少很困难)通过modem或网络闯入系统并得到超级用户特权.</span></span><br><span class="line">/etc/printca        <span class="comment">#类似/etc/termcap ，但针对打印机.语法不同.</span></span><br><span class="line">/etc/shells         <span class="comment">#列出可信任的shell.chsh 命令允许用户在本文件指定范围内改变登录shell.提供一台机器FTP服务的服务进程ftpd 检查用户shell是否列在 /etc/shells 文件中，如果不是将不允许该用户登录.</span></span><br><span class="line">/etc/xinetd.d       <span class="comment">#如果服务器是通过xinetd模式运行的，它的脚本要放在这个目录下。有些系统没有这个目录，比如Slackware，有些老的版本也没有。在Redhat Fedora中比较新的版本中存在。</span></span><br><span class="line">/etc/opt/           <span class="comment">#/opt/的配置文件</span></span><br><span class="line">/etc/X11/           <span class="comment">#X_Window系统(版本11)的配置文件</span></span><br><span class="line">/etc/sgml/          <span class="comment">#SGML的配置文件</span></span><br><span class="line">/etc/xml/           <span class="comment">#XML的配置文件</span></span><br><span class="line">/etc/skel/          ***** <span class="comment">#默认创建用户时，把该目录拷贝到家目录下</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##usr/目录</span></span><br><span class="line"></span><br><span class="line">/usr/X11R6          <span class="comment">#存放X-Windows的目录；</span></span><br><span class="line">/usr/games          <span class="comment">#存放着XteamLinux自带的小游戏；</span></span><br><span class="line">/usr/doc            <span class="comment">#Linux技术文档；</span></span><br><span class="line">/usr/include        <span class="comment">#用来存放Linux下开发和编译应用程序所需要的头文件；</span></span><br><span class="line">/usr/lib            <span class="comment">#存放一些常用的动态链接共享库和静态档案库；</span></span><br><span class="line">/usr/man            <span class="comment">#帮助文档所在的目录；</span></span><br><span class="line">/usr/src            <span class="comment">#Linux开放的源代码，就存在这个目录，爱好者们别放过哦；</span></span><br><span class="line">/usr/bin/           <span class="comment">#非必要可执行文件 (在单用户模式中不需要)；面向所有用户。</span></span><br><span class="line">/usr/lib/           <span class="comment">#/usr/bin/和/usr/sbin/中二进制文件的库。</span></span><br><span class="line">/usr/sbin/          <span class="comment">#非必要的系统二进制文件，例如：大量网络服务的守护进程。</span></span><br><span class="line">/usr/share/         <span class="comment">#体系结构无关（共享）数据。</span></span><br><span class="line">/usr/src/           <span class="comment">#源代码,例如:内核源代码及其头文件。</span></span><br><span class="line">/usr/X11R6/         <span class="comment">#X Window系统版本 11, Release 6.</span></span><br><span class="line">/usr/local/         <span class="comment">#本地数据的第三层次，具体到本台主机。通常而言有进一步的子目录，例如：bin/、lib/、share/.这是提供给一般用户的/usr目录，在这里安装一般的应用软件；</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## /var/目录  </span></span><br><span class="line"></span><br><span class="line">/var/log/message            ***** <span class="comment">#系统日志信息，按周自动轮询</span></span><br><span class="line">/var/spool/cron/root        ***** <span class="comment">#定时器配置文件目录，默认按用户命名</span></span><br><span class="line">/var/log/secure             ***** <span class="comment">#记录登陆系统存取信息的文件，不管认证成功还是认证失败都会记录</span></span><br><span class="line">/var/log/wtmp               <span class="comment">#记录登陆者信息的文件，last,who,w命令信息来源于此</span></span><br><span class="line">/var/spool/clientmqueue/    <span class="comment">#当邮件服务未开启时，所有应发给系统管理员的邮件都将堆放在此</span></span><br><span class="line">/var/spool/mail/            <span class="comment">#邮件目录</span></span><br><span class="line">/var/tmp                    <span class="comment">#比/tmp 允许的大或需要存在较长时间的临时文件. (虽然系统管理员可能不允许/var/tmp 有很旧的文件.)</span></span><br><span class="line">/var/lib                    <span class="comment">#系统正常运行时要改变的文件.  </span></span><br><span class="line">/var/local                  <span class="comment">#/usr/local 中安装的程序的可变数据(即系统管理员安装的程序).注意，如果必要，即使本地安装的程序也会使用其他/var 目录，例如/var/lock .  </span></span><br><span class="line">/var/lock                   <span class="comment">#锁定文件.许多程序遵循在/var/lock 中产生一个锁定文件的约定，以支持他们正在使用某个特定的设备或文件.其他程序注意到这个锁定文件，将不试图使用这个设备或文件.</span></span><br><span class="line">/var/log/                   ***** <span class="comment">#各种程序的Log文件，特别是login   (/var/log/wtmp log所有到系统的登录和注销) 和syslog (/var/log/messages 里存储所有核心和系统程序信息. /var/log 里的文件经常不确定地增长，应该定期清除.  </span></span><br><span class="line">/var/run                    <span class="comment">#保存到下次引导前有效的关于系统的信息文件.例如， /var/run/utmp 包含当前登录的用户的信息.</span></span><br><span class="line">/var/cache/                 <span class="comment">#应用程序缓存数据。这些数据是在本地生成的一个耗时的I/O或计算结果。应用程序必须能够再生或恢复数据。缓存的文件可以被删除而不导致数据丢失。</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## /proc/目录</span></span><br><span class="line"></span><br><span class="line">/proc/meminfo           ***** <span class="comment">#查看内存信息</span></span><br><span class="line">/proc/loadavg           ***** <span class="comment">#还记得 top 以及 uptime 吧？没错！上头的三个平均数值就是记录在此！</span></span><br><span class="line">/proc/uptime            ***** <span class="comment">#就是用 uptime 的时候，会出现的资讯啦！</span></span><br><span class="line">/proc/cpuinfo           ***** <span class="comment">#关于处理器的信息，如类型、厂家、型号和性能等。</span></span><br><span class="line">/proc/cmdline           <span class="comment">#加载 kernel 时所下达的相关参数！查阅此文件，可了解系统是如何启动的！</span></span><br><span class="line">/proc/filesystems       <span class="comment">#目前系统已经加载的文件系统罗！</span></span><br><span class="line">/proc/interrupts        <span class="comment">#目前系统上面的 IRQ 分配状态。</span></span><br><span class="line">/proc/ioports           <span class="comment">#目前系统上面各个装置所配置的 I/O 位址。</span></span><br><span class="line">/proc/kcore             <span class="comment">#这个就是内存的大小啦！好大对吧！但是不要读他啦！</span></span><br><span class="line">/proc/modules           <span class="comment">#目前我们的 Linux 已经加载的模块列表，也可以想成是驱动程序啦！</span></span><br><span class="line">/proc/mounts            <span class="comment">#系统已经挂载的数据，就是用 mount 这个命令呼叫出来的数据啦！</span></span><br><span class="line">/proc/swaps             <span class="comment">#到底系统挂加载的内存在哪里？呵呵！使用掉的 partition 就记录在此啦！</span></span><br><span class="line">/proc/partitions        <span class="comment">#使用 fdisk -l 会出现目前所有的 partition 吧？在这个文件当中也有纪录喔！</span></span><br><span class="line">/proc/pci               <span class="comment">#在 PCI 汇流排上面，每个装置的详细情况！可用 lspci 来查阅！</span></span><br><span class="line">/proc/version           <span class="comment">#核心的版本，就是用 uname -a 显示的内容啦！</span></span><br><span class="line">/proc/bus/*             <span class="comment">#一些汇流排的装置，还有 U盘的装置也记录在此喔！</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/dev/目录·</span></span><br><span class="line"></span><br><span class="line">/dev/hd[a-t]            <span class="comment">#IDE设备</span></span><br><span class="line">/dev/sd[a-z]            <span class="comment">#SCSI设备</span></span><br><span class="line">/dev/fd[0-7]            <span class="comment">#标准软驱</span></span><br><span class="line">/dev/md[0-31]           <span class="comment">#软raid设备</span></span><br><span class="line">/dev/loop[0-7]          <span class="comment">#本地回环设备</span></span><br><span class="line">/dev/ram[0-15]          <span class="comment">#内存</span></span><br><span class="line">/dev/null               <span class="comment">#无限数据接收设备,相当于黑洞</span></span><br><span class="line">/dev/zero               <span class="comment">#无限零资源</span></span><br><span class="line">/dev/tty[0-63]          <span class="comment">#虚拟终端</span></span><br><span class="line">/dev/ttyS[0-3]          <span class="comment">#串口</span></span><br><span class="line">/dev/lp[0-3]            <span class="comment">#并口</span></span><br><span class="line">/dev/console            <span class="comment">#控制台</span></span><br><span class="line">/dev/fb[0-31]           <span class="comment">#framebuffer</span></span><br><span class="line">/dev/cdrom              <span class="comment">#=&gt; /dev/hdc</span></span><br><span class="line">/dev/modem              <span class="comment">#=&gt; /dev/ttyS[0-9]</span></span><br><span class="line">/dev/pilot              <span class="comment">#=&gt; /dev/ttyS[0-9]</span></span><br><span class="line">/dev/random             <span class="comment">#随机数设备</span></span><br><span class="line">/dev/urandom            <span class="comment">#随机数设备</span></span><br></pre></td></tr></table></figure><h3 id="2-查看相关命令">2.查看相关命令</h3><h4 id="①-cat">① cat</h4><table><thead><tr><th>选项</th><th>作用</th></tr></thead><tbody><tr><td>-n</td><td>显示行号</td></tr><tr><td>-T</td><td>用来区分文件中是否有制表符</td></tr><tr><td>-E</td><td>判断文件中内容每一行结束位置</td></tr><tr><td>-A</td><td>相当于-E -T</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 语法</span></span><br><span class="line"><span class="built_in">cat</span> [选项]... [文件]...</span><br><span class="line"><span class="built_in">cat</span> [OPTION]... [FILE]...</span><br><span class="line"><span class="comment">## 查看/etc/passwd文件内容</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> /etc/passwd</span><br><span class="line"><span class="comment">## 查看多个文件内容</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> 1.txt 2.txt</span><br><span class="line">123</span><br><span class="line">abc</span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> 2.txt 1.txt</span><br><span class="line">abc</span><br><span class="line">123</span><br><span class="line"><span class="comment">## 标准输出：当执行一个命令后，命令执行正确，所产生的结果（在终端上能看到的输出结果）</span></span><br><span class="line">OOM： out of memory 内存溢出</span><br><span class="line">OOM killer</span><br><span class="line"><span class="comment">## -n：显示行号</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> -n /etc/passwd</span><br><span class="line">1 root:x:0:0:root:/root:/bin/bash</span><br><span class="line">2 bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">3 daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">4 adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line">5 lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br><span class="line">6 <span class="built_in">sync</span>:x:5:0:<span class="built_in">sync</span>:/sbin:/bin/sync</span><br><span class="line">7 shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown</span><br><span class="line">8 halt:x:7:0:halt:/sbin:/sbin/halt</span><br><span class="line">9 mail:x:8:12:mail:/var/spool/mail:/sbin/nologin</span><br><span class="line">10 operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line"><span class="comment">## -T：用来区分文件中是否有制表符（一个制表符用^I来表示）</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> -T 1.txt</span><br><span class="line">abc 123 789</span><br><span class="line">qwe^Iwww^I777</span><br><span class="line">a^I^I^I^I</span><br><span class="line">aaaaa</span><br><span class="line">bbbb</span><br><span class="line"><span class="comment">## -E：判断文件中内容每一行结束位置（查看是否有多余的空格）结尾用$表示</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> -E 1.txt</span><br><span class="line">abc 123 789$</span><br><span class="line">$</span><br><span class="line">qwe www 777 $</span><br><span class="line">aaaa$</span><br><span class="line">$</span><br><span class="line">$</span><br><span class="line"><span class="comment">## -A：相当于-E -T</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> -A 1.txt</span><br><span class="line">abc 123 789$</span><br><span class="line">$</span><br><span class="line">qwe^Iwww^I777 $</span><br><span class="line">aaaa$</span><br><span class="line">$</span><br><span class="line">Tab 制表符</span><br><span class="line">回车 换行符</span><br><span class="line"><span class="comment">## 往文件中写入内容</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> &gt;&gt; suibian.txt &lt;&lt;<span class="string">EOF(不一定是Eof，起到终止作用)</span></span><br><span class="line"><span class="string">但使龙城free将在</span></span><br><span class="line"><span class="string">xxx</span></span><br><span class="line"><span class="string">aaa</span></span><br><span class="line"><span class="string">ccc</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> &gt;&gt; gushi.txt &lt;&lt;<span class="string">zls （这里就不一定是Eof）</span></span><br><span class="line"><span class="string">&gt; 1111</span></span><br><span class="line"><span class="string">&gt; 2222</span></span><br><span class="line"><span class="string">&gt; 3333</span></span><br><span class="line"><span class="string">&gt; zls</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> &gt; 1.txt &lt;&lt;<span class="string">EOF#一个 &gt; 是写入新内容并覆盖</span></span><br><span class="line"><span class="string">&gt; abc</span></span><br><span class="line"><span class="string">&gt; EOF</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> 1.txt</span><br><span class="line">abc</span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> &gt;&gt; 1.txt &lt;&lt;<span class="string">EOF  #两个&gt;&gt;是追加内容不覆盖</span></span><br><span class="line"><span class="string">&gt; 123</span></span><br><span class="line"><span class="string">&gt; 456</span></span><br><span class="line"><span class="string">&gt; EOF</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> 1.txt</span><br><span class="line">abc</span><br><span class="line">123</span><br><span class="line">456</span><br></pre></td></tr></table></figure><h4 id="②-tail-head">② tail &amp; head</h4><p><strong>==tail==</strong></p><table><thead><tr><th>选项</th><th>作用</th></tr></thead><tbody><tr><td>-n</td><td>指定查看多少行 number</td></tr><tr><td>-f</td><td>follow 跟随，跟踪文件末尾</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 默认情况下tail查看一个文件的后10行内容</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">tail</span> /etc/passwd</span><br><span class="line">ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin</span><br><span class="line">nobody:x:99:99:Nobody:/:/sbin/nologin</span><br><span class="line">systemd-network:x:192:192:systemd Network Management:/:/sbin/nologin</span><br><span class="line">dbus:x:81:81:System message bus:/:/sbin/nologin</span><br><span class="line">polkitd:x:999:998:User <span class="keyword">for</span> polkitd:/:/sbin/nologin</span><br><span class="line">sshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin</span><br><span class="line">postfix:x:89:89::/var/spool/postfix:/sbin/nologin</span><br><span class="line">zls1:x:1000:1000::/home/zls1:/bin/bash</span><br><span class="line">apache:x:48:48:Apache:/usr/share/httpd:/sbin/nologin</span><br><span class="line">zls100:x:1001:1001::/home/zls100:/bin/bash</span><br><span class="line"><span class="comment">## 查看指定行数</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">tail</span> -n2 /etc/passwd</span><br><span class="line">apache:x:48:48:Apache:/usr/share/httpd:/sbin/nologin</span><br><span class="line">zls100:x:1001:1001::/home/zls100:/bin/bash</span><br><span class="line">[root@localhost ~]# <span class="built_in">tail</span> -2 /etc/passwd</span><br><span class="line">apache:x:48:48:Apache:/usr/share/httpd:/sbin/nologin</span><br><span class="line">zls100:x:1001:1001::/home/zls100:/bin/bash</span><br><span class="line"><span class="comment">## 实时追踪日志文件末尾tail -f == tailf</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">tail</span> -f 1.txt</span><br><span class="line">可以查看实时更新的日</span><br></pre></td></tr></table></figure><p><strong>==head==</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#选项：-n</span></span><br><span class="line">作用：指定查看多少行 number</span><br><span class="line"><span class="comment">## 默认情况下head查看一个文件的前10行内容</span></span><br><span class="line"></span><br><span class="line">[root@localhost ~]# <span class="built_in">head</span> /etc/passwd</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line">lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br><span class="line"><span class="built_in">sync</span>:x:5:0:<span class="built_in">sync</span>:/sbin:/bin/sync</span><br><span class="line">shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown</span><br><span class="line">halt:x:7:0:halt:/sbin:/sbin/halt</span><br><span class="line">mail:x:8:12:mail:/var/spool/mail:/sbin/nologin</span><br><span class="line">operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line"><span class="comment">## 查看指定行数-n3/-n 3/-3都可以查看前三行内容  n也可省略</span></span><br><span class="line"></span><br><span class="line">[root@localhost ~]# <span class="built_in">head</span> -n3 /etc/passwd</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">[root@localhost ~]# <span class="built_in">head</span> -n 3 /etc/passwd</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# <span class="built_in">head</span> -3 /etc/passwd</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br></pre></td></tr></table></figure><h4 id="③-more-less">③ more &amp; less</h4><p><strong>==more==</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@db04 ~]# more /etc/services</span><br></pre></td></tr></table></figure><p><strong>==less==</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@db04 ~]# less /etc/services</span><br><span class="line"><span class="comment">#显示行号，缺陷：文件内容过多不能显示最后一行的内容，需要使用翻页键PageDown向后翻</span></span><br><span class="line">[root@db04 ~]# less -N /etc/services</span><br></pre></td></tr></table></figure><h4 id="④-grep">④ grep</h4><table><thead><tr><th>选项</th><th>作用</th></tr></thead><tbody><tr><td>-n</td><td>显示行号</td></tr><tr><td>-A</td><td>After 过滤关键字并打印出后N行</td></tr><tr><td>-B</td><td>Before 过滤关键字并打印出前N行</td></tr><tr><td>-C</td><td>Center 过滤关键字并打印出前后N行</td></tr><tr><td>-v</td><td>取反</td></tr><tr><td>-o</td><td>只显示关键字内容</td></tr><tr><td>-i</td><td>忽略大小写</td></tr><tr><td>-w</td><td>精确匹配,显示匹配的这一行</td></tr><tr><td>-c</td><td>相当于count，用于统计行数</td></tr><tr><td>-r/-R</td><td>递归搜索目录及目录下得文件</td></tr></tbody></table><table><thead><tr><th>关键字可以使用的符号</th><th>作用</th></tr></thead><tbody><tr><td>^</td><td>以…开头</td></tr><tr><td>$</td><td>以…结尾     ^$可以表示空行</td></tr><tr><td>.</td><td>任意一个字符</td></tr><tr><td>*</td><td>*号前面的单个字符匹配0次或多次</td></tr><tr><td>|</td><td>正则表达式里面或者意思，grep默认不支持正则表达式，需要用-E</td></tr><tr><td>\b</td><td>边界符</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 语法：</span></span><br><span class="line">grep [选项]... <span class="string">&#x27;关键字&#x27;</span> [文件名]...</span><br><span class="line"></span><br><span class="line"><span class="comment">## 过滤关键字</span></span><br><span class="line">[root@localhost ~]# grep <span class="string">&#x27;风景&#x27;</span> zls.txt</span><br><span class="line">江山风景美如画，</span><br><span class="line"></span><br><span class="line"><span class="comment">## 过滤关键字并显示行号</span></span><br><span class="line">[root@localhost ~]# grep -n <span class="string">&#x27;root&#x27;</span> /etc/passwd</span><br><span class="line">1:root:x:0:0:root:/root:/bin/bash</span><br><span class="line">10:operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> zls.txt</span><br><span class="line">卧槽</span><br><span class="line">作者：曾老湿</span><br><span class="line">江山风景美如画，</span><br><span class="line">本想吟诗赠天下。</span><br><span class="line">奈何自己没文化，</span><br><span class="line">一句卧槽风好大。</span><br><span class="line">就这么地吧。</span><br><span class="line">谢谢大家。</span><br><span class="line">一二三四五六七，</span><br><span class="line">七六五四三二一。</span><br><span class="line"></span><br><span class="line"><span class="comment">## 过滤出zls.txt文件中 包含一的行</span></span><br><span class="line">[root@localhost ~]#grep <span class="string">&#x27;一&#x27;</span> zls.txt</span><br><span class="line">一句卧槽风好大。</span><br><span class="line">一二三四五六七，</span><br><span class="line">七六五四三二一。</span><br><span class="line"></span><br><span class="line"><span class="comment">## 过滤出zls.txt文件中以一开头的行</span></span><br><span class="line">[root@localhost ~]#grep <span class="string">&#x27;^一&#x27;</span> zls.txtt</span><br><span class="line">一句卧槽风好大。</span><br><span class="line">一二三四五六七，</span><br><span class="line"></span><br><span class="line"><span class="comment">## 过滤出zls.txt文件中以一开头的行，并显示行号</span></span><br><span class="line">[root@localhost ~]# grep -n <span class="string">&#x27;^一&#x27;</span> zls.txt</span><br><span class="line">6:一句卧槽风好大。</span><br><span class="line">9:一二三四五六七，</span><br><span class="line"></span><br><span class="line"><span class="comment">## 过滤出/etc/passwd文件中，以login结尾的行</span></span><br><span class="line">[root@localhost ~]# grep <span class="string">&#x27;login$&#x27;</span> /etc/passwd</span><br><span class="line"></span><br><span class="line"><span class="comment">## 过滤出mail关键字所在行及后两行内容</span></span><br><span class="line">[root@localhost ~]# grep <span class="string">&#x27;mail&#x27;</span> -A 2 /etc/passwd</span><br><span class="line">mail:x:8:12:mail:/var/spool/mail:/sbin/nologin</span><br><span class="line">operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line">games:x:12:100:games:/usr/games:/sbin/nologin</span><br><span class="line"></span><br><span class="line"><span class="comment">## 过滤出mail关键字所在行及前两行内容</span></span><br><span class="line">[root@localhost ~]# grep -B 2 <span class="string">&#x27;mail&#x27;</span> /etc/passwd</span><br><span class="line">shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown</span><br><span class="line">halt:x:7:0:halt:/sbin:/sbin/halt</span><br><span class="line">mail:x:8:12:mail:/var/spool/mail:/sbin/nologin</span><br><span class="line"></span><br><span class="line"><span class="comment">## 过滤出mail关键字所在行及前两行内容和后三行内容</span></span><br><span class="line">[root@localhost ~]# grep -A3 -B2 <span class="string">&#x27;mail&#x27;</span> /etc/passwd</span><br><span class="line">shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown</span><br><span class="line">halt:x:7:0:halt:/sbin:/sbin/halt</span><br><span class="line">mail:x:8:12:mail:/var/spool/mail:/sbin/nologin</span><br><span class="line">operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line">games:x:12:100:games:/usr/games:/sbin/nologin</span><br><span class="line">ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin</span><br><span class="line"></span><br><span class="line"><span class="comment">## ## 过滤出mail关键字所在行及前两行内容和后两行内容</span></span><br><span class="line">[root@localhost ~]# grep -C2 <span class="string">&#x27;mail&#x27;</span> /etc/passwd</span><br><span class="line">shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown</span><br><span class="line">halt:x:7:0:halt:/sbin:/sbin/halt</span><br><span class="line">mail:x:8:12:mail:/var/spool/mail:/sbin/nologin</span><br><span class="line">operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line">games:x:12:100:games:/usr/games:/sbin/nologin</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="⑤-ls">⑤ ls</h4><table><thead><tr><th>选项</th><th>作用</th></tr></thead><tbody><tr><td>-l</td><td>查看目录下文件的名字和详细信息</td></tr><tr><td>-a</td><td>查看目录下所有文件包括隐藏文件</td></tr><tr><td>-h（一般配合-l使用）</td><td>以人类可读的方式查看文件详细信息</td></tr><tr><td>-t（一般配合-l使用）</td><td>按照文件修改日期排序，最新的在最上面</td></tr><tr><td>-r（一般配合-l使用）</td><td>reverse翻转（倒叙排序）</td></tr><tr><td>-d（一般配合-l使用）</td><td>只查看目录本身信息不查看文件</td></tr><tr><td>-i（一般配合-l使用）</td><td>显示inode号</td></tr><tr><td>-S(一般配合-l使用)</td><td>依据内容大小将文件排序显示</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">list <span class="comment">#列表</span></span><br><span class="line"><span class="comment">##  查看当前目录下所有文件名(不包含隐藏文件)</span></span><br><span class="line">[root@lb02 ~]# <span class="built_in">ls</span></span><br><span class="line">anaconda-ks.cfg  ip_host.sh  ip_host.sh~</span><br><span class="line"><span class="comment">##查看当前目录下所有文件的名和详细信息(不包含隐藏文件)</span></span><br><span class="line">-l use a long listing format 使用一个长的列表格式</span><br><span class="line">[root@lb02 ~]# <span class="built_in">ls</span> -l</span><br><span class="line">total 12</span><br><span class="line">-rw-------. 1 root root 1447 Mar 27 12:11 anaconda-ks.cfg</span><br><span class="line">-rw-r--r--. 1 root root  377 Mar 27 23:50 ip_host.sh</span><br><span class="line">-rw-r--r--. 1 root root  366 Mar 27 23:33 ip_host.sh~</span><br><span class="line"></span><br><span class="line">[root@lb02 ~]# ll</span><br><span class="line">total 12</span><br><span class="line">-rw-------. 1 root root 1447 Mar 27 12:11 anaconda-ks.cfg</span><br><span class="line">-rw-r--r--. 1 root root  377 Mar 27 23:50 ip_host.sh</span><br><span class="line">-rw-r--r--. 1 root root  366 Mar 27 23:33 ip_host.sh~</span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看指定目录下的所有文件详细信息（不包含隐藏文件）</span></span><br><span class="line">[root@lb02 ~]# <span class="built_in">ls</span> -l /etc/sysconfig/</span><br><span class="line">total 84</span><br><span class="line">-rw-r--r--. 1 root root  379 Mar 27 12:11 anaconda</span><br><span class="line">-rw-r--r--. 1 root root  483 Mar 27 12:10 authconfig</span><br><span class="line">drwxr-xr-x. 2 root root   43 Mar 27 12:07 cbq</span><br><span class="line">drwxr-xr-x. 2 root root    6 Oct 31  2018 console</span><br><span class="line"></span><br><span class="line"><span class="comment">#在linux中，隐藏文件名字以&#x27;.&#x27;开头</span></span><br><span class="line"><span class="comment">## 查看所有文件包括隐藏文件（多个选项可以合并执行）</span></span><br><span class="line">-a，--all <span class="keyword">do</span> not ignore entries starting with . <span class="comment"># 不忽略以点开头的文件</span></span><br><span class="line">[root@lb02 ~]# <span class="built_in">ls</span> -l -a   或者[root@lb02 ~]# <span class="built_in">ls</span> -la/ls -al</span><br><span class="line">[root@lb02 ~]# <span class="built_in">ls</span> -l -a</span><br><span class="line">total 48</span><br><span class="line">dr-xr-x---.  2 root root   195 Mar 27 23:50 .</span><br><span class="line">dr-xr-xr-x. 17 root root   224 Mar 27 12:10 ..</span><br><span class="line">-rw-------.  1 root root  1447 Mar 27 12:11 anaconda-ks.cfg</span><br><span class="line"></span><br><span class="line"><span class="comment">## 以人类可读的方式查看文件详细信息（大小+单位 配合-l使用）</span></span><br><span class="line">[root@lb02 ~]# <span class="built_in">ls</span> -l /etc/sysconfig/ebtables-config </span><br><span class="line">-rw-------. 1 root root 1390 Apr 11  2018 /etc/sysconfig/ebtables-config</span><br><span class="line">[root@lb02 ~]# <span class="built_in">ls</span> -hl /etc/sysconfig/ebtables-config </span><br><span class="line">-rw-------. 1 root root 1.4K Apr 11  2018 /etc/sysconfig/ebtables-config</span><br><span class="line"></span><br><span class="line"><span class="comment">## 按照修改日期排序（最新的在最上面）</span></span><br><span class="line">[root@lb02 ~]# <span class="built_in">ls</span> -l    //不排序</span><br><span class="line">total 12</span><br><span class="line">-rw-------. 1 root root 1447 Mar 27 12:11 anaconda-ks.cfg</span><br><span class="line">-rw-r--r--. 1 root root  377 Mar 27 23:50 ip_host.sh</span><br><span class="line">-rw-r--r--. 1 root root  366 Mar 27 23:33 ip_host.sh~</span><br><span class="line">[root@lb02 ~]# <span class="built_in">ls</span> -lt</span><br><span class="line">total 12</span><br><span class="line">-rw-r--r--. 1 root root  377 Mar 27 23:50 ip_host.sh</span><br><span class="line">-rw-r--r--. 1 root root  366 Mar 27 23:33 ip_host.sh~</span><br><span class="line">-rw-------. 1 root root 1447 Mar 27 12:11 anaconda-ks.cfg</span><br><span class="line"></span><br><span class="line"><span class="comment">## 按照修改时间，倒叙排序（最新的在最下面）</span></span><br><span class="line">[root@lb02 ~]# <span class="built_in">ls</span> -ltr</span><br><span class="line">total 12</span><br><span class="line">-rw-------. 1 root root 1447 Mar 27 12:11 anaconda-ks.cfg</span><br><span class="line">-rw-r--r--. 1 root root  366 Mar 27 23:33 ip_host.sh~</span><br><span class="line">-rw-r--r--. 1 root root  377 Mar 27 23:50 ip_host.sh</span><br><span class="line"></span><br><span class="line"><span class="comment">## 只查看目录本身，不查看目录下面的所有文件</span></span><br><span class="line">[root@lb02 ~]# <span class="built_in">ls</span> -ld /etc/sysconfig</span><br><span class="line">drwxr-xr-x. 6 root root 4096 Mar 27 12:11 /etc/sysconfig</span><br></pre></td></tr></table></figure><h4 id="⑥-tree">⑥ tree</h4><table><thead><tr><th>选项</th><th>作用</th></tr></thead><tbody><tr><td>-L</td><td>指定层级显示结构</td></tr><tr><td>-d</td><td>只查看目录不查看文件</td></tr><tr><td>-a</td><td>显示所有文件和目录包括隐藏文件</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 命令找不到</span></span><br><span class="line">[root@localhost ~]# tree</span><br><span class="line">-bash: tree: <span class="built_in">command</span> not found</span><br><span class="line"><span class="comment">## 安装命令</span></span><br><span class="line">[root@localhost ~]# yum install -y tree</span><br><span class="line"><span class="comment">#tree功能：以树状结构显示文件和目录</span></span><br><span class="line"><span class="comment">## 查看目录结构   </span></span><br><span class="line">[root@lb01 ~]# tree /usr/local/</span><br><span class="line">/usr/local/</span><br><span class="line">├── bin</span><br><span class="line">├── etc</span><br><span class="line">│   ├── applications</span><br><span class="line">│   ├── info</span><br><span class="line">│   └── man</span><br><span class="line">│       ├── man1</span><br><span class="line">│       ├── man1x</span><br><span class="line">│       ├── man2</span><br><span class="line">│       ├── man2x</span><br><span class="line">│       ├── man3</span><br><span class="line">│       ├── man9x</span><br><span class="line">│       └── mann</span><br><span class="line">└── src</span><br><span class="line">32 directories, 0 files</span><br><span class="line"></span><br><span class="line"><span class="comment"># -L：level 查看指定层级的目录结构   如果目录层级太多，可以查看指定几层目录</span></span><br><span class="line">[root@lb01 ~]# tree -L 2 /usr/local/</span><br><span class="line"></span><br><span class="line"><span class="comment">## -d：只查看目录不查看文件，查看指定目录层级的所有目录</span></span><br><span class="line">[root@localhost ~]# tree -L 2 -d /etc/</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-增删改操作">3.增删改操作</h3><h4 id="①-cp">① cp</h4><table><thead><tr><th>选项</th><th>作用</th></tr></thead><tbody><tr><td>-r、-R</td><td>递归复制目录（包括目录下的所有内容）</td></tr><tr><td>-v</td><td>显示复制的详细信息，复制过程</td></tr><tr><td>-p</td><td>保持文件属性</td></tr><tr><td>-a</td><td>即保持目录属性，又可以递归拷贝目录</td></tr><tr><td>-i</td><td>询问 （是否覆盖）</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">copy 复制，拷贝</span><br><span class="line"><span class="comment">#语法</span></span><br><span class="line">1.<span class="built_in">cp</span> [选项]... [-T] 源文件 目标 （备份）</span><br><span class="line">2.<span class="built_in">cp</span> [选项]... 源文件... 目录</span><br><span class="line">3.<span class="built_in">cp</span> [选项]... -t 目录 源文件...</span><br><span class="line"></span><br><span class="line"><span class="comment">## 语法一：cp [选项]... [-T] 源文件 目标 （备份）</span></span><br><span class="line"><span class="built_in">cp</span> [OPTION]... [-T] SOURCE DEST</span><br><span class="line"><span class="comment">## 将saomiao.sh脚本复制到当前目录下并改名为123</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cp</span> saomiao.sh 123</span><br><span class="line"><span class="comment">## 将saomiao.sh脚本复制到/opt目录下并改名为abc</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cp</span> saomiao.sh /opt/abc</span><br><span class="line"></span><br><span class="line"><span class="comment">## 语法二：cp [选项]... 源文件... 目录</span></span><br><span class="line"><span class="built_in">cp</span> [OPTION]... SOURCE... DIRECTORY</span><br><span class="line"><span class="comment">## 将saomiao.sh脚本复制到/tmp目录下</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cp</span> saomiao.sh /tmp/</span><br><span class="line"><span class="comment">## 将saomiao.sh脚本拷贝到/tmp下并改名为2.txt，若2.txt文件已存在会询问，是否要覆盖</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cp</span> saomiao.sh /tmp/2.txt</span><br><span class="line"><span class="comment">## 一次性复制多个文件</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cp</span> 123 saomiao.sh cheak_student.sh anaconda-ks.cfg /opt/</span><br><span class="line"><span class="comment">## 报错示范</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cp</span> 123 saomiao.sh cheak_student.sh anaconda-ks.cfg abc（必须是目录，不能是文件）</span><br><span class="line"><span class="built_in">cp</span>: target ‘abc’ is not a directory</span><br><span class="line"><span class="comment">## 复制目录</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cp</span> -r /opt/ /tmp/将opt目录下所有文件复制到tmp下，包括opt目录</span><br><span class="line"><span class="comment">## 改名</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cp</span> -r /opt/ /root/xxx</span><br><span class="line"><span class="comment">## 复制目录下的所有文件，但不复制目录本身</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cp</span> -r /opt/* /tmp/</span><br><span class="line"><span class="comment">## 复制多个文件    显示复制过程</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cp</span> -rv 123 anaconda-ks.cfg </span><br><span class="line">/tmp/</span><br><span class="line">‘123’ -&gt; ‘/tmp/123’</span><br><span class="line">‘anaconda-ks.cfg’ -&gt; ‘/tmp/anaconda-ks.cfg’</span><br><span class="line"></span><br><span class="line"><span class="comment">## 保持文件属性</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cp</span> -rp /home/zls1 /tmp/</span><br><span class="line"><span class="comment">## 语法二：cp [选项]... 源文件... 目录</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cp</span> -a /home/zls1 /tmp/</span><br><span class="line">----</span><br><span class="line"><span class="comment">## 语法三：cp [选项]... -t 目录 源文件... (反人类)</span></span><br><span class="line"><span class="built_in">cp</span> [OPTION]... -t DIRECTORY SOURCE...</span><br><span class="line">[root@localhost ~]# <span class="built_in">cp</span> -t /tmp/ saomiao.sh</span><br><span class="line"></span><br><span class="line"><span class="comment">## 总结：</span></span><br><span class="line">1.当复制的目标不存在时，将源文件复制出来并改名为目标名</span><br><span class="line">2.当复制目标存在时，且是一个目录，则直接将文件复制到指定的目录下（名字不变）</span><br><span class="line">3.当复制目标存在时，且是一个普通文件，则提示是否要覆盖，输入y是覆盖，输入n是不覆盖</span><br><span class="line">4.当复制多个文件时，最后一个必须写已存在的目录，否则会报错</span><br><span class="line">5.<span class="built_in">cp</span>命令默认情况下无法拷贝目录，必须加-r选项，递归复制目录</span><br></pre></td></tr></table></figure><h4 id="②-mv">② mv</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">-i询问（是否要覆盖）</span><br><span class="line">move 移动，剪切</span><br><span class="line">1.<span class="built_in">mv</span> [选项]... [-T] 源文件 目标（重命名）</span><br><span class="line">2.<span class="built_in">mv</span> [选项]... 源文件... 目录</span><br><span class="line">3.<span class="built_in">mv</span> [选项]... -t 目录 源文件... (反人类)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 语法一：mv [选项]... [-T] 源文件 目标（重命名）</span></span><br><span class="line"><span class="built_in">mv</span> [OPTION]... [-T] SOURCE DEST</span><br><span class="line"><span class="comment">## 给saomiao.sh文件改名内容覆盖并改名，源文件消失</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">mv</span> saomiao.sh zls.sh</span><br><span class="line"><span class="comment">## 语法二：mv [选项]... 源文件... 目录</span></span><br><span class="line"><span class="built_in">mv</span> [OPTION]... SOURCE... DIRECTORY</span><br><span class="line">[root@localhost ~]# <span class="built_in">mv</span> zls.sh /opt/</span><br><span class="line"><span class="comment">## 覆盖文件</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">mv</span> nginx.conf 123</span><br><span class="line"><span class="built_in">mv</span>: overwrite ‘123’? y</span><br><span class="line"><span class="comment">## 移动多个文件    移动文件到当前目录</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">mv</span> /tmp/&#123;123,anaconda,ks.cfg,cheak_student.sh,nginx.conf.bak&#125; .</span><br><span class="line">[root@localhost ~]# ll</span><br><span class="line">total 8</span><br><span class="line">-rw-r--r--. 1 root root 0 Apr 1 19:18 123</span><br><span class="line">-rw-------. 1 root root 1379 Mar 21 20:58 anaconda-ks.cfg</span><br><span class="line">-rw-r--r--. 1 root root 392 Aug 11 2022 cheak_student.sh</span><br><span class="line">-rw-r--r--. 1 root root 0 Apr 1 19:18 nginx.conf.bak</span><br><span class="line"><span class="comment">## 错误演示</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">mv</span> 123 anaconda-ks.cfg cheak_student.sh nginx.conf.bak abc同<span class="built_in">cp</span>，abc不是目录</span><br><span class="line"><span class="built_in">mv</span>: target ‘abc’ is not a directory</span><br><span class="line"></span><br><span class="line"><span class="comment">## 总结：</span></span><br><span class="line">1.当移动的目标不存在时，将源文件重命名</span><br><span class="line">2.当移动目标存在时，且是一个目录，则直接将文件剪切到指定的目录下（名字不变）</span><br><span class="line">3.当移动目标存在时，且是一个普通文件，则提示是否要覆盖，输入y是覆盖，输入n是不覆盖</span><br><span class="line">4.当移动多个文件时，最后一个必须写已存在的目录，否则会报错</span><br><span class="line"><span class="comment">## 语法三：mv [选项]... -t 目录 源文件... (反人类)</span></span><br><span class="line"><span class="built_in">mv</span> [OPTION]... -t DIRECTORY SOURCE...</span><br></pre></td></tr></table></figure><h4 id="③-rm">③ rm</h4><table><thead><tr><th>选项</th><th>作用</th></tr></thead><tbody><tr><td>-i</td><td>询问（是否要删除）</td></tr><tr><td>-r</td><td>递归删除</td></tr><tr><td>-f</td><td>force 强制删除</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">remove 删除（delete）</span><br><span class="line"><span class="comment">## 语法：rm [选项]... 文件...</span></span><br><span class="line"><span class="built_in">rm</span> [OPTION]... FILE...</span><br><span class="line"></span><br><span class="line"><span class="comment">## 删除文件</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">rm</span> 123</span><br><span class="line"></span><br><span class="line"><span class="comment">## 删除目录</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">rm</span> -r zls2</span><br><span class="line"></span><br><span class="line"><span class="comment">## 删除目录下的所有内容，不包括目录本身</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">rm</span> -r zls2/*</span><br><span class="line"><span class="built_in">rm</span>: remove regular empty file ‘123’? y</span><br><span class="line"></span><br><span class="line"><span class="comment">## 强制删除</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">rm</span> -rf zls2/</span><br><span class="line">[root@localhost ~]# <span class="built_in">rm</span> -fr /tmp/*</span><br><span class="line">1.<span class="built_in">rm</span>删除普通文件的命令，默认只能删除普通文件</span><br><span class="line">[root@localhost ~]# <span class="built_in">rm</span> zls1</span><br><span class="line"><span class="built_in">rm</span>: cannot remove ‘zls1’: Is a directory</span><br><span class="line">2.删除文件，不想询问，<span class="built_in">rm</span> -f</span><br><span class="line">3.删除目录，不想询问，<span class="built_in">rm</span> -fr 、 <span class="built_in">rm</span> -rf</span><br><span class="line"></span><br><span class="line"><span class="comment">## 两种让命令不走别名的方法：例如rm -i（提醒）别名是alias rm=&#x27;rm -i&#x27;，如果不想让rm走别名提醒</span></span><br><span class="line">1.在命令前面加\（转义符）[root@lb01 ~]# \<span class="built_in">rm</span> -r ac</span><br><span class="line">2.使用命令的绝对路径    查看命令的绝对路径在哪<span class="built_in">which</span> <span class="built_in">rm</span>    /usr/bin/rm </span><br><span class="line">使用绝对路径删除/usr/bin/rm -r ab  就没有提醒是否删除即不走别名</span><br></pre></td></tr></table></figure><h4 id="④-touch">④ touch</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建普通文件（可编辑文件）</span></span><br><span class="line"><span class="built_in">touch</span> 目标文件</span><br><span class="line"><span class="built_in">touch</span> [OPTION]... FILE...</span><br><span class="line"><span class="comment">## 创建多个文件</span></span><br><span class="line">[root@www ~]# <span class="built_in">touch</span> 1.txt abc/2.txt /tmp/3.txt</span><br><span class="line"><span class="comment">## 报错：创建文件前提，上一级目录必须存在</span></span><br><span class="line">[root@www ~]# <span class="built_in">touch</span> /iskshda/1.txt</span><br><span class="line"><span class="built_in">touch</span>: cannot <span class="built_in">touch</span> ‘/iskshda/1.txt’: No such file or directory</span><br><span class="line"><span class="comment">## 当创建的目标文件已经存在时，不会报错，但会更新修改时间</span></span><br><span class="line">[root@www ~]# <span class="built_in">touch</span> 1.txt</span><br><span class="line"></span><br><span class="line">1）当创建的目标文件不存在，则创建一个普通文件</span><br><span class="line">2）当创建的目标文件存在时，则修改该文件的时间</span><br><span class="line">3）当创建的目标是一个目录时，则修改目录的时间</span><br><span class="line"><span class="comment">#在linux系统中，严格区分大小写</span></span><br></pre></td></tr></table></figure><h4 id="⑤-mkdir">⑤ mkdir</h4><table><thead><tr><th>选项</th><th>作用</th></tr></thead><tbody><tr><td>-p</td><td>递归创建，如果目录已存在则不创建，如果目录不存在则创建</td></tr><tr><td>-v</td><td>显示创建的详细信息（创建的过程）</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">make directory</span><br><span class="line"><span class="comment">## 语法：</span></span><br><span class="line"><span class="built_in">mkdir</span> 目标目录</span><br><span class="line"><span class="comment">#同时创建多个目录</span></span><br><span class="line">[root@lb02 ~]# <span class="built_in">mkdir</span> /abc /123 /456  每个目录要有空格</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建层级目录</span></span><br><span class="line">[root@lb02 ~]# <span class="built_in">mkdir</span> -p /abc/123/456 789  789是在当前目录下创建的</span><br><span class="line"></span><br><span class="line"><span class="comment"># 当要创建的目标目录已经存在时 会报错</span></span><br><span class="line">[root@lb02 ~]# <span class="built_in">mkdir</span> a</span><br><span class="line"><span class="built_in">mkdir</span>: cannot create directory ‘a’: File exists</span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看创建过程</span></span><br><span class="line">[root@lb02 ~]# <span class="built_in">mkdir</span> -pv a/b/c     </span><br><span class="line"><span class="built_in">mkdir</span>: created directory ‘a/b’   因为a已经存在，若不存在则会有<span class="built_in">mkdir</span>: created directory ‘a’</span><br><span class="line"><span class="built_in">mkdir</span>: created directory ‘a/b/c’</span><br><span class="line"></span><br><span class="line"><span class="comment">## 不能在文件下面创建目录</span></span><br><span class="line">[root@lb02 ~]# <span class="built_in">mkdir</span> /etc/passwd/123</span><br><span class="line"><span class="built_in">mkdir</span>: cannot create directory ‘/etc/passwd/123’: Not a directory     // 不是一个目录</span><br><span class="line"></span><br><span class="line"><span class="comment">## 创建多个序列目录</span></span><br><span class="line">[root@lb01 ~]# <span class="built_in">mkdir</span> &#123;a..c&#125;</span><br><span class="line">[root@lb01 ~]# <span class="built_in">ls</span></span><br><span class="line">a  b  c</span><br><span class="line"></span><br><span class="line"><span class="comment">## 指定目录下创建平级目录</span></span><br><span class="line">[root@lb01 ~]#  <span class="built_in">mkdir</span> /tmp/&#123;a,b,c,d&#125;在/tmp下创建a,b,c,d四个目录</span><br><span class="line"></span><br><span class="line"><span class="comment">#-p：递归创建目录，没报错（如果目录不存在，就创建，目录存在，就不执行命令）</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">mkdir</span> -p 111/&#123;2,3&#125;/abc分别在111/2和111/3创建abc</span><br><span class="line">目录</span><br><span class="line"><span class="comment"># 创建目录：</span></span><br><span class="line">/tmp/a</span><br><span class="line">/tmp/b</span><br><span class="line">/tmp/1</span><br><span class="line">/tmp/2</span><br><span class="line">1.[root@www ~]# <span class="built_in">mkdir</span> &#123;/tmp/a,/tmp/b,/tmp/1,/tmp/2</span><br><span class="line"></span><br><span class="line">2.[root@www ~]# <span class="built_in">mkdir</span> /tmp/&#123;a,b,1,2&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="⑥-tr-替换">⑥ tr 替换</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## tr只能按照字符 一一对应取替换，如果出现相同的字符，那么后面的赋值会将前面的赋值覆盖</span></span><br><span class="line"><span class="built_in">tr</span> <span class="string">&#x27;被替换的内容&#x27;</span> <span class="string">&#x27;替换内容&#x27;</span> &lt; 文件名</span><br><span class="line">[root@localhost ~]# <span class="built_in">tr</span> <span class="string">&#x27;name&#x27;</span> <span class="string">&#x27;address&#x27;</span> &lt; 2.txt</span><br><span class="line">addr=10.0.0.100</span><br><span class="line">[root@localhost ~]# <span class="built_in">tr</span> <span class="string">&#x27;nameqws&#x27;</span> <span class="string">&#x27;address&#x27;</span> &lt; 2.txt</span><br><span class="line">address=10.0.0.100</span><br><span class="line"><span class="comment">## 语法</span></span><br><span class="line">sed <span class="string">&#x27;s/被替换内容/替换内容/g&#x27;</span> 文件名</span><br><span class="line">[root@localhost ~]# sed <span class="string">&#x27;s///g&#x27;</span> 2.txt</span><br><span class="line">[root@localhost ~]# sed <span class="string">&#x27;s/name/address/g&#x27;</span> 2.txt</span><br><span class="line">address=10.0.0.100</span><br></pre></td></tr></table></figure><h3 id="4-文件处理命令">4.文件处理命令</h3><h4 id="①-sort">① sort</h4><table><thead><tr><th>选项</th><th>作用</th></tr></thead><tbody><tr><td>-k</td><td>按照指定列进行排序（默认以空格为分隔符）</td></tr><tr><td>-t</td><td>指定文件的分隔符</td></tr><tr><td>-n</td><td>以阿拉伯数字的形式进行排序</td></tr><tr><td>-r</td><td>reverse 倒叙排序</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line"><span class="built_in">sort</span> [选项]... [文件]...</span><br><span class="line"><span class="comment">## 排序1.txt文件</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">sort</span> 1.txt</span><br><span class="line">a:4</span><br><span class="line">b:3</span><br><span class="line">c:2</span><br><span class="line">d:1</span><br><span class="line">e:5</span><br><span class="line">f:11</span><br><span class="line">总结：</span><br><span class="line">1）默认情况下 <span class="built_in">sort</span>按照文件每一行的首字母进行排序</span><br><span class="line">2）默认情况下 在<span class="built_in">sort</span>眼里分隔符只有空格</span><br><span class="line">3）在<span class="built_in">sort</span>命令中，分隔符，必须是一个字符，不能为空</span><br><span class="line"><span class="comment">## 如果第四列默认相同，还可以加一个-k2再以第二列排序</span></span><br><span class="line"><span class="built_in">sort</span> -k2 -k4 11.txt</span><br></pre></td></tr></table></figure><h4 id="②-uniq-去重">② uniq 去重</h4><table><thead><tr><th>选项</th><th>作用</th></tr></thead><tbody><tr><td>-c</td><td>统计重复次数，并显示</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">uniq</span> [选项]... [文件]...</span><br><span class="line">前提条件：重复行的内容，必须挨着，否则无法去重</span><br><span class="line"><span class="comment">## 无法去重</span></span><br><span class="line">abc</span><br><span class="line">123</span><br><span class="line">abc</span><br><span class="line">123</span><br><span class="line"><span class="comment">## 可以去重</span></span><br><span class="line">abc</span><br><span class="line">abc</span><br><span class="line">123</span><br><span class="line">123</span><br><span class="line"><span class="comment">## 只去重</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> uniq.txt</span><br><span class="line">abc</span><br><span class="line">123</span><br><span class="line">abc</span><br><span class="line">123</span><br><span class="line">[root@localhost ~]# <span class="built_in">sort</span> uniq.txt |<span class="built_in">uniq</span></span><br><span class="line">123</span><br><span class="line">abc</span><br><span class="line"><span class="comment">## 去重并统计重复次数</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">sort</span> uniq.txt|<span class="built_in">uniq</span> -c</span><br><span class="line">2 123</span><br><span class="line">2 abc</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="③-cut-截取">③ cut 截取</h4><table><thead><tr><th>选项</th><th>作用</th></tr></thead><tbody><tr><td>-d</td><td>指定分隔符</td></tr><tr><td>-f</td><td>指定区域</td></tr><tr><td>-n</td><td>指定行</td></tr><tr><td>-c</td><td>按照字符截取</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 语法</span></span><br><span class="line"><span class="built_in">cut</span> OPTION... [FILE]...</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# <span class="built_in">cut</span> -d <span class="string">&#x27; &#x27;</span> -f 6 4.txt  </span><br><span class="line"><span class="comment">#截取以空格为分隔符，第6列内容</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#-f可以截取多段，-f </span></span><br><span class="line">[root@lb01 ~]# ifconfig ens33|grep -w <span class="string">&#x27;inet&#x27;</span>|<span class="built_in">cut</span> -d <span class="string">&#x27; &#x27;</span> -f 10,13</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# <span class="built_in">cut</span> -c 9-10 4.txt</span><br><span class="line"><span class="comment">#截取以字符来算第9-10为内容（需要数字符数，不好用）</span></span><br><span class="line">使用awk命令截取使用示例</span><br><span class="line">[root@lb02 ~]# ip a|awk -F <span class="string">&#x27;[ /]&#x27;</span> <span class="string">&#x27;NR==9&#123;print $6&#125;&#x27;</span></span><br><span class="line">10.0.0.6</span><br><span class="line">注意：</span><br><span class="line">1）<span class="built_in">cut</span>默认没有分隔符，必须指定</span><br></pre></td></tr></table></figure><h4 id="④-wc-统计">④ wc 统计</h4><table><thead><tr><th>选项</th><th>作用</th></tr></thead><tbody><tr><td>-l</td><td>line 统计行数</td></tr><tr><td>-w</td><td>word 统计单词数量</td></tr><tr><td>-c</td><td>char 统计字符数量</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">wc</span> [option]... file...</span><br><span class="line"><span class="comment">## 统计文件的 行数 单词数 字符数</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">wc</span> /etc/services</span><br><span class="line">11176 61033 670293 /etc/services</span><br><span class="line">[root@localhost ~]# <span class="built_in">wc</span> -l /etc/services</span><br><span class="line">11176 /etc/services</span><br><span class="line">[root@localhost ~]# <span class="built_in">wc</span> -w /etc/services</span><br><span class="line">61033 /etc/services</span><br><span class="line">[root@localhost ~]# <span class="built_in">wc</span> -c /etc/services</span><br><span class="line">670293 /etc/services</span><br><span class="line"><span class="comment">## 需要统计的内容，不是一个文件的内容，左边是一个人命令输出结果可以需要使用管道符</span></span><br><span class="line">[root@localhost ~]# ifconfig |<span class="built_in">wc</span> -w</span><br><span class="line">108</span><br><span class="line">[root@localhost ~]# ip a |<span class="built_in">wc</span> -w</span><br></pre></td></tr></table></figure><h4 id="⑤-wget-curl-下载">⑤ wget &amp; curl 下载</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 下载</span></span><br><span class="line">- O 指定下载路径，也可以给下载的改名</span><br><span class="line"></span><br><span class="line">wget 可以用外网下载东西到服务器中</span><br><span class="line">-bash: wget: <span class="built_in">command</span> not found没有找到wget命令</span><br><span class="line">[root@localhost ~]# yum install -y wget</span><br><span class="line">[root@localhost ~]# wget https://dldir1.qq.com/qqfile/qq/QQNT/Linux/QQ_3.2.7_240401_x86_64_01.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment">##服务器上传下载</span></span><br><span class="line">[root@localhost ~]# yum install -y lrzsz</span><br><span class="line"><span class="comment">## 虚拟机文件下载到物理机</span></span><br><span class="line">[root@localhost ~]# sz w700d1q75cms.jpg</span><br><span class="line"><span class="comment">## 物理机文件上传到虚拟机</span></span><br><span class="line">[root@localhost ~]# rz</span><br><span class="line"></span><br><span class="line">curl -o 链接 可以指定下载路径，还有可以给下载的文件改名</span><br></pre></td></tr></table></figure><h4 id="6-文件属性">6.文件属性</h4><table><thead><tr><th>文件字符类型</th><th>文件类型</th></tr></thead><tbody><tr><td>-</td><td>file 普通文件</td></tr><tr><td>d</td><td>directory 目录</td></tr><tr><td>c</td><td>char 字符设备</td></tr><tr><td>b</td><td>block 块设备</td></tr><tr><td>l</td><td>link 链接文件</td></tr><tr><td>s</td><td>socket 安全 （套接字）文件</td></tr><tr><td>p</td><td>pipe 管道文件</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 文件类型 文件权限r：read 读 w：write 写 x：execute执行 </span></span><br><span class="line">             硬链接数 所属用户 所属用户组 文件大小      时间        文件名</span><br><span class="line">- rw-r--r--.    1     root     root       289    Apr 7 16:40     11.txt</span><br><span class="line">d rwxr-xr-x.    4     root     root       41     Apr 3 18:04     zls</span><br><span class="line"><span class="comment">## 文件类型</span></span><br><span class="line">[root@localhost ~]# ll /dev/null -d</span><br><span class="line">crw-rw-rw-. 1 root root 1, 3 Apr 7 16:21 /dev/null</span><br><span class="line">[root@localhost ~]# ll /dev/sda1</span><br><span class="line">brw-rw----. 1 root disk 8, 1 Apr 7 16:21 /dev/sda1</span><br><span class="line">[root@localhost ~]# ll /run/systemd/initctl/fifo</span><br><span class="line">prw-------. 1 root root 0 Apr 7 16:21 /run/systemd/initctl/fifo</span><br><span class="line">[root@localhost ~]# ll /dev/log</span><br><span class="line">srw-rw-rw-. 1 root root 0 Apr 7 16:21 /dev/log</span><br><span class="line">[root@localhost ~]# ll -d zls/</span><br><span class="line">drwxr-xr-x. 4 root root 41 Apr 3 18:04 zls/</span><br><span class="line">[root@localhost ~]# ll</span><br><span class="line">-rw-r--r--. 1 root root 289 Apr 7 16:40 11.txt</span><br></pre></td></tr></table></figure><h5 id="①-查看文件类型">① 查看文件类型</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# ll *.jpg</span><br><span class="line">-rw-r--r--. 1 root root 20735 Mar 13 09:08 w700d1q75cms.jpg</span><br><span class="line">-rw-r--r--. 1 root root 4 Apr 7 19:50 zls.jpg</span><br><span class="line">[root@localhost ~]# file w700d1q75cms.jpg</span><br><span class="line">w700d1q75cms.jpg: JPEG image data, EXIF standard</span><br><span class="line">[root@localhost ~]# file zls.jpg</span><br><span class="line">zls.jpg: empty</span><br><span class="line">[root@localhost ~]# <span class="built_in">echo</span> 111 &gt; zls.jpg</span><br><span class="line">[root@localhost ~]# file zls.jpg</span><br><span class="line">zls.jpg: ASCII text</span><br><span class="line"><span class="comment">## 查看文件类型</span></span><br><span class="line">[root@localhost ~]# file /dev/null</span><br><span class="line">/dev/null: character special</span><br><span class="line">[root@localhost ~]# file /dev/sda1</span><br><span class="line">/dev/sda1: block special</span><br><span class="line">[root@localhost ~]# file /run/systemd/initctl/fifo</span><br><span class="line">/run/systemd/initctl/fifo: fifo (named pipe)</span><br><span class="line">[root@localhost ~]# file /dev/log</span><br><span class="line">/dev/log: socket</span><br><span class="line">[root@localhost ~]# file /root/zls</span><br><span class="line">/root/zls: directory</span><br><span class="line"><span class="comment">##注意: Linux文件扩展名不代表任何含义, 仅仅是为了运维人员便于识别</span></span><br></pre></td></tr></table></figure><h5 id="②-系统链接文件">② 系统链接文件</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">文件有文件名和数据，在Linux上被分成两个部分：用户数据(user data)与元数据(metadata)</span><br><span class="line"></span><br><span class="line">用户数据：文件数据块(data block),数据块是记录文件真实内容的地方，我们将其称为#Block</span><br><span class="line">元数据：文件的附加属性，例如：文件大小，创建时间，属组，属主等，我们称其为#Inode</span><br><span class="line">在Linux中，inode是文件元数据的一部分，但其并不包含文件名，inode号即索引节点号</span><br><span class="line">文件名仅是为了方便人们的记忆和使用，系统或者程序通过inode号寻找正确的文件数据块。</span><br><span class="line"></span><br><span class="line"><span class="comment">#inode描述</span></span><br><span class="line">在Linux中，inode（索引节点）是文件系统中的一个数据结构，用于存储文件或目录的元数据信息，包括文件类型、权限、所有者、大小、数据块的位置等。它通过一个唯一的标识符来标识文件或目录，并且在文件系统中具有固定的位置。简而言之，inode是文件系统中用于描述文件或目录属性的数据结构。</span><br><span class="line"></span><br><span class="line"><span class="comment">#元数据：用来描述数据的数据</span></span><br><span class="line"><span class="comment">#真实数据：用户产生的数据（文件内容）</span></span><br><span class="line"><span class="comment">#inode:用于存储文件或目录元数据信息的数据结构。</span></span><br><span class="line"><span class="comment">#block:用于存放用户真实数据的部分</span></span><br><span class="line"><span class="built_in">cat</span> 1.txt</span><br><span class="line">aaa</span><br><span class="line">-rw-r--r--. 1 root root   583919 Oct 29 02:33 1.txt  &gt;&gt;==元数据inode</span><br><span class="line">aaa 真实数据   Block</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="③-文件读取流程">③ 文件读取流程</h5><p><img src="https://cos.lukme.top/Pic/image-20240407164513997.png" alt="image-20240407164513997"></p><h5 id="④-block介绍">④ block介绍</h5><p><img src="https://cos.lukme.top/Pic/image-20240407164729805.png" alt="image-20240407164729805"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">block默认大小为4k</span><br><span class="line"></span><br><span class="line"><span class="comment"># 磁盘存储数据会被分为两个部分：</span></span><br><span class="line">一部分存储元数据，存储元数据的部分叫做inode，每个文件都有一个自己的inode号，这个inode号可以理解为文件存储在磁盘上的房间号</span><br><span class="line">一部分存储真实数据，存储真实数据的部分叫做block，一个block默认是4k</span><br><span class="line"></span><br><span class="line"><span class="comment">#  如上图，当存放的一个block不足4k时，再次存新文件不会占用上次不足4k的block</span></span><br></pre></td></tr></table></figure><h5 id="⑤-软链接">⑤ 软链接</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 软链接的创建方式 ln（link）</span></span><br><span class="line">软链接 ==&gt; 符号链接</span><br><span class="line">soft_link symbolic <span class="built_in">link</span></span><br><span class="line"><span class="built_in">ln</span> -s 源文件（要给谁创建快捷方式） 目标文件（快捷方式的位置）</span><br><span class="line">[root@localhost ~]# ll -i zls111 1.txt</span><br><span class="line">16803484 -rw-r--r--. 1 root root 279 Apr 7 17:55 1.txt</span><br><span class="line">16799371 lrwxrwxrwx. 1 root root 11 Apr 7 22:34 zls111 -&gt; /root/1.txt</span><br><span class="line">[root@localhost ~]# <span class="built_in">ln</span> -s /root/1.txt /opt</span><br><span class="line">总结：</span><br><span class="line">1）创建软链接时，直接接一个已存在的目录，以源文件名字来命名新的文件名创建到指定目录下</span><br><span class="line">2）创建软链接时，指定一个目录下的文件，如果该文件不存在，则创建软链接并改名</span><br><span class="line">2）创建软链接时，指定一个目录下的文件，如果该文件存在，则报错，无法创建</span><br><span class="line">[root@localhost ~]# <span class="built_in">ln</span> -s /root/1.txt /tmp/1.txt</span><br><span class="line"><span class="built_in">ln</span>: failed to create symbolic <span class="built_in">link</span> ‘/tmp/1.txt’: File exists</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="⑥-硬链接">⑥ 硬链接</h5><p>若一个 inode 号对应多个文件名，则称这些文件为硬链接。换句话说，硬链接就是同一个文件使用了多 个别名，如下图所示 hard link 就是file的一个别名，他们有共同的 inode</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 创建硬链接方式</span></span><br><span class="line"><span class="built_in">ln</span> 源文件（要给谁创建硬链接） 目标文件（硬链接的位置）</span><br><span class="line">[root@localhost ~]# ll -i</span><br><span class="line">total 24</span><br><span class="line">16797812 lrwxrwxrwx. 1 root root 11 Apr 7 23:35 123 -&gt; /root/1.txt</span><br><span class="line">16797823 -rw-r--r--. 6 root root 4 Apr 7 23:37 1.txt</span><br><span class="line">16797823 -rw-r--r--. 6 root root 4 Apr 7 23:37 abc</span><br><span class="line">16797823 -rw-r--r--. 6 root root 4 Apr 7 23:37 abc1</span><br><span class="line">16797823 -rw-r--r--. 6 root root 4 Apr 7 23:37 abc2</span><br><span class="line">16797823 -rw-r--r--. 6 root root 4 Apr 7 23:37 abc3</span><br><span class="line">16797823 -rw-r--r--. 6 root root 4 Apr 7 23:37 abc4</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20240407201426083.png" alt="image-20240407201426083"></p><h5 id="⑦-软硬链接区别">⑦ 软硬链接区别</h5><table><thead><tr><th>区别</th><th>硬链接</th><th>软链接</th></tr></thead><tbody><tr><td>命令</td><td>ln</td><td>ln -s</td></tr><tr><td>inode</td><td>和源文件inode号相同</td><td>和源文件inode号不同</td></tr><tr><td>源文件</td><td>删除源文件不影响链接文件</td><td>删除源文件影响链接文件</td></tr><tr><td>跨分区创建</td><td>不能</td><td>可以</td></tr><tr><td>目录创建</td><td>不能</td><td>可以</td></tr><tr><td>文件类型</td><td>普通文件</td><td>l 链接文件</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看磁盘命令</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">df</span></span><br><span class="line">Filesystem 1K-blocks Used Available Use% Mounted on</span><br><span class="line">/dev/sda3 8913920 1609880 7304040 19% /</span><br><span class="line">devtmpfs 487048 0 487048 0% /dev</span><br><span class="line">tmpfs 497948 0 497948 0% /dev/shm</span><br><span class="line">tmpfs 497948 7748 490200 2% /run</span><br><span class="line">tmpfs 497948 0 497948 0% /sys/fs/cgroup</span><br><span class="line">/dev/sda1 508580 122216 386364 25% /boot</span><br><span class="line">tmpfs 99592 0 99592 0% /run/user/0</span><br><span class="line"><span class="comment"># -h以人类可读的方式显示，磁盘大小加上了单位</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">df</span> -h</span><br><span class="line">Filesystem Size Used Avail Use% Mounted on</span><br><span class="line">/dev/sda3 8.6G 1.6G 7.0G 19% /</span><br><span class="line">devtmpfs 476M 0 476M 0% /dev</span><br><span class="line">tmpfs 487M 0 487M 0% /dev/shm</span><br><span class="line">tmpfs 487M 7.6M 479M 2% /run</span><br><span class="line">tmpfs 487M 0 487M 0% /sys/fs/cgroup</span><br><span class="line">/dev/sda1 497M 120M 378M 25% /boot</span><br><span class="line">tmpfs 98M 0 98M 0% /run/user/0</span><br><span class="line"><span class="comment"># -i 查看inode可用空间</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">df</span> -i</span><br><span class="line">Filesystem Inodes IUsed IFree IUse% Mounted on</span><br><span class="line">/dev/sda3 4462080 34791 4427289 1% /</span><br><span class="line">devtmpfs 121762 380 121382 1% /dev</span><br><span class="line">tmpfs 124487 1 124486 1% /dev/shm</span><br><span class="line">tmpfs 124487 699 123788 1% /run</span><br><span class="line">tmpfs 124487 16 124471 1% /sys/fs/cgroup</span><br><span class="line">/dev/sda1 256000 326 255674 1% /boot</span><br><span class="line">tmpfs 124487 1 124486 1% /run/user/0</span><br><span class="line">[root@localhost ~]# <span class="built_in">df</span> -ih</span><br><span class="line">Filesystem Inodes IUsed IFree IUse% Mounted on</span><br><span class="line">/dev/sda3 4.3M 34K 4.3M 1% /</span><br><span class="line">devtmpfs 119K 380 119K 1% /dev</span><br><span class="line">tmpfs 122K 1 122K 1% /dev/shm</span><br><span class="line">tmpfs 122K 699 121K 1% /run</span><br><span class="line">tmpfs 122K 16 122K 1% /sys/fs/cgroup</span><br><span class="line">/dev/sda1 250K 326 250K 1% /boot</span><br><span class="line">tmpfs 122K 1 122K 1% /run/user/0</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CentOS 6：默认使用的是ext4的文件系统13。</span><br><span class="line">CentOS 7：默认使用的是xfs（eXtended File System）文件系统类型</span><br></pre></td></tr></table></figure><p>当前磁盘空间还剩余500G，但是就无法往里面写入数据，报错，磁盘空间满了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.inode号储存磁盘空间不足</span><br><span class="line">2.block储存用户真实数据磁盘空间不足</span><br></pre></td></tr></table></figure><h3 id="3-vim编辑器">3.vim编辑器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vi 和 vim 命令是linux中强大的文本编辑器, 由于Linux系统一切皆文件，而配置一个服务就是在修改其</span><br><span class="line">配置文件的参数。</span><br><span class="line">vim 编辑器是运维工程师必须掌握的一个工具, 没有它很多工作都无法完成。</span><br><span class="line">vim 其实是 vi 的升级版</span><br></pre></td></tr></table></figure><p><strong>vim三种工作模式</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Vim编辑器中设置了三种模式: 命令模式、编辑模式、末行模式，每种模式分别又支持多种不同的命令快捷键，大大提高了工作效率，而且用户在习惯之后也会觉得相当顺手。要想高效率地操作文本，就必须先搞清这三种模式的操作区别以及模式之间的切换方法。</span><br></pre></td></tr></table></figure><h4 id="1-命令模式">1.命令模式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#进行快捷键操作</span></span><br><span class="line"><span class="comment">##光标的跳转</span></span><br><span class="line">Shift + g |G    //将光标跳转到文件最后一行</span><br><span class="line">gg              //将光标跳转到文件的第一行</span><br><span class="line">Ngg   //将光标跳转到指定行(N为阿拉伯数字)</span><br><span class="line">Shift +4 |$    //将光标跳转到当前所在行的行末</span><br><span class="line">Shift +6 |^  |0 // 将光标跳转到当前所在行的行首</span><br><span class="line"><span class="comment">## 复制粘贴</span></span><br><span class="line">yy   //复制光标所在行的整行内容</span><br><span class="line">p(小写p)  //将复制的内容粘贴到光标所在行的下一行</span><br><span class="line">P(大写P)  //将复制的内容粘贴到光标所在行的上一行</span><br><span class="line">Nyy | yNy    //将光标所在行整行内容及下面N-1行内容复制(N为阿拉伯数字)</span><br><span class="line"><span class="comment">## 剪切删除</span></span><br><span class="line"><span class="built_in">dd</span>   // 将光标所在行一整行内容，剪切(删除)</span><br><span class="line">Ndd | dNd    //将光标所在行及下面N-1行内容剪切(N为阿拉伯数字)</span><br><span class="line">Shift + d|D// 将光标所在字符及后面整行内容剪切(删除)</span><br><span class="line">x   // 删除当前光标所在字符</span><br><span class="line">Shift +x|X    //将光标所在当前字符的前一个字符删除</span><br><span class="line">d+<span class="built_in">shift</span> +g|dG  //将光标所在行及后面所有行内容删除</span><br><span class="line"><span class="comment">## 撤销回滚替换</span></span><br><span class="line">U        // 撤销上一次操作</span><br><span class="line">Ctrl + r//恢复上一次撤销的操作</span><br><span class="line">r// 替换光标当前所在的一个字符</span><br><span class="line">Shift +r |R//从光标所在字符开始进行替换直到按ESC结束</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 翻页</span></span><br><span class="line">Ctrl + b // 向前翻页</span><br><span class="line">Ctrl + f // 向后翻页</span><br></pre></td></tr></table></figure><h4 id="2-编辑模式">2.编辑模式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">-- INSERT --</span><br><span class="line">像正常的Windows文本编辑器一样，可以随意写入内容</span><br><span class="line"><span class="comment">## 从命令模式如何进入编辑模式</span></span><br><span class="line">i // 在光标所在位置进入编辑模式（输入内容在光标之前）</span><br><span class="line">I // 将光标跳转到光标所在行的行首并进入编辑模式（输入内容在光标之前）</span><br><span class="line">a // 将光标跳转到光标所在字符的后一个字符并进入编辑模式（输入内容在光标之前）</span><br><span class="line">A // 将光标跳转到光标所在行的行末并进入编辑模式（输入内容在光标之前）</span><br><span class="line">s // 将光标所在字符删除并进入编辑模式（输入内容在光标之前）</span><br><span class="line">S // 将光标所在行的整行内容删除并进入编辑模式</span><br><span class="line">o // 将光标移动到当前所在行的下一行并进入编辑模式</span><br><span class="line">O // 将光标移动到光标所在行的上一行并进入编辑模式</span><br><span class="line"><span class="comment">## 从编辑模式返回命令模式</span></span><br><span class="line">ESC</span><br></pre></td></tr></table></figure><h4 id="3-末行模式">3.末行模式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在编辑器的左下角进行操作</span></span><br><span class="line">显示行号、搜索、替换、保存、退出 ...</span><br><span class="line"><span class="comment"># 进入末行模式的方法</span></span><br><span class="line">1）在命令模式下，输入冒号</span><br><span class="line">2）在命令模式下，输入/</span><br><span class="line"><span class="comment">## 保存退出</span></span><br><span class="line">w：write写入（保存</span><br><span class="line">q：quit退出</span><br><span class="line">:w // 只保存但是不退出</span><br><span class="line">:q // 退出但不保存 （没有改内容）</span><br><span class="line">:wq // 保存退出 快捷键 Shift + zz | ZZ</span><br><span class="line">:x // 保存退出 和:wq相等</span><br><span class="line">:q! // 强制退出</span><br><span class="line">:w! // 强制保存</span><br><span class="line">:wq! // 强制保存并退出</span><br><span class="line"><span class="comment">########### 错误 ###########</span></span><br><span class="line">:qw // 错误写法，先退出后保存</span><br><span class="line">E37: No write since last change (add ! to override) // 文件写入内容，没有保存，无法直接退出，除非强制退出</span><br><span class="line">E45: <span class="string">&#x27;readonly&#x27;</span> option is <span class="built_in">set</span> (add ! to override) // 只读文件，无法保存退出，只有root用户可以强制保存退出</span><br><span class="line">E212: Unable to open and write files // 文件无法写入</span><br><span class="line">E212: Can<span class="string">&#x27;t open file for writing // 文件无法写入，出现原因：1.没有写入权限2.文件写入到一个不存在的目录中</span></span><br></pre></td></tr></table></figure><p><strong>==末行模式—搜索==</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/想要搜索的内容</span><br><span class="line">n：下翻，查找下一个</span><br><span class="line">N：上翻，查找上一个</span><br></pre></td></tr></table></figure><p><strong>==末行模式—替换==</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">:%s#要被替换的内容#替换的内容#g</span><br><span class="line">%：所有行</span><br><span class="line">s：search 搜索</span><br><span class="line">g：全局替换</span><br></pre></td></tr></table></figure><p><strong>==末行模式—光标跳转及命令==</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 显示行号</span></span><br><span class="line">:<span class="built_in">set</span> number 简写 :<span class="built_in">set</span> nu</span><br><span class="line"><span class="comment">## 取消显示行号</span></span><br><span class="line">:<span class="built_in">set</span> nonumber 简写 :<span class="built_in">set</span> nonu</span><br><span class="line"><span class="comment">## 光标跳转到指定行</span></span><br><span class="line">:N (N为阿拉伯数字)</span><br><span class="line"><span class="comment">## 忽略大小写</span></span><br><span class="line">:<span class="built_in">set</span> ic</span><br><span class="line"><span class="comment">## 取消忽略大小写</span></span><br><span class="line">:<span class="built_in">set</span> noic</span><br><span class="line"><span class="comment">## 自动缩进</span></span><br><span class="line">:<span class="built_in">set</span> ai</span><br><span class="line"><span class="comment">## 取消自动缩进</span></span><br><span class="line">:<span class="built_in">set</span> noai</span><br><span class="line"><span class="comment">## 显示制表符，结束符...</span></span><br><span class="line">:<span class="built_in">set</span> list</span><br><span class="line"><span class="comment">## 取消</span></span><br><span class="line">:<span class="built_in">set</span> nolist</span><br><span class="line"><span class="comment">## 设置环境变量 在当前登录用户的家目录下 创建一个 .vimrc</span></span><br><span class="line"><span class="built_in">set</span> fenc=utf-8</span><br><span class="line"><span class="built_in">set</span> fencs=utf-8,usc-bom,euc-jp,gb18030,gbk,gb2312,cp936</span><br><span class="line"><span class="built_in">set</span> number</span><br><span class="line"><span class="built_in">set</span> autoindent</span><br><span class="line"><span class="built_in">set</span> smartindent</span><br><span class="line"><span class="built_in">set</span> tabstop=4</span><br><span class="line"><span class="built_in">set</span> shiftwidth=4</span><br><span class="line"><span class="built_in">set</span> ruler</span><br><span class="line"><span class="built_in">set</span> incsearch</span><br><span class="line"><span class="built_in">set</span> showmatch</span><br><span class="line"><span class="built_in">set</span> matchtime=10</span><br><span class="line"><span class="built_in">set</span> ignorecase</span><br><span class="line"><span class="built_in">set</span> cursorline</span><br><span class="line"><span class="built_in">set</span> t_Co=256</span><br><span class="line"><span class="comment">#设定默认解码</span></span><br><span class="line"><span class="built_in">set</span>?fenc=utf-8?</span><br><span class="line"><span class="built_in">set</span>?fencs=utf-8,usc-bom,euc-jp,gb18030,gbk,gb2312,cp936</span><br><span class="line"><span class="comment">#显示行号</span></span><br><span class="line"><span class="built_in">set</span> number</span><br><span class="line"><span class="comment">#vim使用自动对齐，也就是把当前行的对齐格式应用到下一行</span></span><br><span class="line"><span class="built_in">set</span> autoindent </span><br><span class="line"><span class="comment">#依据上面的对齐格式，智能的选择对齐方式</span></span><br><span class="line"><span class="built_in">set</span> smartindent </span><br><span class="line"><span class="comment">#设置tab键为4个空格</span></span><br><span class="line"><span class="built_in">set</span> tabstop=4</span><br><span class="line"><span class="comment">#设置当行之间交错时使用4个空格</span></span><br><span class="line"><span class="built_in">set</span> shiftwidth=4</span><br><span class="line"><span class="comment">#设置在编辑过程中,于右下角显示光标位置的状态行</span></span><br><span class="line"><span class="built_in">set</span> ruler</span><br><span class="line"><span class="comment">#设置增量搜索,这样的查询比较smart</span></span><br><span class="line"><span class="built_in">set</span> incsearch </span><br><span class="line"><span class="comment">#高亮显示匹配的括号</span></span><br><span class="line"><span class="built_in">set</span> showmatch </span><br><span class="line"><span class="comment">#匹配括号高亮时间(单位为 1/10 s)</span></span><br><span class="line"><span class="built_in">set</span> matchtime=10 </span><br><span class="line"><span class="comment">#在搜索的时候忽略大小写</span></span><br><span class="line"><span class="built_in">set</span> ignorecase </span><br><span class="line"><span class="comment">#禁止生成临时</span></span><br><span class="line"><span class="comment">#set nobackup </span></span><br><span class="line"><span class="comment">#当前行高亮</span></span><br><span class="line"><span class="built_in">set</span> cursorline </span><br><span class="line"><span class="comment">#支持256色</span></span><br><span class="line"><span class="built_in">set</span> t_Co=256</span><br></pre></td></tr></table></figure><h4 id="4-视图模式">4.视图模式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">块视图模式 -- VISUAL BLOCK -- Ctrl + v</span><br><span class="line"><span class="comment"># 批量注释</span></span><br><span class="line">1）Ctrl + v 进入块视图模式</span><br><span class="line">2）按键盘的上下左右，选中想要的内容</span><br><span class="line">3）如果是在行前加入内容，Shift + i</span><br><span class="line">4）如果是在行后加入内容，Shift + a</span><br><span class="line">5）输入想要的内容后，返回命令模式（ESC）</span><br><span class="line">行视图模式 -- VISUAL LINE -- Shit + v</span><br></pre></td></tr></table></figure><h4 id="5-vim扩展知识">5.vim扩展知识</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 编辑文件直接跳转到指定行</span></span><br><span class="line">[root@localhost ~]# vim +N 1.txt // N为阿拉伯数字</span><br><span class="line">[root@localhost ~]# vim +3 1.txt</span><br><span class="line"><span class="comment">## 对比文件不同之处</span></span><br><span class="line">[root@localhost ~]# vimdiff 1.txt 2.txt</span><br><span class="line">[root@localhost ~]# diff 1.txt 3.txt</span><br><span class="line">3,6c3,6</span><br><span class="line">&lt; http://pxost.baidu.com/index.html</span><br><span class="line">&lt; http://mp3.baiadu.com/index.html</span><br><span class="line">&lt; http://www.baidu.com/3.html</span><br><span class="line">&lt; http://post.baidxu.com/2.html</span><br><span class="line">---</span><br><span class="line">&gt; http:aaaaa//pxost.baidu.com/index.html</span><br><span class="line">&gt; http://mp3xxx.baiadu.com/index.html</span><br><span class="line">&gt; http://www.baxxidu.com/3.html</span><br><span class="line">&gt; http://post.baixxdxu.com/2.html</span><br><span class="line"><span class="comment">## 同时编辑多个文件 （使用Ctrl + ww 进行切换）</span></span><br><span class="line">[root@localhost ~]# vim -o 1.txt 2.txt // 水平拆分</span><br><span class="line">[root@localhost ~]# vim -O 1.txt 2.txt // 垂直拆分</span><br></pre></td></tr></table></figure><h4 id="6-vim写入流程">6.vim写入流程</h4><p><img src="https://cos.lukme.top/Pic/aaa.jpg" alt="aaa"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">当我们在使用vim编辑文件时</span><br><span class="line">1）首先会在源文件目录下生成一个.swp的临时文件</span><br><span class="line">2）如果vim非正常退出的情况下，该临时文件一直存在</span><br><span class="line">3）下一次编辑则会提示</span><br><span class="line">[O]pen Read-Only, (E)dit anyway, (R)ecover, (Q)uit, (A)bort:</span><br><span class="line">只读模式打开 继续编辑 覆盖 退出</span><br><span class="line">解决方案：</span><br><span class="line">1）查看modified状态 如果是<span class="built_in">yes</span>，则需要覆盖源文件</span><br><span class="line">- vim -r /etc/sysconfig/network-scripts/ifcfg-ens33</span><br><span class="line">- vim /etc/sysconfig/network-scripts/ifcfg-ens3</span><br><span class="line">(R)ecover 按 r</span><br><span class="line">2）删除.swp临时文件即可</span><br><span class="line"><span class="built_in">rm</span> -f /etc/sysconfig/network-scripts/.ifcfg-ens33.swp</span><br><span class="line">1）查看modified状态 如果是no，则需要覆盖源文件</span><br><span class="line">(Q)uit 按q退出</span><br><span class="line">2）直接删除.swp临时文件</span><br><span class="line"><span class="built_in">rm</span> -f /etc/sysconfig/network-scripts/.ifcfg-ens33.swp</span><br></pre></td></tr></table></figure><h3 id="4-find命令">4. find命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1.忘了某个文件所在的位置，可以通过find来查找。</span><br><span class="line">2.可以查找某个目录下，所有小于1k的文件。</span><br><span class="line">3.可以查找某个目录下，7天之前创建的文件。</span><br><span class="line">4.可以查找某目录下所有以.sh结尾的脚本。</span><br><span class="line"></span><br><span class="line">它可以根据不同的条件来进行查找文件:例如权限、拥有者、修改日期/时间、文件大小等等。 同时find命令是Linux下必须掌握的。</span><br><span class="line"></span><br><span class="line">[root@lb01 code]# find /code/ -size -4k ! -<span class="built_in">type</span> d -delete</span><br></pre></td></tr></table></figure><table><thead><tr><th>命令</th><th>路径</th><th>选项</th><th>表达式</th><th>动作</th></tr></thead><tbody><tr><td>find</td><td>[path…]</td><td>[options…]</td><td>[expression]</td><td>[action]</td></tr></tbody></table><table><thead><tr><th>逻辑运算符</th><th>作用</th></tr></thead><tbody><tr><td>-a</td><td>且   &amp;&amp;</td></tr><tr><td>-o</td><td>或  ||</td></tr><tr><td>!</td><td>非</td></tr></tbody></table><p><strong>find的选项</strong></p><table><thead><tr><th>选项</th><th>作用</th></tr></thead><tbody><tr><td>-name<br />-iname</td><td>根据文件名查找<br />不区分文件名大小写查找</td></tr><tr><td>-type</td><td>根据文件类型查找</td></tr><tr><td>-size</td><td>根据文件大小找</td></tr><tr><td>-time</td><td>根据文件的时间找</td></tr><tr><td>-user <br />-group <br />-nouser <br />-nogroup</td><td>查找指定用户<br />查找指定用户组<br />查找没有用户的文件查找<br />没有用户组的文件</td></tr><tr><td>-perm</td><td>根据文件权限找</td></tr><tr><td>-maxdepth</td><td>根据句深度查找</td></tr><tr><td>-empty</td><td>查找空文件（和-type d配合可以指定空目录）</td></tr></tbody></table><h4 id="1-根据文件名查找">1.根据文件名查找</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">-name</span><br><span class="line"><span class="comment">## 找到/etc/目录下网卡信息配置文件在哪</span></span><br><span class="line">[root@localhost ~]# find /etc -name <span class="string">&#x27;*ens33*&#x27;</span>      加上*是模糊查找</span><br><span class="line"></span><br><span class="line"><span class="comment">## 在/etc/目录下找以.conf结尾的所有配置文件</span></span><br><span class="line">[root@localhost ~]# find /etc -name <span class="string">&#x27;*.conf&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 在/etc/目录下找到以.conf结尾的文件和.sh结尾的文件</span></span><br><span class="line">[root@localhost ~]# find /etc/ -name <span class="string">&#x27;*.conf&#x27;</span> &amp;&amp; find /etc/ -name <span class="string">&#x27;*.sh&#x27;</span></span><br><span class="line">[root@localhost ~]# find /etc/ -name <span class="string">&#x27;*.conf&#x27;</span>;find /etc/ -name <span class="string">&#x27;*.sh&#x27;</span></span><br><span class="line">[root@localhost ~]# find /etc/ -name <span class="string">&#x27;*.conf&#x27;</span> -o -name <span class="string">&#x27;*.sh&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 在/etc/目录下找到不是以.conf结尾的文件</span></span><br><span class="line">[root@localhost ~]# find /etc/ ! -name <span class="string">&#x27;*.conf&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 精确匹配</span></span><br><span class="line">[root@localhost ~]# find /etc/ -name <span class="string">&#x27;ifcfg-ens33&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 不区分大小写查找文件名</span></span><br><span class="line">[root@localhost ~]# find ./ -iname <span class="string">&#x27;*zls*&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="2-根据文件类型查找">2.根据文件类型查找</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">-<span class="built_in">type</span></span><br><span class="line"><span class="comment">## 文件类型</span></span><br><span class="line">普通文件：f</span><br><span class="line">目录：d</span><br><span class="line">软链接文件：l</span><br><span class="line">套接字文件：s</span><br><span class="line">字符设备文件：c</span><br><span class="line">块设备文件：b</span><br><span class="line">管道文件：p</span><br><span class="line">//f 文件</span><br><span class="line">[root@zls ~]# find /dev -<span class="built_in">type</span> f</span><br><span class="line">//d 目录</span><br><span class="line">[root@zls ~]# find /dev -<span class="built_in">type</span> d</span><br><span class="line">//l 链接</span><br><span class="line">[root@zls ~]# find /dev -<span class="built_in">type</span> l</span><br><span class="line">//b 块设备</span><br><span class="line">[root@zls ~]# find /dev -<span class="built_in">type</span> b</span><br><span class="line">//c 字符设备</span><br><span class="line">[root@zls ~]# find /dev -<span class="built_in">type</span> c</span><br><span class="line">//s 套接字</span><br><span class="line">[root@zls ~]# find /dev -<span class="built_in">type</span> s</span><br><span class="line">//p 管道文件</span><br><span class="line">[root@zls ~]# find /dev -<span class="built_in">type</span> p</span><br><span class="line"></span><br><span class="line"><span class="comment">## 查找/etc/目录下，文件名中包含conf的目录</span></span><br><span class="line">[root@localhost ~]# find /etc -name <span class="string">&#x27;*conf*&#x27;</span> -<span class="built_in">type</span> d</span><br><span class="line">[root@localhost ~]# find /etc -name <span class="string">&#x27;*conf*&#x27;</span> -<span class="built_in">type</span> d -<span class="built_in">ls</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="3-根据文件大小查找">3.根据文件大小查找</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">-size</span><br><span class="line">+：大于</span><br><span class="line">-：小于</span><br><span class="line"><span class="comment">## 找小于多少的文件</span></span><br><span class="line">[root@localhost ~]# find /tmp -size -4k</span><br><span class="line"><span class="comment">## 找大于多少的文件</span></span><br><span class="line">[root@localhost ~]# find /tmp -size +4k</span><br><span class="line"><span class="comment">## 找等于多少</span></span><br><span class="line">[root@localhost ~]# find /tmp -size 4k</span><br><span class="line"></span><br><span class="line"><span class="comment">## 找到/code目录下小于4k的文件并删除</span></span><br><span class="line">[root@localhost ~]# find /code -size -4k -delete</span><br><span class="line"></span><br><span class="line"><span class="comment">## 找到/code目录下小于4k的文件并删除（不删除目录）</span></span><br><span class="line">[root@localhost ~]# find /code -size -4k ! -<span class="built_in">type</span> d -delete   </span><br><span class="line"><span class="comment">##! -type d -delete非目录</span></span><br></pre></td></tr></table></figure><h4 id="4-根据文件的时间查找">4.根据文件的时间查找</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 一个文件的时间</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">stat</span> 1.txt</span><br><span class="line">File: ‘1.txt’</span><br><span class="line">Size: 4 Blocks: 8 IO Block: 4096 regular file</span><br><span class="line">Device: 803h/2051d Inode: 16797763 Links: 1</span><br><span class="line">Access: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)</span><br><span class="line">Context: unconfined_u:object_r:admin_home_t:s0</span><br><span class="line">Access: 2024-04-17 19:25:18.951724354 +0800</span><br><span class="line">Modify: 2024-04-17 19:25:18.951724354 +0800</span><br><span class="line">Change: 2024-04-17 19:25:18.951724354 +0800</span><br><span class="line"></span><br><span class="line">-mtime：Modify修改时间</span><br><span class="line">-atime：Access访问时间</span><br><span class="line">-ctime：Change时间戳修改时间</span><br><span class="line"></span><br><span class="line">+：查找N天之前的（不包含今天）</span><br><span class="line">-：查找N天之内的（包含今天）</span><br><span class="line">N：查找往前数第N天的（不包含今天）  （-mtime后只有数字的）</span><br><span class="line"></span><br><span class="line"><span class="comment">## 不加任何符号：查找不算今天往前数第7天的文件</span></span><br><span class="line">-mtime 7</span><br><span class="line">[root@localhost find]# find /root/find/ -mtime 7</span><br><span class="line"></span><br><span class="line"><span class="comment">## +7 不算今天往前数第七天之前的文件</span></span><br><span class="line">[root@localhost find]# find /root/find/ -mtime +7</span><br><span class="line"><span class="comment">## -7 算今天，最近7天的文件</span></span><br><span class="line">[root@localhost find]# find /root/find/ -mtime -7</span><br><span class="line"><span class="comment">## 需求：保留一周的数据</span></span><br><span class="line">[root@localhost find]# find /root/find/ ! -mtime -7 -delete</span><br></pre></td></tr></table></figure><h4 id="5-根据用户查找">5.根据用户查找</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">-user：查找指定用户</span><br><span class="line">-group：查找指定用户组</span><br><span class="line">-nouser：查找没有用户的文件</span><br><span class="line">-nogroup：查找没有用户组的文件</span><br><span class="line"><span class="comment">## 查找属于root用户adm组的文件</span></span><br><span class="line">[root@localhost ~]# find /root/ -user root -group adm -<span class="built_in">ls</span></span><br><span class="line"><span class="comment">## 查找user是zls，或group是adm组的文件</span></span><br><span class="line">[root@localhost ~]# find /root/ \( -group adm -o -user zls \) -<span class="built_in">ls</span></span><br><span class="line">16797763 4 -rw-r--r-- 1 zls root 4 Apr 17 2024 /root/1.txt</span><br><span class="line">16797778 4 -rw-r--r-- 1 zls root 4 Apr 16 2024 /root/2.txt</span><br><span class="line">16797816 4 -rw-r--r-- 1 root adm 4 Apr 17 2024</span><br><span class="line">/root/zls.txt</span><br><span class="line">16851189 4 -rw-r--r-- 1 root adm 4 Apr 16 2024</span><br><span class="line">/root/zls1.txt</span><br><span class="line">16851191 4 -rw-r--r-- 1 root adm 4 Apr 16 2024</span><br><span class="line">/root/zls2.txt</span><br><span class="line">16797780 4 -rw-r--r-- 1 root adm 4 Apr 16 2024</span><br><span class="line">/root/zls3.txt</span><br><span class="line">16797813 4 -rw-r--r-- 1 root adm 4 Apr 16 2024</span><br><span class="line">/root/zls4.txt</span><br><span class="line">[root@localhost ~]# find /root/ \( -user zls -o -group adm \)</span><br><span class="line">-rw-r--r--. 1 zls root 4 Apr 17 2024 /root/1.txt</span><br><span class="line">-rw-r--r--. 1 zls root 4 Apr 16 2024 /root/2.txt</span><br><span class="line">-rw-r--r--. 1 root adm 4 Apr 16 2024 /root/zls1.txt</span><br><span class="line">-rw-r--r--. 1 root adm 4 Apr 16 2024 /root/zls2.txt</span><br><span class="line">-rw-r--r--. 1 root adm 4 Apr 16 2024 /root/zls3.txt</span><br><span class="line">-rw-r--r--. 1 root adm 4 Apr 16 2024 /root/zls4.txt</span><br><span class="line">-rw-r--r--. 1 root adm 4 Apr 17 2024 /root/zls.txt</span><br><span class="line"><span class="comment">## 查找没有用户或者没有组的文件</span></span><br><span class="line">[root@localhost opt]# find /opt/ -nouser -o -nogroup</span><br></pre></td></tr></table></figure><h4 id="6-根据文件权限查找">6.根据文件权限查找</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">perm</span><br><span class="line"><span class="comment">## 精确查找文件的权限644</span></span><br><span class="line">[root@localhost opt]# find /opt/ -perm 644 -<span class="built_in">ls</span></span><br><span class="line">16851186 0 -rw-r--r-- 1 1000 oldboyedu 0 Apr 15 2024</span><br><span class="line">/opt/sbit/1.txt</span><br><span class="line">16851188 0 -rw-r--r-- 1 oldboy oldboyedu 0 Apr 15 2024</span><br><span class="line">/opt/sbit/2.txt</span><br><span class="line">8393463 0 -rw-r--r-- 1 1002 root 0 Mar 30 00:19 /opt/1.txt</span><br><span class="line">8393464 0 -rw-r--r-- 1 root 1000 0 Mar 30 00:19 /opt/2.txt</span><br><span class="line"><span class="comment">## -：代表该权限位上，必须包含该数字权限622 rw w w</span></span><br><span class="line">[root@localhost opt]# find /opt/ -perm -622 -<span class="built_in">ls</span></span><br><span class="line">16851181 0 drwxrwxrwt 2 root root 32 Apr 15 2024 /opt/sbit</span><br><span class="line"><span class="comment">## /：拥有者至少有r或w权限, 或者拥有组至少有w权限, 或者匿名至少有w权限</span></span><br><span class="line">[root@zls ~]# find /home -perm /622</span><br><span class="line">8405111 0 drwxr-xr-x 4 root root 77 Mar 30 00:19 /opt/</span><br><span class="line">16777 0 drwxr-sr-x 2 1000 root 19 Apr 15 2024 /opt/test</span><br><span class="line">16779 0 -rw-rw-r-- 1 1000 root 0 Apr 15 2024</span><br><span class="line">/opt/test/1.txt</span><br><span class="line">16851181 0 drwxrwxrwt 2 root root 32 Apr 15 2024 /opt/sbit</span><br><span class="line">16851186 0 -rw-r--r-- 1 1000 oldboyedu 0 Apr 15 2024</span><br><span class="line">/opt/sbit/1.txt</span><br><span class="line">16851188 0 -rw-r--r-- 1 oldboy oldboyedu 0 Apr 15 2024</span><br><span class="line">/opt/sbit/2.txt</span><br><span class="line">8393448 12 -rw------- 1 root root 9567 Apr 16 2024</span><br><span class="line">/opt/.bash_history</span><br><span class="line">8393463 0 -rw-r--r-- 1 1002 root 0 Mar 30 00:19 /opt/1.txt</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="7-根据深度查找">7.根据深度查找</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# find /etc/ -maxdepth 1 -<span class="built_in">type</span> d</span><br></pre></td></tr></table></figure><h4 id="8-动作">8.动作</h4><table><thead><tr><th>动作</th><th>作用</th></tr></thead><tbody><tr><td>-print</td><td>打印结果（find 默认就打印结果）</td></tr><tr><td>-ls</td><td>查看文件详细信息（如果有逻辑运算符，就只查看逻辑运算符后面文件详细信息，除非 使用小括号整体括起来）</td></tr><tr><td>- delete</td><td>删除查找到的文件（如果有逻辑运算符，就只查看逻辑运算符后面文件详细信息，除非 使用小括号整体括起来）</td></tr><tr><td>-ok</td><td>执行后面的shell命令（会询问）（如果有逻辑运算符，就只查看逻辑运算符后面文件详 细信息，除非使用小括号整体括起来）</td></tr><tr><td>-exec</td><td>执行后面的shell命令（不询问）（如果有逻辑运算符，就只查看逻辑运算符后面文件详 细信息，除非使用小括号整体括起来）</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# find /opt/ -<span class="built_in">type</span> f -o -name <span class="string">&#x27;*st&#x27;</span> -<span class="built_in">exec</span> <span class="built_in">rm</span> -fr &#123;&#125; \;</span><br><span class="line">[root@localhost ~]# find /opt/ -<span class="built_in">type</span> f -o -name <span class="string">&#x27;*st&#x27;</span> -ok <span class="built_in">rm</span> -fr &#123;&#125; \;</span><br><span class="line"><span class="comment">## 以后动作都改为xargs 后面加命令</span></span><br><span class="line">[root@localhost ~]# find /opt/ -<span class="built_in">type</span> f -o -name <span class="string">&#x27;*st&#x27;</span>|xargs <span class="built_in">rm</span> -fr</span><br><span class="line"><span class="comment">## 拷贝</span></span><br><span class="line">[root@localhost ~]# find /root/ -<span class="built_in">type</span> f|xargs <span class="built_in">cp</span> -t /tmp/</span><br><span class="line">[root@localhost ~]# find /root/ -<span class="built_in">type</span> d|xargs -I &#123;&#125; <span class="built_in">cp</span> -r &#123;&#125; /opt/</span><br></pre></td></tr></table></figure><h2 id="【3】用户管理">【3】用户管理</h2><h3 id="1-用户管理信息">1.用户管理信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##Linux下的用户有什么作用</span></span><br><span class="line">1）系统上的每一个进程(运行的程序)都需要特定的用户运行</span><br><span class="line">2）每一个文件都有特定的用户拥有，所以访问一个文件或目录受到用户的限制</span><br><span class="line">3）进程能够以何种方式访问某一个文件或目录, 与进程所关联的用户有关</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20240409145014306.png" alt="image-20240409145014306"></p><h4 id="①-用户查看命令">① 用户查看命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 语法</span></span><br><span class="line"><span class="built_in">id</span> [option] [user]</span><br><span class="line"><span class="built_in">id</span> [选项] [用户名]</span><br><span class="line">[root@localhost ~]# <span class="built_in">id</span></span><br><span class="line">uid=0(root) gid=0(root) <span class="built_in">groups</span>=0(root)</span><br><span class="line">uid：user <span class="built_in">id</span>号</span><br><span class="line">gid：group <span class="built_in">id</span>号</span><br><span class="line"><span class="built_in">groups</span>：组名</span><br><span class="line"><span class="comment">## 只显示uid</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">id</span> -u root</span><br><span class="line">0</span><br><span class="line"><span class="comment">## 只显示gid</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">id</span> -g root</span><br><span class="line">0</span><br><span class="line">系统只认uid，用户名是给运维人员看的</span><br><span class="line">在Linux系统中，uid为0的用户才是超级用户</span><br><span class="line"><span class="comment">## 查看用户登录哪个终端，登录时间   who</span></span><br><span class="line">root     tty1         2024-04-09 14:54</span><br><span class="line">root     pts/0        2024-04-09 11:09 (10.0.0.1)</span><br><span class="line">root     pts/1        2024-04-09 11:33 (10.0.0.1)</span><br><span class="line"><span class="built_in">tty</span>代表的是服务器终端登录</span><br><span class="line">pts代表的是远程链接工具登录</span><br><span class="line">[root@localhost ~]# <span class="built_in">whoami</span><span class="comment">## 查看当前登录的用户名</span></span><br><span class="line">root</span><br><span class="line"><span class="comment">## 查看用户信息文件</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> /etc/passwd</span><br></pre></td></tr></table></figure><h4 id="②-etc-passwd">② /etc/passwd</h4><p><img src="https://cos.lukme.top/Pic/image-20240409145743758.png" alt="image-20240409145743758"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 以冒号为分隔符的情况下，文件被分为7列</span></span><br><span class="line">[root@lb02 ~]# <span class="built_in">cat</span> /etc/passwd</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line">lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br><span class="line"><span class="built_in">sync</span>:x:5:0:<span class="built_in">sync</span>:/sbin:/bin/sync</span><br><span class="line"></span><br><span class="line">[zls@localhost ~]# useradd wyl -c <span class="string">&#x27;abc&#x27;</span>  添加备注</span><br><span class="line"></span><br><span class="line">第一列：用户名</span><br><span class="line">第二列：密码占位符</span><br><span class="line">第三列：用户的uid</span><br><span class="line">第四列：用户所在组的gid</span><br><span class="line">第五列：用户的描述信息（备注、注释）</span><br><span class="line">第六列：用户家目录所在路径</span><br><span class="line">第七列：用户登录使用的bash</span><br><span class="line"><span class="comment">##  /sbin/nologin 不允许登录的用户 bash</span></span><br></pre></td></tr></table></figure><h4 id="③-etc-shadow">③ etc/shadow</h4><p><img src="https://cos.lukme.top/Pic/image-20240409150039322.png" alt="image-20240409150039322"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">daemon:*:17834:0:99999:7:2:6627567:</span><br><span class="line">第一列：用户名</span><br><span class="line">第二列：密码   *和!! 代表没有密码</span><br><span class="line">第三列：密码修改的时间 从1970年开始计算到上一次变更密码的时间过了多少天</span><br><span class="line">第四列：密码最少使用天数 0代表无限制</span><br><span class="line">第五列：密码最长使用天数 99999代表无限制</span><br><span class="line">第六列：密码到期之前多少天开始提醒 提前7天提醒需要改密码了</span><br><span class="line">第七列：密码过期后N天强制变更密码 密码过期后2天，强制改密码</span><br><span class="line">第八列：账户失效时间，从1970年开始计算多少天</span><br><span class="line">第九列：空 保留列</span><br></pre></td></tr></table></figure><h3 id="2-用户管理">2.用户管理</h3><h4 id="①-创建用户案例">① 创建用户案例</h4><p>练习创建1000个用户，密码都为1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;1&#x27;</span> |passwd --stdin lgj</span><br><span class="line"></span><br><span class="line">；分号可以衔接多个命令执行，</span><br><span class="line">&amp;&amp;衔接多个命令，但是需要判断前面的命令执行成功后，再执行后面的命令</span><br><span class="line"><span class="comment">#衔接命令</span></span><br><span class="line">useradd lgj1;<span class="built_in">echo</span> <span class="string">&quot;1&quot;</span> | passwd --stdin lgj1  ==&gt;;分号两边分别执行结果</span><br><span class="line"></span><br><span class="line">[root@lb01 ~]# <span class="built_in">seq</span> 1000|awk <span class="string">&#x27;&#123;print &quot;useradd lgj&quot;$1&quot;;echo 1|passwd --stdin lgj&quot;$1&#125;&#x27;</span>|bash</span><br><span class="line"></span><br><span class="line"><span class="comment">#脚本</span></span><br><span class="line">vim useradd.sh</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;1..1000&#125;; <span class="keyword">do</span></span><br><span class="line">  username=<span class="string">&quot;lgj<span class="variable">$i</span>&quot;</span></span><br><span class="line">  useradd <span class="variable">$username</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;1&quot;</span> | passwd --stdin <span class="variable">$username</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">运行sh文件</span><br><span class="line">sh useradd.sh &gt; /dev/null</span><br></pre></td></tr></table></figure><h4 id="②-用户约定和规范">② 用户约定和规范</h4><p><strong>==Linux里用户规范==</strong></p><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">centOS7</th><th style="text-align:center"></th><th style="text-align:center">centOS7</th></tr></thead><tbody><tr><td style="text-align:center">用户UID</td><td style="text-align:center">作用</td><td style="text-align:center">用户UID</td><td style="text-align:center">作用</td></tr><tr><td style="text-align:center">0</td><td style="text-align:center">系统管理员（超级用户）</td><td style="text-align:center">0</td><td style="text-align:center">系统管理员（超级用户）</td></tr><tr><td style="text-align:center">1-200</td><td style="text-align:center">系统用户，由系统分配给进程使用</td><td style="text-align:center">1-500</td><td style="text-align:center">系统用户，由系统分配给进程使用运行服务，不需要登录系统</td></tr><tr><td style="text-align:center">201-999</td><td style="text-align:center">系统用户，运行服务，不需要登录系统</td><td style="text-align:center">500+</td><td style="text-align:center">常规的普通用户</td></tr><tr><td style="text-align:center">1000+</td><td style="text-align:center">常规的普通用户</td><td style="text-align:center"><strong>/</strong></td><td style="text-align:center"><strong>/</strong></td></tr></tbody></table><h4 id="③-修改密码-chage">③ 修改密码 chage</h4><p><strong>==了解==</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">bin:*:17834:0:99999:7:10::</span><br><span class="line">-d //设置最近一次更改密码时间, 0下次登陆系统强制修改密码 // /etc/shadow 第三列</span><br><span class="line">-m //设置用户两次改变密码之间使用<span class="string">&quot;最小天数&quot;</span> // /etc/shadow 第四列</span><br><span class="line">-M //设置用户两次改变密码之间使用<span class="string">&quot;最大天数&quot;</span> // /etc/shadow 第五列</span><br><span class="line">-W //设置密码更改警告时间 将过期警告天数设为“警告天数” // /etc/shadow 第六列</span><br><span class="line">-I //设置密码过期天数后, 密码为失效状态 // /etc/shadow 第七列</span><br><span class="line">-E //设置用户过期时间, 账户失效后无法登陆 // /etc/shadow 第八列</span><br><span class="line">-l //显示用户信息</span><br><span class="line">[root@lgj ~]# chage -l lgj</span><br><span class="line">Last password change : Sep 01, 2014    //最近一次更改密码时间</span><br><span class="line">Password expires : Sep 16, 2014    //密码过期时间</span><br><span class="line">Password inactive : Sep 21, 2014    //密码失效时间</span><br><span class="line">Account expires : Aug 31, 2015   //用户失效时间</span><br><span class="line">Minimum number of days between password change : 2 //密码最短使用时间</span><br><span class="line">Maximum number of days between password change : 15 //密码最长使用时间</span><br><span class="line">Number of days of warning before password expires : 7 //密码过期前警告天数</span><br></pre></td></tr></table></figure><h4 id="④-创建用户（增）">④ 创建用户（增）</h4><table><thead><tr><th style="text-align:center">选项</th><th>作用</th></tr></thead><tbody><tr><td style="text-align:center">-u</td><td>指定uid</td></tr><tr><td style="text-align:center">-g</td><td>指定gid（必须指定一个已存在的组）</td></tr><tr><td style="text-align:center">-c</td><td>指定用户的备注（注释）</td></tr><tr><td style="text-align:center">-d</td><td>指定用户的家目录</td></tr><tr><td style="text-align:center">-M</td><td>不创建家目录</td></tr><tr><td style="text-align:center">-s</td><td>指定用户登录的shell</td></tr><tr><td style="text-align:center">-G</td><td>指定附加组</td></tr><tr><td style="text-align:center">-r</td><td>创建一个用户uid在200 - 999之间</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">使用useradd创建用户将影响到四个文件</span><br><span class="line">/etc/passwd存放用户名等信息</span><br><span class="line">/etc/shadow存放密码等信息</span><br><span class="line">/etc/group存放组信息</span><br><span class="line">/etc/gshadow存放组密码信息</span><br><span class="line"></span><br><span class="line">如果手动创建用户不使用命令，需要分别在1./etc/passwd  2./etc/shadow  3./etc/group  4./etc/gshadow创建用户名组等信息，5.创建用户名的家目录6.拷贝环境变量文件<span class="built_in">cp</span> /etc/skel/.bash* /home/abc111/</span><br><span class="line"></span><br><span class="line"><span class="comment">##创建用户命令 useradd</span></span><br><span class="line">useradd [选项]... 用户名</span><br><span class="line"></span><br><span class="line">创建用户名是lgj2 uid1004 用户组1001 备注-c是高杰大大   <span class="comment">#//其中-g指定gid需要指定已经存在的uid</span></span><br><span class="line">[root@lb01 ~]# useradd -u 1004 -g 1001 -c 高杰大大 lgj2</span><br><span class="line"></span><br><span class="line">-d创建用户lgj6并指定家目录（如果指定的家目录已经存在，如指定aaa（存在）为家目录，会报错目录家目录已经存在，但是还是会创建有lgj6用户，但是没有环境变量）</span><br><span class="line">[root@lb01 ~]# useradd lgj6 -d /root/aaa/lgj666</span><br><span class="line">[root@lb01 ~]# useradd lgj7 -M   不创建家目录</span><br><span class="line"></span><br><span class="line"><span class="comment">## 指定用户附加组</span></span><br><span class="line">[root@lb01 ~]# useradd lgj7 -G 1001,1005</span><br><span class="line">[root@lb01 ~]# useradd lgj8 -G lgj,lgj5    同样指定的组需要已存在</span><br><span class="line">[root@lb01 ~]# <span class="built_in">id</span> lgj7</span><br><span class="line">uid=1007(lgj7) gid=1007(lgj7) <span class="built_in">groups</span>=1007(lgj7),1001(lgj),1005(lgj5)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="⑤-修改用户信息-改）">⑤ 修改用户信息(改）</h4><table><thead><tr><th>用户</th><th>作用</th></tr></thead><tbody><tr><td>-u</td><td>指定用户的uid</td></tr><tr><td>-g</td><td>指定用户的gid，更换用户所在的主组（指定的组必须存在）</td></tr><tr><td>-c</td><td>修改备注信息</td></tr><tr><td>-d</td><td>修改用户家目录，修改/etc/passwd文件内容</td></tr><tr><td>-m</td><td>配合-d选项，修改完家目录后，迁移家目录</td></tr><tr><td>-s</td><td>修改用户登录的shell</td></tr><tr><td>-G</td><td>修改用户的附加组，会替换原来的附加组</td></tr><tr><td>-a</td><td>修改用户的附加组，配合-G使用，追加附加组</td></tr><tr><td>-L</td><td>锁定用户（封号）</td></tr><tr><td>-U</td><td>解锁用户（解封）</td></tr><tr><td>-l</td><td>修改用户名</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## user modify</span></span><br><span class="line">usermod [选项]... 用户名</span><br><span class="line"></span><br><span class="line">修改用户lgj2的uid为1002，gid为1000，备注信息是你好   <span class="comment">#指定的gid需要已存在</span></span><br><span class="line">[root@lb01 ~]# usermod  lgj2 -u 1002 -g 1000 -c 你好 </span><br><span class="line"></span><br><span class="line"><span class="comment">## 修改用户家目录 注意：不能只使用-d</span></span><br><span class="line">[root@localhost ~]# usermod zls000 -d /home/zls000家目录下的环境变量不会迁移过去</span><br><span class="line">[root@localhost ~]# usermod zls66 -m -d /opt/zls666   需要配合-m使用</span><br><span class="line"></span><br><span class="line">如果lgj2主要组不在lgj2里（通过usermod修改了），那么使用userdel删除用户的时候lgj2用户组不会被删除，会提醒lgj2用户的现在用户组不是lgj2的主要组</span><br><span class="line"></span><br><span class="line">[root@lb01 ~]# usermod lgj -G 0   修改lgj的附加组（覆盖原有的）</span><br><span class="line">[root@lb01 ~]# usermod lgj -aG 100，110   修改lgj的附加组（追加用户组）</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改用户登录的shell</span></span><br><span class="line">[root@lb01 ~]# usermod lgj -s /sbin/nologin</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#修改用户名</span></span><br><span class="line">[root@lb01 ~]# usermod lgj1 -l lgj2  </span><br><span class="line">如果修改完将提醒旧的邮箱lgj1将不属于lgj1用户了，var/spool/mail/</span><br></pre></td></tr></table></figure><h4 id="⑥-删除用户（删）">⑥ 删除用户（删）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># user delete</span></span><br><span class="line">userdel [选项]... 用户名</span><br><span class="line"><span class="comment">## 直接删除用户，类似于在/etc/passwd文件中把该用户行信息删除（家目录还在和所有用户相关文件都在）</span></span><br><span class="line">[root@localhost ~]# userdel abd</span><br><span class="line"><span class="comment">## 递归删除用户及用户所有相关文件</span></span><br><span class="line">[root@localhost ~]# userdel -r wyl</span><br><span class="line"></span><br><span class="line"><span class="comment">## 因为用户创建时没有创建家目录，所以会有提示，但是用户实际上还是被删除了</span></span><br><span class="line">[root@localhost ~]# userdel -r zls888</span><br><span class="line">userdel: zls888 home directory (/home/zls888) not found</span><br></pre></td></tr></table></figure><hr><h4 id="⑦-用户扩展知识">⑦ 用户扩展知识</h4><p>创建用户时候会以下两个文件作为参照物</p><p>/etc/login.defs</p><p>/etc/defaults/useradd</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 创建用户时，useradd命令需要读取的配置文件</span></span><br><span class="line">过滤不需要的空行</span><br><span class="line">[root@localhost ~]# grep -i <span class="string">&#x27;^[a-z]&#x27;</span> /etc/login.defs </span><br><span class="line">[root@localhost ~]# grep -Ev <span class="string">&#x27;^$|^#&#x27;</span> /etc/login.defs</span><br><span class="line"><span class="comment">## 用户存放邮件的目录</span></span><br><span class="line">MAIL_DIR/var/spool/mail</span><br><span class="line"><span class="comment">## 用户默认密码最长使用天数</span></span><br><span class="line">PASS_MAX_DAYS 99999</span><br><span class="line"><span class="comment">## 用户默认密码最短使用天数</span></span><br><span class="line">PASS_MIN_DAYS 0</span><br><span class="line"><span class="comment">## 密码最小长度5位数</span></span><br><span class="line">PASS_MIN_LEN 5</span><br><span class="line"><span class="comment">## 密码快过期后，提前7天提醒</span></span><br><span class="line">PASS_WARN_AGE 7</span><br><span class="line"><span class="comment">## 普通用户最小UID</span></span><br><span class="line">UID_MIN 1000</span><br><span class="line"><span class="comment">## 普通用户最大UID</span></span><br><span class="line">UID_MAX 60000</span><br><span class="line"><span class="comment">## 系统用户最小UID</span></span><br><span class="line">SYS_UID_MIN 201</span><br><span class="line"><span class="comment">## 系统用户最大UID</span></span><br><span class="line">SYS_UID_MAX 999</span><br><span class="line"><span class="comment">## 组最小ID</span></span><br><span class="line">GID_MIN 1000</span><br><span class="line"><span class="comment">## 组最大ID</span></span><br><span class="line">GID_MAX 60000</span><br><span class="line"><span class="comment">## 系统组最小ID</span></span><br><span class="line">SYS_GID_MIN 201</span><br><span class="line"><span class="comment">## 系统组最大ID</span></span><br><span class="line">SYS_GID_MAX 999</span><br><span class="line"><span class="comment">## 默认情况下，创建用户会创建该用户的家目录</span></span><br><span class="line">CREATE_HOME <span class="built_in">yes</span></span><br><span class="line"><span class="comment">## 创建用户家目录时，权限的umask为077，也就是用户家目录的目录权限为700</span></span><br><span class="line">UMASK 077</span><br><span class="line"><span class="comment">## 创建用户时，是否创建出用户的同名组 yes：创建 no：不创建</span></span><br><span class="line">USERGROUPS_ENAB <span class="built_in">yes</span></span><br><span class="line"><span class="comment">## 用户密码的加密算法</span></span><br><span class="line">ENCRYPT_METHOD SHA512</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 创建用户时，useradd命令需要读取的配置文件</span></span><br><span class="line">[root@localhost ~] <span class="built_in">cat</span> /etc/default/useradd</span><br><span class="line"><span class="comment">## 如果/etc/login.defs 中的USERGROUPS_ENAB是yes，那就不读取改行配置</span></span><br><span class="line"><span class="comment">## 如果/etc/login.defs 中的USERGROUPS_ENAB是no，那就走该行配置，把创建的用户加入gid为100的组</span></span><br><span class="line">GROUP=100</span><br><span class="line"><span class="comment">## 创建用户时，默认用户家目录放在/home下</span></span><br><span class="line">HOME=/home</span><br><span class="line"><span class="comment">## 用户账户有没有期限 -1表示不启用</span></span><br><span class="line">INACTIVE=-1</span><br><span class="line"><span class="comment">## 账号终止日期，不设置表示不启用</span></span><br><span class="line">EXPIRE=</span><br><span class="line"><span class="comment">## 用户登录时的shell</span></span><br><span class="line">SHELL=/bin/bash</span><br><span class="line"><span class="comment">## 用户家目录下的环境变量文件存放原始目录</span></span><br><span class="line">SKEL=/etc/skel</span><br><span class="line"><span class="comment">## 创建用户是否同时创建邮箱</span></span><br><span class="line">CREATE_MAIL_SPOOL=<span class="built_in">yes</span></span><br></pre></td></tr></table></figure><h4 id="⑧用户密码管理">⑧用户密码管理</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">passwd 用户名</span><br><span class="line"><span class="comment">## 默认修改当前登录用户的密码</span></span><br><span class="line">[root@localhost ~]# passwd</span><br><span class="line"></span><br><span class="line"><span class="comment">## 该命令只有超级用户可以执行</span></span><br><span class="line">[root@localhost ~]# passwd zls</span><br><span class="line"></span><br><span class="line"><span class="comment">## 普通用户只能修改自己的密码</span></span><br><span class="line">[zls@localhost ~]$ passwd</span><br><span class="line">Changing password <span class="keyword">for</span> user zls.</span><br><span class="line">Changing password <span class="keyword">for</span> zls.</span><br><span class="line">(current) UNIX password:</span><br><span class="line">原密码：</span><br><span class="line">新密码：</span><br><span class="line">确认密码：</span><br><span class="line"></span><br><span class="line"><span class="comment">## 免交互改密码</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;密码&#x27;</span>|passwd --stdin 用户名</span><br><span class="line">CMDB：资产管理系统</span><br><span class="line"></span><br><span class="line"><span class="comment">## 生成随机密码</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">echo</span> <span class="variable">$RANDOM</span>|<span class="built_in">md5sum</span>|<span class="built_in">cut</span> -c <span class="string">&#x27;1-10&#x27;</span></span><br><span class="line">be1e4bbb9b</span><br><span class="line">md5：校验文件完整性</span><br><span class="line"><span class="built_in">md5sum</span>：可以给一个字符串生成一段加密后的字符串</span><br><span class="line"><span class="comment"># -l：指定密码总长度</span></span><br><span class="line"><span class="comment"># -d：指定数字的个数</span></span><br><span class="line"><span class="comment"># -c：指定小写字母个数</span></span><br><span class="line"><span class="comment"># -C：指定大写字母个数</span></span><br><span class="line"><span class="comment"># -s：指定特殊符号个数</span></span><br><span class="line">[root@localhost ~]# mkpasswd -l 24 -d 3 -c 6 -C 7 -s 8</span><br><span class="line">%t[.xl5&amp;74<span class="string">&quot;LP&#x27;inQPr+_PWY</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><h3 id="3-用户组管理">3.用户组管理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##相关文件</span></span><br><span class="line">/etc/group</span><br><span class="line">/etc/gshadow</span><br><span class="line"><span class="comment">#group每列作用</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">head</span> -1 /etc/group</span><br><span class="line">root:x:0:zls444444,zls666</span><br><span class="line">第一列：组名</span><br><span class="line">第二列：组密码占位符</span><br><span class="line">第三列：组GID</span><br><span class="line">第四列：组中的附加成员</span><br><span class="line"></span><br><span class="line"><span class="comment">#gshadow每列作用</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">head</span> -1 /etc/gshadow</span><br><span class="line">root:::zls444444,zls666</span><br><span class="line">root:$6<span class="variable">$q0sHS</span>/5GA2D/ARX<span class="variable">$KlEkprHkTddlN9tTej7</span>/ONeMswVmIFASVnhTQMfwN.ue2hDTmqlqXhiM</span><br><span class="line">b6oBz8vDCQ/zBzDU2gS88j3pNoIXO.::zls444444,zls666</span><br><span class="line">第一列：组名</span><br><span class="line">第二列：组密码</span><br><span class="line">第三列：组管理员</span><br><span class="line">第四列：组中的附加成员</span><br></pre></td></tr></table></figure><h4 id="组相关命令">组相关命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#增</span></span><br><span class="line">groupadd [选项] 组名</span><br><span class="line"><span class="comment">## 创建组</span></span><br><span class="line">[root@localhost ~]# groupadd ooo</span><br><span class="line"><span class="comment">## 创建组并指定GID</span></span><br><span class="line">[root@localhost ~]# groupadd ppp -g 666</span><br><span class="line"></span><br><span class="line"><span class="comment">#改</span></span><br><span class="line"><span class="comment">## 修改组的gid</span></span><br><span class="line">[root@localhost ~]# groupmod ooo -g 888</span><br><span class="line"><span class="comment">## 修改组名</span></span><br><span class="line">[root@localhost ~]# groupmod ooo -n xxx</span><br><span class="line"></span><br><span class="line"><span class="comment">#删</span></span><br><span class="line">[root@localhost ~]# groupdel xxx</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置组密码</span></span><br><span class="line">[root@localhost ~]# gpasswd ppp</span><br><span class="line">Changing the password <span class="keyword">for</span> group ppp</span><br><span class="line">New Password</span><br><span class="line"></span><br><span class="line"><span class="comment">#切换组身份</span></span><br><span class="line">[root@localhost ~]# newgrp 组名</span><br></pre></td></tr></table></figure><h3 id="4-用户切换-提权">4.用户切换 &amp; 提权</h3><h4 id="①用户切换">①用户切换</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">su 切换用户，使用普通用户登录，然后使用su命令切换到root。</span><br><span class="line">优点：简单，方便</span><br><span class="line">缺点：需要知道root密码,不安全，切换到root没有日志审计功能</span><br><span class="line"></span><br><span class="line">su - 用户名 -c <span class="string">&#x27;命令&#x27;</span>（<span class="string">&#x27;touch 1.txt&#x27;</span>） 可以不切换用户但是以普通用户执行命令</span><br><span class="line"></span><br><span class="line">su - 用户名su 用户名，会少加载一个profile的全局变量</span><br><span class="line"><span class="comment">## 从root用户切换到其他用户，不需要输入密码</span></span><br><span class="line"><span class="comment">## 普通用户切换到其他用户，需要输入密码</span></span><br><span class="line"><span class="comment">## 加载顺序</span></span><br><span class="line">/etc/profile &gt; /etc/profile.d/1.sh &gt; /root/.bashrc &gt; /etc/bashrc</span><br><span class="line">/etc/profile</span><br><span class="line">/etc/profile.d/1.sh</span><br><span class="line">.bash_profile</span><br><span class="line">/root/.bashrc</span><br><span class="line">/etc/bashrc</span><br><span class="line">个人配置文件： ~/.bash_profile ~/.bashrc</span><br><span class="line">全局配置文件：/etc/profile /etc/profile.d/*.sh /etc/bashrc</span><br></pre></td></tr></table></figure><h4 id="②用户身份提权">②用户身份提权</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> 提权，当需要使用root权限时，进行提权，而无需切换至root用户。</span><br><span class="line">优点：安全，方便</span><br><span class="line">缺点：复杂</span><br><span class="line"></span><br><span class="line"><span class="comment">## 提权执行命令</span></span><br><span class="line">[zls@localhost ~]$ <span class="built_in">sudo</span> <span class="built_in">mkdir</span> /opt/abc</span><br><span class="line">We trust you have received the usual lecture from the <span class="built_in">local</span> System</span><br><span class="line">Administrator. It usually boils down to these three things:</span><br><span class="line"><span class="comment">#1) Respect the privacy of others.</span></span><br><span class="line"><span class="comment">#2) Think before you type.</span></span><br><span class="line"><span class="comment">#3) With great power comes great responsibility.</span></span><br><span class="line">[<span class="built_in">sudo</span>] password <span class="keyword">for</span> zls:</span><br><span class="line">zls is not <span class="keyword">in</span> the sudoers file. This incident will be reported.</span><br><span class="line"></span><br><span class="line"><span class="comment">## 颁发圣旨（提权配置文件）</span></span><br><span class="line">[root@localhost ~]# vim /etc/sudoers</span><br><span class="line">在里面添加lgj用户权限</span><br><span class="line">或者visudo命令添加，例如</span><br><span class="line"><span class="comment">## Allow root to run any commands anywhere</span></span><br><span class="line">root    ALL=(ALL)       ALL</span><br><span class="line">lgj     ALL=(ALL)       ALL</span><br><span class="line"></span><br><span class="line">上面注释的有别名，写上别名就可以设置权限，或者自己写某个命令的目录</span><br><span class="line">root    ALL=(ALL)       ALL</span><br><span class="line">lgj     ALL=(ALL)/usr/bin/mkdir（这里也可也把上面某个别名注释去掉，写上别名即可使用那个权限）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 设置命令别名</span></span><br><span class="line">Cmnd_Alias CREATE = /bin/mkdir,/bin/touch</span><br><span class="line"><span class="comment">## 用户提权方法：</span></span><br><span class="line">方法一：</span><br><span class="line"><span class="comment">### visudo不设置用户密码</span></span><br><span class="line">[root@localhost ~]# visudo</span><br><span class="line"></span><br><span class="line"><span class="comment">## Allow root to run any commands anywhere</span></span><br><span class="line">root ALL=(ALL) ALL</span><br><span class="line">zls ALL=(ALL) CREATE</span><br><span class="line">cls1 ALL=(ALL) NOPASSWD: ALL</span><br><span class="line"></span><br><span class="line">方法二：只要给用户加入wheel组中，就有<span class="built_in">sudo</span>权限</span><br><span class="line"><span class="comment">## Allows people in group wheel to run all commands</span></span><br><span class="line">%wheel ALL=(ALL) ALL</span><br><span class="line">%lgj ALL=(ALL) NOPASSWD: ALL</span><br><span class="line">[root@localhost ~]# useradd lhq1 -G wheel</span><br><span class="line"></span><br><span class="line"><span class="comment">## 切换成普通用户可以查看我这个用户能执行哪些命令</span></span><br><span class="line">[lhq2@localhost ~]$ <span class="built_in">sudo</span> -l</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="【4】权限管理">【4】权限管理</h2><h3 id="1-基本权限">1.基本权限</h3><p><img src="https://cos.lukme.top/Pic/image-20240413153515306.png" alt="image-20240413153515306"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">User</span><br><span class="line">Group</span><br><span class="line">Other</span><br><span class="line"><span class="comment">## 所属用户：属主</span></span><br><span class="line"><span class="comment">## 所属用户组：属组</span></span><br><span class="line"><span class="comment">## ugo权限</span></span><br><span class="line">//用户对资源来说, 有三种角色</span><br><span class="line">User(u): 属主用户(文件所有者)</span><br><span class="line">Group(g): 属组用户(包含组成员)</span><br><span class="line">Other(o): 其他用户</span><br></pre></td></tr></table></figure><table><thead><tr><th>字母</th><th>含义</th><th>对应权限</th></tr></thead><tbody><tr><td>r(read)</td><td>读取权限</td><td>4</td></tr><tr><td>w(write)</td><td>写入权限</td><td>2</td></tr><tr><td>x(execute)</td><td>执行权限</td><td>1</td></tr><tr><td>-(没有权限)</td><td>没有权限</td><td>0</td></tr></tbody></table><h4 id="①-修改权限命令">① 修改权限命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># change mode</span></span><br><span class="line"><span class="built_in">chmod</span> [选项] 权限 文件名</span><br><span class="line"><span class="comment">## 数字修改方式</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> 777 test1.txt</span><br><span class="line">[root@localhost ~]# ll test1.txt</span><br><span class="line">-rwxrwxrwx. 1 root root 0 Apr 12 17:01 test1.txt</span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> 700 test1.txt</span><br><span class="line">[root@localhost ~]# ll test1.txt</span><br><span class="line">-rwx------. 1 root root 0 Apr 12 17:01 test1.txt</span><br><span class="line"><span class="comment">## ugo修改方式</span></span><br><span class="line"><span class="comment"># 加权限</span></span><br><span class="line"><span class="comment">## u+权限 rwx</span></span><br><span class="line"><span class="comment">## g+权限 w</span></span><br><span class="line"><span class="comment">## o+权限 x</span></span><br><span class="line"><span class="comment">## a+权限 即a是all   可省略a +x +r +w +rw +rx +rwx +wx</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> g+xw test1.txt</span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> +x test1.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改ugo三个权限</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> u=rwx,g=w,o=x test1.txt 不如直接修改数字方式</span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> 721 test1.txt</span><br><span class="line"><span class="comment">## 递归修改目录权限</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> -R 222 zls121</span><br><span class="line">[root@localhost ~]# ll -d zls121/</span><br><span class="line">d-w--w--w-. 3 zls121 zls121 139 Apr 12 18:31 zls121/</span><br><span class="line">[root@localhost ~]# ll zls121/</span><br><span class="line">total 0</span><br><span class="line">--w--w--w-. 1 root root 0 Apr 12 18:30 1.txt</span><br><span class="line">--w--w--w-. 1 root root 0 Apr 12 18:30 2.txt</span><br><span class="line">--w--w--w-. 1 root root 0 Apr 12 18:30 3.txt</span><br><span class="line">--w--w--w-. 1 root root 0 Apr 12 18:30 4.txt</span><br><span class="line">[root@localhost ~]# ll zls121/zls1/</span><br><span class="line">total 0</span><br><span class="line">--w--w--w-. 1 root root 0 Apr 12 18:31 1.txt</span><br></pre></td></tr></table></figure><h4 id="②-权限对文件的影响">② 权限对文件的影响</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">当文件只有r权限时，可以查看内容，不能写入（文件所属用户可以使用vi强制保存），不能执行</span><br><span class="line">当文件只有w权限时，不能查看，只能写入（使用vi会覆盖文件内容，使用<span class="built_in">echo</span> &gt;&gt;可以追加），不能执行</span><br><span class="line">当文件只有x权限时，不能查看，不能写入，不能执行(都看不了无法执行)</span><br><span class="line"></span><br><span class="line">当文件只有rw权限时，可以查看，可以写入，不能执行</span><br><span class="line">当文件只有rx权限时，可以查看，不能写入，可以执行</span><br><span class="line">当文件只有wx权限时，不能看，能写入，不能执行</span><br><span class="line"></span><br><span class="line">当文件有rwx权限时，可以查看，可以写入，可以执行</span><br><span class="line"></span><br><span class="line"><span class="comment">##总结：x权限不能单独出现，需要配合r权限使用，也不能配合w（因为没有读取权限，就不知道文件内容，所以没法执行）</span></span><br></pre></td></tr></table></figure><h4 id="③-权限对目录的影响">③ 权限对目录的影响</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[zls@localhost ~]$ ll /opt/</span><br><span class="line"><span class="built_in">ls</span>: cannot open directory /opt/: Permission denied</span><br><span class="line">[zls@localhost ~]$ <span class="built_in">mkdir</span> /opt/zls</span><br><span class="line"><span class="built_in">mkdir</span>: cannot create directory ‘/opt/zls’: Permission denied</span><br><span class="line">[zls@localhost ~]$ ./opt</span><br><span class="line">-bash: ./opt: No such file or directory</span><br><span class="line">当目录权限为---时，不能查看，不能进入，不能拷贝，不能移动，不能创建，不能删除</span><br><span class="line">当目录权限为r时，能查看目录下的文件名（看不到文件属性），不能进入，不能拷贝，不能移动，不能创建，不能删除</span><br><span class="line">当目录权限为w时，不能查看，不能进入，不能拷贝，不能移动，不能创建，不能删除</span><br><span class="line">当目录权限为x时，不能查看，能进入，不能拷贝，不能移动，不能创建，不能删除</span><br><span class="line"></span><br><span class="line">当目录权限为rw时，能查看目录下的文件名（看不到文件属性），不能进入，不能拷贝，不能移动，不能创建，不能删除</span><br><span class="line">当目录权限为rx时，可以查看，能进入，能拷贝，不能移动，不能创建，不能删除</span><br><span class="line">当目录权限为wx时，不能查看，能进入，能拷贝，能移动，能创建，能删除</span><br><span class="line"><span class="comment">## 只有x权限才能cd进入</span></span><br><span class="line"><span class="comment">## 目录权限，必须两两组合使用</span></span><br><span class="line"><span class="comment">## 目录权限，必须组合x权限使用</span></span><br><span class="line"><span class="comment">## 目录权限，一般情况下，普通用户，只给rx，超级用户 rwx</span></span><br></pre></td></tr></table></figure><h3 id="2-特殊权限">2.特殊权限</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">普通用户可以修改自己的密码，在于passwd命令，该命令拥有特殊权限，SetUID，也就是咱们看到的，在属主的权限位的执行权限上是 s.当...普通用户使用passwd命令来更改自己的密码时，实际上是在用passwd命令的所有者，所有者是谁？就是root的身份在执行passwd命令</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">在 Linux 系统中，有三种特殊权限，分别是 SUID 权限、SGID 权限和 SBIT 权限：</span><br><span class="line"><span class="comment">#sUID 权限（Set User ID）：</span></span><br><span class="line">允许用户在执行可执行文件时以文件所有者的身份运行。具有 SUID 权限的文件在执行时将继承文件所有者的权限，而不是执行者自己的权限。这对于需要特定权限才能执行的程序非常有用。</span><br><span class="line"></span><br><span class="line"><span class="comment">#SGID 权限（Set Group ID）：</span></span><br><span class="line">SGID 权限类似于 SUID 权限，但是它是针对群组而不是用户。具有 SGID 权限的文件在执行时将继承文件所属群组的权限，而不是执行者所属群组的权限。</span><br><span class="line"></span><br><span class="line"><span class="comment">#SBIT 权限（Sticky Bit）：</span></span><br><span class="line">主要用于目录。当目录具有 SBIT 权限时，只有目录所有者、文件所有者和 root 用户才能删除或移动该目录中的文件。这可以防止其他用户意外删除或移动他人的文件</span><br></pre></td></tr></table></figure><h4 id="SUID">SUID</h4><p><img src="https://cos.lukme.top/Pic/image-20240415143350501.png" alt="image-20240415143350501"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 修改密码的命令</span></span><br><span class="line">[root@localhost ~]# passwd</span><br><span class="line"><span class="comment">## 修改密码的命令位置</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">which</span> passwd</span><br><span class="line">/usr/bin/passwd</span><br><span class="line"><span class="comment">## 用户密码信息存放文件</span></span><br><span class="line">[root@localhost ~]# ll /etc/shadow</span><br><span class="line">----------. 1 root root 641 Apr 12 19:50 /etc/shadow</span><br><span class="line"><span class="comment">## 用户密码信息存放文件</span></span><br><span class="line">文件权限：000</span><br><span class="line">所有用户，没有读取权限，写入权限，执行权限</span><br><span class="line"><span class="comment">## 一个普通用户，是否可以修改密码？</span></span><br><span class="line">只能修改自己的密码</span><br><span class="line"><span class="comment">## 问题：为什么一个普通用户，对/etc/shadow文件没有任何操作权限，却可以修改自己的密码？</span></span><br><span class="line"><span class="comment">## 原因：因为passwd命令，属主权限位上有个s权限</span></span><br><span class="line">[zls@localhost ~]$ ll /usr/bin/passwd</span><br><span class="line">-rwsr-xr-x. 1 root root 27832 Jun 10 2014 /usr/bin/passwd</span><br><span class="line">suid授权方式</span><br><span class="line">特殊权限——setgid</span><br><span class="line">授权方式</span><br><span class="line">如果在一个文件的属主权限位上，出现s权限，代表，该文件具有<span class="built_in">set</span> uid权限</span><br><span class="line"><span class="built_in">set</span> uid（suid）权限作用：让使用该文件的用户，以该文件的属主身份执行</span><br><span class="line"><span class="comment">## 因为passwd命令有suid权限，那么普通用户可以以root身份执行该命令，但是为啥不能修改其他用户密码</span></span><br><span class="line">原因：普通用户在执行passwd命令时，有个判断，就是该命令后面不能加任何参数</span><br></pre></td></tr></table></figure><p><strong>==suid授权方式==</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">suid数字权限：4000</span><br><span class="line"><span class="comment">## 数字权限授权</span></span><br><span class="line"><span class="built_in">chmod</span> 4xxx 文件名</span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> 4644 cheak_student.sh</span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> 4755 /bin/passwd</span><br><span class="line"><span class="comment">## ugo方式</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> u+s student.txt</span><br><span class="line">s：代表该文件的属主权限位上，本身有x（执行）权限</span><br><span class="line">S：代表该文件的属主权限位上，本身没有x（执行）权限</span><br><span class="line"><span class="comment">## 总结：</span></span><br><span class="line">1.让普通用户对可执行的二进制文件，临时拥有二进制文件的所属权限</span><br><span class="line">2.如果设置的二进制文件没有执行权限，那么suid的权限显示就是S</span><br><span class="line">3.特殊权限suid仅对二进制可执行程序有效，其他文件或目录则无效</span><br><span class="line">注意：suid极其危险，不信可以尝试对vim或者<span class="built_in">rm</span>命令进行设定suid</span><br></pre></td></tr></table></figure><h4 id="SGID">SGID</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">将目录设置为SGID后，如果在该目录下创建文件，都将与该目录的所属组保持一致</span><br><span class="line"><span class="comment">## 在文件的属组权限位上出现s权限</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">mkdir</span> /opt/test</span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> g+s /opt/test/</span><br><span class="line">[root@localhost ~]# ll /opt/test/ -d</span><br><span class="line">drwxr-sr-x. 2 root root 6 Apr 15 18:40 /opt/test/</span><br></pre></td></tr></table></figure><p><strong>==授权方式==</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">sgid数字权限：2000</span><br><span class="line"><span class="comment">## 数字权限授权</span></span><br><span class="line"><span class="built_in">chmod</span> 2xxx 文件名</span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> 2644 dir1</span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> 2755 dir1</span><br><span class="line">小练习</span><br><span class="line"><span class="comment">## ugo方式</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> g+s dir1</span><br><span class="line">s：代表该文件的属组权限位上，本身有x（执行）权限</span><br><span class="line">S：代表该文件的属组权限位上，本身没有x（执行）权限</span><br><span class="line"><span class="comment">## 总结：</span></span><br><span class="line">1.针对用户组权限位修改，用户创建的目录或文件所属组和该目录的所属组一致。</span><br><span class="line">2.当某个目录设置了sgid后，在该目录中新建的文件不在是创建该文件的默认所属组</span><br><span class="line">3.使用sgid可以使得多个用户之间共享一个目录的所有文件变得简单。</span><br></pre></td></tr></table></figure><h4 id="SBIT">SBIT</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sticky（SI TI KI）粘滞，目前只对目录有效，作用如下：</span><br><span class="line">普通用户对该目录拥有w和x权限，即普通用户可以在此目录中拥有写入权限，如果没有粘滞位，那么普通用户拥有w权限，就可以删除此目录下的所有文件，包括其他用户简历的文件。但是一旦被赋予了粘滞位，除了root可以删除所有文件，普通用户就算有w权限也只能删除自己建立的文件，而不能删除其他用户简历的文件。系统中存在的/tmp目录是经典的粘滞位目录，谁都有写权限，因此安全成问题，常常是木马第一手跳板。</span><br></pre></td></tr></table></figure><p><strong>==授权方式==</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">SBIT数字权限：1000</span><br><span class="line">suid=4000</span><br><span class="line">sgid=2000</span><br><span class="line">sbit=1000</span><br><span class="line">r=4</span><br><span class="line">w=2</span><br><span class="line">x=1</span><br><span class="line">-=0</span><br><span class="line"><span class="comment">## 数字权限授权</span></span><br><span class="line"><span class="built_in">chmod</span> 1xxx 文件名</span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> 1644 dir1</span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> 1755 dir1</span><br><span class="line"><span class="comment">## ugo方式</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chmod</span> o+t dir1</span><br><span class="line">t：代表该文件的其他用户权限位上，本身有x（执行）权限</span><br><span class="line">T：代表该文件的其他用户权限位上，本身没有x（执行）权限</span><br><span class="line"><span class="comment">## 总结：</span></span><br><span class="line">1.让多个用户都具有写权限的目录，并让每个用户只能删自己的文件（root除外）。</span><br><span class="line">2.特殊sticky目录表现在others的x位，用小t表示，如果没有执行权限是T</span><br><span class="line">3.一个目录即使它的权限为<span class="string">&quot;777&quot;</span>如果是设置了粘滞位，除了目录的属主和<span class="string">&quot;root&quot;</span>用户有权限删除，除此之</span><br><span class="line">外其他用户都不允许删除该目录下的所有文件</span><br></pre></td></tr></table></figure><h4 id="chattr权限">chattr权限</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">chattr只有root用户可以使用，用来修改文件系统的权限属性，建立凌驾于rwx基础权限之上的授权</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看有没有加chattr权限</span></span><br><span class="line">lsattr /etc/passwd </span><br><span class="line"></span><br><span class="line"><span class="comment"># 授权方式</span></span><br><span class="line">[root@localhost ~]# chattr +i /etc/passwd</span><br><span class="line">chattr命令格式：chattr [+-=][选项] 文件名或目录名</span><br><span class="line"><span class="comment">#i：不得任意更动文件或目录</span></span><br><span class="line"><span class="comment">#a：append可以追加，但无法更改文件内容</span></span><br><span class="line">[root@localhost ~]# chattr +a /etc/passwd /etc/shadow /etc/group /etc/gshadow</span><br></pre></td></tr></table></figure><h3 id="3-进程掩码umask">3.进程掩码umask</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">系统默认<span class="built_in">umask</span>为022，那么当我们创建一个目录时，正常情况下目录的权限应该是777，但是<span class="built_in">umask</span>表示要减</span><br><span class="line">去的值，所以新目录文件的权限应该是777-022=755。至于文件的权限也依次类推：666-022=644</span><br><span class="line"><span class="comment">## 查看系统默认umask</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">umask</span></span><br><span class="line">0022</span><br><span class="line"><span class="comment">## 目录权限使用777-umask</span></span><br><span class="line"><span class="comment">## 文件权限使用666-umask</span></span><br><span class="line">但是当<span class="built_in">umask</span>出现奇数位时，需要在该位上得到结果后+1</span><br><span class="line"><span class="comment">## umask 147</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">umask</span> 147</span><br><span class="line">[root@localhost ~]# <span class="built_in">mkdir</span> zls789 // 630</span><br><span class="line">[root@localhost ~]# <span class="built_in">touch</span> zls456 // 620</span><br><span class="line"><span class="comment">## 条件</span></span><br><span class="line">[root@localhost ~]# <span class="comment"># 1.uid &gt; 199</span></span><br><span class="line">[root@localhost ~]# <span class="comment"># 2.uid name = gid name</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> /etc/profile</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$UID</span> -gt 199 ] &amp;&amp; [ <span class="string">&quot;`/usr/bin/id -gn`&quot;</span> = <span class="string">&quot;`/usr/bin/id -un`&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">umask</span> 002</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">umask</span> 022</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment"># UID大于199 并且 用户名和组名子一样 此时 ： umask=002    (平台用户)</span></span><br><span class="line"><span class="comment"># UID小于199时 此时 umask=022（root用户）</span></span><br><span class="line"><span class="comment"># 用户名和组名不一样时 此时umask=022</span></span><br><span class="line"></span><br><span class="line">用户家目录<span class="built_in">umask</span> 077</span><br><span class="line">[root@lb01 ~]# <span class="built_in">cat</span> /etc/login.defs  </span><br><span class="line"></span><br><span class="line"><span class="comment">#查看文件的数字权限</span></span><br><span class="line"><span class="built_in">stat</span> -c a% 文件   </span><br><span class="line"><span class="built_in">stat</span> 文件</span><br></pre></td></tr></table></figure><h3 id="4-文件属主属组修改">4.文件属主属组修改</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## change owner</span></span><br><span class="line"><span class="built_in">chown</span> [选项] 属主:属组 文件名</span><br><span class="line"><span class="comment">## 修改属主和属组</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chown</span> zls:zls student.txt</span><br><span class="line">[root@localhost ~]# <span class="built_in">chown</span> root.root student.txt</span><br><span class="line"><span class="comment">## 属主不变，修改属组</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chown</span> :tls student.txt</span><br><span class="line"><span class="comment">## 属组不变，修改属主  只加一个默认就是修改属主</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chown</span> zls student.txt    </span><br><span class="line"></span><br><span class="line">一个用户，创建出来的文件，不一定权限属于他的主组，newgrp只要切换过组，在哪个组工作，创建出的文件属组就属于哪个组</span><br><span class="line"><span class="comment">## 修改目录属主和属组下面文件权限不变</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chown</span> www.www /code/</span><br><span class="line"><span class="comment">## 递归修改目录的属主和属组</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">chown</span> -R www.www /code/</span><br></pre></td></tr></table></figure><h2 id="【5】重定向">【5】重定向</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">将原本要输出到屏幕的数据信息，重新定向到指定的文件中。</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#使用重定向场景</span></span><br><span class="line">1.当屏幕输出的信息很重要，而且希望保存重要的信息时。</span><br><span class="line">2.后台执行中的程序，不希望他干扰屏幕正常的输出结果时。</span><br><span class="line">3.系统的例行命令，例如定时任务的执行结果，希望他可以存下来时。</span><br><span class="line">4.一些执行命令，我们已经知道他可能出现错误信息，想将他直接丢弃时。</span><br><span class="line">5.执行一个命令，可能报错和正确的输出并存，类似错误日志与标准正确日志需要分别输出至不同的文件。</span><br></pre></td></tr></table></figure><p>执行一个shell程序时通常会自动打开三个文件描述符</p><table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">文件描述符</th><th style="text-align:center">作用</th></tr></thead><tbody><tr><td style="text-align:center">标准输入 (stdin)</td><td style="text-align:center">0</td><td style="text-align:center">通常是键盘，也可以是其他文件或者命令的输出的内容可以作为标准输入</td></tr><tr><td style="text-align:center">标准输出 (stdout)</td><td style="text-align:center">1</td><td style="text-align:center">默认输出到屏幕</td></tr><tr><td style="text-align:center">错误输出 (stderr)</td><td style="text-align:center">2</td><td style="text-align:center">默认输出到屏幕</td></tr><tr><td style="text-align:center">文件名称 (filename)</td><td style="text-align:center">3+</td><td style="text-align:center"></td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">标准输入：stdin</span><br><span class="line">标准输出：stdout</span><br><span class="line">错误输出：stderr</span><br><span class="line">[root@localhost ~]# ll /dev/std*</span><br><span class="line">lrwxrwxrwx. 1 root root 15 Apr 16 15:52 /dev/stderr -&gt; /proc/self/fd/2</span><br><span class="line">lrwxrwxrwx. 1 root root 15 Apr 16 15:52 /dev/stdin -&gt; /proc/self/fd/0</span><br><span class="line">lrwxrwxrwx. 1 root root 15 Apr 16 15:52 /dev/stdout -&gt; /proc/self/fd/1</span><br><span class="line">文件描述符fd：一个命令或者程序在执行过程中，至少要打开4个文件描述符</span><br><span class="line">文件描述符0：标准输入</span><br><span class="line">文件描述符1：标准输出</span><br><span class="line">文件描述符2：错误输出</span><br><span class="line">文件描述符3+：文件名</span><br><span class="line"></span><br></pre></td></tr></table></figure><table><thead><tr><th>输入输出</th><th>符号</th></tr></thead><tbody><tr><td>标准输入重定向</td><td>&lt; 或 0&lt;</td></tr><tr><td>标准输出重定向</td><td>&gt; 或 1&gt;</td></tr><tr><td>错误输出重定向</td><td>2&gt;</td></tr></tbody></table><p>查看标准输入输出设备</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01 ~]# ll /dev/std*</span><br><span class="line">lrwxrwxrwx. 1 root root 15 Apr 16 08:16 /dev/stderr -&gt; /proc/self/fd/2错误输出</span><br><span class="line">lrwxrwxrwx. 1 root root 15 Apr 16 08:16 /dev/stdin -&gt; /proc/self/fd/0标准输入</span><br><span class="line">lrwxrwxrwx. 1 root root 15 Apr 16 08:16 /dev/stdout -&gt; /proc/self/fd/1标准输出</span><br></pre></td></tr></table></figure><table><thead><tr><th>类型</th><th>操作符</th><th>用途</th></tr></thead><tbody><tr><td>标准覆盖输出重定向</td><td>1&gt;或&gt;</td><td>将命令的执行结果输出到指定的文件中, 而不是直接显示在屏幕上</td></tr><tr><td>标准追加输出重定向</td><td>&gt;&gt;1或1&gt;&gt;</td><td>将命令执行的结果追加输出到指定文件</td></tr><tr><td>错误覆盖输出重定向</td><td>2&gt;</td><td>将程序的错误结果输出到执行的文件中，会覆盖源文件内容</td></tr><tr><td>错误追加输出重定向</td><td>2&gt;&gt;</td><td>将程序输出的错误结果以追加的方式输出到指定文件中，不会覆盖源文件</td></tr><tr><td>标准输入重定向</td><td>&lt;&lt;</td><td>将命令中接收输入的途径由默认的键盘更改为指定的文件</td></tr></tbody></table><h3 id="1-重定向使用">1.重定向使用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">标准输出追加重定向</span><br><span class="line">[root@lb01 ~]# <span class="built_in">echo</span> <span class="string">&quot;111&quot;</span> &gt;&gt;1.txt</span><br><span class="line">标准输出覆盖重定向</span><br><span class="line">[root@lb01 ~]# <span class="built_in">echo</span> <span class="string">&quot;111&quot;</span> &gt;1.txt</span><br><span class="line">错误输出覆盖重定向</span><br><span class="line">[root@lb01 ~]# nginx -V 2&gt;&gt; 1.txt</span><br><span class="line">错误输出追加重定向</span><br><span class="line">[root@lb01 ~]# nginx -V 2&gt; 1.txt</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>==1.错误输出和正确输出，都输出到同一个文件中==</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 方法一：</span></span><br><span class="line">[root@lb01 ~]# find /etc/ -<span class="built_in">type</span> d &gt; /tmp/1.<span class="built_in">log</span> 2&gt;/tmp/1.<span class="built_in">log</span></span><br><span class="line"><span class="comment">## 方法二：</span></span><br><span class="line">标准输出到2.<span class="built_in">log</span>文件里，错误输出到和标准输出一样位置</span><br><span class="line">[root@lb01 ~]# find /etc/ -<span class="built_in">type</span> d 1&gt; /tmp/2.<span class="built_in">log</span> 2&gt;&amp;1</span><br><span class="line">和上面相反</span><br><span class="line">[root@lb01 ~]# find /etc/ -<span class="built_in">type</span> d 2&gt; /tmp/6.<span class="built_in">log</span> 1&gt;&amp;2</span><br><span class="line"><span class="comment">## 方法三：</span></span><br><span class="line">[root@lb01 ~]# find /etc/ -<span class="built_in">type</span> d &amp;&gt; /tmp/11.<span class="built_in">log</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#将命令结果重定向到黑洞</span></span><br><span class="line">[zls@localhost ~]$ find /etc/ -<span class="built_in">type</span> d 1&gt; /tmp/6.<span class="built_in">log</span> 2&gt;/dev/null 标准输出到6.<span class="built_in">log</span>，错误输出到黑洞</span><br><span class="line">[zls@localhost ~]$ find /etc/ -<span class="built_in">type</span> d &amp;&gt;/dev/null  所有输出结果到黑洞</span><br></pre></td></tr></table></figure><p><strong>==2.标准输出和错误输出到两个文件==</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /etc -name <span class="string">&quot;*.conf&quot;</span> 1&gt;a 2&gt;b</span><br></pre></td></tr></table></figure><p><strong>==3.将标准输出和标准错误输出重定向到同一个文件, 混合输出==</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[zls@zls ~]$ find /etc -name <span class="string">&quot;*.conf&quot;</span> &amp;&gt;ab </span><br><span class="line">[zls@zls ~]$ find /etc -name <span class="string">&quot;*.conf&quot;</span> &gt;ab 2&amp;&gt;1</span><br><span class="line">[zls@zls ~]$ find /etc -name <span class="string">&quot;*.conf&quot;</span> &gt;ab 2&gt;&amp;1</span><br><span class="line">合并两个文件到一个文件</span><br><span class="line"><span class="built_in">cat</span> 1 2 &gt;3</span><br></pre></td></tr></table></figure><h3 id="2-输入重定向">2.输入重定向</h3><p>输入重定向，即原本从键盘等设备上获得的输入信息，重定向由命令的输出作为输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# cat &gt;1.txt等待键盘输入重定向到1.txt，Ctrl+c终止输入</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# cat &lt;&lt;EOF &gt; 1.txt   等待键盘输入，遇到Eof结束重定向到1.txt</span><br><span class="line">111</span><br><span class="line">222</span><br><span class="line">333</span><br><span class="line">EOF</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-两条命令重定向">3.两条命令重定向</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# (<span class="built_in">ls</span>;ifconfig) &gt; /tmp/1.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">## 将内容输出到文件，然后放后台执行 加个&amp;</span></span><br><span class="line">[root@localhost ~]# ping baidu.com &amp;&gt;/tmp/a.log &amp;</span><br><span class="line"></span><br><span class="line">扩展点: subshell</span><br><span class="line">[root@zls ~]# <span class="built_in">cd</span> /boot; <span class="built_in">ls</span></span><br><span class="line"><span class="comment">#subshell 中执行</span></span><br><span class="line">[root@zls ~]# (<span class="built_in">cd</span> /boot; <span class="built_in">ls</span>)</span><br><span class="line"><span class="comment">#如果不希望某些命令的执行对当前 shell 环境产生影响，请在subshell中执行</span></span><br></pre></td></tr></table></figure><h3 id="4-管道技术">4.管道技术</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">管道符作用：将管道符左边命令的标准输出交给管道符右边命令的标准输入来处理</span><br><span class="line">1）左边命令他得是标准输出 1&gt;</span><br><span class="line">2）右边命令必须有标准输入</span><br></pre></td></tr></table></figure><p><strong>==tee管道技术==</strong></p><p><img src="https://cos.lukme.top/Pic/image-20240416145607541.png" alt="image-20240416145607541"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">tee</span>相当于开个侧门输出重定向到某个文件，原理见上图</span><br><span class="line">[root@localhost ~]# <span class="built_in">echo</span> <span class="variable">$RANDOM</span>|<span class="built_in">tee</span> /dev/pts/3|passwd --stdin zls</span><br><span class="line">[root@localhost ~]# <span class="built_in">echo</span> <span class="variable">$RANDOM</span>|<span class="built_in">tee</span> /tmp/pass.txt|passwd --stdin zls</span><br><span class="line"><span class="comment">## -a：append 追加到文件中</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">echo</span> <span class="variable">$RANDOM</span>|<span class="built_in">tee</span> -a /tmp/pass.txt|passwd --stdin zls</span><br></pre></td></tr></table></figure><h3 id="5-xargs传参">5.xargs传参</h3><p><strong>xaras后面不识别别名</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">xargs将管道符前面命令的标准输出，当成结果，放到管道符右边xargs后面的命令的后面执行</span><br><span class="line">[root@localhost ~]# <span class="built_in">echo</span> &#123;1..10&#125;</span><br><span class="line">1 2 3 4 5 6 7 8 9 10</span><br><span class="line">[root@localhost ~]# <span class="built_in">echo</span> &#123;1..5&#125;|xargs -n1</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">[root@localhost ~]# <span class="built_in">echo</span> &#123;1..10&#125;|xargs -n2    -n2每两个一行 -n3每三个拍一行</span><br><span class="line">1 2</span><br><span class="line">3 4</span><br><span class="line">5 6</span><br><span class="line">7 8</span><br><span class="line">9 10</span><br><span class="line">[root@lb01 ~]# <span class="built_in">seq</span> 10|xargs -n3</span><br><span class="line">1 2 3</span><br><span class="line">4 5 6</span><br><span class="line">7 8 9</span><br><span class="line">10</span><br><span class="line"></span><br><span class="line"><span class="comment">## 找出来的文件拷贝到/tmp</span></span><br><span class="line">[root@localhost ~]# grep -rl <span class="string">&#x27;xxx&#x27;</span> ./|xargs <span class="built_in">cp</span> -t /tmp/</span><br><span class="line">[root@localhost ~]# grep -rl <span class="string">&#x27;xxx&#x27;</span> ./|xargs -I &#123;&#125; <span class="built_in">cp</span> &#123;&#125; /opt</span><br><span class="line"></span><br><span class="line">注意事项:</span><br><span class="line">1.在管道后面的命令，都不应该在写文件名</span><br><span class="line">2.在管道中只有标准输出才可以传递下一个命令, 标准错误输出会直接输出终端显示, 建议在使用管</span><br><span class="line">道前将标准错误输出重定向。</span><br><span class="line">例如: find /etc -name <span class="string">&quot;*.conf&quot;</span> 2&gt;/dev/null | grep rc</span><br><span class="line">3.有些命令不支持管道技术, 但是可以通过 xargs 来实现管道传递。</span><br><span class="line">例如: <span class="built_in">which</span> <span class="built_in">cat</span>|xargs ls-l</span><br><span class="line">例如: <span class="built_in">ls</span> |xargs <span class="built_in">rm</span> -rvf</span><br><span class="line">-I 选项作用是将前面输出结果打包到&#123;&#125;内</span><br><span class="line">例如: <span class="built_in">ls</span> |xargs <span class="built_in">cp</span> -rvft /tmp/ ==&gt; <span class="built_in">ls</span> | xargs -I &#123;&#125; <span class="built_in">cp</span> -rvf &#123;&#125; /tmp</span><br><span class="line">例如: <span class="built_in">ls</span> |xargs <span class="built_in">mv</span> -t /tmp/ ==&gt; <span class="built_in">ls</span> | xargs -I &#123;&#125; <span class="built_in">mv</span> &#123;&#125; /tmp</span><br></pre></td></tr></table></figure><table><thead><tr><th>xargs选项</th><th>作用</th></tr></thead><tbody><tr><td>-a</td><td>设置从文件中读取数据</td></tr><tr><td>-d</td><td>设置自定义定界符</td></tr><tr><td>-l</td><td>设置替换字符串</td></tr><tr><td>-n</td><td>设置多行输出</td></tr><tr><td>-p</td><td>执行命令前询问用户是否确认</td></tr><tr><td>-r</td><td>如果输入数据为空，则不执行</td></tr><tr><td>-s</td><td>设置每条命令最大字符数</td></tr><tr><td>-t</td><td>显示xargs执行的命令</td></tr></tbody></table><h2 id="【6】文件解压缩">【6】文件解压缩</h2><h3 id="1-常见压缩包类型">1.常见压缩包类型</h3><table><thead><tr><th>格式</th><th>压缩工具</th></tr></thead><tbody><tr><td>.zip</td><td>zip压缩工具</td></tr><tr><td>.gz</td><td>gzip压缩工具，只能压缩文件，会删除源文件（通常配合tar使用）</td></tr><tr><td>bz2</td><td>bzip2压缩工具，只能压缩文件，会删除源文件（通常配合tar使用）</td></tr><tr><td>.tar.gz</td><td>先使用tar命令归档打包，然后使用gzip压缩</td></tr><tr><td>tar.bz2</td><td>先使用tar命令归档打包，然后使用bzip2压缩</td></tr></tbody></table><h3 id="2-压缩解压命令—gzip">2.压缩解压命令—gzip</h3><p>注意：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">使用打包压缩命令，最好到需要被打包目录的上级目录,</span><br><span class="line">解压时，-C最好不要指定/目录 可能会覆盖/下某些原文件</span><br><span class="line">[root@localhost ~]# tar xf mysql.tgz -C /  </span><br><span class="line">/etc/profile</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 压缩文件</span></span><br><span class="line">语法：gzip 文件名</span><br><span class="line">[root@localhost ~]# gzip file1</span><br><span class="line">[root@driver-zeng ~]# <span class="built_in">echo</span> 22222|gzip &gt; zls.txt.gz</span><br><span class="line"></span><br><span class="line"><span class="comment">## 解压    -d：解压文件</span></span><br><span class="line"></span><br><span class="line">[root@localhost ~]# gzip -d file1.gz</span><br><span class="line"><span class="comment">## 查看文件类型</span></span><br><span class="line">[root@localhost ~]# file file2.gz</span><br><span class="line">file2.gz: gzip compressed data, was <span class="string">&quot;file2&quot;</span>, from Unix, last modified: Thu Apr</span><br><span class="line">18 17:33:26 2024</span><br><span class="line"></span><br><span class="line"><span class="comment">## 可以直接查看压缩包中文件的内容</span></span><br><span class="line">[root@localhost ~]# zcat file4.gz</span><br><span class="line">xxx</span><br><span class="line"><span class="comment">## 特点：</span></span><br><span class="line">1.压缩包后缀.gz</span><br><span class="line">2.压缩后源文件不存在</span><br><span class="line">3.压缩率很高</span><br><span class="line">4.缺陷就是，不能压缩目录，不能压缩多个文件</span><br><span class="line">5.解压后，压缩包不在了，源文件出来了</span><br><span class="line">6.可以直接使用命令查看压缩包中文件的内容</span><br></pre></td></tr></table></figure><h3 id="3-压缩解压命令—zip">3.压缩解压命令—zip</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 安装</span></span><br><span class="line">[root@localhost ~]# yum install -y zip</span><br><span class="line"></span><br><span class="line"><span class="comment">## 语法：</span></span><br><span class="line">zip 包名 文件名...</span><br><span class="line"></span><br><span class="line"><span class="comment">## 压缩文件</span></span><br><span class="line">[root@localhost ~]# zip file1.zip file1</span><br><span class="line"></span><br><span class="line"><span class="comment">## 压缩多个文件</span></span><br><span class="line">[root@localhost ~]# zip file.zip file1 file10</span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看文件类型</span></span><br><span class="line">[root@localhost ~]# file file.zip</span><br><span class="line">file.zip: Zip archive data, at least v1.0 to extract</span><br><span class="line"></span><br><span class="line"><span class="comment">## 压缩目录    -r 包含目录内容一起压缩</span></span><br><span class="line">[root@localhost ~]# zip -r dir1.zip dir1/</span><br><span class="line"></span><br><span class="line"><span class="comment">## 指定路径压缩    压缩test下所有文件到tmp下，文件名是test.zip</span></span><br><span class="line">[root@localhost ~]# zip -r /tmp/test.zip <span class="built_in">test</span>/</span><br><span class="line"></span><br><span class="line"><span class="comment">## 解压</span></span><br><span class="line">[root@localhost ~]# yum install -y unzip</span><br><span class="line">[root@localhost opt]# unzip dir1.zip</span><br><span class="line">[root@localhost tmp]# unzip /opt/dir1.zip解压指定目录文件</span><br><span class="line"><span class="comment">## 查看包里有哪些文件或目录</span></span><br><span class="line">[root@localhost <span class="built_in">local</span>]# unzip -l /opt/dir1.zip</span><br><span class="line">Archive: /opt/dir1.zip</span><br><span class="line">Length Date Time Name</span><br><span class="line">--------- ---------- ----- ----</span><br><span class="line">0 04-18-2024 18:40 dir1/</span><br><span class="line">26 04-18-2024 18:40 dir1/file1.gz</span><br><span class="line">27 04-18-2024 18:40 dir1/file10.gz</span><br><span class="line">26 04-18-2024 18:40 dir1/file2.gz</span><br><span class="line">26 04-18-2024 18:40 dir1/file3.gz</span><br><span class="line">26 04-18-2024 18:40 dir1/file4.gz</span><br><span class="line">261 11 files</span><br><span class="line"><span class="comment">## 特点：</span></span><br><span class="line">1.压缩包后缀.zip</span><br><span class="line">2.压缩后源文件存在</span><br><span class="line">3.压缩率很高</span><br><span class="line">4.默认情况下不能压缩目录，能压缩多个文件，压缩目录需要选项</span><br><span class="line">5.压缩时可以指定压缩包的路径</span><br><span class="line">6.解压后，压缩包还在，源文件出来了</span><br><span class="line">7.不可以直接使用命令查看压缩包中文件的内容</span><br></pre></td></tr></table></figure><h3 id="4-压缩解压命令—tar">4.压缩解压命令—tar</h3><table><thead><tr><th>选项</th><th>作用</th></tr></thead><tbody><tr><td>c</td><td>创建归档文件</td></tr><tr><td>f</td><td>指定归档文件的包名</td></tr><tr><td>z</td><td>使用gzip来压缩归档后的文件，xf解压.tar.gz包</td></tr><tr><td>x</td><td>对归档文件进行解压</td></tr><tr><td>v</td><td>显示过程</td></tr><tr><td>t</td><td>查看压缩包中的所有文件和目录</td></tr><tr><td>X</td><td>可以排除多个不想打包的文件，指定文件名   (把不想打包的文件名写入一个文件，X指定这个文件就行，若排除的文件在嵌套目录，则把相对路径写上即可)</td></tr><tr><td>h</td><td>打包软链接的源文件</td></tr><tr><td></td><td></td></tr><tr><td>J</td><td>使用xz压缩归档后的文件，xf 解压.tar.xz包</td></tr><tr><td>-P</td><td>使用绝对路径打包</td></tr><tr><td>j</td><td>使用bzip2压缩归档后的文件，xf解压 .tar.bz2包</td></tr><tr><td>-C</td><td>解压到指定目录</td></tr><tr><td>–exclude</td><td>排除不想要的文件</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## tar命令本身只是一个归档命令</span></span><br><span class="line"><span class="comment">## 语法：</span></span><br><span class="line">tar [选项] 包名 文件...</span><br><span class="line">[root@localhost ~]# file abc.tar</span><br><span class="line">abc.tar: POSIX tar archive (GNU)</span><br><span class="line">[root@localhost ~]# file nginx-1.22.1.tar.gz</span><br><span class="line">nginx-1.22.1.tar.gz: gzip compressed data, from Unix, last modified: Wed Oct 19</span><br><span class="line">16:02:28 2022</span><br><span class="line"><span class="comment">## 文件归档</span></span><br><span class="line">[root@localhost ~]# tar cf dir1.tar dir1</span><br><span class="line"><span class="comment">## 文件归档并指定路径</span></span><br><span class="line">[root@localhost ~]# tar cf /tmp/dir1_xxx.tar dir1</span><br><span class="line"><span class="comment">## 压缩目录</span></span><br><span class="line">[root@localhost ~]# tar zcf dir1.tgz dir1/</span><br><span class="line"><span class="comment">## 压缩并显示过程</span></span><br><span class="line">[root@localhost ~]# tar zcvf dir1.tgz dir1/</span><br><span class="line"><span class="comment">## 解压</span></span><br><span class="line">[root@localhost ~]# tar zxf dir1.tgz</span><br><span class="line"><span class="comment">## 查看</span></span><br><span class="line">[root@localhost ~]# tar tf nginx-1.22.1.tar.gz</span><br><span class="line"><span class="comment">## 解压到指定目录</span></span><br><span class="line">[root@localhost ~]# tar zxf nginx-1.22.1.tar.gz -C /tmp/</span><br><span class="line"><span class="comment">## 打包时排除不想要的文件</span></span><br><span class="line">[root@localhost tmp]# tar zcf root2.tgz --exclude=file6 --exclude=file7 /root</span><br><span class="line">1.归档包后缀.tar</span><br><span class="line">2.归档后源文件存在</span><br><span class="line">3.没有压缩率</span><br><span class="line">4.默认情况下能归档目录，能归档多个文件</span><br><span class="line">5.归档时可以指定归档的路径</span><br><span class="line">6.解压后，压缩包还在，源文件出来了</span><br><span class="line">7.不可以直接使用命令查看压缩包中文件的内容</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#移动海量小文件使用tar</span></span><br><span class="line">[root@localhost abc]# tar czf - ./ | tar xzf - -C /tmp</span><br></pre></td></tr></table></figure><h2 id="【7】软件安装">【7】软件安装</h2><h3 id="1-rpm包">1.rpm包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># RPM全称 RPM Package Manager 缩写，由红帽开发用于软件包的安装，升级卸载与查询</span></span><br></pre></td></tr></table></figure><p><strong>==RPM包名==</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tree-  1.6.0  -  10        . el7      .     x86_64    .rpm</span><br><span class="line">包名   版本号   发布了10次   适用于7系系统    系统架构   文件后缀</span><br></pre></td></tr></table></figure><table><thead><tr><th>分类</th><th>安装</th><th>版本</th></tr></thead><tbody><tr><td>rpm包（需要安装）</td><td>预先编译打包,安装简单</td><td>软件版本偏低</td></tr><tr><td>源码包（需要编译、安装）</td><td>手动编译打包,安装繁琐</td><td>软件版本最新</td></tr><tr><td>二进制包(绿色免安装软件)</td><td>解压即可使用, 安装简单</td><td>版本跟官方保持一致，不能修改源码</td></tr></tbody></table><p>##注意: 不管是源码包，还是rpm包,安装时都可能会有依赖关系</p><h4 id="1-获取RPM包">1. 获取RPM包</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">1.RedHat光盘或官方网站 （通过挂载的方式访问）</span><br><span class="line">[root@localhost ~]# mount /dev/cdrom /mnt    mount挂载虚拟机设置镜像保持连接状态</span><br><span class="line">mount: /dev/sr0 is write-protected, mounting read-only</span><br><span class="line">[root@localhost ~]# <span class="built_in">ls</span> -1 /mnt/Packages/|<span class="built_in">wc</span> -l     <span class="built_in">ls</span> -1查看内容竖向排列</span><br><span class="line">4022</span><br><span class="line"><span class="built_in">df</span> -h   可以查看挂载情况</span><br><span class="line">[root@lb01 ~]# <span class="built_in">df</span> -h</span><br><span class="line">Filesystem      Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/sda3        19G  1.6G   18G   9% /</span><br><span class="line">devtmpfs        476M     0  476M   0% /dev</span><br><span class="line">tmpfs           487M     0  487M   0% /dev/shm</span><br><span class="line">tmpfs           487M  7.6M  479M   2% /run</span><br><span class="line">tmpfs           487M     0  487M   0% /sys/fs/cgroup</span><br><span class="line">/dev/sda1       497M  120M  378M  25% /boot</span><br><span class="line">tmpfs            98M     0   98M   0% /run/user/0</span><br><span class="line">/dev/sr0        4.3G  4.3G     0 100% /mnt</span><br><span class="line"></span><br><span class="line">2.RPM包官网 http://rpmfind.net/</span><br><span class="line">以后报错中，libCHARSET3-samba4.so .so结尾的文件不存在，需要安装，不知道输入哪个RPM包，去RPM官网查询即可</span><br><span class="line"></span><br><span class="line"><span class="comment">## 各大服务的官网</span></span><br><span class="line">mysql：https://www.mysql.com/</span><br><span class="line">nginx：https://www.nginx.org/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 各大镜像站（yum仓库，yum源）：</span></span><br><span class="line">阿里云：https://developer.aliyun.com/mirror/</span><br><span class="line">网易镜像站：https://mirrors.163.com/</span><br><span class="line">华为源：https://mirrors.huaweicloud.com/</span><br><span class="line">清华源：https://mirrors.tuna.tsinghua.edu.cn/</span><br><span class="line">中科大：https://mirrors.ustc.edu.cn/</span><br></pre></td></tr></table></figure><h4 id="2-RPM包管理">2.RPM包管理</h4><h5 id="①-安装">① 安装</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 语法：</span></span><br><span class="line">rpm [选项] 安装包名</span><br><span class="line">i：install 安装</span><br><span class="line">v：显示安装过程</span><br><span class="line">h：显示进度条</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">--<span class="built_in">test</span>：检测是否能安装成功</span><br><span class="line">--force：强制安装</span><br><span class="line">--nodeps：忽略依赖关系</span><br><span class="line"></span><br><span class="line"><span class="comment">## 本地安装    需要挂载镜像进入到Packages文件里</span></span><br><span class="line">[root@localhost Packages]# rpm -i tree-1.6.0-10.el7.x86_64.rpm  </span><br><span class="line">[root@localhost ~]# rpm -ivh /mnt/Packages/unzip-6.0-19.el7.x86_64.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment">## 远程安装</span></span><br><span class="line">[root@localhost Packages]# rpm -i https://mirrors.aliyun.com/centos/7.9.2009/os/x86_64/Packages/tree-1.6.0-10.el7.x86_64.rpm</span><br><span class="line">[root@localhost Packages]# rpm -ivh https://mirrors.aliyun.com/centos/7.9.2009/os/x86_64/Packages/tree-1.6.0-10.el7.x86_64.rpm     </span><br><span class="line">显示进度条和安装过程</span><br></pre></td></tr></table></figure><h5 id="②-查询">② 查询</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">-q： query 查询</span><br><span class="line">-qa：查询系统内所有安装过的包</span><br><span class="line">-ql：查询软件包安装完后，配置文件、帮助文档、程序....的所在目录（[# rpm -ql nginx）</span><br><span class="line">-qc：查询软件安装后配置文件  conf配置文件（# rpm -qc nginx）</span><br><span class="line">-qf：逆向查询，根据文件名，可以查出该文件是安装了哪个RPM包   （需要完整目录）（# rpm -qf /usr/sbin/nginx）</span><br><span class="line"><span class="comment">## 这个文件/etc/redhat-release属于哪个RPM包，该包的相关信息打印出来</span></span><br><span class="line">1.[root@localhost ~]# rpm -qi $(rpm -qf /etc/redhat-release)</span><br><span class="line">2.[root@localhost ~]# rpm -qf /etc/redhat-release|xargs rpm -qi</span><br><span class="line">3.[root@localhost ~]# rpm -qif /etc/redhat-release</span><br><span class="line"></span><br><span class="line">----</span><br><span class="line"><span class="comment">## -q --scripts 查询安装时要执行的脚本</span></span><br><span class="line">[root@localhost ~]# rpm -q --scripts nginx</span><br><span class="line">----</span><br><span class="line"></span><br><span class="line">-qi：查看已安装安装包的详细信息   (后面跟包名)</span><br><span class="line">-qd：查看帮助文档位置</span><br><span class="line">-qip：可以查看未安装的包详细信息  前提：得有这个包</span><br><span class="line">[root@localhost ~]# rpm -qip /mnt/Packages/zip-3.0-11.el7.x86_64.rpm</span><br><span class="line">-qlp：可以查看未安装的包，安装后会产生哪些文件</span><br><span class="line">[root@localhost ~]# rpm -qlp /mnt/Packages/zip-3.0-11.el7.x86_64.rpm</span><br><span class="line">/usr/bin/zip</span><br><span class="line">/usr/bin/zipcloak</span><br><span class="line">/usr/bin/zipnote</span><br><span class="line">/usr/bin/zipsplit</span><br><span class="line">/usr/share/doc/zip-3.0</span><br><span class="line">/usr/share/doc/zip-3.0/CHANGES</span><br><span class="line">/usr/share/doc/zip-3.0/LICENSE</span><br><span class="line"></span><br><span class="line"><span class="comment">## -q后面接包名</span></span><br><span class="line">[root@localhost ~]# rpm -q tree // 安装过了</span><br><span class="line">tree-1.6.0-10.el7.x86_64</span><br><span class="line">[root@localhost ~]# rpm -q tree // 没有安装</span><br><span class="line">package tree is not installed</span><br><span class="line"><span class="comment">## 过滤查询是否安装</span></span><br><span class="line">[root@localhost ~]# rpm -qa|grep tree</span><br><span class="line">tree-1.6.0-10.el7.x86_64</span><br><span class="line">[root@localhost ~]# rpm -qa|grep mysql</span><br><span class="line">[root@localhost ~]# rpm -qa|grep nginx</span><br><span class="line"><span class="comment">## 查看详细信息</span></span><br><span class="line">[root@localhost ~]# rpm -qi tree</span><br><span class="line">Name : tree</span><br><span class="line">Version : 1.6.0</span><br><span class="line">Release : 10.el7</span><br><span class="line">Architecture: x86_64</span><br><span class="line">Install Date: Fri 19 Apr 2024 08:05:31 PM CST</span><br><span class="line">Group : Applications/File</span><br><span class="line">Size : 89505</span><br><span class="line">License : GPLv2+</span><br><span class="line">Signature : RSA/SHA256, Fri 04 Jul 2014 01:36:46 PM CST, Key ID</span><br><span class="line">24c6a8a7f4a80eb5</span><br><span class="line">Source RPM : tree-1.6.0-10.el7.src.rpm</span><br><span class="line">Build Date : Tue 10 Jun 2014 03:28:53 AM CST</span><br><span class="line">Build Host : worker1.bsys.centos.org</span><br><span class="line">Relocations : (not relocatable)</span><br><span class="line">Packager : CentOS BuildSystem &lt;http://bugs.centos.org&gt;</span><br><span class="line">Vendor : CentOS</span><br><span class="line">URL : http://mama.indstate.edu/users/ice/tree/</span><br><span class="line">Summary : File system tree viewer</span><br><span class="line">Description :</span><br><span class="line">The tree utility recursively displays the contents of directories <span class="keyword">in</span> a</span><br><span class="line">tree-like format. Tree is basically a UNIX port of the DOS tree</span><br><span class="line">utility.</span><br><span class="line"><span class="comment">## 查找安装后程序的配置文件</span></span><br><span class="line">[root@localhost ~]# rpm -qc nginx</span><br><span class="line">/etc/logrotate.d/nginx</span><br><span class="line">/etc/nginx/fastcgi.conf</span><br><span class="line">/etc/nginx/fastcgi.conf.default</span><br><span class="line">/etc/nginx/fastcgi_params</span><br><span class="line">/etc/nginx/fastcgi_params.default</span><br><span class="line">/etc/nginx/koi-utf</span><br><span class="line">/etc/nginx/koi-win</span><br><span class="line">/etc/nginx/mime.types</span><br><span class="line">/etc/nginx/mime.types.default</span><br><span class="line">/etc/nginx/nginx.conf</span><br><span class="line">/etc/nginx/nginx.conf.default</span><br><span class="line">/etc/nginx/scgi_params</span><br><span class="line">/etc/nginx/scgi_params.default</span><br><span class="line">/etc/nginx/uwsgi_params</span><br><span class="line">/etc/nginx/uwsgi_params.default</span><br><span class="line">/etc/nginx/win-utf</span><br><span class="line"><span class="comment">## 逆向查询</span></span><br><span class="line">[root@localhost ~]# rpm -qf /etc/hosts</span><br><span class="line">setup-2.8.71-10.el7.noarch</span><br><span class="line">[root@localhost ~]# rpm -qf /usr/sbin/ifconfig</span><br><span class="line">net-tools-2.0-0.25.20131004git.el7.x86_64</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="③卸载">③卸载</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 卸载</span></span><br><span class="line">[root@localhost ~]# rpm -e tree</span><br></pre></td></tr></table></figure><h5 id="④升级RPM包">④升级RPM包</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-U 如果老版本不存在，就全新安装，如果存在有新版即升级</span><br><span class="line">-f 老版本必须存在</span><br><span class="line">[root@localhost ~]# rpm -fvh tree-1.8.0-2.mga8.x86_64.rpm</span><br><span class="line">[root@localhost ~]# rpm -Uvh tree-1.8.0-2.mga8.x86_64.rpm</span><br></pre></td></tr></table></figure><p><strong>==总结==</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">缺陷</span><br><span class="line">1.rpm包管理无法解决包与包之间的依赖关系</span><br><span class="line">2.rpm包的查询，基本上都需要已经安装过的包</span><br><span class="line"></span><br><span class="line">优点：</span><br><span class="line">1.不需要网络安装</span><br><span class="line">2.安装速度快</span><br></pre></td></tr></table></figure><h3 id="2-yum工具">2.yum工具</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">1.联网获取软件</span><br><span class="line">2.基于RPM管理</span><br><span class="line">3.自动解决依赖（前提：1.yum仓库中必须有该依赖包 2.版本要一致）</span><br><span class="line">4.命令简单好记</span><br><span class="line">5.生产最佳实践</span><br><span class="line"></span><br><span class="line">yum是RedHat以及CentOS中的软件包管理器，能够通过互联网下载以rpm结尾的包，并且安装，并可以自动</span><br><span class="line">处理依赖性关系，无需繁琐的一次次下载安装。</span><br><span class="line">yum仓库 | yum源</span><br><span class="line"><span class="comment"># CentOS7和7之前所有版本：YUM</span></span><br><span class="line">yum install -y xx</span><br><span class="line"><span class="comment"># CentOS8以后：dnf</span></span><br><span class="line">dnf install xxx</span><br><span class="line"><span class="comment">## 系统自带的基础包仓库</span></span><br><span class="line">Base源</span><br><span class="line"><span class="comment">## 更换yum源，一定要至少换两个源</span></span><br><span class="line">- Base源 基础包</span><br><span class="line">- epel源 扩展包</span><br></pre></td></tr></table></figure><p><strong>==配置yum源==</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">各大镜像源：</span><br><span class="line">阿里云：https://opsx.alibaba.com/mirror</span><br><span class="line">清华源：https://mirrors.tuna.tsinghua.edu.cn/</span><br><span class="line">163源：http://mirrors.163.com/</span><br><span class="line">华为源：https://mirrors.huaweicloud.com/</span><br><span class="line">科大源：http://mirrors.ustc.edu.cn/</span><br></pre></td></tr></table></figure><p><strong>==配置Base源==</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01 ~]# ll /etc/yum.repos.d/    yum源配置文件</span><br><span class="line"><span class="comment">## 注意：所有的配置文件，必须以repo结尾</span></span><br><span class="line">wget</span><br><span class="line">-O：指定保存的路径和文件名</span><br><span class="line">https://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line">curl -o = wget -O</span><br><span class="line"><span class="comment">## 换源步骤</span></span><br><span class="line">1）清空/etc/yum.repos.d下面所有源配置文件（<span class="built_in">mv</span> <span class="built_in">rm</span>）</span><br><span class="line">[root@localhost ~]# <span class="built_in">mv</span> /etc/yum.repos.d/*.repo /tmp/</span><br><span class="line">[root@localhost ~]# gzip /etc/yum.repos.d/*</span><br><span class="line">2）下载国内各大镜像站源</span><br><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line">curl -o /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="①-换源">① 换源</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##使用镜像站源</span></span><br><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-vault-8.5.2111.repo</span><br><span class="line"></span><br><span class="line"><span class="comment">## 其他镜像站换源方式   （缺陷：1.麻烦2.如果不是默认的官方base源，这个替换就不成立）</span></span><br><span class="line">sed -e <span class="string">&#x27;s|^mirrorlist=|#mirrorlist=|g&#x27;</span> \</span><br><span class="line">    -e <span class="string">&#x27;s|^#baseurl=http://mirror.centos.org/centos|baseurl=https://mirrors.tuna.tsinghua.edu.cn/centos|g&#x27;</span> \</span><br><span class="line">    -i.bak \</span><br><span class="line">    /etc/yum.repos.d/CentOS-*.repo</span><br></pre></td></tr></table></figure><p><strong>==更换epel源==</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# curl -o /etc/yum.repos.d/epel.repo https://mirrors.aliyun.com/repo/epel-7.repo</span><br><span class="line">[root@localhost ~]# ll /etc/yum.repos.d/</span><br><span class="line">total 8</span><br><span class="line">-rw-r--r--. 1 root root 1759 Apr 22 18:55 CentOS-Base.repo</span><br><span class="line">-rw-r--r--. 1 root root 664 Apr 22 19:08 epel.repo</span><br></pre></td></tr></table></figure><h4 id="②-yum管理命令">② yum管理命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#根据命令搜索对应的包名</span></span><br><span class="line">[root@yum_repo ~]# yum provides pstree    注意：yum provides命令只能用于已经安装的软件包</span><br><span class="line">[root@yum_repo ~]# yum search pstree</span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看我当前配置的所有仓库中的可以安装的包</span></span><br><span class="line">[root@localhost ~]# yum list</span><br><span class="line">[root@localhost ~]# yum list|grep net-tools</span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看仓库中指定包的详细信息</span></span><br><span class="line">[root@localhost ~]# yum info 包名</span><br><span class="line">[root@localhost ~]# yum info tree</span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看当前所有可用仓库</span></span><br><span class="line">[root@lb01 yum.repos.d]# yum repolist</span><br><span class="line">Loaded plugins: fastestmirror</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line"><span class="comment">## 仓库ID名字 .repo文件中 [仓库ID]## 仓库描述信息 .repo文件中的name=## 状态：该仓库中有多少rpm包</span></span><br><span class="line">repo <span class="built_in">id</span>                               repo name                                                          status</span><br><span class="line">base/7/x86_64                         CentOS-7 - Base - mirrors.huaweicloud.com                          10,072</span><br><span class="line">extras/7/x86_64                       CentOS-7 - Extras - mirrors.huaweicloud.com                           526</span><br><span class="line">updates/7/x86_64                      CentOS-7 - Updates - mirrors.huaweicloud.com                        5,802</span><br><span class="line">repolist: 16,400</span><br><span class="line">repolist: 30,679<span class="comment">## 所有可用仓库总共包的数量</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看所有仓库信息，可用和不可用的都展示出来</span></span><br><span class="line">[root@localhost ~]# yum repolist all</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="③-yum安装命令">③ yum安装命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 安装指定软件</span></span><br><span class="line">[root@localhost ~]# yum install 包名</span><br><span class="line">[root@localhost ~]# yum install vim</span><br><span class="line">Is this ok [y/d/N]:</span><br><span class="line">输入y：<span class="built_in">yes</span>安装</span><br><span class="line">输入d：download 仅下载不安装</span><br><span class="line">输入N：No不安装</span><br><span class="line"><span class="comment">## 免交互安装</span></span><br><span class="line">[root@localhost ~]# yum install vim -y</span><br><span class="line">[root@localhost ~]# yum -y install vim</span><br><span class="line">[root@localhost ~]# yum install -y vim</span><br><span class="line"><span class="comment">## yum安装方式：</span></span><br><span class="line"><span class="comment"># 方式一：安装仓库中的包</span></span><br><span class="line">[root@localhost ~]# yum install vim</span><br><span class="line"><span class="comment"># 方式二：安装本地的包</span></span><br><span class="line">[root@localhost Packages]# yum localinstall -y wget-1.14-18.el7.x86_64.rpm</span><br><span class="line"><span class="comment"># 方式三：远程互联网安装</span></span><br><span class="line">[root@localhost Packages]# yum install -y http://test.driverzeng.com/MySQL_plugins/mha4mysql-node-0.56-0.el6.noarch.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment">## 指定目录下载</span></span><br><span class="line">[root@localhost ~]# yum install --downloadonly --downloaddir=/opt/ nginx</span><br></pre></td></tr></table></figure><h4 id="④-yum重装-更新-删除">④ yum重装/更新/删除</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 误删除服务的相关文件重装</span></span><br><span class="line">[root@localhost nginx]# yum reinstall -y nginx</span><br><span class="line"></span><br><span class="line"><span class="comment">## yum查询可以更新的软件</span></span><br><span class="line">[root@localhost nginx]# yum check-update</span><br><span class="line"><span class="comment">## 更新指定软件</span></span><br><span class="line">[root@localhost nginx]# yum update acl -y</span><br><span class="line"><span class="comment">##全部软件都更新（Waring：慎用）</span></span><br><span class="line">[root@localhost nginx]# yum update -y</span><br><span class="line"></span><br><span class="line"><span class="comment">## 删除指定软件</span></span><br><span class="line">[root@localhost nginx]# yum remove -y tree</span><br><span class="line">[root@localhost nginx]# yum erase -y tree</span><br></pre></td></tr></table></figure><h4 id="④-yum逆向查询-缓存">④ yum逆向查询/缓存</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查询某个命令属于哪个包</span></span><br><span class="line">[root@localhost nginx]# yum provides */ifconfig</span><br><span class="line"></span><br><span class="line"><span class="comment">## 加载缓存</span></span><br><span class="line">[root@localhost nginx]# yum makecache</span><br><span class="line"><span class="comment">## 清除缓存</span></span><br><span class="line">[root@localhost nginx]# yum clean all</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="⑤-爬取rpm包">⑤ 爬取rpm包</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://mirrors.aliyun.com/zabbix/zabbix/5.0/rhel/7/x86_64/?spm=a2c6h.25603864.0.0.239b5d4a bvLbEB</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">1.指定下载目录</span><br><span class="line">[root@lb01 ~]# curl -s https://mirrors.aliyun.com/zabbix/zabbix/5.0/rhel/7/x86_64/?spm=a2c6h.25603864.0.0.239b5d4a bvLbEB|awk -F <span class="string">&#x27;&quot;&#x27;</span> <span class="string">&#x27;/rpm/&#123;print &quot;mkdir -p /repo/zabbix/;wget -O /repo/zabbix/&quot;$4&quot; https://mirrors.aliyun.com/zabbix/zabbix/5.0/rhel/7/x86_64/&quot;$4&#125;&#x27;</span>|bash</span><br><span class="line"></span><br><span class="line">2.下载到当前目录</span><br><span class="line">[root@lb01 ~]# curl -s https://mirrors.aliyun.com/zabbix/zabbix/5.0/rhel/7/x86_64|awk -F <span class="string">&#x27;&quot;&#x27;</span> <span class="string">&#x27;/rpm/&#123;print $4&#125;&#x27;</span>|sed <span class="string">&#x27;s#zabbix#https://mirrors.aliyun.com/zabbix/zabbix/5.0/rhel/7/x86_64/zabbix#g&#x27;</span>|xargs wget</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1.curl 网站获取网页内容</span><br><span class="line">[root@lb01 ~]# curl -s https://mirrors.aliyun.com/zabbix/zabbix/5.0/rhel/7/x86_64</span><br><span class="line">2.截取所有rpm包名</span><br><span class="line">[root@lb01 ~]# curl -s https://mirrors.aliyun.com/zabbix/zabbix/5.0/rhel/7/x86_64|awk -F <span class="string">&#x27;&quot;&#x27;</span> <span class="string">&#x27;/rpm/&#123;print $4&#125;&#x27;</span></span><br><span class="line">zabbix-agent-5.0.0-1.el7.x86_64.rpm</span><br><span class="line">zabbix-agent-5.0.1-1.el7.x86_64.rpm</span><br><span class="line">zabbix-agent-5.0.10-1.el7.x86_64.rpm</span><br><span class="line">zabbix-agent-5.0.11-1.el7.x86_64.rpm</span><br><span class="line">3.补全公共下载链接https://mirrors.aliyun.com/zabbix/zabbix/5.0/rhel/7/x86_64/?spm=a2c6h.25603864.0.0.239b5d4a bvLbEB</span><br><span class="line">sed <span class="string">&#x27;s#zabbix#https://mirrors.aliyun.com/zabbix/zabbix/5.0/rhel/7/x86_64/zabbix#g&#x27;</span></span><br><span class="line">4.拼接命令交给wget</span><br><span class="line">[root@lb01 ~]# curl -s https://mirrors.aliyun.com/zabbix/zabbix/5.0/rhel/7/x86_64|awk -F <span class="string">&#x27;&quot;&#x27;</span> <span class="string">&#x27;/rpm/&#123;print $4&#125;&#x27;</span>|sed <span class="string">&#x27;s#zabbix#https://mirrors.aliyun.com/zabbix/zabbix/5.0/rhel/7/x86_64/zabbix#g&#x27;</span>|xargs wget</span><br></pre></td></tr></table></figure><h3 id="3-yum文件-命令">3.yum文件&amp;命令</h3><h4 id="①-yum程序的配置文件">① yum程序的配置文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# <span class="built_in">cat</span> /etc/yum.conf</span><br><span class="line">cachedir=/var/cache/yum/<span class="variable">$basearch</span>/<span class="variable">$releasever</span> //缓存目录</span><br><span class="line">keepcache=0   //缓存软件包, 1启动 0 关闭</span><br><span class="line">debuglevel=2   //调试级别</span><br><span class="line">logfile=/var/log/yum.log //日志记录位置</span><br><span class="line">exactarch=1 //检查平台是否兼容</span><br><span class="line">obsoletes=1 //检查包是否废弃</span><br><span class="line">gpgcheck=1 //检查来源是否合法,需要有制作者的公钥信息</span><br><span class="line">plugins=1 //是否启用查询</span><br><span class="line">installonly_limit=5</span><br><span class="line">bugtracker_url</span><br><span class="line"><span class="comment"># metadata_expire=90m //每小时手动检查元数据</span></span><br><span class="line"><span class="comment"># in /etc/yum.repos.d //包含repos.d目录</span></span><br></pre></td></tr></table></figure><h4 id="②yum组命令">②yum组命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看有哪些包组</span></span><br><span class="line">[root@localhost ~]# yum <span class="built_in">groups</span> list</span><br><span class="line"><span class="comment"># 安装指定包组</span></span><br><span class="line">[root@localhost ~]# yum <span class="built_in">groups</span> install Development tools Compatibility libraries</span><br><span class="line">Base Debugging Tools</span><br><span class="line"><span class="comment"># 删除指定包组</span></span><br><span class="line">[root@localhost ~]# yum <span class="built_in">groups</span> remove -y Base</span><br></pre></td></tr></table></figure><h4 id="③-yum历史命令">③ yum历史命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 查看yum执行的历史</span></span><br><span class="line">[root@localhost ~]# yum <span class="built_in">history</span></span><br><span class="line">Loaded plugins: fastestmirror</span><br><span class="line">ID | Login user | Date and time | Action(s) | Altered</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">6 | root &lt;root&gt; | 2024-04-23 18:05 | Install | 1</span><br><span class="line">5 | root &lt;root&gt; | 2024-04-23 17:09 | Update | 2</span><br><span class="line">4 | root &lt;root&gt; | 2024-03-26 17:36 | Install | 1</span><br><span class="line">3 | root &lt;root&gt; | 2024-03-26 17:31 | Install | 1</span><br><span class="line">2 | root &lt;root&gt; | 2024-03-22 15:55 | Install | 1</span><br><span class="line">1 | System &lt;<span class="built_in">unset</span>&gt; | 2024-03-21 20:50 | Install | 308</span><br><span class="line"><span class="comment">## 查看指定历史记录的详细信息</span></span><br><span class="line">[root@localhost ~]# yum <span class="built_in">history</span> info 6</span><br><span class="line">Loaded plugins: fastestmirror</span><br><span class="line">Transaction ID : 6</span><br><span class="line">Begin time : Tue Apr 23 18:05:41 2024</span><br><span class="line">Begin rpmdb : 311:bc74a8339d5853ce2035d376bffbbeeb40d44ae3</span><br><span class="line">End time : 18:05:42 2024 (1 seconds)</span><br><span class="line">End rpmdb : 312:44280ba9419b586ea77d5fa483785725fe7e9758</span><br><span class="line">User : root &lt;root&gt;</span><br><span class="line">Return-Code : Success</span><br><span class="line">Command Line : install -y tree</span><br><span class="line">Transaction performed with:</span><br><span class="line">Installed rpm-4.11.3-35.el7.x86_64 @anaconda</span><br><span class="line">Installed yum-3.4.3-161.el7.centos.noarch @anaconda</span><br><span class="line">Installed yum-plugin-fastestmirror-1.1.31-50.el7.noarch @anaconda</span><br><span class="line">Packages Altered:</span><br><span class="line">Install tree-1.6.0-10.el7.x86_64 @base</span><br><span class="line"><span class="built_in">history</span> info</span><br><span class="line"><span class="comment">## 回滚指定操作</span></span><br><span class="line">[root@localhost ~]# yum <span class="built_in">history</span> undo 6 -y</span><br></pre></td></tr></table></figure><h3 id="4-制作yum仓库">4.制作yum仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">条件：</span><br><span class="line">1.制作仓库，一定要有存放rpm包的目录</span><br><span class="line">2.会配置repo仓库文件</span><br><span class="line"><span class="comment">## repo配置文件内容解析</span></span><br><span class="line"><span class="comment"># 仓库名</span></span><br><span class="line">[base]</span><br><span class="line"><span class="comment"># 描述信息</span></span><br><span class="line">name=CentOS-<span class="variable">$releasever</span> - Base - mirrors.aliyun.com</span><br><span class="line"><span class="comment"># 仓库地址</span></span><br><span class="line">baseurl=http://mirrors.aliyun.com/centos/<span class="variable">$releasever</span>/os/<span class="variable">$basearch</span>/</span><br><span class="line"><span class="comment"># 是否开启yum仓库签名机制检测</span></span><br><span class="line">gpgcheck=1 // 0 代表关闭，不检测 1 代表开启，检测</span><br><span class="line"><span class="comment"># gpg钥匙的地址</span></span><br><span class="line">gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7</span><br><span class="line"><span class="comment">## 是否开启yum仓库</span></span><br><span class="line">enabled=0 // 是否开启该仓库，0代表关闭 1代表开启</span><br><span class="line"><span class="comment">## 密钥对</span></span><br><span class="line">钥匙</span><br><span class="line">锁</span><br><span class="line"><span class="comment">## 仓库地址支持的协议：</span></span><br><span class="line">- http:// 远程协议</span><br><span class="line">- https:// 远程协议</span><br><span class="line">- ftp:// 远程协议</span><br><span class="line">- file:// 本地协议，只能访问本机</span><br></pre></td></tr></table></figure><h4 id="①-制作本地yum仓库">① 制作本地yum仓库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.安装createrepo命令</span></span><br><span class="line">[root@localhost ~]# yum install -y createrepo</span><br><span class="line"><span class="comment"># 2.让目录编程yum仓库 createrepo</span></span><br><span class="line">[root@localhost ~]# createrepo /repo/zabbix/</span><br><span class="line">Spawning worker 0 with 475 pkgs</span><br><span class="line"><span class="comment"># 3.配置仓库文件</span></span><br><span class="line">[root@localhost yum.repos.d]# vim zls.repo</span><br><span class="line">[zls_repo]</span><br><span class="line">name=zls<span class="string">&#x27;s yum repository xxxx</span></span><br><span class="line"><span class="string">baseurl=file:///repo/zabbix/</span></span><br><span class="line"><span class="string">gpgcheck=0</span></span><br><span class="line"><span class="string">enabled=1</span></span><br></pre></td></tr></table></figure><p><strong>==如何在仓库中新加RPM包==</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.将rpm放入仓库</span></span><br><span class="line">wget <span class="built_in">cp</span> <span class="built_in">mv</span> ...</span><br><span class="line"><span class="comment"># 2.重新更新仓库</span></span><br><span class="line">[root@localhost repo]# createrepo --update /repo</span><br><span class="line"><span class="comment"># 3.用户使用仓库时，需要重新加载缓存</span></span><br><span class="line">[root@localhost ~]# yum makecache</span><br></pre></td></tr></table></figure><p><strong>需求：将/dev/cdrom中的rpm包，拷贝到 /zls/base目录下，然后将该目录制作成本地的yum仓库</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.创建目录</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">mkdir</span> -p /zls/base</span><br><span class="line"><span class="comment"># 2.挂载镜像</span></span><br><span class="line">[root@localhost ~]# mount /dev/cdrom /mnt</span><br><span class="line"><span class="comment"># 3.拷贝rpm包</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cp</span> /mnt/Packages/*.rpm /zls/base/</span><br><span class="line"><span class="comment"># 4.制作仓库</span></span><br><span class="line">[root@localhost ~]# createrepo /zls/base/</span><br><span class="line"><span class="comment"># 5.编写repo文件</span></span><br><span class="line">[root@localhost ~]# vi /etc/yum.repos.d/zls.repo</span><br><span class="line">[zls_repo]</span><br><span class="line">name=zls<span class="string">&#x27;s yum repository xxxx</span></span><br><span class="line"><span class="string">baseurl=file:///repo/</span></span><br><span class="line"><span class="string">gpgcheck=0</span></span><br><span class="line"><span class="string">enabled=1</span></span><br></pre></td></tr></table></figure><h4 id="②-制作远程yum仓库">② 制作远程yum仓库</h4><p><strong>环境准备</strong></p><table><thead><tr><th>主机</th><th>ip</th><th>角色</th></tr></thead><tbody><tr><td>yum_repo</td><td>10.0.0.101</td><td>yum仓库</td></tr><tr><td>web01</td><td>10.0.0.102</td><td>使用yum仓库的机器</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 可选协议：</span></span><br><span class="line">- http:// 远程协议</span><br><span class="line">- https:// 远程协议（别考虑）</span><br><span class="line">- ftp:// 远程协议</span><br><span class="line"><span class="comment">## 克隆新的主机修改主机名和IP</span></span><br><span class="line"><span class="comment"># 修改主机名</span></span><br><span class="line">[root@web01 ~]# hostnamectl set-hostname yum_repo</span><br><span class="line">[root@web01 ~]# hostnamectl set-hostname web01</span><br><span class="line"><span class="comment"># 修改IP</span></span><br><span class="line"><span class="comment">## 关闭防火墙</span></span><br><span class="line">[root@yum_repo ~]# systemctl stop firewalld</span><br><span class="line">[root@web01 ~]# systemctl stop firewalld</span><br><span class="line"><span class="comment">## 关闭selinux</span></span><br><span class="line">[root@web01 ~]# setenforce 0</span><br><span class="line">[root@web01 ~]# getenforce</span><br><span class="line">Permissive</span><br></pre></td></tr></table></figure><h5 id="ftp制作远程仓库">ftp制作远程仓库</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.安装ftp协议的软件</span></span><br><span class="line">[root@yum_repo ~]# yum install -y vsftpd</span><br><span class="line"><span class="comment"># 2.启动vsftpd</span></span><br><span class="line">[root@yum_repo ~]# systemctl start vsftpd</span><br><span class="line">[root@yum_repo ~]# systemctl <span class="built_in">enable</span> vsftpd</span><br><span class="line"><span class="comment"># 3.打开浏览器访问 ftp://10.0.0.101</span></span><br><span class="line"><span class="comment"># 4.查找ftp的目录所在</span></span><br><span class="line">[root@yum_repo pub]# rpm -ql vsftpd|grep pub</span><br><span class="line">/var/ftp/pub</span><br><span class="line"><span class="comment"># 5.pub目录就可以当做yum仓库</span></span><br><span class="line">[root@yum_repo pub]# mount /dev/cdrom /mnt/</span><br><span class="line">[root@yum_repo pub]# <span class="built_in">cp</span> /mnt/Packages/tree-1.6.0-10.el7.x86_64.rpm /mnt/Packages/wget-1.14-18.el7.x86_64.rpm base/</span><br><span class="line"><span class="comment"># 6.安装制作仓库的命令</span></span><br><span class="line">[root@yum_repo ~]# yum install -y createrepo</span><br><span class="line"><span class="comment"># 7.制作yum仓库</span></span><br><span class="line">[root@yum_repo ~]# createrepo /var/ftp/pub/base/</span><br><span class="line">Spawning worker 0 with 2 pkgs</span><br><span class="line">Workers Finished</span><br><span class="line">Saving Primary metadata</span><br><span class="line">Saving file lists metadata</span><br><span class="line">Saving other metadata</span><br><span class="line">Generating sqlite DBs</span><br><span class="line">Sqlite DBs complete</span><br><span class="line"><span class="comment"># 8.准备repo文件</span></span><br><span class="line">[root@yum_repo base]# vim zls_base.repo</span><br><span class="line">[zls_base_repo]</span><br><span class="line">name=<span class="built_in">test</span></span><br><span class="line">baseurl=ftp://10.0.0.101/pub/base/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line"><span class="comment">## 其他用户想要使用该yum源，只需要下载</span></span><br><span class="line">[root@web01 ~]# curl -o /etc/yum.repos.d/zls_base.repo</span><br><span class="line">ftp://10.0.0.101/pub/base/zls_base.repo</span><br><span class="line">[root@web01 ~]# vim /etc/yum.repos.d/xxx.repo</span><br><span class="line">[zls_base_repo]</span><br><span class="line">name=<span class="built_in">test</span></span><br><span class="line">baseurl=ftp://10.0.0.101/pub/base/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br></pre></td></tr></table></figure><h5 id="nginx制作远程仓库">nginx制作远程仓库</h5><p><strong>环境准备</strong></p><table><thead><tr><th>主机</th><th>ip</th><th>角色</th></tr></thead><tbody><tr><td>yum_repo</td><td>10.0.0.101</td><td>yum仓库</td></tr><tr><td>web01</td><td>10.0.0.102</td><td>使用yum仓库的机器</td></tr></tbody></table><p><strong>前期准备</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#克隆虚拟机</span></span><br><span class="line"><span class="comment"># 克隆新的主机修改主机名和IP</span></span><br><span class="line">[root@web01 ~]# hostnamectl set-hostname yum_repo</span><br><span class="line">[root@web01 ~]# hostnamectl set-hostname web01</span><br><span class="line"><span class="comment"># 修改IP</span></span><br><span class="line"><span class="comment">## 关闭防火墙</span></span><br><span class="line">[root@yum_repo ~]# systemctl stop firewalld</span><br><span class="line">[root@web01 ~]# systemctl stop firewalld</span><br><span class="line"><span class="comment">## 关闭selinux</span></span><br><span class="line">[root@web01 ~]# setenforce 0</span><br><span class="line">[root@web01 ~]# getenforce</span><br><span class="line">Permissive</span><br></pre></td></tr></table></figure><p><strong>使用nginx制作yum仓库</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1.安装nginx</span></span><br><span class="line">[root@yum_repo ~]# yum -y install nginx</span><br><span class="line"><span class="comment">#2.启动nginx</span></span><br><span class="line">[root@yum_repo ~]# systemctl start nginx</span><br><span class="line">[root@yum_repo ~]# systemctl <span class="built_in">enable</span> nginx</span><br><span class="line"><span class="comment">#3.创建base源和zabbix的yum库</span></span><br><span class="line">[root@yum_repo yum]# <span class="built_in">mkdir</span> /etc/repo/yum/&#123;base,zabbix&#125; -p</span><br><span class="line"></span><br><span class="line">[root@yum_repo yum]# <span class="built_in">mkdir</span> /etc/repo/yum/base/ -p</span><br><span class="line">[root@yum_repo yum]# <span class="built_in">mkdir</span> /etc/repo/yum/zabbix/ -p</span><br><span class="line"><span class="comment">#获取base包</span></span><br><span class="line">[root@web01 ~]# mount /dev/cdrom /mnt/</span><br><span class="line">[root@yum_repo yum]# <span class="built_in">cp</span> /mnt/Packages/* /etc/repo/yum/base/</span><br><span class="line">拷贝爬取的zabbix的包到/etc/repo/yum/zabbix下</span><br><span class="line">[root@lb01 nginx]# <span class="built_in">cp</span> /repo/zabbix/* /etc/repo/yum/zabbix</span><br><span class="line"><span class="comment">#4.安装制作仓库的命令</span></span><br><span class="line">[root@yum_repo ~]# yum install -y createrepo</span><br><span class="line"><span class="comment">#5.制作yum仓库</span></span><br><span class="line">[root@yum_repo yum]# createrepo /etc/repo/yum/base/</span><br><span class="line">[root@yum_repo yum]# createrepo /etc/repo/yum/zabbix/</span><br><span class="line"><span class="comment">#6.修改ngingx配置文件</span></span><br><span class="line">[root@yum_repo nginx]# vim /etc/nginx/nginx.conf</span><br><span class="line"></span><br><span class="line"><span class="comment">#在nginx.confp配置文件中添加以下内容，</span></span><br><span class="line">location / &#123;</span><br><span class="line">    45        autoindex on;</span><br><span class="line">    46        root   /etc/repo/yum;<span class="comment">#指定本地yum仓库位置</span></span><br><span class="line">    47        &#125;</span><br><span class="line">    </span><br><span class="line">   <span class="comment"># 添加位置是在server&#123;&#125;里如下</span></span><br><span class="line">server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        listen       [::]:80;</span><br><span class="line">        server_name  _;</span><br><span class="line">       root         /usr/share/nginx/html;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">        autoindex on;</span><br><span class="line">        root   /etc/repo/yum;</span><br><span class="line">           &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="comment">#或者[root@yum_repo ~]# cat /etc/nginx/conf.d/yum_repo.conf</span></span><br><span class="line">这个前提是，nginx.confp配置文件里没有server&#123; &#125;这个内容，相当于把这段命令写在conf.d配置文件里</span><br><span class="line">server&#123;</span><br><span class="line">listen 80;</span><br><span class="line">server_name _;</span><br><span class="line">location /&#123;</span><br><span class="line">autoindex on;</span><br><span class="line">root /yum_repo;</span><br><span class="line">index index.html;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#检测语法有没有问题</span></span><br><span class="line">[root@yum_repo ~]# nginx -t</span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line"></span><br><span class="line"><span class="comment">#重启nginx</span></span><br><span class="line"> [root@yum_repo ~]# systemctl restart nginx</span><br><span class="line"><span class="comment">#7.准备repo文件</span></span><br><span class="line">[root@yum_repo base]# vim nginx.repo</span><br><span class="line">[nginx_repo]</span><br><span class="line">name=<span class="built_in">test</span></span><br><span class="line">baseurl=10.0.0.101/base/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line"></span><br><span class="line">[nginx_repo]</span><br><span class="line">name=<span class="built_in">test</span></span><br><span class="line">baseurl=10.0.0.101/zabbix/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line">可以将nginx.repo文件放在 /etc/repo/yum/目录下</span><br><span class="line"><span class="comment">#8.切换到web01客户端</span></span><br><span class="line">下载制作的nginx.repo源</span><br><span class="line">[root@web01 ~]# wget -O /etc/yum.repos.d/ http://10.0.0.101/nginx.repo</span><br><span class="line">删除web01客户端其它源，只留nginx.repo源，使用安装rpm包测试我们制作的yum源</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20240423210955932.png" alt="image-20240423210955932"></p><h2 id="【8】进程管理">【8】进程管理</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">程序：它是一个静态的概念，开发人员写好的代码</span><br><span class="line">进程：它是一个动态的概念，将程序运行起来的过程，就叫做进程</span><br><span class="line">运行环境：能让程序正常运行的环境，对应开发语言写的代码，需要对应的环境来运行</span><br></pre></td></tr></table></figure><p><strong>注意:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.当程序运行为进程后，系统会为该进程分配内存，以及运行的身份和权限。 </span><br><span class="line">2.在进程运行的过程中，服务器上会有各种状态来表示当前进程的指标信息。</span><br></pre></td></tr></table></figure><p><strong>进程的生命周期</strong></p><p><img src="https://cos.lukme.top/Pic/image-20240424145131410.png" alt="image-20240424145131410"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#进程/父进程：</span></span><br><span class="line">- 等待：</span><br><span class="line">1）有没有用户的新请求来</span><br><span class="line">2）子进程是否处理完返回结果</span><br><span class="line"><span class="comment">#线程/子进程</span></span><br><span class="line">1）处理请求</span><br><span class="line">2）将结果返回给父进程</span><br><span class="line"><span class="comment">#进程状态：</span></span><br><span class="line">1）正常结束</span><br><span class="line">2）僵尸进程</span><br><span class="line">3）孤儿进程</span><br><span class="line"><span class="comment">#协程：python</span></span><br></pre></td></tr></table></figure><p><strong>僵尸进程</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#僵尸进程：</span></span><br><span class="line">子进程比父进程先结束,父进程没有回收子进程的资源,此时的子进程就称为<span class="string">&quot;僵尸进程&quot;</span></span><br><span class="line"><span class="comment">#产生原因：</span></span><br><span class="line">子进程的结束和父进程的运行是异步的,父进程永远不知道子进程什么时候结束,子进程在结束时，父进程繁忙来不及Wait子进程则会导致，子进程变成<span class="string">&quot;僵尸进程&quot;</span></span><br></pre></td></tr></table></figure><p><strong>孤儿进程</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#孤儿进程：</span></span><br><span class="line">父进程比子进程先结束,子进程还在执行任务，没有父进程管理,此时的子进程就称为<span class="string">&quot;孤儿进程&quot;</span></span><br><span class="line"><span class="comment">#产生原因：</span></span><br><span class="line">子进程的结束和父进程的运行是异步的,父进程永远不知道子进程什么时候结束,当父进程正常完成工作或其他原因被终止,则会导致，子进程变成<span class="string">&quot;孤儿进程&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.当父进程接收到任务调度时，会通过fork派生子进程来处理，那么子进程会集成父进程的衣钵。</span><br><span class="line">2.子进程在处理任务代码时，父进程会进入等待的状态...</span><br><span class="line">3.如果子进程在处理任务过程中，父进程退出了，子进程没有退出，那么这些子进程就没有父进程来管理了，就变成了孤儿进程。</span><br><span class="line">4.每个进程都会有自己的PID号，（process <span class="built_in">id</span>）子进程则PPID</span><br></pre></td></tr></table></figure><h3 id="1-进程管理命令">1.进程管理命令</h3><blockquote><p>拓展：查看服务进程状态，可用于脚本中，检查进程状态<br>[root@web01 ~]# systemctl is-active nginx<br>active<br>[root@web01 ~]# systemctl is-enabled nginx<br>enabled</p></blockquote><h4 id="①-ps命令（静态）">① ps命令（静态）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">[root@yum_repo ~]# ps aux[root@yum_repo ~]# ps -ef也可以</span><br><span class="line">a：显示系统中所有和终端相关的进程</span><br><span class="line">u：显示每个进程运行的用户</span><br><span class="line">x：显示系统中所有和终端无关的进程</span><br><span class="line">[root@yum_repo ~]# ps aux|<span class="built_in">head</span></span><br><span class="line">USER        PID %CPU %MEM    VSZ   RSS   TTY    STAT START   TIME   COMMAND</span><br><span class="line">root         1  0.0  0.6 127864  6500    ?      Ss   08:38   0:01   /usr/lib/systemd/systemd --switched-root --system --deserialize 22</span><br><span class="line">root         2  0.0  0.0      0     0    ?      S    08:38   0:00   [kthreadd]</span><br><span class="line">root         3  0.0  0.0      0     0    ?      S    08:38   0:00   [ksoftirqd/0]</span><br><span class="line">root         5  0.0  0.0      0     0    ?      S&lt;   08:38   0:00   [kworker/0:0H]</span><br><span class="line">root         6  0.0  0.0      0     0    ?      S    08:38   0:00   [kworker/u256:0]</span><br><span class="line"></span><br><span class="line"><span class="comment">#个列代信息表意思</span></span><br><span class="line">USER：运行程序的用户</span><br><span class="line">PID：每个进程运行起来后，都会有自己的一个PID号，进程号Process ID</span><br><span class="line">%CPU：该进程占用CPU的百分比</span><br><span class="line">%MEM：该进程占用内存的百分比</span><br><span class="line">VSZ：该进程占用虚拟内存的大小</span><br><span class="line">RSS：该进程占用真实内存的大小</span><br><span class="line">TTY：终端</span><br><span class="line">- ?：由内核发起的终端</span><br><span class="line">- pts/0 pts/1：用户的虚拟终端</span><br><span class="line">- tty1：物理终端</span><br><span class="line">STAT：程序运行状态</span><br><span class="line">START：服务启动的时间</span><br><span class="line">TIME：该进程实际使用CPU的运行时间</span><br><span class="line">COMMAND：服务运行起来的命令</span><br><span class="line"></span><br><span class="line"><span class="comment">#STAT：状态</span></span><br><span class="line">D：无法中断的休眠状态（通IO的进程） 磁盘IO Input/Output 吞吐量（磁盘既写入又输出，例如tar打包数据时候）</span><br><span class="line">R：Running 正在运行的进程</span><br><span class="line">S：Sleeping 处于休眠状态的进程</span><br><span class="line">T：被暂停的进程状态  （Ctrl+z暂停进程）</span><br><span class="line">Z: 僵尸进程</span><br><span class="line">&lt;：优先级较高的进程</span><br><span class="line">N：优先级较低的进程</span><br><span class="line">s：父进程（并且它下面有子进程在运行）</span><br><span class="line">l：以线程的方式运行的进程</span><br><span class="line">|：多进程</span><br><span class="line">+：在前台运行的进程</span><br><span class="line">L：被锁进内存页的进程</span><br><span class="line">X:死掉的进程（少见）</span><br><span class="line">W:进入内存交换（从内核2.6开始无效）</span><br></pre></td></tr></table></figure><h4 id="②-stat命令">② stat命令</h4><p><strong>介绍</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##stat命令来自英文单词status的缩写，其功能是显示文件的状态信息。在Linux系统中，每个文件都有3个“历史时间”——最后访问时间（ATIME）、最后修改时间（MTIME）、最后更改时间（CTIME），用户可以使用stat命令查看到它们，进而判别有没有其他人修改过文件内容。</span></span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20240505095811234.png" alt="image-20240505095811234"></p><p><strong>应用</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##[root@localhost ~]# stat /etc/passwd</span></span><br><span class="line">  File: ‘/etc/passwd’</span><br><span class="line">  Size: 945       Blocks: 8          IO Block: 4096   regular file</span><br><span class="line">Device: fd00h/64768dInode: 8902609     Links: 1</span><br><span class="line">Access: (0644/-rw-r--r--)  Uid: (    0/    root)   Gid: (    0/    root)</span><br><span class="line">Context: system_u:object_r:passwd_file_t:s0</span><br><span class="line">Access: 2024-04-21 21:52:14.512000577 +0800</span><br><span class="line">Modify: 2024-04-20 13:49:48.339236224 +0800</span><br><span class="line">Change: 2024-04-20 13:49:48.341236224 +0800</span><br><span class="line"> Birth: -</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## -c直接看权限</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">stat</span> -c%a /etc/passwd</span><br><span class="line">644</span><br><span class="line">[root@localhost ~]# <span class="built_in">stat</span> -c%A /etc/passwd</span><br><span class="line">-rw-r--r--</span><br><span class="line"></span><br><span class="line"><span class="comment">##-c直接看inode结点号</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">stat</span> -c%i /etc/passwd</span><br><span class="line">8902609</span><br><span class="line"></span><br><span class="line"><span class="comment">##-c直接看uid和属主</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">stat</span> -c%u /etc/passwd</span><br><span class="line">0</span><br><span class="line">[root@localhost ~]# <span class="built_in">stat</span> -c%U /etc/passwd</span><br><span class="line">root</span><br><span class="line"></span><br><span class="line"><span class="comment">##-c直接看gid和属组</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">stat</span> -c%g /etc/passwd</span><br><span class="line">0</span><br><span class="line">[root@localhost ~]# <span class="built_in">stat</span> -c%G /etc/passwd</span><br><span class="line">root</span><br><span class="line"></span><br><span class="line"><span class="comment">##-c直接看文件大小</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">stat</span> -c%s /etc/passwd</span><br><span class="line">945</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## -f</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">stat</span> -f /etc/passwd</span><br><span class="line">  File: <span class="string">&quot;/etc/passwd&quot;</span></span><br><span class="line">    ID: fd0000000000 Namelen: 255     Type: xfs</span><br><span class="line">Block size: 4096       Fundamental block size: 4096</span><br><span class="line">Blocks: Total: 2361856    Free: 1896798    Available: 1896798</span><br><span class="line">Inodes: Total: 4728832    Free: 4664790</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-c后可以跟哪些占位符</span><br><span class="line"><span class="built_in">stat</span> -c %a file显示文件的八进制权限</span><br><span class="line"><span class="built_in">stat</span> -c %N file显示完整路径</span><br><span class="line"><span class="built_in">stat</span> -c %n file显示文件名。</span><br><span class="line"><span class="built_in">stat</span> -c %x file显示最后访问时间</span><br><span class="line"><span class="built_in">stat</span> -c %y file显示最后修改时间</span><br><span class="line"><span class="built_in">stat</span> -c <span class="string">&quot;%n %s %y&quot;</span> filename.txt这将输出文件名、文件大小和最后修改时间。</span><br></pre></td></tr></table></figure><h4 id="③-内存-端口">③ 内存/端口</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># free 查看内存信息</span></span><br><span class="line">free -h  以人类可读方式读取显示内存信息</span><br><span class="line"></span><br><span class="line"><span class="comment"># 端口：</span></span><br><span class="line">[root@localhost ~]# netstat -lntup</span><br><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address Foreign Address State</span><br><span class="line">PID/Program name</span><br><span class="line">tcp 0 0 0.0.0.0:22 0.0.0.0:* LISTEN</span><br><span class="line">6866/sshd</span><br><span class="line">tcp 0 0 127.0.0.1:25 0.0.0.0:* LISTEN</span><br><span class="line">6950/master</span><br><span class="line">tcp6 0 0 :::22 :::* LISTEN</span><br><span class="line">6866/sshd</span><br><span class="line">tcp6 0 0 ::1:25 :::* LISTEN</span><br><span class="line">6950/master</span><br></pre></td></tr></table></figure><h4 id="④-ps其他选项">④ ps其他选项</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看最占用内存的进程</span></span><br><span class="line">[root@yum_repo ~]# ps aux|<span class="built_in">sort</span> -k 4 -nr</span><br><span class="line">[root@yum_repo ~]# ps aux --<span class="built_in">sort</span> %mem   (默认占比最小的显示最前)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义列</span></span><br><span class="line">[root@yum_repo ~]# ps axo user,pid,ppid,%mem,<span class="built_in">command</span>,%cpu</span><br><span class="line"></span><br><span class="line"><span class="comment">#如何检测服务是否启动成功？</span></span><br><span class="line">1.先查还有没有这个服务</span><br><span class="line">[root@localhost ~]# ps aux|grep nginx</span><br><span class="line">root 10021 0.0 0.0 39304 940 ? Ss 16:44 0:00 nginx: master</span><br><span class="line">process /usr/sbin/nginx</span><br><span class="line">nginx 10022 0.0 0.1 39692 1896 ? S 16:44 0:00 nginx: worker</span><br><span class="line">process</span><br><span class="line">2.使用端口号命令来查看该端口是否被监听。如果端口处于监听状态，则说明服务已经启动（nginx默认80端口，http协议）</span><br><span class="line"></span><br><span class="line">[root@lb01 ~]# netstat -lntup</span><br><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    </span><br><span class="line">tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      8752/nginx: master  </span><br><span class="line">tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      6625/sshd           </span><br><span class="line">tcp        0      0 127.0.0.1:25            0.0.0.0:*               LISTEN      6708/master         </span><br><span class="line">tcp6       0      0 :::80                   :::*                    LISTEN      8752/nginx: master  </span><br><span class="line">tcp6       0      0 :::22                   :::*                    LISTEN      6625/sshd           </span><br><span class="line">tcp6       0      0 ::1:25                  :::*                    LISTEN      6708/master</span><br><span class="line">[root@lb01 ~]# netstat -tulun</span><br><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State      </span><br><span class="line">tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN</span><br><span class="line"></span><br><span class="line"><span class="comment">## 写脚本用，判断服务是否存活</span></span><br><span class="line">[root@yum_repo ~]# ps aux |grep nginx|grep -v grep</span><br><span class="line">[root@yum_repo ~]# ps aux|grep nginx</span><br><span class="line">root 19740 0.0 0.1 39312 1044 ? Ss 12:00 0:00 nginx: master process /usr/sbin/nginx</span><br><span class="line">nginx 19741 0.0 0.1 39700 1816 ? S 12:00 0:00 nginx: worker process</span><br><span class="line">nginx 19742 0.0 0.1 39700 1816 ? S 12:00 0:00 nginx: worker process</span><br><span class="line">nginx 19759 0.0 0.1 39700 1816 ? S 12:00 0:00 nginx: worker process</span><br><span class="line">nginx 19760 0.0 0.1 39700 1556 ? S 12:00 0:00 nginx: worker process</span><br><span class="line">root 19823 0.0 0.0 112812 980 pts/2 R+ 12:05 0:00 grep -- color=auto nginx</span><br><span class="line"></span><br><span class="line">[root@yum_repo ~]# ps aux|grep [n]ginx grep nginx</span><br><span class="line">root 19823 0.0 0.0 112812 980 pts/2 R+ 12:05 0:00 grep --  color=auto [n]ginx</span><br><span class="line"></span><br><span class="line"><span class="comment">#检索pid号码 pgrep</span></span><br><span class="line"><span class="comment">#pgrep常用参数, -l -a</span></span><br><span class="line">[root@zls ~]# pgrep sshd</span><br><span class="line">869</span><br><span class="line">1194</span><br><span class="line">1307</span><br><span class="line">1574</span><br><span class="line">[root@zls ~]# pgrep -l sshd显示进程名及ID</span><br><span class="line">869 sshd</span><br><span class="line">1194 sshd</span><br><span class="line">1307 sshd</span><br><span class="line">1574 sshd</span><br><span class="line">[root@zls ~]# pgrep -l -a sshd</span><br><span class="line">869 /usr/sbin/sshd -D</span><br><span class="line">1194 sshd: root@pts/0</span><br><span class="line">1307 sshd: root@pts/1</span><br><span class="line">1574 sshd: root@pts/2</span><br><span class="line"><span class="comment">#查看进程的pid</span></span><br><span class="line">[root@zls ~]# pidof sshd</span><br><span class="line">1574 1307 1194 869</span><br><span class="line"><span class="comment">## 树状形式显示进程    需要安装psmisc支持pstree</span></span><br><span class="line">[root@yum_repo ~]# pstree</span><br><span class="line">systemd─┬─NetworkManager───2*[&#123;NetworkManager&#125;]</span><br><span class="line">├─VGAuthService</span><br><span class="line">├─agetty</span><br><span class="line">├─auditd───&#123;auditd&#125;</span><br><span class="line">├─crond───crond───sh───ntpdate</span><br><span class="line">├─dbus-daemon</span><br><span class="line">├─gssproxy───5*[&#123;gssproxy&#125;]</span><br><span class="line">├─nginx───20*[nginx]</span><br><span class="line">├─polkitd───6*[&#123;polkitd&#125;]</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="⑤-top（动态命令）">⑤ top（动态命令）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 第一行</span></span><br><span class="line">top - 14:41:23 up  3:38,  1 user,  load average: 0.00, 0.01, 0.05</span><br><span class="line">top：命令</span><br><span class="line">-：分隔符</span><br><span class="line">09:32:57 ：当前系统时间</span><br><span class="line">up 1:23 ：服务器运行时间</span><br><span class="line">1 user ：当前登录系统的用户数量</span><br><span class="line">load average: 系统负载</span><br><span class="line">0.00：1分钟</span><br><span class="line">0.01：5分钟</span><br><span class="line">0.05：15分钟</span><br><span class="line"><span class="comment"># 第二行</span></span><br><span class="line">Tasks:  98 total,   1 running,  97 sleeping,   0 stopped,   0 zombie</span><br><span class="line">Tasks: 任务，进程数量</span><br><span class="line">116 total // 进程总量</span><br><span class="line">1 running // 1个正在运行的进程 R</span><br><span class="line">115 sleeping // 115处于休眠状态的进程 S</span><br><span class="line">0 stopped // 0个被暂停状态的进程 T</span><br><span class="line">0 zombie // 0个僵尸进程 Z</span><br><span class="line"><span class="comment"># 第三行</span></span><br><span class="line">%Cpu(s):  0.0 us,  0.3 sy,  0.0 ni, 99.7 <span class="built_in">id</span>,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st</span><br><span class="line">%Cpu(s):</span><br><span class="line">0.0 us：user 用户态 用户使用程序占用CPU的百分比</span><br><span class="line">0.3 sy：system 内核态 系统使用程序占用CPU的百分比</span><br><span class="line">0.0 ni：<span class="built_in">nice</span> 优先级 优先级调度的进程占用CPU的百分比</span><br><span class="line">99.7 <span class="built_in">id</span>：idle 空闲 CPU的空闲率</span><br><span class="line">0.0 wa： <span class="built_in">wait</span> 等待 处于等待状态的进程占用CPU的百分比</span><br><span class="line">0.0 hi： 硬中断 硬中断占用CPU的百分比</span><br><span class="line">0.0 si： 软中断 软终端占用CPU的百分比</span><br><span class="line">0.0 st： 虚拟化 虚拟化占用CPU的百分比</span><br><span class="line"><span class="comment"># 第四行</span></span><br><span class="line">KiB Mem :   995896 total,   425312 free,   108804 used,   461780 buff/cache</span><br><span class="line">KiB Mem : 内存</span><br><span class="line">995896 total：总内存大小</span><br><span class="line">748564 free：空闲内存大小</span><br><span class="line">107768 used：已使用内存大小</span><br><span class="line">139564 buff/cache：缓冲区/缓存区使用内存大小</span><br><span class="line"><span class="comment"># 第五行</span></span><br><span class="line">KiB Swap:  1048572 total,  1048572 free,        0 used.   700372 avail Mem</span><br><span class="line">KiB Swap: 交换分区swap （虚拟内存）</span><br><span class="line">1048572 total：虚拟内存总大小</span><br><span class="line">1048572 free：虚拟内存空闲大小</span><br><span class="line">0 used：虚拟内存使用大小</span><br><span class="line">729176 avail Mem：虚拟内存可用大小</span><br><span class="line">Windows：NTFS、FAT32</span><br><span class="line">Linux：</span><br><span class="line">CentOS7：xfs file system</span><br><span class="line">CentOS6：ext4</span><br><span class="line"><span class="comment"># 第六行</span></span><br><span class="line">PID USER      PR  NI    VIRT    RES    SHR S %CPU %MEM     TIME+ COMMAND</span><br><span class="line">PID：进程ID号</span><br><span class="line">USER：进程启动用户</span><br><span class="line">PR NI：权重优先级 两者相差20，互斥</span><br><span class="line">VIRT：虚拟内存</span><br><span class="line">RES：真实物理内存</span><br><span class="line">SHR：闪存</span><br><span class="line">S：进程状态</span><br><span class="line">%CPU：CPU使用率</span><br><span class="line">%MEM：内存使用率</span><br><span class="line">TIME+ ：该进程在CPU内运行的时间</span><br><span class="line">COMMAND：服务启动的命令</span><br></pre></td></tr></table></figure><h4 id="⑥-top命令的使用">⑥ top命令的使用</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">[root@yum_repo ~]# yum install -y htop</span><br><span class="line">[root@yum_repo ~]# yum install -y glances</span><br><span class="line">[root@yum_repo ~]# top</span><br><span class="line">[root@yum_repo ~]# htop</span><br><span class="line">[root@yum_repo ~]# glances</span><br><span class="line"><span class="comment"># -n：指定查看几次结果</span></span><br><span class="line">[root@yum_repo ~]# top -n 5</span><br><span class="line"><span class="comment"># -d：指定更新时间（默认3s更新一次数据）</span></span><br><span class="line">[root@yum_repo ~]# top -d 1 -n 5</span><br><span class="line"><span class="comment"># -p：指定想查看的进程PID</span></span><br><span class="line">[root@yum_repo ~]# top -p 1278</span><br><span class="line">[root@yum_repo ~]# top -p $(pidof nginx|<span class="built_in">tr</span> <span class="string">&#x27; &#x27;</span> <span class="string">&#x27;,&#x27;</span>)</span><br><span class="line"><span class="comment"># -b：将多次结果保存到文件中</span></span><br><span class="line">[root@yum_repo ~]# top -d 1 -n 3 -b &gt; /tmp/1.txt</span><br><span class="line"></span><br><span class="line">注意：#不使用-b选项，只能写入最后一次的结果。top是动态的，只有结束才能够写入1.txt，结束的时候写入的也只是最后一次的结果</span><br><span class="line">top -n 3 &gt;1.txt   </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#top 常见指令</span></span><br><span class="line">h 查看帮出</span><br><span class="line">z 高亮显示</span><br><span class="line">1 显示所有CPU的负载</span><br><span class="line">s 设置刷新时间</span><br><span class="line">b 高亮现实处于R状态的进程</span><br><span class="line">M 按内存使用百分比排序输出</span><br><span class="line">P 按CPU使用百分比排序输出</span><br><span class="line">R 对排序进行反转</span><br><span class="line">f 自定义显示字段</span><br><span class="line">k <span class="built_in">kill</span>掉指定PID进程</span><br><span class="line">W 保存top环境设置 ~/.toprc</span><br><span class="line">q 退出</span><br></pre></td></tr></table></figure><h4 id="⑦-中断">⑦ 中断</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">中断是系统用来影响硬件设备请求的一种机制，它会打断进程的正常调度和执行，然后调用内核中的中断处理程序来影响设备的请求</span><br><span class="line"><span class="comment">#中断的作用：</span></span><br><span class="line">是为了让计算机可以处理更多的请求</span><br><span class="line"><span class="comment">#只有中断，存在的问题：</span></span><br><span class="line">会导致数据丢失</span><br><span class="line"><span class="comment">#解决办法：</span></span><br><span class="line">将中断，分为两个部分</span><br><span class="line">硬中断：快速处理任务，临时保存在内存里</span><br><span class="line">软中断：延迟处理未完成的任务</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="⑧-kill信号管理">⑧ kill信号管理</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">[root@yum_repo ~]# <span class="built_in">kill</span> -l</span><br><span class="line">1) SIGHUP 2) SIGINT 3) SIGQUIT 4) SIGILL 5) SIGTRAP</span><br><span class="line">6) SIGABRT 7) SIGBUS 8) SIGFPE 9) SIGKILL 10) SIGUSR1</span><br><span class="line">11) SIGSEGV 12) SIGUSR2 13) SIGPIPE 14) SIGALRM 15) SIGTERM</span><br><span class="line">16) SIGSTKFLT 17) SIGCHLD 18) SIGCONT 19) SIGSTOP 20) SIGTSTP</span><br><span class="line">21) SIGTTIN 22) SIGTTOU 23) SIGURG 24) SIGXCPU 25) SIGXFSZ</span><br><span class="line">26) SIGVTALRM 27) SIGPROF 28) SIGWINCH 29) SIGIO 30) SIGPWR</span><br><span class="line">31) SIGSYS 34) SIGRTMIN 35) SIGRTMIN+1 36) SIGRTMIN+2 37) SIGRTMIN+3</span><br><span class="line">38) SIGRTMIN+4 39) SIGRTMIN+5 40) SIGRTMIN+6 41) SIGRTMIN+7 42) SIGRTMIN+8</span><br><span class="line">43) SIGRTMIN+9 44) SIGRTMIN+10 45) SIGRTMIN+11 46) SIGRTMIN+12 47) SIGRTMIN+13</span><br><span class="line">48) SIGRTMIN+14 49) SIGRTMIN+15 50) SIGRTMAX-14 51) SIGRTMAX-13 52) SIGRTMAX-12</span><br><span class="line">53) SIGRTMAX-11 54) SIGRTMAX-10 55) SIGRTMAX-9 56) SIGRTMAX-8 57) SIGRTMAX-7</span><br><span class="line">58) SIGRTMAX-6 59) SIGRTMAX-5 60) SIGRTMAX-4 61) SIGRTMAX-3 62) SIGRTMAX-2</span><br><span class="line">63) SIGRTMAX-1 64) SIGRTMAX</span><br><span class="line"></span><br><span class="line"><span class="comment">## 重启 restart</span></span><br><span class="line">先关闭服务，再开启服务</span><br><span class="line"><span class="comment">## 重新加载 reload</span></span><br><span class="line">只重新读取配置文件，不会停止服务</span><br><span class="line"></span><br><span class="line"><span class="comment">## 重新加载服务配置文件</span></span><br><span class="line">[root@yum_repo ~]# <span class="built_in">kill</span> -1 8582</span><br><span class="line">[root@yum_repo ~]# <span class="built_in">kill</span> -HUP 8582</span><br><span class="line"></span><br><span class="line"><span class="comment">## 中断一个正在运行的程序 Ctrl + c</span></span><br><span class="line">[root@yum_repo ~]# <span class="built_in">kill</span> -2 8779</span><br><span class="line">[root@yum_repo ~]# <span class="built_in">kill</span> -INT 8779</span><br><span class="line"><span class="comment">## 退出程序</span></span><br><span class="line">[root@yum_repo ~]# systemctl stop nginx</span><br><span class="line">[root@yum_repo ~]# <span class="built_in">kill</span> -3 8582</span><br><span class="line">[root@yum_repo ~]# <span class="built_in">kill</span> -QUIT 8582</span><br><span class="line"><span class="comment">## 强制结束程序，该信号不能被捕获</span></span><br><span class="line">[root@yum_repo ~]# <span class="built_in">kill</span> -9 8847</span><br><span class="line">[root@yum_repo ~]# <span class="built_in">kill</span> -KILL 8847</span><br><span class="line"><span class="comment">## 默认退出信号</span></span><br><span class="line">[root@yum_repo ~]# <span class="built_in">kill</span> 1122</span><br><span class="line">[root@yum_repo ~]# <span class="built_in">kill</span> -15 1122</span><br><span class="line">[root@yum_repo ~]# <span class="built_in">kill</span> -TERM 1122</span><br><span class="line"><span class="comment">## 让被暂停的程序恢复运行</span></span><br><span class="line">[root@yum_repo ~]# <span class="built_in">kill</span> -18 8870</span><br><span class="line"><span class="comment">## 让程序暂停 Ctrl + z</span></span><br><span class="line">[root@yum_repo ~]# <span class="built_in">kill</span> -19 8884</span><br><span class="line">[root@yum_repo ~]# <span class="built_in">kill</span> -20 8896</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-优先级-负载">2.优先级&amp;负载</h3><h4 id="1-进程优先级">1.进程优先级</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">作用：可以让优先级高的进程，优先使用系统资源，内存、CPU、磁盘、文件描述符...</span><br><span class="line"></span><br><span class="line"><span class="built_in">nice</span>值越高：表示优先级越低，例如19，该进程容易将CPU使用量让给其他进程。</span><br><span class="line"><span class="built_in">nice</span>值越低：表示优先级越高，例如-20，该进程更不倾向于让出CPU。</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 查看优先级</span></span><br><span class="line">[root@localhost ~]# top -n 1 -p 6884</span><br><span class="line">[root@localhost ~]# ps axo pid,user,<span class="built_in">nice</span>,<span class="built_in">command</span>|grep sshd</span><br><span class="line"><span class="comment">## 配置优先级</span></span><br><span class="line"><span class="comment"># 在进程启动命令之前，加上nice</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">nice</span> -n 优先级（-20 ~ 20） 程序启动命令（systemctl不行）</span><br><span class="line"><span class="comment">## 配置nginx优先级</span></span><br><span class="line"><span class="comment"># 1.正常启动nginx找到启动命令</span></span><br><span class="line">[root@localhost ~]# systemctl start nginx</span><br><span class="line">[root@localhost ~]# ps -ef|grep nginx</span><br><span class="line">root 10691 1 0 18:08 ? 00:00:00 nginx: master process</span><br><span class="line">/usr/sbin/nginx</span><br><span class="line"><span class="comment"># 2.先停止服务</span></span><br><span class="line">[root@localhost ~]# systemctl stop nginx</span><br><span class="line"><span class="comment"># 3.配置优先级启动</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">nice</span> -n -15 /usr/sbin/nginx</span><br><span class="line"><span class="comment"># 4.检查是否启动成功</span></span><br><span class="line">[root@localhost ~]# ps -ef|grep nginx</span><br><span class="line">[root@localhost ~]# netstat -lntup|grep nginx</span><br><span class="line">tcp 0 0 0.0.0.0:80 0.0.0.0:* LISTEN</span><br><span class="line">10770/nginx: master</span><br><span class="line">tcp6 0 0 :::80 :::* LISTEN</span><br><span class="line">10770/nginx: master</span><br><span class="line"><span class="comment"># 5.检查优先级</span></span><br><span class="line">[root@localhost ~]# top -p 10770</span><br><span class="line">PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND</span><br><span class="line">10770 root 5 -15</span><br><span class="line">39304 1068 124 S 0.0 0.1 0:00.00 nginx</span><br></pre></td></tr></table></figure><p><strong>Linux假死</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ping 通一台机器，一定能ssh连上这台机器吗？</span></span><br><span class="line">不一定 ping协议：icmp</span><br><span class="line">原因：ping 通，只能能说明icmp协议是通的，不能说明ssh协议是通的</span><br><span class="line"><span class="comment">#ping 不通一台机器，一定ssh连不上这台机器吗？</span></span><br><span class="line">不一定 ping协议：icmp</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-Linux后台进程管理">2.Linux后台进程管理</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如何将进程放入后台运行</span></span><br><span class="line"><span class="comment"># 1.方法一：在想要执行的命令后面加上&amp;</span></span><br><span class="line">[root@localhost ~]# ping baidu.com &amp;</span><br><span class="line">[root@localhost ~]# ping baidu.com &gt;&gt; /tmp/1.txt &amp;</span><br><span class="line"><span class="comment"># 2.方法二：在需要放入后台的命令前面加上nohup 后面加上 &amp;</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">nohup</span> ping baidu.com &amp; // 在当前目录下生成一个nohup.out文件，</span><br><span class="line">所有输出结果会放入该文件</span><br><span class="line"><span class="comment"># 3.方法三：将进程先暂停到后台 输入：bg 将程序放入后台运行（background）</span></span><br><span class="line">[root@localhost ~]# ping baidu.com</span><br><span class="line">Ctrl + Z // 将程序暂停到后台</span><br><span class="line"><span class="built_in">bg</span> // 将暂停的程序放入后台运行</span><br><span class="line"><span class="built_in">fg</span> // 将暂停的程序调到前台运行 根据编号，调用指定的进程到前台</span><br><span class="line"><span class="built_in">jobs</span> // 查看后台暂停的程序有哪些</span><br><span class="line"><span class="comment"># 4.方法四：使用screen，开启新屏幕</span></span><br><span class="line">[root@localhost ~]# yum install -y screen</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看screen后台运行任务</span></span><br><span class="line">[root@localhost ~]# screen -<span class="built_in">ls</span></span><br><span class="line">[root@localhost ~]# screen -list</span><br><span class="line">There are screens on:</span><br><span class="line">11050.sina (Detached)</span><br><span class="line"><span class="comment">## 创建卷轴</span></span><br><span class="line">[root@localhost ~]# screen // 没有命名的卷轴</span><br><span class="line">[root@localhost ~]# screen -S baidu // 指定名字</span><br><span class="line"><span class="comment">## 封印 回到前台界面</span></span><br><span class="line">Ctrl + a + d</span><br><span class="line"><span class="comment">## 删除窗口</span></span><br><span class="line">[root@localhost ~]# screen -S sina -X quit</span><br></pre></td></tr></table></figure><h4 id="3-系统平均负载">3.系统平均负载</h4><p>每次发现系统变慢时，我们通常做的第一件事，就是执行top或者uptime命令，来了解系统的负载情况。平均负载与CPU使用率并没有直接关系。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 查看系统负载情况</span></span><br><span class="line">[root@localhost ~]# w</span><br><span class="line">19:36:06 up 3:36, 3 <span class="built_in">users</span>, load average: 0.00, 0.01, 0.05</span><br><span class="line">[root@localhost ~]# <span class="built_in">uptime</span></span><br><span class="line">19:36:10 up 3:36, 3 <span class="built_in">users</span>, load average: 0.00, 0.01, 0.05</span><br><span class="line">[root@localhost ~]# top -n 1</span><br><span class="line">top - 19:36:15 up 3:36, 3 <span class="built_in">users</span>, load average: 0.00, 0.01, 0.05</span><br></pre></td></tr></table></figure><p><font color='red'><strong>平均负载是指，单位时间内，系统处于可运行状态和不可中断状态的平均进程数，也就是平均活跃进程数</strong></font></p><p><strong>可运行状态和不可中断状态是什么？</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.可运行状态进程，是指正在使用CPU或者正在等待CPU的进程，也就是我们用PS命令看的处于R状态的进程</span><br><span class="line">2.不可中断进程，（你在做什么事情的时候是不能被打断的呢？...不可描述）系统中最常见的是等待硬件设备的IO相应，也就是我们PS命令中看到的D状态（也成为Disk Sleep）的进程。平均负载其实就是单位时间内的活跃进程数</span><br></pre></td></tr></table></figure><p><strong>平均负载多少时合理？</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">最理想的状态是每个CPU上都刚还运行着一个进程，这样每个CPU都得到了充分利用。</span><br><span class="line">所以在评判负载时，首先你要知道系统有几个CPU，这可以通过top命令获取，或grep <span class="string">&#x27;model name&#x27;</span></span><br><span class="line">/proc/cpuinfo</span><br><span class="line"><span class="comment">## 如何查看当前系统CPU核心数</span></span><br><span class="line">[root@localhost ~]# top</span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> /proc/cpuinfo</span><br><span class="line">[root@localhost ~]# lscpu</span><br><span class="line">假设现在在4，2，1核的CPU上，如果平均负载为2时，意味着什么呢？</span><br><span class="line">1.在4个CPU的系统上，意味着CPU有50%空闲。</span><br><span class="line">2.在2个CPU的系统上，以为这所有的CPU都刚好完全被占用。</span><br><span class="line">3.在1个CPU的系统上，则意味着有一半的进程竞争不到CPU。</span><br><span class="line"></span><br><span class="line"><span class="comment">#三个值关注哪个合理</span></span><br><span class="line">1）三个值，不能只关注其中一个值（三个都要看）</span><br><span class="line">2）不能根据1分钟负载低情况来判断，当前负载处于下降状态（不关注服务器的问题）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#计算方式</span></span><br><span class="line">假设我们在有2个CPU系统上看到平均负载为2.73，6.90，12.98那么说明在过去1分钟内，系统有136%的超载</span><br><span class="line">1分钟：（2.73/2*100%=136%）</span><br><span class="line">5分钟：（6.90/2*100%=345%）</span><br><span class="line">15分钟：(12.98/2*100%=649%)</span><br><span class="line">计算公式：（负载/核心数）*100%</span><br></pre></td></tr></table></figure><p><strong>负载过高排查</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">web01机器很卡，找出原因</span><br><span class="line"><span class="comment">### 压测命令</span></span><br><span class="line">stress （K8S）是Linux系统压力测试工具，这里我们用作异常进程模拟平均负载升高的场景</span><br><span class="line"><span class="comment">##################################################################</span></span><br><span class="line"><span class="comment">### 排查工具</span></span><br><span class="line">mpstat是多核CPU性能分析工具，用来实时检查每个CPU的性能指标，以及所有CPU的平均指标。</span><br><span class="line">pidstat是一个常用的进程性能分析工具，用来实时查看进程的CPU，内存，IO，以及上下文切换等性能指标。</span><br></pre></td></tr></table></figure><h4 id="4-CPU对负载影响">4.CPU对负载影响</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# yum intall -y sysstat</span><br><span class="line"><span class="comment">## 分析CPU</span></span><br><span class="line">[root@localhost ~]# mpstat -P ALL 1</span><br><span class="line">[root@localhost ~]# top</span><br><span class="line">%Cpu0 : 99.2 us, 0.0 sy, 0.0 ni, 0.0 <span class="built_in">id</span>, 0.0 wa, 0.0 hi, 0.8 si, 0.0 st</span><br><span class="line">%Cpu1 :100.0 us, 0.0 sy, 0.0 ni, 0.0 <span class="built_in">id</span>, 0.0 wa, 0.0 hi, 0.0 si, 0.0 st</span><br><span class="line">%Cpu2 : 0.0 us, 0.0 sy, 0.0 ni, 99.0 <span class="built_in">id</span>, 0.0 wa, 0.0 hi, 1.0 si, 0.0 st</span><br><span class="line">%Cpu3 :100.0 us, 0.0 sy, 0.0 ni, 0.0 <span class="built_in">id</span>, 0.0 wa, 0.0 hi, 0.0 si, 0.0 st</span><br><span class="line">[root@localhost ~]# pidstat -u 5 1</span><br><span class="line">Linux 3.10.0-957.el7.x86_64 (localhost.localdomain) 04/26/2024 _x86_64_(4 CPU)</span><br><span class="line">08:21:50 PM UID PID %usr %system %guest %CPU CPU Command</span><br><span class="line">08:21:55 PM 0 9 0.00 0.20 0.00 0.20 0 rcu_sched</span><br><span class="line">08:21:55 PM 0 60 0.00 0.20 0.00 0.20 0 kworker/0:1</span><br><span class="line">08:21:55 PM 0 6618 0.00 0.20 0.00 0.20 0 sshd</span><br><span class="line">08:21:55 PM 0 6803 99.60 0.20 0.00 99.80 3 java</span><br><span class="line">08:21:55 PM 0 6804 99.40 0.40 0.00 99.80 2 java</span><br><span class="line">08:21:55 PM 0 6805 99.60 0.40 0.00 100.00 1 java</span><br><span class="line">08:21:55 PM 0 6815 0.00 0.20 0.00 0.20 0 pidstat</span><br><span class="line">Average: UID PID %usr %system %guest %CPU CPU Command</span><br><span class="line">Average: 0 9 0.00 0.20 0.00 0.20 - rcu_sched</span><br><span class="line">Average: 0 60 0.00 0.20 0.00 0.20 - kworker/0:1</span><br><span class="line">Average: 0 6618 0.00 0.20 0.00 0.20 - sshd</span><br><span class="line">Average: 0 6803 99.60 0.20 0.00 99.80 - java</span><br><span class="line">Average: 0 6804 99.40 0.40 0.00 99.80 - java</span><br><span class="line">Average: 0 6805 99.60 0.40 0.00 100.00 - java</span><br><span class="line">Average: 0 6815 0.00 0.20 0.00 0.20 - pidstat</span><br><span class="line"><span class="comment">## 查找对应程序的日志</span></span><br><span class="line"><span class="built_in">tail</span> -f /var/log/nginx/access.log</span><br><span class="line">tial -f /var/log/java/xxxx.log</span><br><span class="line">error：找到报错</span><br><span class="line"><span class="comment">## 将日志交给开发处理/分析</span></span><br></pre></td></tr></table></figure><h4 id="5-磁盘IO对负载影响">5.磁盘IO对负载影响</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## IO对CPU的影响</span></span><br><span class="line">[root@localhost ~]# mpstat -P ALL 3</span><br><span class="line">Linux 3.10.0-957.el7.x86_64 (localhost.localdomain) 04/26/2024 _x86_64_(4 CPU)</span><br><span class="line">08:29:48 PM CPU %usr %<span class="built_in">nice</span> %sys %iowait %irq %soft %steal %guest %gnice %idle</span><br><span class="line">08:29:51 PM all 0.17 0.00 73.85 0.00 0.00 0.00 0.00 0.00 0.00 25.98</span><br><span class="line">08:29:51 PM 0 0.00 0.00 66.93 0.00 0.00 0.00 0.00 0.00 0.00 33.07</span><br><span class="line">08:29:51 PM 1 0.00 0.00 68.15 0.00 0.00 0.00 0.00 0.00 0.00 31.85</span><br><span class="line">08:29:51 PM 2 0.00 0.00 79.87 0.00 0.00 0.00 0.00 0.00 0.00 20.13</span><br><span class="line">08:29:51 PM 3 0.00 0.00 78.92 0.00 0.00 0.00 0.00 0.00 0.00 21.08</span><br><span class="line"><span class="comment">## iostat 查看磁盘IO信息</span></span><br><span class="line">[root@localhost ~]# iostat</span><br><span class="line">Linux 3.10.0-957.el7.x86_64 (localhost.localdomain) 04/26/2024 _x86_64_(4 CPU)</span><br><span class="line">avg-cpu: %user %<span class="built_in">nice</span> %system %iowait %steal %idle</span><br><span class="line">16.40 0.00 3.49 0.01 0.00 80.10</span><br><span class="line">Device: tps kB_read/s kB_wrtn/s kB_read kB_wrtn</span><br><span class="line">scd0 0.01 0.53 0.00 1028 0</span><br><span class="line">sda 6.23 283.56 8.79 548598 17015</span><br><span class="line">[root@localhost ~]# pidstat -u 5 1</span><br><span class="line">08:30:36 PM 0 6831 0.40 76.74 0.00 77.14 3 stress</span><br><span class="line">08:30:36 PM 0 6832 0.00 78.13 0.00 78.13 1 stress</span><br><span class="line">08:30:36 PM 0 6833 0.00 74.55 0.00 74.55 3 stress</span><br></pre></td></tr></table></figure><h4 id="6-多进程对负载影响">6.多进程对负载影响</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# mpstat -P ALL 3</span><br><span class="line">Linux 3.10.0-957.el7.x86_64 (localhost.localdomain) 04/26/2024 _x86_64_(4 CPU)</span><br><span class="line">08:33:45 PM CPU %usr %<span class="built_in">nice</span> %sys %iowait %irq %soft %steal %guest %gnice %idle</span><br><span class="line">08:33:48 PM all 53.94 0.00 0.25 0.00 0.00 0.25 0.00 0.00 0.00 45.57</span><br><span class="line">08:33:48 PM 0 53.00 0.00 0.50 0.00 0.00 0.00 0.00 0.00 0.00 46.50</span><br><span class="line">08:33:48 PM 1 54.41 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 45.59</span><br><span class="line">08:33:48 PM 2 52.50 0.00 0.50 0.00 0.00 0.50 0.00 0.00 0.00 46.50</span><br><span class="line">08:33:48 PM 3 55.02 0.00 0.00 0.00 0.00 0.48 0.00 0.00 0.00 44.50</span><br><span class="line">[root@localhost ~]# pidstat -u 5 1</span><br><span class="line">08:30:36 PM 0 6831 0.40 76.74 0.00 77.14 3 stress</span><br><span class="line">08:30:36 PM 0 6832 0.00 78.13 0.00 78.13 1 stress</span><br><span class="line">08:30:36 PM 0 6833 0.00 74.55 0.00 74.55 3 stress</span><br><span class="line"><span class="comment"># 总结：</span></span><br><span class="line">1.平均负载高有可能是CPU密集型进程导致的</span><br><span class="line">2.平均负载高并不一定代表CPU的使用率就一定高，还有可能是I/O繁忙</span><br><span class="line">3.当发现负载高时，可以使用mpstat、pidstat等工具，快速定位到，负载高的原因，从而做出处理</span><br></pre></td></tr></table></figure><p><strong>负载达到多少时候需要注意</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">当平均负载高于CPU数量70%的时候，你就应该分析排查负载高的问题了，一旦负载过高，就可能导致进程相应变慢，进而影响服务的正常功能。</span><br><span class="line">但70%这个数字并不是绝对的，最推荐的方法，还是把系统的平均负载监控起来，然后根据更多的历史数据，判断负载的变化趋势，当发现负载有明显升高的趋势时，比如说负载翻倍了，你再去做分析和调查。</span><br></pre></td></tr></table></figure><h3 id="3-系统启动流程">3.系统启动流程</h3><h4 id="1-Centos6启动流程">1.Centos6启动流程</h4><p><strong>==1.加电自检==</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Centos6</span><br><span class="line">1.BIOS加电自检</span><br><span class="line">2.内核引导</span><br><span class="line">3.读取GRUB菜单</span><br><span class="line">4.运行init，读取/etc/inittab默认运行级别</span><br><span class="line">5.按顺序启动其他服务/etc/rcN.d  </span><br><span class="line">6.建立终端</span><br><span class="line">7.用户登录</span><br></pre></td></tr></table></figure><p><strong>==2.内核引导==</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">打开电源，BiOS加电自检</span><br><span class="line">检测硬件是否损坏：CPU、内存、磁盘</span><br><span class="line">读取/boot目录下的文件，加载启动文件，GRUB菜单</span><br><span class="line">GRUB菜单提供已安装系统的选项，如果是多系统，选择要进入的系统</span><br></pre></td></tr></table></figure><p><strong>==3.运行init==</strong></p><p>init运行级别 init 在CentOS中，是系统所有进程的起点，如果进程想启动，那必须有init，如果没有init，系统中的任 何进程都不会启动，那就相当于这个系统打不开</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">init是CentOS6中PID为0的进程，是所有进程启动的起点</span><br><span class="line">[root@localhost ~]# pstree</span><br><span class="line">init─┬─abrtd</span><br><span class="line">     ├─acpid</span><br><span class="line">     ├─atd</span><br><span class="line">     ├─auditd───&#123;auditd&#125;</span><br><span class="line">     ├─console-kit-dae───63*[&#123;console-kit-da&#125;]</span><br><span class="line">     ├─sshd───sshd───bash───pstree</span><br><span class="line">     └─udevd───2*[udevd]</span><br><span class="line">    </span><br></pre></td></tr></table></figure><p><strong>==运行级别==</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">init程序首先是需要读取配置文件/etc/inittab</span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> /etc/inittab</span><br><span class="line"><span class="comment"># Default runlevel. The runlevels used are:</span></span><br><span class="line"><span class="comment"># 0 - halt (Do NOT set initdefault to this)</span></span><br><span class="line"><span class="comment"># 1 - Single user mode</span></span><br><span class="line"><span class="comment"># 2 - Multiuser, without NFS (The same as 3, if you do not have networking)</span></span><br><span class="line"><span class="comment"># 3 - Full multiuser mode</span></span><br><span class="line"><span class="comment"># 4 - unused</span></span><br><span class="line"><span class="comment"># 5 - X11</span></span><br><span class="line"><span class="comment"># 6 - reboot (Do NOT set initdefault to this)</span></span><br><span class="line"><span class="built_in">id</span>:3:initdefault:  <span class="comment">#设置运行级别为3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行级别：</span></span><br><span class="line">0：关机运行级别 <span class="comment">#开机即关机</span></span><br><span class="line">1：单用户模式运行级别</span><br><span class="line">2：多用户模式，但是没有文件系统，没有网络</span><br><span class="line">3：完整的多用户模式，有文件系统，有网络</span><br><span class="line">4：未被使用的运行级别</span><br><span class="line">5：图形化运行级别</span><br><span class="line">6：重启运行级别 <span class="comment">#默认运行级别不能设为6，否则不能正常启动</span></span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20240429154944112.png" alt="image-20240429154944112"></p><p><strong>==查看当前运行级别==</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# runlevel</span><br><span class="line">N 3</span><br><span class="line"><span class="comment">#临时切换运行级别</span></span><br><span class="line">[root@localhost ~]# init 5</span><br><span class="line"><span class="comment">#永久切换运行级别</span></span><br><span class="line">[rootezls ~]vim /etc/inittab</span><br><span class="line"><span class="built_in">id</span>:3:initdefault</span><br></pre></td></tr></table></figure><p><strong>读取完配置文件，找到对应的运行级别 3</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">查询操作系统在每一个执行等级中会执行哪些系统服务，其中包括各类常驻服务。</span><br><span class="line">[root@localhost ~]# chkconfig</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# chkconfig |grep <span class="string">&#x27;3:on&#x27;</span></span><br><span class="line">auditd 0:off 1:off 2:on 3:on 4:on 5:on 6:off</span><br><span class="line">crond 0:off 1:off 2:on 3:on 4:on 5:on 6:off</span><br><span class="line">ip6tables 0:off 1:off 2:on 3:on 4:on 5:on 6:off</span><br><span class="line">iptables 0:off 1:off 2:on 3:on 4:on 5:on 6:off</span><br><span class="line">kdump 0:off 1:off 2:off 3:on 4:on 5:on 6:off</span><br><span class="line">mdmonitor 0:off 1:off 2:on 3:on 4:on 5:on 6:off</span><br><span class="line">netfs 0:off 1:off 2:off 3:on 4:on 5:on 6:off</span><br><span class="line">network 0:off 1:off 2:on 3:on 4:on 5:on 6:off</span><br><span class="line">postfix 0:off 1:off 2:on 3:on 4:on 5:on 6:off</span><br><span class="line">rsyslog 0:off 1:off 2:on 3:on 4:on 5:on 6:off</span><br><span class="line">sshd 0:off 1:off 2:on 3:on 4:on 5:on 6:off</span><br><span class="line">udev-post 0:off 1:on 2:on 3:on 4:on 5:on 6:off</span><br></pre></td></tr></table></figure><p><strong>==5.系统初始化==</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 读取3运行级别的服务启动顺序</span></span><br><span class="line"><span class="comment">##S开头的是关机服务停止顺序</span></span><br><span class="line">[root@localhost ~]# ll /etc/rc3.d/</span><br><span class="line">total 0</span><br><span class="line">lrwxrwxrwx. 1 root root 19 Apr 29 17:06 K10saslauthd -&gt; ../init.d/saslauthd</span><br><span class="line">lrwxrwxrwx. 1 root root 21 Apr 29 17:06 K87restorecond -&gt; ../init.d/restorecond</span><br><span class="line">lrwxrwxrwx. 1 root root 20 Apr 29 17:06 K89netconsole -&gt; ../init.d/netconsole</span><br><span class="line">lrwxrwxrwx. 1 root root 15 Apr 29 17:06 K89rdisc -&gt; ../init.d/rdisc</span><br><span class="line">lrwxrwxrwx. 1 root root 19 Apr 29 17:06 S08ip6tables -&gt; ../init.d/ip6tables</span><br><span class="line">lrwxrwxrwx. 1 root root 18 Apr 29 17:06 S08iptables -&gt; ../init.d/iptables</span><br><span class="line">lrwxrwxrwx. 1 root root 17 Apr 29 17:06 S10network -&gt; ../init.d/network</span><br><span class="line">lrwxrwxrwx. 1 root root 16 Apr 29 17:07 S11auditd -&gt; ../init.d/auditd</span><br><span class="line">lrwxrwxrwx. 1 root root 17 Apr 29 17:06 S12rsyslog -&gt; ../init.d/rsyslog</span><br><span class="line">lrwxrwxrwx. 1 root root 19 Apr 29 17:06 S15mdmonitor -&gt; ../init.d/mdmonitor</span><br><span class="line">lrwxrwxrwx. 1 root root 15 Apr 29 17:06 S25netfs -&gt; ../init.d/netfs</span><br><span class="line">lrwxrwxrwx. 1 root root 19 Apr 29 17:06 S26udev-post -&gt; ../init.d/udev-post</span><br><span class="line">lrwxrwxrwx. 1 root root 15 Apr 29 17:07 S50kdump -&gt; ../init.d/kdump</span><br><span class="line">lrwxrwxrwx. 1 root root 14 Apr 29 17:07 S55sshd -&gt; ../init.d/sshd</span><br><span class="line">lrwxrwxrwx. 1 root root 17 Apr 29 17:06 S80postfix -&gt; ../init.d/postfix</span><br><span class="line">lrwxrwxrwx. 1 root root 15 Apr 29 17:06 S90crond -&gt; ../init.d/crond</span><br><span class="line">lrwxrwxrwx. 1 root root 11 Apr 29 17:06 S99local -&gt; ../rc.local</span><br><span class="line"><span class="comment"># chkconfig: 2345 55 25</span></span><br><span class="line"><span class="comment"># CentOS6中所有脚本都是shell脚本</span></span><br><span class="line">[root@localhost ~]# ll /etc/init.d/      查看所有程序的启动脚本</span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> /etc/init.d/sshd</span><br><span class="line"><span class="comment"># chkconfig: 2345 55 25</span></span><br><span class="line">在2345运行级别上，默认开机自启</span><br><span class="line">55：开机第55个启动</span><br><span class="line">25：关机第25个关闭</span><br></pre></td></tr></table></figure><p><strong>==6.建立终端==</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">rc执行完毕后，返回init。这时基本系统环境已经设置好了，各种守护进程也已经启动了。 init接下来会打开6个终端，以便用户登录系统。在inittab中的以下6行就是定义了6个终端：</span><br><span class="line">1:2345:respawn:/sbin/mingetty tty1</span><br><span class="line">2:2345:respawn:/sbin/mingetty tty2</span><br><span class="line">3:2345:respawn:/sbin/mingetty tty3</span><br><span class="line">4:2345:respawn:/sbin/mingetty tty4</span><br><span class="line">5:2345:respawn:/sbin/mingetty tty5</span><br><span class="line">6:2345:respawn:/sbin/mingetty tty6</span><br><span class="line"></span><br><span class="line">远程连接工具</span><br><span class="line">pts/0</span><br></pre></td></tr></table></figure><p><strong>==7.用户登录系统==</strong></p><p>一般来说，用户的登录方式有三种：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">（1）命令行登录</span><br><span class="line">（2）ssh登录</span><br><span class="line">（3）图形界面登录</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20240429161712973.png" alt="image-20240429161712973"></p><h4 id="2-系统关机命令">2.系统关机命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 关机</span></span><br><span class="line">halt</span><br><span class="line">shutdown -h now</span><br><span class="line">poweroff</span><br><span class="line"></span><br><span class="line"><span class="built_in">sync</span> 将数据由内存同步到硬盘中。</span><br><span class="line">shutdown 关机指令</span><br><span class="line">shutdown –h 10      <span class="comment">#计算机将在10分钟后关机，并且会显示在登陆用户的当前屏幕中。</span></span><br><span class="line">shutdown –h now      <span class="comment">#立马关机</span></span><br><span class="line">shutdown –h 20:25  <span class="comment">#系统会在今天20:25关机</span></span><br><span class="line">shutdown –h +10      <span class="comment">#十分钟后关机</span></span><br><span class="line">shutdown –r now  <span class="comment">#系统立马重启</span></span><br><span class="line">shutdown –r +10  <span class="comment">#系统十分钟后重启</span></span><br><span class="line">reboot     <span class="comment">#就是重启，等同于 shutdown –r now</span></span><br><span class="line">halt     <span class="comment">#关闭系统，等同于shutdown –h now 和 poweroff</span></span><br><span class="line"><span class="comment">## 重启</span></span><br><span class="line">reboot</span><br><span class="line">init 6</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20240429162103002.png" alt="image-20240429162103002"></p><h4 id="3-单用户模式">3.单用户模式</h4><p><strong>==忘记密码进入单用户模式改密码==</strong></p><p><strong>1）重启系统，到grub菜单界面</strong></p><p><img src="https://cos.lukme.top/Pic/image-20240429164346037.png" alt="image-20240429164346037"></p><p><img src="https://cos.lukme.top/Pic/image-20240429164633863.png" alt="image-20240429164633863"></p><p><img src="https://cos.lukme.top/Pic/image-20240429165101506.png" alt="image-20240429165101506"></p><p><strong>2）回车返回内核菜单</strong></p><p><img src="https://cos.lukme.top/Pic/image-20240429164943845.png" alt="image-20240429164943845"></p><p><strong>3）进入后就可以重新设置密码了</strong></p><p><img src="https://cos.lukme.top/Pic/image-20240429165410448.png" alt="image-20240429165410448"></p><p>密码设置好重启就OK了</p><p>reboot   init6</p><h4 id="4-CentOS7启动顺序">4.CentOS7启动顺序</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># C7</span></span><br><span class="line">1.BIOS(开机自检)</span><br><span class="line">2.MBR ( Master Boot Record 主引导记录)</span><br><span class="line">3.GRUB2 Bootloader（引导菜单）</span><br><span class="line">4.Kernel（内核引导）</span><br><span class="line">5.Systemd （不再使用init，改成了systemd）</span><br><span class="line">6.按顺序启动其他服务 systemctl list-unit-files</span><br><span class="line">[root@lb01 ~]# systemctl list-unit-files</span><br><span class="line">UNIT FILE                                     STATE   </span><br><span class="line">proc-sys-fs-binfmt_misc.automount             static  </span><br><span class="line">dev-hugepages.mount                           static  </span><br><span class="line">dev-mqueue.mount                              static  </span><br><span class="line">proc-sys-fs-binfmt_misc.mount                 static  </span><br><span class="line">sys-fs-fuse-connections.mount                 static  </span><br><span class="line">sys-kernel-config.mount                       static  </span><br><span class="line">sys-kernel-debug.mount                        static</span><br><span class="line">7.建立终端</span><br><span class="line">8.用户登录</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行级别：</span></span><br><span class="line">/usr/lib/systemd/system/runlevel0.target -&gt; poweroff.target</span><br><span class="line">/usr/lib/systemd/system/runlevel1.target -&gt; rescue.target</span><br><span class="line">/usr/lib/systemd/system/runlevel2.target -&gt; multi-user.target</span><br><span class="line">/usr/lib/systemd/system/runlevel3.target -&gt; multi-user.target</span><br><span class="line">/usr/lib/systemd/system/runlevel4.target -&gt; multi-user.target</span><br><span class="line">/usr/lib/systemd/system/runlevel5.target -&gt; graphical.target</span><br><span class="line">/usr/lib/systemd/system/runlevel6.target -&gt; reboot.target</span><br><span class="line">0：关机运行级别 (Do NOT <span class="built_in">set</span> initdefault to this)</span><br><span class="line">1：单用户模式运行级别</span><br><span class="line">2，3，4：完整的多用户模式，有文件系统，有网络</span><br><span class="line">5：图形化运行级别</span><br><span class="line">6：重启运行级别 (Do NOT <span class="built_in">set</span> initdefault to this)</span><br><span class="line"><span class="comment">#查看当前运行级别：</span></span><br><span class="line">[root@yum_repo ~]# systemctl get-default</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# systemctl list-unit-files|grep <span class="string">&#x27;enabled&#x27;</span></span><br><span class="line"><span class="comment">## CentOS7中启动服务，所有服务的启动脚本</span></span><br><span class="line">/usr/lib/systemd/system/</span><br><span class="line"><span class="comment">#修改运行级别</span></span><br><span class="line">[root@yum_repo ~]# systemctl set-default multi-user.target    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 注意：centos7中所有服务的启动脚本，都不是shell且必须以.service结尾</span></span><br><span class="line"><span class="comment">## 开机自启动服务</span></span><br><span class="line">[root@localhost ~]# ll /etc/systemd/system/multi-user.target.wants/</span><br><span class="line">auditd.service -&gt; /usr/lib/systemd/system/auditd.service</span><br><span class="line">nginx.service -&gt; /usr/lib/systemd/system/nginx.service</span><br><span class="line">firewalld.service -&gt; /usr/lib/systemd/system/firewalld.service</span><br><span class="line">irqbalance.service -&gt; /usr/lib/systemd/system/irqbalance.service</span><br><span class="line">NetworkManager.service -&gt; /usr/lib/systemd/system/NetworkManager.service</span><br><span class="line">postfix.service -&gt; /usr/lib/systemd/system/postfix.service</span><br><span class="line">remote-fs.target -&gt; /usr/lib/systemd/system/remote-fs.target</span><br><span class="line">rhel-configure.service -&gt; /usr/lib/systemd/system/rhel-configure.service</span><br><span class="line">rsyslog.service -&gt; /usr/lib/systemd/system/rsyslog.service</span><br><span class="line">sshd.service -&gt; /usr/lib/systemd/system/sshd.service</span><br><span class="line">tuned.service -&gt; /usr/lib/systemd/system/tuned.service</span><br><span class="line">vmtoolsd.service -&gt; /usr/lib/systemd/system/vmtoolsd.service</span><br></pre></td></tr></table></figure><h4 id="5-CentOS7单用户模式">5.CentOS7单用户模式</h4><p><strong>1.重启系统</strong></p><p><img src="https://cos.lukme.top/Pic/image-20240429170437706.png" alt="image-20240429170437706"></p><p><strong>2.进入grub2菜单</strong></p><p><img src="https://cos.lukme.top/Pic/image-20240429170649081.png" alt="image-20240429170649081"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在linux16行的末尾输入,然后按下   Ctrl+X引导   组合键来运行修改过的内核程序</span></span><br><span class="line">enforcing=0 init=/bin/bash</span><br><span class="line">enforcing=0   关闭selinux（临时的），进入单用户后配置文件里关闭selinux，否则重新开机后密码就不生效了</span><br></pre></td></tr></table></figure><p><strong>不挂载方式</strong></p><p><img src="https://cos.lukme.top/Pic/image-20240429173119985.png" alt="image-20240429173119985"></p><p><strong>3.进入单用户模式</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.重新挂载/目录</span></span><br><span class="line">mount -o rw,remount /</span><br><span class="line"><span class="comment"># 2.修改密码</span></span><br><span class="line">passwd root</span><br><span class="line"><span class="comment"># 3.重新引导系统</span></span><br><span class="line"><span class="built_in">exec</span> /sbin/init</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20240429171621119.png" alt="image-20240429171621119"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">进入配置文件永久关闭selinux</span><br><span class="line">[root@lb01 ~]# vi /etc/selinux/config</span><br><span class="line">SELINUX=disabled    将permissive改为disabled</span><br><span class="line">SELINUXTYPE=targeted</span><br><span class="line"></span><br><span class="line">查看selinux开启状态</span><br><span class="line">[root@lb01 ~]# getenforce</span><br><span class="line">Disabled</span><br></pre></td></tr></table></figure><h4 id="6-修改默认运行级别">6.修改默认运行级别</h4><p><strong>如果centos7被设置为运行级别6，导致无限重启怎么解决？</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 查看</span></span><br><span class="line">[root@yum_repo ~]# systemctl get-default</span><br><span class="line">multi-user.target    <span class="comment">#完整多用户模式</span></span><br><span class="line"><span class="comment">## 修改</span></span><br><span class="line">[root@yum_repo ~]# systemctl set-default reboot.target     <span class="comment">#设置运行级别6重启（无限重启）</span></span><br></pre></td></tr></table></figure><p><strong>解决办法</strong></p><p>1.进入编辑模式</p><p><img src="https://cos.lukme.top/Pic/image-20240429173139767.png" alt="image-20240429173139767"></p><p>2.#在linux16行的末尾输入,然后按下   Ctrl+X   组合键来运行修改过的内核程序</p><p><img src="https://cos.lukme.top/Pic/image-20240429175105690.png" alt="image-20240429175105690"></p><p><img src="https://cos.lukme.top/Pic/image-20240429180423234.png" alt="image-20240429180423234"></p><p>exit退出，reboot重启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.重新挂载/sysroot目录</span></span><br><span class="line">mount -o rw,remount /sysroot</span><br><span class="line"><span class="comment"># 2.获取root权限</span></span><br><span class="line"><span class="built_in">chroot</span> /sysroot</span><br><span class="line"><span class="comment"># 3.修改密码</span></span><br><span class="line">passwd root</span><br><span class="line"><span class="comment"># 4.修改运行级别</span></span><br><span class="line">systemctl set-default multi-user.target</span><br><span class="line"><span class="comment"># 5.退出</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"><span class="comment"># 6.重启</span></span><br><span class="line">reboot</span><br><span class="line"><span class="comment">## 关闭selinux</span></span><br><span class="line"><span class="comment"># 临时关闭</span></span><br><span class="line">[root@yum_repo ~]# setenforce 0</span><br><span class="line"><span class="comment"># 永久关闭（重启系统生效）</span></span><br><span class="line">[root@yum_repo ~]# vi /etc/sysconfig/selinux</span><br><span class="line">SELINUX=disabled</span><br><span class="line"><span class="comment">## 两种进入单用户方法</span></span><br><span class="line">1）enforcing=0 init=/bin/bash // 修改密码</span><br><span class="line">2）rd.break // 修改运行级别</span><br></pre></td></tr></table></figure><h3 id="4-救援模式">4.救援模式</h3><p>前提：虚拟机设置已经挂载iso镜像</p><h4 id="1-MBR引导被破坏解决">1.MBR引导被破坏解决</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#注：仅演示救援模式清空MBR！！！！！！！！！！！！！</span></span><br><span class="line"><span class="built_in">dd</span> &lt; /dev/zero &gt;/dev/sda bs=1 count=446</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#解决办法</span></span><br><span class="line"><span class="comment"># 1.获取root环境</span></span><br><span class="line"><span class="built_in">chroot</span> /mnt/sysimage</span><br><span class="line"><span class="comment"># 2.修复MBR</span></span><br><span class="line">grub2-install /dev/sda</span><br><span class="line"><span class="comment"># 3.退出</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"><span class="comment"># 4.重启</span></span><br><span class="line">reboo</span><br><span class="line">过程如下↓</span><br></pre></td></tr></table></figure><p><strong>MBR破坏后启动自动跳到这里</strong></p><p><img src="https://cos.lukme.top/Pic/image-20240501105112668.png" alt="image-20240501105112668"></p><p>进入救援模式前进入BISO,修改优先CD-ROM启动加载</p><p><img src="https://cos.lukme.top/Pic/image-20240501102743250.png" alt="image-20240501102743250"></p><p><img src="https://cos.lukme.top/Pic/image-20240501094910948.png" alt="image-20240501094910948"></p><p><img src="https://cos.lukme.top/Pic/image-20240501105511762.png" alt="image-20240501105511762"></p><p><img src="https://cos.lukme.top/Pic/image-20240501105829470.png" alt="image-20240501105829470"></p><p><img src="https://cos.lukme.top/Pic/image-20240501111423160.png" alt="image-20240501111423160"></p><h4 id="2-grub菜单误删解决">2.grub菜单误删解决</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#仅做演示删除gruub菜单！！！！！！！！！！！！</span></span><br><span class="line">[root@lb01 ~]# <span class="built_in">rm</span> -fr /boot/grub2</span><br><span class="line">[root@lb01 ~]# reboot</span><br></pre></td></tr></table></figure><p><strong>解决过程</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.获取root环境</span></span><br><span class="line"><span class="built_in">chroot</span> /mnt/sysimage</span><br><span class="line"><span class="comment"># 2.修复磁盘MBR</span></span><br><span class="line">grub2-install /dev/sda</span><br><span class="line"><span class="comment"># 3.修复grub菜单配置文件</span></span><br><span class="line">grub2-mkconfig -o /boot/grub2/grub.cfg</span><br><span class="line"><span class="comment"># 4.退出</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"><span class="comment"># 5.重启</span></span><br><span class="line">reboot</span><br><span class="line">过程图如下</span><br></pre></td></tr></table></figure><p><strong>grub菜单被删启动界面</strong></p><p><img src="https://cos.lukme.top/Pic/image-20240501112106766.png" alt="image-20240501112106766"></p><p><strong>同样进入救援模式</strong></p><p><img src="https://cos.lukme.top/Pic/image-20240501113156619.png" alt="image-20240501113156619"></p><h4 id="3-系统损坏拷贝文件">3.系统损坏拷贝文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">bash-4.2# mkfs.xfs -f /dev/sdc</span><br><span class="line">bash-4.2# <span class="built_in">mkdir</span> /data</span><br><span class="line">bash-4.2# mount /dev/sdc /data</span><br><span class="line">bash-4.2# <span class="built_in">cp</span> -a /raid0 /data</span><br><span class="line">bash-4.2# umount /dev/sdb</span><br></pre></td></tr></table></figure><h3 id="5-Systemd-进程管理">5.Systemd 进程管理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemd即为system daemon守护进程，systemd主要解决上文的问题而诞生，systemd的目标是，为系统的启动和管理提供一套完整的解决方案。</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#CentOS6启动</span></span><br><span class="line">1.启动时间长，init进程是串行启动，只有前一个进程启动完，才会启动下一个进程。</span><br><span class="line">2.启动脚本复杂，初始化完成后，系统会加载很多脚本，脚本都会处理各自的情况，这回让脚本多而复杂。</span><br><span class="line"><span class="comment">#CentOS7启动</span></span><br><span class="line">CtOS7所有进程无论有无依赖关系，都并行启动，当然有很多时候进程并没有真正的启动而是只有一个信号或者说是标记，在真正利用的时候，才会真正启动</span><br></pre></td></tr></table></figure><p><img src="https://cos.lukme.top/Pic/image-20240501114955720.png" alt="image-20240501114955720"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#systemd优势</span></span><br><span class="line">1.最新系统都采用systemd管理（RedHat7，CentOS7，Ubuntu15...）</span><br><span class="line">2.CentOS7 支持开机并行启动服务,显著提高开机启动效率</span><br><span class="line">3.CentOS7关机只关闭正在运行的服务，而CentOS6，全部都关闭一次。</span><br><span class="line">4.CentOS7服务的启动与停止不在使用脚本进行管理，也就是/etc/init.d下不在有脚本。</span><br><span class="line">5.CentOS7使用systemd解决原有模式缺陷，比如原有service不会关闭程序产生的子进程。</span><br></pre></td></tr></table></figure><table><thead><tr><th>相关配置文件</th><th>CentOS6</th><th>CentOS7</th></tr></thead><tbody><tr><td>服务启动脚本</td><td>/etc/init.d/</td><td>/usr/lib/systemd/system/</td></tr><tr><td>开机启动服务</td><td>/etc/rcN.d/</td><td>/etc/systemd/system/</td></tr></tbody></table><h4 id="systemd相关命令">systemd相关命令</h4><p><strong>启动重启服务</strong></p><table><thead><tr><th>System V init（6系统）</th><th>systemctl命令（7系统）</th><th>作用</th></tr></thead><tbody><tr><td>service nginx start <br />/etc/init.d/nginx start</td><td>systemctl start nginx.service</td><td>启动服务</td></tr><tr><td>service nginx stop <br />/etc/init.d/nginx stop</td><td>systemctl stop nginx.service</td><td>停止服务</td></tr><tr><td>service nginx restart <br />/etc/init.d/nginx restart</td><td>systemctl restart nginx.service</td><td>重启服务</td></tr><tr><td>service nginx reload <br />/etc/init.d/nginx reload</td><td>systemctl reload nginx.service</td><td>重新加载配置(不终止服务)</td></tr><tr><td>service nginx status <br />/etc/init.d/nginx status</td><td>systemctl status nginx.servre</td><td>查看服务运行状态</td></tr><tr><td></td><td>systemctl is-active sshd.service</td><td>查看服务是否在运行中</td></tr><tr><td></td><td>systemctl mask nginx.servre</td><td>禁止服务运行</td></tr><tr><td></td><td>systemctl unmask nginx.servre</td><td>取消禁止服务运行</td></tr></tbody></table><p><strong>设置服务开机自启，查看各级别下服务启动状态</strong></p><table><thead><tr><th>System V init（6系 统）</th><th>systemctl命令（7系统）</th><th>作用</th></tr></thead><tbody><tr><td>chkconfig nginx on</td><td>systemctl enable nginx.service</td><td>开机自动启动</td></tr><tr><td>chkconfig nginx off</td><td>systemctl disable nginx.service</td><td>开机不自动启动</td></tr><tr><td>chkconfig --list</td><td>systemctl list-unit-files</td><td>查看各个级别下服务的启动与禁 用</td></tr><tr><td>chkconfig --list nginx</td><td>systemctl is-enabled nginx.service</td><td>查看特定服务是否为开机自启动</td></tr><tr><td>chkconfig–add nginx</td><td>systemctl daemon-reload</td><td>创建新服务文件或者变更设置</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">设置开机自启相当于给启动脚本做个软链接</span><br><span class="line"><span class="comment"># CentOS7中开机自启</span></span><br><span class="line">[root@localhost ~]# systemctl <span class="built_in">enable</span> sshd</span><br><span class="line"><span class="built_in">ln</span> -s /usr/lib/systemd/system/sshd.service /etc/systemd/system/multiuser.target.wants/</span><br><span class="line"><span class="comment"># 取消开机自启</span></span><br><span class="line">[root@localhost ~]# systemctl <span class="built_in">disable</span> sshd</span><br><span class="line">Removed symlink /etc/systemd/system/multi-user.target.wants/sshd.service</span><br><span class="line"><span class="built_in">rm</span> -f /etc/systemd/system/multi-user.target.wants/sshd.service</span><br></pre></td></tr></table></figure><p><strong>systemctl服务状态说明</strong></p><table><thead><tr><th>服务状态</th><th>状态说明</th></tr></thead><tbody><tr><td>loaded</td><td>服务单元的配置文件已经被处理</td></tr><tr><td>active(running)</td><td>服务的一个或多个进程在运行中</td></tr><tr><td>active(exited)</td><td>一次性运行的服务成功被执行并退出(服务运行后完成任务,相关进程会自动退出)</td></tr><tr><td>active(waiting)</td><td>服务已经运行但在等待某个事件</td></tr><tr><td>inactive</td><td>服务没有在运行</td></tr><tr><td>enable</td><td>服务设定为开机运行</td></tr><tr><td>disabled</td><td>服务设定为开机不运行</td></tr><tr><td>static</td><td>服务不能被设定开机启动,但可以由其他服务启动该服务</td></tr></tbody></table><h3 id="6-定时任务">6.定时任务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#什么是crond</span></span><br><span class="line">crond就是计划任务，类似于我们平时生活中的闹钟，定点执行。</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# ps aux|grep crond</span><br><span class="line">root 6349 0.0 0.1 126284 1612 ? Ss 16:00 0:00 /usr/sbin/crond -n</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#free 查看内存情况</span></span><br><span class="line">[root@lb01 ~]# free -m（以m显示内存多少）</span><br><span class="line">总内存 已使用空闲可使用内存</span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:            972          89         760           7         123         737</span><br><span class="line">Swap:          1023           0        1023</span><br><span class="line"></span><br><span class="line"><span class="comment">#Centos6可使用内存</span></span><br><span class="line">[root@localhost ~]# free</span><br><span class="line">总内存 已使用空闲</span><br><span class="line">             total       used       free     shared    buffers     cached</span><br><span class="line">Mem:       1004768     170984     833784        220      13336      48440</span><br><span class="line">-/+ buffers/cache:     109208     895560(可使用内存) </span><br><span class="line">Swap:      1048572          0    1048572</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#截取需要的内存信息</span></span><br><span class="line">总内存：free -m|awk <span class="string">&#x27;/^Mem/&#123;print $2&#125;&#x27;</span></span><br><span class="line">已使用内存：free -m|awk <span class="string">&#x27;/^Mem/&#123;print $3&#125;&#x27;</span></span><br><span class="line">可用内存：free -m|awk <span class="string">&#x27;/^Mem/&#123;print $NF&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#写进脚本</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">mem_total=`free -m|awk <span class="string">&#x27;/^Mem/&#123;print $2&#125;&#x27;</span>`</span><br><span class="line">mem_used=`free -m|awk <span class="string">&#x27;/^Mem/&#123;print $3&#125;&#x27;</span>`</span><br><span class="line">mem_ava=`free -m|awk <span class="string">&#x27;/^Mem/&#123;print $NF&#125;&#x27;</span>`</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;------ 内存信息 ------&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;总内存：<span class="variable">$&#123;mem_total&#125;</span>M&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;已使用内存：<span class="variable">$&#123;mem_used&#125;</span>M&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;可用内存：<span class="variable">$&#123;mem_ava&#125;</span>M&quot;</span></span><br></pre></td></tr></table></figure><h4 id="1-定时任务语法">1.定时任务语法</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#！！定时任务最小只能达到分钟级</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 定时任务配置文件</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">cat</span> /etc/crontab</span><br><span class="line"><span class="comment">## 定时任务编写的语法</span></span><br><span class="line">SHELL=/bin/bash</span><br><span class="line"><span class="comment">## 可直接执行的命令（以后写在定时任务中的命令，最好加上绝对路径）</span></span><br><span class="line">PATH=/sbin:/bin:/usr/sbin:/usr/bin</span><br><span class="line"><span class="comment">## 定时任务输出的内容，会以邮件的形式发给root用户</span></span><br><span class="line">MAILTO=root</span><br><span class="line"><span class="comment"># For details see man 4 crontabs</span></span><br><span class="line"><span class="comment"># Example of job definition:</span></span><br><span class="line"><span class="comment"># .---------------- minute (0 - 59)</span></span><br><span class="line"><span class="comment"># | .------------- hour (0 - 23)</span></span><br><span class="line"><span class="comment"># | | .---------- day of month (1 - 31)</span></span><br><span class="line"><span class="comment"># | | | .------- month (1 - 12) OR jan,feb,mar,apr ...</span></span><br><span class="line"><span class="comment"># | | | | .---- day of week (0 - 6) (Sunday=0 or 7) OR</span></span><br><span class="line">sun,mon,tue,wed,thu,fri,sat</span><br><span class="line"><span class="comment"># | | | | |</span></span><br><span class="line"><span class="comment"># * * * * * user-name command to be executed</span></span><br><span class="line"><span class="comment"># PATH的作用：是一个环境变量，所有的可执行文件，可以不加路径直接执行</span></span><br><span class="line">[root@localhost ~]# <span class="built_in">echo</span> <span class="variable">$PATH</span></span><br><span class="line">/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin</span><br><span class="line">* * * * * [用户] 可执行的命令</span><br><span class="line"></span><br><span class="line">分 时 日 月 周</span><br><span class="line">00 02 * * * <span class="built_in">ls</span> <span class="comment"># 每天凌晨两点整执行 ls 命令</span></span><br><span class="line"></span><br><span class="line">00 02 1 * * <span class="built_in">ls</span> <span class="comment"># 每月的1号凌晨两点执行 ls 命令</span></span><br><span class="line"></span><br><span class="line">00 02 14 2 * <span class="built_in">ls</span> <span class="comment"># 每年的2月14号凌晨2点执行 ls 命令</span></span><br><span class="line"></span><br><span class="line">00 02 * * 7 <span class="built_in">ls</span> <span class="comment"># 每周周日凌晨2点执行 ls 命令</span></span><br><span class="line"></span><br><span class="line">00 02 * 6 5 <span class="built_in">ls</span> <span class="comment"># 每个6月份的周五凌晨2点执行 ls 命令</span></span><br><span class="line"></span><br><span class="line">00 02 14 * 7 <span class="built_in">ls</span> <span class="comment"># 每个月的14号恰巧是周日时凌晨2点执行 ls 命令</span></span><br><span class="line"></span><br><span class="line">00 02 14 2 7 <span class="built_in">ls</span> <span class="comment"># 每年2月14日恰巧是周日的凌晨2点执行 ls 命令</span></span><br><span class="line"></span><br><span class="line">*/10 02 * * * <span class="built_in">ls</span> <span class="comment"># 每天凌晨2点开始每隔10分钟执行一次 ls 命令</span></span><br><span class="line"></span><br><span class="line">* * * * * <span class="built_in">ls</span> <span class="comment"># 每分钟执行一次ls命令</span></span><br><span class="line">*/1 * * * * <span class="built_in">ls</span> <span class="comment"># 每分钟执行一次ls命令</span></span><br><span class="line"></span><br><span class="line">00 00 14 2 * <span class="built_in">ls</span> <span class="comment"># 每个2月14日零点执行一次 ls 命令</span></span><br><span class="line"></span><br><span class="line">*/5 * * * * <span class="built_in">ls</span> <span class="comment"># 每隔五分钟执行一次 ls 命令</span></span><br><span class="line"></span><br><span class="line">00 02 * 1,5,8 * <span class="built_in">ls</span> <span class="comment"># 每年的1月5月8月的每天凌晨2点执行一次 ls 命令</span></span><br><span class="line"></span><br><span class="line">00 02 1-8 * * <span class="built_in">ls</span> <span class="comment"># 每个月的1号到8号的凌晨2点执行一次 ls 命令</span></span><br><span class="line"></span><br><span class="line">0 21 * * * <span class="built_in">ls</span> <span class="comment"># 每天晚上9点执行一次 ls 命令</span></span><br><span class="line">* 21 * * * <span class="built_in">ls</span> <span class="comment"># 每天晚上9点开始每一分钟都执行一次 ls 命令</span></span><br><span class="line"></span><br><span class="line">45 4 1,10,22 * * <span class="built_in">ls</span> <span class="comment"># 每个月的1号 10号 22号的凌晨4点45分执行一次 ls 命令</span></span><br><span class="line"></span><br><span class="line">45 4 1-10 * * <span class="built_in">ls</span> <span class="comment"># 每个月的1号到10号的凌晨4点45分执行一次 ls 命令</span></span><br><span class="line"></span><br><span class="line">3,15 8-11 */2 * * <span class="built_in">ls</span> <span class="comment"># 每隔两天的8点03 8点15 ... 11点03 11点15执行一次 ls 命令</span></span><br><span class="line"></span><br><span class="line">0 23-7/1 * * * <span class="built_in">ls</span> <span class="comment"># 每天的0点到7点和23点到0点整执行一次 ls 命令</span></span><br><span class="line"></span><br><span class="line">15 21 * * 1-5 <span class="built_in">ls</span> <span class="comment"># 每周一到周五晚上9点15分执行一次 ls 命令</span></span><br></pre></td></tr></table></figure><h4 id="2-crontab命令选项">2.crontab命令选项</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">-e：edit 编辑</span><br><span class="line">-l：查看当前登录用户都有哪些定时任务</span><br><span class="line">-u：指定用户查看定时任务</span><br><span class="line">-r：清空所有定时任务</span><br><span class="line"><span class="comment">## 每分钟，同步一下系统时间</span></span><br><span class="line">[root@localhost ~]# crontab -e</span><br><span class="line"><span class="comment"># By: zls Date: 2024-05-06 Name: sync system time</span></span><br><span class="line">* * * * * /usr/sbin/ntpdate ntp1.aliyun.com &amp;&gt;/dev/null</span><br><span class="line"><span class="comment"># 注意：</span></span><br><span class="line">1）命令绝对路径</span><br><span class="line">2）输出定向到空</span><br><span class="line">3）定时任务加注释</span><br><span class="line"><span class="comment">## 每天做备份，将/etc目录打包为：2024-05-06_hostname_etc.tar.gz</span></span><br><span class="line">[root@web01 /]# <span class="built_in">cd</span> / &amp;&amp; tar zcf /tmp/$(<span class="built_in">date</span> +%F)_$(hostname -s)_etc.tar.gz etc</span><br><span class="line">[root@web01 ~]# vi /opt/backup.sh</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="built_in">cd</span> / &amp;&amp; tar zcf /tmp/$(<span class="built_in">date</span> +%F)_$(hostname -s)_etc.tar.gz etc</span><br><span class="line"></span><br><span class="line"><span class="comment">#实时查看定时任务执行结果</span></span><br><span class="line">[root@lb01 ~]# <span class="built_in">tail</span> -f /var/log/cron</span><br><span class="line"></span><br><span class="line"><span class="comment"># 时间格式化输出：</span></span><br><span class="line"></span><br><span class="line">[root@localhost ~]# <span class="built_in">date</span> +%F-%H:%M:%S</span><br><span class="line">2024-05-13-17:35:25</span><br><span class="line"></span><br><span class="line">%F：年月日</span><br><span class="line">%Y：year 年</span><br><span class="line">%m：mouth 月</span><br><span class="line">%d：day 日</span><br><span class="line">%H：hour时</span><br><span class="line">%M：minute分</span><br><span class="line">%S：seconds秒</span><br><span class="line">%A:星期</span><br><span class="line">%w：星期（阿拉伯数字显示）</span><br></pre></td></tr></table></figure><h4 id="3-crontab注意事项">3.crontab注意事项</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1) 给定时任务注释</span><br><span class="line">2) 将需要定期执行的任务写入Shell脚本中，避免直接使用命令无法执行的情况tar <span class="built_in">date</span></span><br><span class="line">3) 定时任务的结尾一定要有&amp;&gt;/dev/null或者将结果追加重定向&gt;&gt;/tmp/date.log文件</span><br><span class="line">4) 注意有些命令是无法成功执行的 <span class="built_in">echo</span> <span class="string">&quot;123&quot;</span> &gt;&gt;/tmp/test.log &amp;&gt;/dev/null</span><br><span class="line">5.如果一定要是用命令，命令必须使用绝对路径</span><br></pre></td></tr></table></figure><h4 id="4-定时任务—做备份">4.定时任务—做备份</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# ll /var/spool/cron/</span><br><span class="line">total 8</span><br><span class="line">-rw------- 1 root root 165 May 6 11:32 root</span><br><span class="line">-rw------- 1 zls zls 27 May 6 2024 zls</span><br><span class="line"></span><br><span class="line"><span class="comment">#拒绝用户使用定时任务</span></span><br><span class="line">[root@web01 ~]# <span class="built_in">echo</span> <span class="string">&#x27;username&#x27;</span> &gt; /etc/cron.deny</span><br></pre></td></tr></table></figure><h4 id="5-计划任务调试思路">5.计划任务调试思路</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">1.crond调试</span><br><span class="line">1) 调整任务每分钟执行的频率, 以便做后续的调试。</span><br><span class="line">2) 如果使用cron运行脚本，请将脚本执行的结果写入指定日志文件, 观察日志内容是否正常。</span><br><span class="line">3) 命令使用绝对路径, 防止无法找到命令导致定时任务执行产生故障。</span><br><span class="line">4) 通过查看/var/log/cron日志，以便检查我们执行的结果，方便进行调试。</span><br><span class="line">2.crond编写思路</span><br><span class="line">1.手动执行命令，然后保留执行成功的结果。</span><br><span class="line">2.编写脚本</span><br><span class="line">脚本需要统一路径/scripts</span><br><span class="line">脚本内容复制执行成功的命令(减少每个环节出错几率)</span><br><span class="line">脚本内容尽可能的优化, 使用一些变量或使用简单的判断语句</span><br><span class="line">脚本执行的输出信息可以重定向至其他位置保留或写入/dev/null</span><br><span class="line">3.执行脚本</span><br><span class="line">使用bash命令执行, 防止脚本没有增加执行权限(/usr/bin/bash)</span><br><span class="line">执行脚本成功后，复制该执行的命令，以便写入cron</span><br><span class="line">4.编写计划任务</span><br><span class="line">加上必要的注释信息, 人、时间、任务</span><br><span class="line">设定计划任务执行的周期</span><br><span class="line">粘贴执行脚本的命令(不要手敲)</span><br><span class="line">5.调试计划任务</span><br><span class="line">增加任务频率测试</span><br><span class="line">检查环境变量问题</span><br><span class="line">检查crond服务日志</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="6-使用定时任务发邮件">6.使用定时任务发邮件</h4><p><strong>配置邮箱</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.安装发送邮件的工具</span></span><br><span class="line"></span><br><span class="line">[root@web01 ~]# yum install -y mailx</span><br><span class="line"><span class="comment"># 2.配置邮箱</span></span><br><span class="line">[root@web01 ~]# vi /etc/mail.rc</span><br><span class="line"><span class="built_in">set</span> from=邮箱<span class="comment">#发件人</span></span><br><span class="line"><span class="built_in">set</span> smtp=smtps://smtp.qq.com:465    <span class="comment">#邮箱协议，端口</span></span><br><span class="line"><span class="built_in">set</span> smtp-auth-user=邮箱 <span class="comment">#登录邮箱账号</span></span><br><span class="line"><span class="built_in">set</span> smtp-auth-password=客户端授权码   <span class="comment">#邮箱授权码</span></span><br><span class="line"><span class="built_in">set</span> smtp-auth=login</span><br><span class="line"><span class="built_in">set</span> ssl-verify=ignore</span><br><span class="line"><span class="built_in">set</span> nss-config-dir=/etc/pki/nssdb/</span><br></pre></td></tr></table></figure><p><strong>邮箱生成授权码</strong></p><p><img src="https://cos.lukme.top/Pic/image-20240506170025656.png" alt="image-20240506170025656"></p><p><strong>发邮件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# <span class="built_in">echo</span> <span class="string">&#x27;邮件内容&#x27;</span> |mail -s <span class="string">&#x27;邮件标题&#x27;</span> 3078155561@qq.com</span><br><span class="line">[root@web01 ~]# <span class="built_in">cat</span> /etc/passwd|mail -s <span class="string">&#x27;test&#x27;</span> 3078155561@qq.com</span><br><span class="line"><span class="built_in">cat</span> /root/backup.log.txt|mail -s <span class="string">&#x27;备份文件&#x27;</span> 3078155561@qq.com</span><br></pre></td></tr></table></figure><h4 id="7-定时任务实例">7.定时任务实例</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">需求：将备份命令写入一个脚本中 </span><br><span class="line">1.每天备份文件名要求格式：2018-0220_hostname_etc.tar.gz </span><br><span class="line">2.存放备份内容的目录要求只保留3天的数据 </span><br><span class="line">3.在执行计划任务时，不要输出任务信息 </span><br><span class="line">4.备份是否成功结果，发送邮件 </span><br><span class="line"><span class="comment">## 邮件内容：</span></span><br><span class="line">备份时间：精确到秒</span><br><span class="line">备份文件名：2024-05-06_web01_etc.tar.gz </span><br><span class="line">备份路径：/tmp </span><br><span class="line">是否成功：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">vim backup.sh</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#找到最近三天文件并打包</span></span><br><span class="line">find /etc/* -<span class="built_in">type</span> d -mtime -3|xargs tar zcf /tmp/$(<span class="built_in">date</span> +%F)_$(hostname -s)_etc.tar.gz</span><br><span class="line"><span class="comment">#echo &#x27;Backup Success!!!!&#x27;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;备份时间：<span class="subst">$(date +%Y/%m/%d\ %H:%M:%S)</span>&quot;</span> &gt;&gt;backuplog.txt</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;备份文件名：<span class="subst">$(date +%F)</span>_<span class="subst">$(hostname -s)</span>_etc.tar.gz&quot;</span> &gt;&gt;backuplog.txt</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;备份路径：/tmp&quot;</span> &gt;&gt;backuplog.txt</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;是否备份成功：是&quot;</span> &gt;&gt;backuplog.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建定时任务并发邮件</span></span><br><span class="line">[root@lb01 ~]# crontab -e</span><br><span class="line"><span class="comment"># By: lgj Date: 2024-05-06 Name:Backup</span></span><br><span class="line"></span><br><span class="line">0 23 * * * /usr/bin/sh backup.sh  &amp;&gt;/dev/null</span><br><span class="line">0 00 * * * /usr/bin/cat /root/backup.log.txt|mail -s <span class="string">&#x27;备份文件&#x27;</span> 3078155561@qq.com</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">需求：将备份命令写入一个脚本中</span><br><span class="line">任务：</span><br><span class="line">1.每天备份文件名要求格式：2018-02-20_hostname_etc.tar.gz</span><br><span class="line">2.存放备份内容的目录要求只保留3天的数据</span><br><span class="line">3.在执行计划任务时，不要输出任务信息</span><br><span class="line">4.备份是否成功结果，发送邮件</span><br><span class="line"><span class="comment">## 邮件内容：</span></span><br><span class="line">备份文件名：2024-05-06_web01_etc.tar.gz</span><br><span class="line">备份路径：/tmp</span><br><span class="line">是否成功：</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> / &amp;&amp; tar zcf $(<span class="built_in">date</span> +%F)_$(hostname -s)_etc.tar.gz</span><br><span class="line"></span><br><span class="line">find /etc/* -<span class="built_in">type</span> d -mtime -3</span><br><span class="line"></span><br><span class="line">tar zcf /tmp/$(<span class="built_in">date</span> +%F)_$(hostname -s)_etc.tar.gz /etc/*</span><br><span class="line"></span><br><span class="line">find /etc/* -<span class="built_in">type</span> d -mtime -3|xargs tar zcf /tmp/$(<span class="built_in">date</span> +%F)_$(hostname -s)_etc.tar.gz</span><br></pre></td></tr></table></figure><h3 id="7-修改网卡名">7.修改网卡名</h3><p><img src="https://cos.lukme.top/Pic/image-20240501114139869.png" alt="image-20240501114139869"></p><p><img src="https://cos.lukme.top/Pic/image-20240501114157577.png" alt="image-20240501114157577"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">biosdevname=0 net.ifnames=0</span><br><span class="line">net.ifnames=0<span class="comment">#不是dell物理机环境</span></span><br></pre></td></tr></table></figure><h2 id="【9】三剑客">【9】三剑客</h2><h3 id="正则表达式">正则表达式</h3><h4 id="1-正则符号">1. 正则符号</h4><table><thead><tr><th>分类</th><th></th></tr></thead><tbody><tr><td>基础正则  Basic RE (BRE)</td><td>^   $   ^$  .   *  .*   [a-z]   [^abc  ]</td></tr><tr><td>扩展正则 Extended RE (ERE)</td><td>+   |    ()     ?</td></tr></tbody></table><h4 id="扩展正则">扩展正则</h4><table><thead><tr><th>符号</th><th>作用</th></tr></thead><tbody><tr><td>+</td><td>前一个字连续出现1次或者1次以上</td></tr><tr><td>|</td><td>表示或者</td></tr><tr><td>()</td><td>（）里面的内容可以看成是一个整体</td></tr><tr><td>{}</td><td>指定出现的次数</td></tr><tr><td>？</td><td>前一个字符出现了0次或1次</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[a-z]+   匹配连续出现的单词，贪婪匹配</span><br><span class="line">[0-9]+   匹配连续出现的数字，贪婪匹配</span><br><span class="line"><span class="comment">#（）</span></span><br><span class="line">过滤出oldboy或者oldbey</span><br><span class="line">[root@lb01 ~s]#egrep <span class="string">&#x27;oldb(o|e)y&#x27;</span> oldboy.txt</span><br><span class="line">[root@lb01 ~s]#egrep <span class="string">&#x27;oldb[oe]y&#x27;</span> oldboy.txt</span><br><span class="line"><span class="comment">#&#123;&#125;</span></span><br><span class="line">0&#123;m,n&#125;  0至少出现m次，至多出现n次 </span><br><span class="line">0&#123;3&#125;0出现了3次</span><br><span class="line">0&#123;m,&#125;0至少出现m次，最多出现次数不限</span><br><span class="line">0&#123;,n&#125;0至多出现n次，最少出现次数不限</span><br><span class="line"><span class="comment">#?</span></span><br><span class="line">[root@lb01 ~s]#egrep <span class="string">&#x27;go?d&#x27;</span> oldboy.txt</span><br><span class="line">god</span><br><span class="line">gd</span><br></pre></td></tr></table></figure><h4 id="2-正则-通配符">2.正则&amp;通配符</h4><table><thead><tr><th>分类</th><th>用途</th><th>支持的命令</th></tr></thead><tbody><tr><td>正则(re)</td><td>三剑客，高级语言，进行过滤（匹配字符）</td><td>三剑客grep sed，awk，find，rename，expr</td></tr><tr><td>通配符(pathname extension 或 glob)</td><td>匹配文件/文件名   *.txt</td><td>linux下大部分都支持</td></tr></tbody></table><h3 id="三剑客">三剑客</h3><table><thead><tr><th>命令</th><th>特点</th><th>场景</th></tr></thead><tbody><tr><td>grep</td><td>过滤</td><td>grep命令过滤速度是最快的</td></tr><tr><td>sed</td><td>替换，修改文件内容，取行</td><td>如果要进行替换/修改文件内容取<br />取出某个范围的内容(从早上10:00到11:00)</td></tr><tr><td>awk</td><td>取列，统计</td><td>取列，对比，比较<br />统计，计算</td></tr></tbody></table><h4 id="grep专区">grep专区</h4><table><thead><tr><th>选项</th><th>作用</th></tr></thead><tbody><tr><td>-n</td><td>显示行号</td></tr><tr><td>-A</td><td>After 过滤关键字并打印出后N行</td></tr><tr><td>-B</td><td>Before 过滤关键字并打印出前N行</td></tr><tr><td>-C</td><td>Center 过滤关键字并打印出前后N行</td></tr><tr><td>-v</td><td>取反</td></tr><tr><td>-o</td><td>只显示关键字内容</td></tr><tr><td>-i</td><td>忽略大小写</td></tr><tr><td>-w</td><td>精确匹配</td></tr><tr><td>-c</td><td>相当于count，用于统计行数</td></tr><tr><td>-r/-R</td><td>递归搜索目录及目录下得文件</td></tr></tbody></table><h5 id="字符">字符</h5><table><thead><tr><th>关键字可以使用的符号</th><th>作用</th></tr></thead><tbody><tr><td>^</td><td>以…开头    [^ abc]表示非abc的内容</td></tr><tr><td>$</td><td>以…结尾     ^$可以表示空行</td></tr><tr><td>.</td><td>任意一个字符</td></tr><tr><td>*</td><td>*号前面的单个字符匹配0次或多次</td></tr><tr><td>|</td><td>正则表达式里面或者意思，grep默认不支持正则表达式，需要用-E</td></tr><tr><td>\b</td><td>边界符  例:\boldboy\b</td></tr><tr><td>注意:[]里的内容一般都会去掉特殊含义，做自己</td><td></td></tr></tbody></table><blockquote><p>转义字符  \</p><p>\n  回车换行</p><p>\t  tab键</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;/K.*D/ &#123;print $6&#125;&#x27;</span>  /K.*D/这是搜索A开头D开头的字符</span><br><span class="line">如果搜索内容里面含有/，需要使用转义符，例如awk <span class="string">&#x27;/\/sbin\/nologin/ &#123;print $6&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">grep -r逐级搜索</span><br><span class="line">[root@lb01 ~]# grep -r <span class="string">&#x27;K.*D&#x27;</span> /root</span><br><span class="line">/root/11.txt:47 Oct 3ZL1998 LPSX 43.00 KVM9D 512</span><br><span class="line">/root/11.txt:483 may 5PA1998 USP 37.00 KVM9D 644</span><br><span class="line"></span><br><span class="line">grep -rl只显示文件名</span><br><span class="line">[root@lb01 ~]# grep -rl <span class="string">&#x27;K.*D&#x27;</span> /root</span><br><span class="line">/root/anaconda-ks.cfg</span><br><span class="line">/root/11.txt</span><br></pre></td></tr></table></figure><p><strong>grep专区</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">KabcD  过滤K开头D结尾的内容  .*代表任意字符</span><br><span class="line">[root@lb02 ~]# grep <span class="string">&#x27;K.*D&#x27;</span> 1.txt </span><br><span class="line"></span><br><span class="line">过滤至少以一个空白字符开头的行，+代表贪婪匹配</span><br><span class="line">[root@lb02 ~]# grep -E <span class="string">&#x27;^[ ]+&#x27;</span> 1.txt</span><br><span class="line"><span class="comment"># ^&amp;可以表示空行</span></span><br><span class="line"></span><br><span class="line">过滤以a或者b开头的行</span><br><span class="line">1.[root@lb02 ~]# grep <span class="string">&#x27;^[ab]&#x27;</span> 1.txt </span><br><span class="line">2.[root@lb02 ~]# grep -E <span class="string">&#x27;^(a|b)&#x27;</span> 1.txt    grep -E <span class="string">&#x27;^a|^b&#x27;</span> 1.txt </span><br><span class="line"></span><br><span class="line">过滤a11ab类型的内容（字母 数字 数字 字母 字母）</span><br><span class="line">[root@lb02 ~]# grep -E <span class="string">&#x27;[a-z][0-9][0-9][a-z][a-z]&#x27;</span> 1.txt</span><br><span class="line">[root@lb02 ~]# grep -E <span class="string">&#x27;[a-z][0-9]&#123;2&#125;[a-z]&#123;2&#125;&#x27;</span> 1.txt &#123;2&#125;表示前面的出现了2次</span><br><span class="line"></span><br><span class="line">过滤 字母开头且后面跟至少2个到4个数字的内容</span><br><span class="line">[root@lb02 ~]# grep -Eo <span class="string">&#x27;^[a-z][0-9]&#123;2,4&#125;&#x27;</span> 1.txt </span><br><span class="line">a11</span><br><span class="line">b1232</span><br><span class="line"><span class="comment">##利用扩展正则表达式分别表示</span></span><br><span class="line">0-9、   10-99、      100-199、    200-249、    250-255</span><br><span class="line">[0-9]  [1-9][0-9]   1[0-9][0-9]   2[0-4][0-9]  25[0-5]</span><br><span class="line">过滤非字母开头的内容</span><br><span class="line">[root@lb02 ~]# grep <span class="string">&#x27;^[^a-zA-Z]&#x27;</span> 1.txt</span><br></pre></td></tr></table></figure><h5 id="和-表或者的区别">| 和[ ]表或者的区别</h5><table><thead><tr><th>符合</th><th>区别</th></tr></thead><tbody><tr><td>|</td><td>1次匹配1个字符    [abc] ==&gt; 或者a或者b或者c</td></tr><tr><td>[ ]</td><td>匹配1个或多个字符  a|b|c    abc|bcd</td></tr></tbody></table><h5 id="使用">( )使用</h5><ul><li>被括起来的内容，表示一个整体（一个字符）</li><li>后向引用（反向引用sed）</li></ul><h4 id="sed命令">sed命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">作用:</span><br><span class="line">1.模糊过滤文件的内容</span><br><span class="line">2.查找指定的行</span><br><span class="line">3.对文件进行增删改查</span><br><span class="line">4.替换</span><br><span class="line">5.格式化输出内容,后向引用</span><br><span class="line">sed 语法格式:</span><br><span class="line">grep <span class="string">&#x27;过滤内容&#x27;</span> 文件</span><br><span class="line">sed <span class="string">&#x27;/过滤内容/&#x27;</span> 文件</span><br><span class="line">sed <span class="string">&#x27;模式 动作&#x27;</span> 文件</span><br><span class="line">sed <span class="string">&#x27;找谁 干啥&#x27;</span> 文件</span><br></pre></td></tr></table></figure><table><thead><tr><th>功能</th><th></th></tr></thead><tbody><tr><td>s</td><td>替换substitute</td></tr><tr><td>p</td><td>显示print</td></tr><tr><td>d</td><td>删除delete</td></tr><tr><td>cai</td><td>增加c/a/i</td></tr></tbody></table><h5 id="sed-查找p">sed-查找p</h5><table><thead><tr><th>‘2p’</th><th>指定行号进行查找</th></tr></thead><tbody><tr><td>‘1,5p’</td><td>指定行号范围查找</td></tr><tr><td>‘/oldboy/p’</td><td>类似于grep过滤，//里面可以写正则</td></tr><tr><td>‘/10:00/,/11:00/p’</td><td>表示范围的过滤</td></tr></tbody></table><p><strong>==查找显示==</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">语法格式：</span><br><span class="line">sed -n <span class="string">&#x27;3p&#x27;</span> 文件 <span class="comment"># print 打印输出</span></span><br><span class="line"><span class="built_in">cat</span> 文件|sed -n <span class="string">&#x27;3p&#x27;</span></span><br><span class="line">[root@db01 ~]# <span class="built_in">head</span> -5 /etc/passwd &gt; test.txt</span><br><span class="line">[root@db01 ~]# sed -n <span class="string">&#x27;3p&#x27;</span> test.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#显示文件的最后一行:</span></span><br><span class="line">[root@db01 ~]# sed -n <span class="string">&#x27;$p&#x27;</span> test.txt</span><br><span class="line">lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br><span class="line"></span><br><span class="line"><span class="comment">#过滤文件的2-4行</span></span><br><span class="line">[root@db01 ~]# sed -n <span class="string">&#x27;2,4p&#x27;</span> test.txt</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line"></span><br><span class="line"><span class="comment">#显示文件的第2行到最后一行</span></span><br><span class="line">[root@db01 ~]# sed -n <span class="string">&#x27;2,$p&#x27;</span> test.txt</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line">lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br><span class="line"></span><br><span class="line"><span class="comment">#处理屏幕上显示的内容</span></span><br><span class="line">[root@db01 ~]# ifconfig eth0|sed -n <span class="string">&#x27;2p&#x27;</span></span><br><span class="line">inet 10.0.0.200 netmask 255.255.255.0 broadcast 10.0.0.255</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>==过滤==</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">语法结构: sed -n <span class="string">&#x27;/过滤的内容/p&#x27;</span> file</span><br><span class="line">[root@db01 ~]# sed -n <span class="string">&#x27;/root/p&#x27;</span> test.txt</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line"></span><br><span class="line">使用正则:</span><br><span class="line">[root@db01 ~]# sed -n <span class="string">&#x27;/^r/p&#x27;</span> test.txt</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line"></span><br><span class="line">过滤以a或b或c开头的行</span><br><span class="line">[root@db01 ~]# sed -n <span class="string">&#x27;/^[a-c]/p&#x27;</span> test.txt</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line"></span><br><span class="line">过滤以什么结尾的行</span><br><span class="line">[root@db01 ~]# sed -n <span class="string">&#x27;/h$/p&#x27;</span> test.txt</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line"></span><br><span class="line">[root@db01 ~]# sed -n <span class="string">&#x27;/n$/p&#x27;</span> test.txt</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line">lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br><span class="line"></span><br><span class="line">过滤区间范围:</span><br><span class="line">sed -n <span class="string">&#x27;//,//p&#x27;</span> 文件</span><br><span class="line">sed -n <span class="string">&#x27;2,4p&#x27;</span> 文件</span><br><span class="line">过滤字符串区间范围:</span><br><span class="line">[root@db01 ~]# sed -n <span class="string">&#x27;/^bin/,/^a/p&#x27;</span> test.txt</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line"></span><br><span class="line">案例: 过滤时间 统计上午8点到中午12点中间数据</span><br><span class="line">[root@linuxnc ~]# sed -n <span class="string">&#x27;/2024:08:00:15/,/2024:09:30:42/p&#x27;</span> /var/log/nginx/access.log</span><br><span class="line"></span><br><span class="line">注意匹配方式:</span><br><span class="line">[root@db01 ~]# <span class="built_in">cat</span> a.txt</span><br><span class="line">aaa</span><br><span class="line">bbb</span><br><span class="line">ccc</span><br><span class="line">bbb</span><br><span class="line">uuu</span><br><span class="line">ddd</span><br><span class="line">eee</span><br><span class="line">fff</span><br><span class="line">ddd</span><br><span class="line">xxx</span><br><span class="line">[root@db01 ~]# sed -n <span class="string">&#x27;/bbb/,/ddd/p&#x27;</span> a.txt</span><br><span class="line">bbb</span><br><span class="line">ccc</span><br><span class="line">bbb</span><br><span class="line">uuu</span><br><span class="line">ddd</span><br></pre></td></tr></table></figure><h5 id="sed-删除d">sed-删除d</h5><table><thead><tr><th>‘1,5d’</th><th>指定行号范围查找</th></tr></thead><tbody><tr><td>‘/oldboy/d’</td><td>类似于grep过滤，//里面可以写正则</td></tr><tr><td>‘2d’</td><td>指定行号进行查找</td></tr><tr><td>‘/10:00/,/11:00/d’</td><td>表示范围的过滤</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">指定行删除:</span><br><span class="line">语法格式: sed <span class="string">&#x27;3d&#x27;</span> file <span class="comment"># 默认不会修改源文件</span></span><br><span class="line">修改源文件 sed -i <span class="string">&#x27;3d&#x27;</span> file</span><br><span class="line"></span><br><span class="line">案例1.删除文件的第3行</span><br><span class="line">[root@db01 ~]# sed <span class="string">&#x27;3d&#x27;</span> test.txt</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br><span class="line"></span><br><span class="line">案例2.删除2到4行</span><br><span class="line">[root@db01 ~]# sed <span class="string">&#x27;2,4d&#x27;</span> test.txt</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line"></span><br><span class="line">案例3.删除2到最后一行</span><br><span class="line">[root@db01 ~]# sed <span class="string">&#x27;2,$d&#x27;</span> test.txt</span><br><span class="line"></span><br><span class="line">模糊过滤内容，然后删除</span><br><span class="line">语法结构: sed <span class="string">&#x27;/字符串/d&#x27;</span> file</span><br><span class="line">删除包含root的行</span><br><span class="line">[root@db01 ~]# sed <span class="string">&#x27;/root/d&#x27;</span> test.txt</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line">lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br><span class="line"></span><br><span class="line">删除b开头的行</span><br><span class="line">[root@db01 ~]# sed <span class="string">&#x27;/^b/d&#x27;</span> test.txt</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line">lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br><span class="line"></span><br><span class="line">-r 支持扩展正则 |或者的意思</span><br><span class="line">[root@db01 ~]# sed -rn <span class="string">&#x27;/^bin|^p/p&#x27;</span> test.txt</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">p:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br><span class="line"></span><br><span class="line">删除bin开头或者lp开头的行</span><br><span class="line">[root@db01 ~]# sed -r <span class="string">&#x27;/^bin|^lp/d&#x27;</span> test.txt</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line"></span><br><span class="line">匹配区间范围进行删除:</span><br><span class="line">[root@db01 ~]# sed <span class="string">&#x27;/^bin/,/^adm/d&#x27;</span> test.txt</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br><span class="line"></span><br><span class="line"><span class="comment"># !妙用</span></span><br><span class="line">sed -nr <span class="string">&#x27;/^&amp;|#/!p&#x27;</span> /etc/ssh/sshd_config   遇到空行和#行不显示</span><br></pre></td></tr></table></figure><h5 id="sed-增加">sed-增加</h5><table><thead><tr><th>功能</th><th>含义</th></tr></thead><tbody><tr><td>c</td><td>replace替代这一行</td></tr><tr><td>a</td><td>append追加，向指定的行或每一行插入内容（行后）</td></tr><tr><td>i</td><td>insert插入，向指定的行或每一行插入内容（行前）</td></tr><tr><td>w</td><td>将找到的内容保存到新文件内</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">sed <span class="string">&#x27;3a root&#x27;</span> /text.txt    <span class="comment">#向第三行后面追加root这一行</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#向文件最后一行中追内容</span></span><br><span class="line">1.</span><br><span class="line"><span class="built_in">cat</span> &gt;&gt;test.txt&lt;&lt;<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">abc</span><br><span class="line">cdf</span><br><span class="line">EOF</span><br><span class="line">2.</span><br><span class="line">sed <span class="string">&#x27;$a abc\nsdf&#x27;</span> test.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用方法</span></span><br><span class="line">1. i 插入 在第3行前写入aaa</span><br><span class="line">[root@db01 ~]# sed <span class="string">&#x27;3i aaa&#x27;</span> test.txt</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">aaa</span><br><span class="line">daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br><span class="line"></span><br><span class="line">2. a追加 在第3行的下一行 在第4行写入aaa</span><br><span class="line">[root@db01 ~]# sed <span class="string">&#x27;3a aaa&#x27;</span> test.txt</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">aaa</span><br><span class="line">adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br><span class="line"></span><br><span class="line">3. c替换 替换整行内容</span><br><span class="line">[root@db01 ~]# sed <span class="string">&#x27;3c aaa&#x27;</span> test.txt</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">aaa</span><br><span class="line">adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br><span class="line"></span><br><span class="line">替换第7行的内容关闭selinux</span><br><span class="line">[root@db01 ~]# sed -i <span class="string">&#x27;7c SELINUX=disabled&#x27;</span> /etc/selinux/config</span><br><span class="line"></span><br><span class="line">4. w 保存 将找到的行保存到新的文件中</span><br><span class="line">[root@db01 ~]# sed <span class="string">&#x27;4w new.txt&#x27;</span> test.txt</span><br><span class="line">保存2到4行的内容到new.txt</span><br><span class="line">[root@db01 ~]# sed -n <span class="string">&#x27;2,4w new.txt&#x27;</span> test.txt</span><br><span class="line">[root@db01 ~]# <span class="built_in">cat</span> new.txt</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="sed-替换s">sed-替换s</h5><ul><li><p>s --&gt; sub substitute 替换</p></li><li><p>g --&gt; global 全局替换，替换所有的匹配的sed默认只替换每行第一个匹配的</p></li><li><p><code>sed中   \u表示大写     \l表示小写</code></p></li></ul><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1. 把每个单词的第一个小写字母变大写：</span><br><span class="line">sed <span class="string">&#x27;s/\b[a-z]/\u&amp;/g&#x27;</span> filename</span><br><span class="line"></span><br><span class="line">2. 把所有小写变大写：</span><br><span class="line">sed <span class="string">&#x27;s/[a-z]/\u&amp;/g&#x27;</span> filename</span><br><span class="line"></span><br><span class="line">3. 大写变小写：</span><br><span class="line">sed <span class="string">&#x27;s/[A-Z]/\l&amp;/g&#x27;</span> filename</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line">语法结构：</span><br><span class="line">sed <span class="string">&#x27;s#将谁#替换成谁#g&#x27;</span> 文件</span><br><span class="line">sed <span class="string">&#x27;s@@@g&#x27;</span> 文件</span><br><span class="line">sed <span class="string">&#x27;s///g&#x27;</span> 文件</span><br><span class="line">案例: 只替换每行的第一个单词 root为oldboy</span><br><span class="line">[root@db01 ~]# sed <span class="string">&#x27;s#root#oldboy#&#x27;</span> test.txt</span><br><span class="line">oldboy:x:0:0:root:/root:/bin/bash</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line"></span><br><span class="line">案例: 替换所有的root为oldboy</span><br><span class="line">[root@db01 ~]# sed <span class="string">&#x27;s#root#oldboy#g&#x27;</span> test.txt</span><br><span class="line">oldboy:x:0:0:oldboy:/oldboy:/bin/bash</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line"></span><br><span class="line">案例: 将root替换成空</span><br><span class="line">[root@db01 ~]# sed <span class="string">&#x27;s#root##g&#x27;</span> test.txt</span><br><span class="line">:x:0:0::/:/bin/bash</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line"></span><br><span class="line">案例: 删除所有的数字</span><br><span class="line">[root@db01 ~]# sed <span class="string">&#x27;s#[0-9]##g&#x27;</span> test.txt</span><br><span class="line">root:x:::root:/root:/bin/bash</span><br><span class="line">bin:x:::bin:/bin:/sbin/nologin</span><br><span class="line"></span><br><span class="line">案例: 删除所有的字符串</span><br><span class="line">[root@db01 ~]# sed <span class="string">&#x27;s#[a-z]##g&#x27;</span> test.txt</span><br><span class="line">::0:0::/://</span><br><span class="line">::1:1::/://</span><br><span class="line"></span><br><span class="line">[root@db01 ~]# sed <span class="string">&#x27;s#[0-z]##g&#x27;</span> test.txt</span><br><span class="line">:::::/://</span><br><span class="line">:::::/://</span><br><span class="line"></span><br><span class="line">案例: 统计passwd中每个单词出现的次数 top10</span><br><span class="line">将特殊符号替换成空</span><br><span class="line">[root@db01 ~]# sed <span class="string">&#x27;s#[:/0-9x]# #g&#x27;</span> test.txt</span><br><span class="line">root root root bin bash</span><br><span class="line">bin bin bin sbin nologin</span><br><span class="line">daemon daemon sbin sbin nologin</span><br><span class="line">adm adm var adm sbin nologin</span><br><span class="line">root root root bin bash</span><br><span class="line">lp lp var spool lpd sbin nologin</span><br><span class="line"></span><br><span class="line">[root@db01 ~]# sed <span class="string">&#x27;s#[:/0-9x]# #g&#x27;</span> test.txt |xargs -n1|<span class="built_in">sort</span> |<span class="built_in">uniq</span> -c|<span class="built_in">sort</span> -rn|<span class="built_in">head</span></span><br><span class="line">6 root</span><br><span class="line">5 sbin</span><br><span class="line">5 bin</span><br><span class="line">4 nologin</span><br><span class="line">3 adm</span><br><span class="line">2 var</span><br><span class="line">2 lp</span><br><span class="line">2 daemon</span><br><span class="line">2 bash</span><br><span class="line">1 spool</span><br><span class="line"></span><br><span class="line">边界符:</span><br><span class="line">[root@db01 ~]# sed <span class="string">&#x27;s#\bbin\b#oldboy#g&#x27;</span> test.txt</span><br><span class="line">或者:</span><br><span class="line">[root@db01 ~]# sed <span class="string">&#x27;s#\&lt;bin\&gt;#oldboy#g&#x27;</span> test.txt</span><br><span class="line">root:x:0:0:root:/root:/oldboy/bash</span><br><span class="line">oldboy:x:1:1:oldboy:/oldboy:/sbin/nologin</span><br><span class="line"></span><br><span class="line">注意: 语法冲突需要使用撬棍\ 或者换个语法</span><br><span class="line">[root@db01 ~]# sed <span class="string">&#x27;s/\/root/\/oldboy/g&#x27;</span> test.txt</span><br><span class="line">或者</span><br><span class="line">[root@db01 ~]# sed <span class="string">&#x27;s#/root#/oldboy#g&#x27;</span> test.txt</span><br><span class="line"></span><br><span class="line">动作:</span><br><span class="line">sed -n <span class="string">&#x27;3p&#x27;</span> 文件</span><br><span class="line">sed <span class="string">&#x27;s###g&#x27;</span> 文件</span><br><span class="line">模式+动作</span><br><span class="line">模式: 找谁，如何找</span><br><span class="line">sed -n <span class="string">&#x27;3p&#x27;</span> <span class="comment"># 找第3行</span></span><br><span class="line">演变: 将p输出动作 修改为替换动作</span><br><span class="line">[root@db01 ~]# sed <span class="string">&#x27;3s#sbin#oldboy#g&#x27;</span> test.txt <span class="comment"># 将第3行的sbin替换成oldboy</span></span><br><span class="line"></span><br><span class="line">案例: 将2到4行的nologin替换成oldboy</span><br><span class="line">[root@db01 ~]# sed <span class="string">&#x27;2,4s#nologin#oldboy#g&#x27;</span> test.txt</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/oldboy</span><br><span class="line">daemon:x:2:2:daemon:/sbin:/sbin/oldboy</span><br><span class="line">adm:x:3:4:adm:/var/adm:/sbin/oldboy</span><br><span class="line">lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br><span class="line"></span><br><span class="line">[root@db01 ~]# sed <span class="string">&#x27;/adm/s#adm#oldboy#g&#x27;</span> test.txt</span><br><span class="line">adm:x:3:4:adm:/var/adm:/sbin/oldboy</span><br><span class="line">↓          ↘         ↘</span><br><span class="line">oldboy:x:3:4:oldboy:/var/oldboy:/sbin/nologin</span><br><span class="line"></span><br><span class="line">区间范围:</span><br><span class="line">[root@db01 ~]# sed <span class="string">&#x27;/adm/,/lp/s#[a-z]##g&#x27;</span> test.txt</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">::3:4:://://</span><br><span class="line">::0:0::/://</span><br><span class="line">::4:7::///://</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="sed-后向引用">sed-后向引用</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">sed后向引用:</span><br><span class="line">语法结构: sed s#()()()#\1\2\3#g     -r支持扩展正则</span><br><span class="line"></span><br><span class="line">[root@db01 ~]# <span class="built_in">echo</span> oldboy|sed -r <span class="string">&#x27;s#(.*)#\1#g&#x27;</span></span><br><span class="line">oldboy</span><br><span class="line">[root@db01 ~]#</span><br><span class="line">[root@db01 ~]# <span class="built_in">echo</span> oldboy|sed -r <span class="string">&#x27;s#ol(.*)oy#\1#g&#x27;</span></span><br><span class="line">db</span><br><span class="line">[root@db01 ~]# <span class="built_in">echo</span> oldboy|sed -r <span class="string">&#x27;s#ol(.*)(oy)#\2#g&#x27;</span></span><br><span class="line">oy</span><br><span class="line">[root@db01 ~]# <span class="built_in">echo</span> oldboy|sed -r <span class="string">&#x27;s#(ol)(.*)(oy)#\1#g&#x27;</span></span><br><span class="line">ol</span><br><span class="line">[root@db01 ~]# <span class="built_in">echo</span> oldboy <span class="built_in">test</span>|sed -r <span class="string">&#x27;s#(.*)#\1#g&#x27;</span></span><br><span class="line">oldboy <span class="built_in">test</span></span><br><span class="line">[root@db01 ~]# <span class="built_in">echo</span> oldboy <span class="built_in">test</span>|sed -r <span class="string">&#x27;s#(.*) test#\1#g&#x27;</span></span><br><span class="line">oldboy</span><br><span class="line"></span><br><span class="line">案例: 取出IP地址</span><br><span class="line">[root@db01 ~]# ifconfig eth0|sed -n <span class="string">&#x27;2p&#x27;</span>|sed -r <span class="string">&#x27;s#^.*t (.*)  netm.*$#\1#g&#x27;</span></span><br><span class="line">10.0.0.200</span><br><span class="line"></span><br><span class="line">第二种用法: 命令拼接后交给bash执行</span><br><span class="line">[root@db01 ~]# <span class="built_in">seq</span> 5|sed -r <span class="string">&#x27;s#(.*)#touch \1.txt#g&#x27;</span></span><br><span class="line"><span class="built_in">touch</span> 1.txt</span><br><span class="line"><span class="built_in">touch</span> 2.txt</span><br><span class="line"><span class="built_in">touch</span> 3.txt</span><br><span class="line"><span class="built_in">touch</span> 4.txt</span><br><span class="line"><span class="built_in">touch</span> 5.txt</span><br><span class="line">[root@db01 ~]# <span class="built_in">seq</span> 5|sed -r <span class="string">&#x27;s#(.*)#touch \1.txt#g&#x27;</span>|bash</span><br><span class="line">-rw-r--r-- 1 root root 18 Mar 18 11:46 1.txt</span><br><span class="line">-rw-r--r-- 1 root root 0 Mar 18 11:46 2.txt</span><br><span class="line">-rw-r--r-- 1 root root 0 Mar 18 11:46 3.txt</span><br><span class="line">-rw-r--r-- 1 root root 0 Mar 18 11:46 4.txt</span><br><span class="line">-rw-r--r-- 1 root root 0 Mar 18 11:46 5.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 批量创建用户</span></span><br><span class="line">[root@db01 ~]# <span class="built_in">echo</span> <span class="built_in">test</span>&#123;1..3&#125;</span><br><span class="line">test1 test2 test3</span><br><span class="line">[root@db01 ~]# <span class="built_in">echo</span> <span class="built_in">test</span>&#123;1..3&#125;|xargs -n1</span><br><span class="line">test1</span><br><span class="line">test2 </span><br><span class="line">test3</span><br><span class="line">[root@db01 ~]# <span class="built_in">echo</span> <span class="built_in">test</span>&#123;1..3&#125;|xargs -n1|sed -r <span class="string">&#x27;s#(.*)#\1#g&#x27;</span></span><br><span class="line">test1</span><br><span class="line">test2</span><br><span class="line">test3</span><br><span class="line">[root@db01 ~]# <span class="built_in">echo</span> <span class="built_in">test</span>&#123;1..3&#125;|xargs -n1|sed -r <span class="string">&#x27;s#(.*)#useradd \1#g&#x27;</span></span><br><span class="line">useradd test1</span><br><span class="line">useradd test2</span><br><span class="line">useradd test3</span><br><span class="line">[root@db01 ~]# <span class="built_in">echo</span> <span class="built_in">test</span>&#123;1..3&#125;|xargs -n1|sed -r <span class="string">&#x27;s#(.*)#useradd \1#g&#x27;</span>|bash</span><br><span class="line"></span><br><span class="line"><span class="comment">#取出/etc/passwd文件权限</span></span><br><span class="line"><span class="built_in">stat</span> /etc/passwd|sed -n <span class="string">&#x27;4p&#x27;</span>|sed -r <span class="string">&#x27;s#^.*(\(0)(.*)/-.*$#\2#g&#x27;</span></span><br><span class="line">或者</span><br><span class="line"><span class="built_in">stat</span> /etc/passwd|sed -nr <span class="string">&#x27;4s#^.*(\(0)(.*)/-.*$#\2#pg&#x27;</span></span><br><span class="line">644</span><br></pre></td></tr></table></figure><h3 id="awk命令">awk命令</h3><table><thead><tr><th>内置变量</th><th>用途</th></tr></thead><tbody><tr><td>NR</td><td>Number of Record记录行号</td></tr><tr><td>NF</td><td>Number of Field每行有多少子字段（列）$NF表示最后一列</td></tr><tr><td>FS</td><td>-F：字段分隔符，每个字段结束标记</td></tr><tr><td>OFS</td><td>Output Field Separator 输出字段分隔符（awk显示每一列的时候通过什么来分割，默认是空格）</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">awk: 编程语言 GNU/awk</span><br><span class="line">作用:</span><br><span class="line">1.取行</span><br><span class="line">2.取列</span><br><span class="line">3.模糊过滤</span><br><span class="line">4.数据统计 数据运算</span><br><span class="line">5.支持<span class="keyword">for</span>循环 <span class="keyword">if</span>判断 数组..</span><br><span class="line">6.格式化输出 sed后向引用</span><br><span class="line">语法结构:</span><br><span class="line">awk <span class="string">&#x27;模式&#x27;</span> file <span class="comment"># 不加任何动作，默认为输出的动作</span></span><br><span class="line">awk <span class="string">&#x27;模式&#123;print&#125;&#x27;</span> file <span class="comment"># 模式+动作</span></span><br><span class="line">其他的命令输出|awk <span class="string">&#x27;模式&#x27;</span></span><br><span class="line">模式: 找谁，怎么找</span><br><span class="line">指定行，指定列找，模糊过滤的找</span><br><span class="line"></span><br><span class="line"><span class="comment">#OFS指定分隔符  -v OFS=:   或者OFS=:    (-v修改参数)</span></span><br><span class="line">[root@web01 ~]# awk -F: <span class="string">&#x27;&#123;print $1,$3,$4&#125;&#x27;</span> OFS=:  /etc/passwd</span><br><span class="line">root:0:0</span><br><span class="line">bin:1:1</span><br></pre></td></tr></table></figure><h4 id="1-查找-过滤">1.查找/过滤</h4><p><strong>==1.awk按照行进行查找==</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#正则搜索某一列</span></span><br><span class="line">//</span><br><span class="line"><span class="variable">$1</span> ~//  匹配第一列的内容</span><br><span class="line"></span><br><span class="line">语法结构:</span><br><span class="line">sed -n <span class="string">&#x27;3p&#x27;</span> file <span class="comment"># sed 输出指定的行</span></span><br><span class="line">awk <span class="string">&#x27;NR==3&#x27;</span> file <span class="comment"># awk输出指定的行</span></span><br><span class="line">awk的内置变量:</span><br><span class="line">NR存放着文件中每行的行号</span><br><span class="line">NR的表达式:</span><br><span class="line">== 等于第几行</span><br><span class="line">&gt; 大于第几行</span><br><span class="line">&lt; 小于第几行</span><br><span class="line">&gt;= 等于等于第几行</span><br><span class="line">&lt;= 小于等于第几行</span><br><span class="line">!= 不等于</span><br><span class="line">&amp;&amp; 并且</span><br><span class="line">|| 或者</span><br><span class="line"></span><br><span class="line">[root@db01 ~]# <span class="built_in">cat</span> 1.txt</span><br><span class="line">1 root:x:0:0:root:/root:/bin/bash</span><br><span class="line">2 bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">3 daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">4 adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line">5 lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br><span class="line"></span><br><span class="line">只显示文件的第3行</span><br><span class="line">[root@db01 ~]# awk <span class="string">&#x27;NR==3&#x27;</span> 1.txt</span><br><span class="line">3 daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line"></span><br><span class="line"><span class="comment">#为什么要加两个等号？</span></span><br><span class="line">一个等号在系统中称为定义变量</span><br><span class="line"></span><br><span class="line">只显示文件中小于3的行</span><br><span class="line">[root@db01 ~]# awk <span class="string">&#x27;NR&lt;3&#x27;</span> 1.txt</span><br><span class="line">1 root:x:0:0:root:/root:/bin/bash</span><br><span class="line">2 bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line"></span><br><span class="line">只显示文件中大于3的行</span><br><span class="line">[root@db01 ~]# awk <span class="string">&#x27;NR&gt;3&#x27;</span> 1.txt</span><br><span class="line">4 adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line">5 lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br><span class="line"></span><br><span class="line">[root@db01 ~]# awk <span class="string">&#x27;NR&lt;=3&#x27;</span> 1.txt</span><br><span class="line">1 root:x:0:0:root:/root:/bin/bash</span><br><span class="line">2 bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">3 daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line"></span><br><span class="line">显示文件中不等于3的行</span><br><span class="line">[root@db01 ~]# awk <span class="string">&#x27;NR!=3&#x27;</span> 1.txt</span><br><span class="line">1 root:x:0:0:root:/root:/bin/bash</span><br><span class="line">2 bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">4 adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line">5 lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br><span class="line"></span><br><span class="line">并且和或者:</span><br><span class="line">&amp;&amp; 并且</span><br><span class="line">案例: 查找大于第2行 并且小于5的行</span><br><span class="line">[root@db01 ~]# awk <span class="string">&#x27;NR&gt;2&amp;&amp;NR&lt;5&#x27;</span> 1.txt</span><br><span class="line">3 daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">4 adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line"></span><br><span class="line">|| 或者</span><br><span class="line">案例: 查找小于第2行，或者大于第4行</span><br><span class="line">[root@db01 ~]# awk <span class="string">&#x27;NR&lt;2||NR&gt;4&#x27;</span> 1.txt</span><br><span class="line">1 root:x:0:0:root:/root:/bin/bash</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>==2.模糊过滤文件内容==</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">语法结构:</span><br><span class="line">grep <span class="string">&#x27;&#x27;</span> 文件</span><br><span class="line">sed -n <span class="string">&#x27;/内容/p&#x27;</span> 文件</span><br><span class="line">awk <span class="string">&#x27;/内容/&#x27;</span> 文件</span><br><span class="line">awk <span class="string">&#x27;//,//&#x27;</span> 文件</span><br><span class="line"></span><br><span class="line"><span class="comment">#awk表示范围</span></span><br><span class="line">awk <span class="string">&#x27;/10:00/,/11:00/&#x27;</span> access.log</span><br><span class="line"></span><br><span class="line">案例1.查找包含root的行</span><br><span class="line">[root@db01 ~]# awk <span class="string">&#x27;/root/&#x27;</span> 1.txt</span><br><span class="line">1 root:x:0:0:root:/root:/bin/bash</span><br><span class="line"></span><br><span class="line">案例2.查找以1开头的行</span><br><span class="line">[root@db01 ~]# awk <span class="string">&#x27;/^r/&#x27;</span> 1.txt</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line"></span><br><span class="line">[root@db01 ~]# awk <span class="string">&#x27;/h$/&#x27;</span> 1.txt</span><br><span class="line">1 root:x:0:0:root:/root:/bin/bash</span><br><span class="line"></span><br><span class="line">[root@db01 ~]# awk <span class="string">&#x27;/^[1-3]/&#x27;</span> 1.txt</span><br><span class="line">1 root:x:0:0:root:/root:/bin/bash</span><br><span class="line">2 bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">3 daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line"></span><br><span class="line">案例3.区间范围 工作中取时间范围较多</span><br><span class="line">[root@db01 ~]# awk <span class="string">&#x27;/^2/,/^4/&#x27;</span> 1.txt</span><br><span class="line">2 bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">3 daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">4 adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line">注意: 三剑客支持扩展正则写法</span><br><span class="line">grep -E 或者egrep</span><br><span class="line">sed -r</span><br><span class="line">awk 默认支持扩展正则</span><br></pre></td></tr></table></figure><h4 id="2-awk取列">2.awk取列</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br></pre></td><td class="code"><pre><span class="line">语法结构:</span><br><span class="line">awk <span class="string">&#x27;&#123;print $n&#125;&#x27;</span> file</span><br><span class="line"><span class="variable">$0</span> awk的内置变量里面存放着每行的内容,(可以判断awk执行的哪些行内容)</span><br><span class="line"><span class="variable">$1</span> 表示第1列 默认以空格和tab键为分隔符，如果文件中没有空格和tab键则文件内容被当做第一列</span><br><span class="line"><span class="variable">$2</span> 表示第2列</span><br><span class="line">，逗号 内置变量，表示空格</span><br><span class="line">NF 表示最后一列的列号</span><br><span class="line"><span class="variable">$NF</span> 表示最后一列的内容</span><br><span class="line">注意: 所有的字符串在awk中被识别为变量，所以输出字符串必须加双引号</span><br><span class="line"></span><br><span class="line">awk指定分隔符: 默认以tab键或空格分隔</span><br><span class="line">-F</span><br><span class="line">awk -F: <span class="comment"># 方法1</span></span><br><span class="line">awk -F <span class="string">&quot;:&quot;</span> <span class="comment"># 方法2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#$0用法，加上$0就可以看awk取的是哪些内容</span></span><br><span class="line">[root@web01 zzz]# <span class="built_in">cat</span> /etc/passwd|awk -F <span class="string">&#x27;[ :]+&#x27;</span> <span class="string">&#x27;NR&gt;5&amp;&amp;NR&lt;8&#123;print $1,$2&#125;&#x27;</span></span><br><span class="line"><span class="built_in">sync</span> x</span><br><span class="line">shutdown x</span><br><span class="line">[root@web01 zzz]# <span class="built_in">cat</span> /etc/passwd|awk -F <span class="string">&#x27;[ :]+&#x27;</span> <span class="string">&#x27;NR&gt;5&amp;&amp;NR&lt;8&#123;print $1,$2,$0&#125;&#x27;</span></span><br><span class="line"><span class="built_in">sync</span> x <span class="built_in">sync</span>:x:5:0:<span class="built_in">sync</span>:/sbin:/bin/sync</span><br><span class="line">shutdown x shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#如何查看每一行有多少列</span></span><br><span class="line">[root@web01 zzz]# awk -F: <span class="string">&#x27;&#123;print NF&#125;&#x27;</span> 1.txt </span><br><span class="line">7</span><br><span class="line">7</span><br><span class="line">7</span><br><span class="line">7</span><br><span class="line"></span><br><span class="line">案例1.显示文件的第一列</span><br><span class="line">[root@db01 ~]# <span class="built_in">cat</span> 1.txt</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line">lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br><span class="line"><span class="built_in">sync</span>:x:5:0:<span class="built_in">sync</span>:/sbin:/bin/sync</span><br><span class="line"></span><br><span class="line">案例1.打印出第一列</span><br><span class="line">[root@db01 ~]# awk -F: <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> 1.txt</span><br><span class="line">root</span><br><span class="line">bin</span><br><span class="line">daemon</span><br><span class="line">adm</span><br><span class="line">lp</span><br><span class="line"><span class="built_in">sync</span></span><br><span class="line"></span><br><span class="line">案例2.显示文件的第1列和第3列</span><br><span class="line">[root@db01 ~]# awk -F: <span class="string">&#x27;&#123;print $1,$3&#125;&#x27;</span> 1.txt</span><br><span class="line">root 0</span><br><span class="line">bin 1</span><br><span class="line">daemon 2</span><br><span class="line">adm 3</span><br><span class="line">lp 4</span><br><span class="line"><span class="built_in">sync</span> 5</span><br><span class="line"></span><br><span class="line">[root@db01 ~]# awk -F: <span class="string">&#x27;&#123;print $1&quot;---&quot;$3&#125;&#x27;</span> 1.txt</span><br><span class="line">root---0</span><br><span class="line">bin---1</span><br><span class="line">daemon---2</span><br><span class="line">adm---3</span><br><span class="line">lp---4</span><br><span class="line">sync---5</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">案例.先输出第3列 后面输出第1列</span><br><span class="line">[root@db01 ~]# awk -F: <span class="string">&#x27;&#123;print $3&quot; &quot;$1&#125;&#x27;</span> 1.txt</span><br><span class="line">0 root</span><br><span class="line">1 bin</span><br><span class="line">2 daemon</span><br><span class="line">3 adm</span><br><span class="line">4 lp</span><br><span class="line">5 <span class="built_in">sync</span></span><br><span class="line"></span><br><span class="line">案例: 取出最后一列的内容:</span><br><span class="line">[root@db01 ~]# awk -F: <span class="string">&#x27;&#123;print $NF&#125;&#x27;</span> 1.txt</span><br><span class="line">/bin/bash</span><br><span class="line">/sbin/nologin</span><br><span class="line">/sbin/nologin</span><br><span class="line">/sbin/nologin</span><br><span class="line">/sbin/nologin</span><br><span class="line">/bin/sync</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@web01 zzz]# <span class="built_in">df</span> -h</span><br><span class="line">Filesystem      Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/sda3        19G  1.9G   17G  11% /</span><br><span class="line">devtmpfs        476M     0  476M   0% /dev</span><br><span class="line">tmpfs           487M     0  487M   0% /dev/shm</span><br><span class="line">tmpfs           487M   20M  467M   5% /run</span><br><span class="line">tmpfs           487M     0  487M   0% /sys/fs/cgroup</span><br><span class="line">/dev/sda1       497M  120M  378M  25% /boot</span><br><span class="line">tmpfs            98M     0   98M   0% /run/user/0</span><br><span class="line"></span><br><span class="line">案例: 取出磁盘中的第5列</span><br><span class="line">[root@db01 ~]# <span class="built_in">df</span> -h|awk <span class="string">&#x27;&#123;print $5&#125;&#x27;</span></span><br><span class="line">Use%</span><br><span class="line">11%</span><br><span class="line">0%</span><br><span class="line">0%</span><br><span class="line">5%</span><br><span class="line">0%</span><br><span class="line">25%</span><br><span class="line">0%</span><br><span class="line"></span><br><span class="line">案例: 取出sda3的行的方法</span><br><span class="line">[root@db01 ~]# <span class="built_in">df</span> -h|grep <span class="string">&#x27;/$&#x27;</span></span><br><span class="line">/dev/sda3        19G  1.9G   17G  11% /</span><br><span class="line"></span><br><span class="line">[root@db01 ~]# <span class="built_in">df</span> -h|grep <span class="string">&#x27;sda3&#x27;</span></span><br><span class="line">/dev/sda3        19G  1.9G   17G  11% /</span><br><span class="line"></span><br><span class="line">[root@db01 ~]# <span class="built_in">df</span> -h|sed -n <span class="string">&#x27;2p&#x27;</span></span><br><span class="line">/dev/sda3        19G  1.9G   17G  11% /</span><br><span class="line"></span><br><span class="line">[root@db01 ~]# <span class="built_in">df</span> -h|sed -n <span class="string">&#x27;/sda3/p&#x27;</span></span><br><span class="line">/dev/sda3        19G  1.9G   17G  11% /</span><br><span class="line"></span><br><span class="line">[root@db01 ~]# <span class="built_in">df</span> -h|sed -n <span class="string">&#x27;/\/$/p&#x27;</span></span><br><span class="line">/dev/sda3        19G  1.9G   17G  11% /</span><br><span class="line"></span><br><span class="line">[root@db01 ~]# <span class="built_in">df</span> -h|awk <span class="string">&#x27;NR==2&#x27;</span></span><br><span class="line">/dev/sda3        19G  1.9G   17G  11% /</span><br><span class="line"></span><br><span class="line">[root@db01 ~]# <span class="built_in">df</span> -h|awk <span class="string">&#x27;/\/$/&#x27;</span></span><br><span class="line">/dev/sda3        19G  1.9G   17G  11% /</span><br><span class="line"></span><br><span class="line">[root@db01 ~]# <span class="built_in">df</span> -h|awk <span class="string">&#x27;/sda3/&#x27;</span></span><br><span class="line">/dev/sda3        19G  1.9G   17G  11% /</span><br><span class="line"></span><br><span class="line"><span class="comment">#案例：取出倒数第二列</span></span><br><span class="line">[root@db01 ~]# <span class="built_in">df</span> -h|awk <span class="string">&#x27;&#123;print $(NF-1)&#125;&#x27;</span></span><br><span class="line">Mounted</span><br><span class="line">11%</span><br><span class="line">0%</span><br><span class="line">0%</span><br><span class="line">5%</span><br><span class="line">0%</span><br><span class="line">25%</span><br><span class="line">0%</span><br><span class="line"></span><br><span class="line">取出每行的倒数第2列的内容</span><br><span class="line">[root@db01 ~]# <span class="built_in">cat</span> 1.txt</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line">lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br><span class="line"><span class="built_in">sync</span>:x:5:0:<span class="built_in">sync</span>:/sbin:/bin/sync</span><br><span class="line"></span><br><span class="line">[root@web01 zzz]# awk -F: <span class="string">&#x27;&#123;print $(NF-1)&#125;&#x27;</span> 1.txt</span><br><span class="line">/root</span><br><span class="line">/bin</span><br><span class="line">/sbin</span><br><span class="line">/var/adm</span><br><span class="line">/var/spool/lpd</span><br><span class="line">/sbin</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">案例.指定多分隔符</span><br><span class="line">[root@db01 ~]# <span class="built_in">cat</span> 2.txt</span><br><span class="line">root:x:0:0:root:/oldboy:/bin/bash</span><br><span class="line">[root@db01 ~]# awk -F <span class="string">&quot;:/&quot;</span> <span class="string">&#x27;&#123;print $2&#125;&#x27;</span> 2.txt</span><br><span class="line">oldboy</span><br><span class="line"></span><br><span class="line">案例.取出<span class="built_in">test</span>和oldboy</span><br><span class="line">案例.+连续出现1次及1次以上的作为1个整体</span><br><span class="line">[root@db01 ~]# <span class="built_in">cat</span> 2.txt</span><br><span class="line">root:x:0:0:<span class="built_in">test</span>:/oldboy:/bin/bash</span><br><span class="line">[root@db01 ~]# awk -F <span class="string">&quot;[:/]+&quot;</span> <span class="string">&#x27;&#123;print $5,$6&#125;&#x27;</span> 2.txt</span><br><span class="line"><span class="built_in">test</span> oldboy</span><br><span class="line"></span><br><span class="line">理解正则表达式+</span><br><span class="line">[root@db01 ~]# <span class="built_in">echo</span> ---<span class="built_in">test</span>-+oldboy++::|awk -F <span class="string">&quot;-&quot;</span> <span class="string">&#x27;&#123;print $4&#125;&#x27;</span></span><br><span class="line"><span class="built_in">test</span></span><br><span class="line">[root@db01 ~]# <span class="built_in">echo</span> ---<span class="built_in">test</span>-+oldboy++::|awk -F <span class="string">&quot;[-]+&quot;</span> <span class="string">&#x27;&#123;print $2&#125;&#x27;</span></span><br><span class="line"><span class="built_in">test</span></span><br><span class="line"></span><br><span class="line">[root@db01 ~]# <span class="built_in">echo</span> ---<span class="built_in">test</span>-+oldboy++::|awk -F <span class="string">&quot;[-+]&quot;</span> <span class="string">&#x27;&#123;print $6&#125;&#x27;</span></span><br><span class="line">oldboy</span><br><span class="line">[root@db01 ~]# <span class="built_in">echo</span> ---<span class="built_in">test</span>-+oldboy++::|awk -F <span class="string">&quot;[-+]+&quot;</span> <span class="string">&#x27;&#123;print $3&#125;&#x27;</span></span><br><span class="line">oldboy</span><br><span class="line"></span><br><span class="line"><span class="comment">#不加+不会贪婪匹配，要数分隔符（字符串后跟的第一个分隔符不数量，再有分隔符要数）</span></span><br><span class="line">[root@web01 ~]# <span class="built_in">echo</span> ---<span class="built_in">test</span>-+--oldboy++::|awk -F <span class="string">&quot;[-+]&quot;</span> <span class="string">&#x27;&#123;print $4&#125;&#x27;</span></span><br><span class="line"><span class="built_in">test</span></span><br><span class="line">[root@web01 ~]# <span class="built_in">echo</span> ---<span class="built_in">test</span>-+--oldboy++::|awk -F <span class="string">&quot;[-+]&quot;</span> <span class="string">&#x27;&#123;print $8&#125;&#x27;</span></span><br><span class="line">oldboy</span><br><span class="line">[root@web01 ~]# <span class="built_in">echo</span> ---<span class="built_in">test</span>-+--oldboy++::|awk -F <span class="string">&quot;[-+]&quot;</span> <span class="string">&#x27;&#123;print $10&#125;&#x27;</span></span><br><span class="line">::</span><br><span class="line">[root@web01 ~]# <span class="built_in">echo</span> ---<span class="built_in">test</span>-+--oldboy++::|awk -F <span class="string">&quot;[-+]+&quot;</span> <span class="string">&#x27;&#123;print $2,$3,$4&#125;&#x27;</span></span><br><span class="line"><span class="built_in">test</span> oldboy ::</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">扩展：让取出的列排列整齐  column -t</span><br><span class="line">[root@web01 ~]# awk -F: <span class="string">&#x27;&#123;print $1,$3&#125;&#x27;</span>  /etc/passwd|column -t</span><br><span class="line">root             0</span><br><span class="line">bin              1</span><br><span class="line">daemon           2</span><br><span class="line">adm              3</span><br><span class="line">lp               4</span><br><span class="line"><span class="built_in">sync</span>             5</span><br><span class="line">shutdown         6</span><br></pre></td></tr></table></figure><h4 id="3-awk模式-动作">3.awk模式+动作</h4><ul><li>print</li><li>gsub</li><li>变量赋值</li><li>统计计算</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#统计 /etc/services有多少行</span></span><br><span class="line">[root@web01 ~]# <span class="built_in">cat</span> /etc/services |<span class="built_in">wc</span> -l</span><br><span class="line">11176</span><br><span class="line"></span><br><span class="line">[root@web01 ~]# awk <span class="string">&#x27;&#123;i++&#125;END&#123;print i&#125;&#x27;</span> /etc/services </span><br><span class="line">11176</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 ~]# <span class="built_in">cat</span> 1.txt</span><br><span class="line">1 root:x:0:0:root:/root:/bin/bash</span><br><span class="line">2 bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">3 daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">4 adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line">:5 lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br><span class="line"></span><br><span class="line">[root@db01 ~]# awk <span class="string">&#x27;NR==3&#x27;</span> 1.txt</span><br><span class="line">3 daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">[root@db01 ~]# awk -F: <span class="string">&#x27;NR==3&#123;print $3 &#125;&#x27;</span> 1.txt</span><br><span class="line">2</span><br><span class="line"></span><br><span class="line">案例2.取出用户名和最后一列</span><br><span class="line">[root@db01 ~]# <span class="built_in">cat</span> 1.txt</span><br><span class="line">1 root:x:0:0:root:/root:/bin/bash</span><br><span class="line">2 bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">3 daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">4 adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line">5 lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br><span class="line"></span><br><span class="line">[root@db01 ~]# awk -F <span class="string">&quot;[ :]&quot;</span> <span class="string">&#x27;&#123;print $2,$NF &#125;&#x27;</span> 1.txt</span><br><span class="line">root /bin/bash</span><br><span class="line">bin /sbin/nologin</span><br><span class="line">daemon /sbin/nologin</span><br><span class="line">adm /sbin/nologin</span><br><span class="line">lp /sbin/nologin</span><br><span class="line"></span><br><span class="line">[root@db01 ~]# awk -F <span class="string">&quot;[ :]&quot;</span> <span class="string">&#x27;&#123;print $2&quot;\t&quot;$NF &#125;&#x27;</span> 1.txt</span><br><span class="line">root /bin/bash</span><br><span class="line">bin /sbin/nologin</span><br><span class="line">daemon /sbin/nologin</span><br><span class="line">adm /sbin/nologin</span><br><span class="line">lp /sbin/nologin</span><br><span class="line"></span><br><span class="line">案例.取出/磁盘使用行的 第4列</span><br><span class="line">指定行+动作</span><br><span class="line">[root@web01 zzz]# <span class="built_in">df</span> -h</span><br><span class="line">Filesystem      Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/sda3        19G  1.9G   17G  11% /</span><br><span class="line">devtmpfs        476M     0  476M   0% /dev</span><br><span class="line">tmpfs           487M     0  487M   0% /dev/shm</span><br><span class="line">tmpfs           487M   20M  467M   5% /run</span><br><span class="line">tmpfs           487M     0  487M   0% /sys/fs/cgroup</span><br><span class="line">/dev/sda1       497M  120M  378M  25% /boot</span><br><span class="line">tmpfs            98M     0   98M   0% /run/user/0</span><br><span class="line"></span><br><span class="line">[root@web01 zzz]# <span class="built_in">df</span> -h|awk <span class="string">&#x27;NR==2&#x27;</span></span><br><span class="line">/dev/sda3        19G  1.9G   17G  11% /</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">模糊过滤+动作</span><br><span class="line">[root@db01 ~]# <span class="built_in">df</span> -h|awk <span class="string">&#x27;/\/$/&#123;print $4,$1&#125;&#x27;</span></span><br><span class="line">17G /dev/sda3</span><br><span class="line">[root@db01 ~]# <span class="built_in">df</span> -h|awk <span class="string">&#x27;/sda3/&#123;print $4,$1&#125;&#x27;</span></span><br><span class="line">17G /dev/sda3</span><br><span class="line"></span><br><span class="line">案例.取出dev相关的行的第1行和第2行</span><br><span class="line">[root@web01 zzz]# <span class="built_in">df</span> -h|awk <span class="string">&#x27;/sda3/,/devtmpfs/&#x27;</span></span><br><span class="line">/dev/sda3        19G  1.9G   17G  11% /</span><br><span class="line">devtmpfs        476M     0  476M   0% /dev</span><br><span class="line"></span><br><span class="line"><span class="comment">#取出第6列和第7列</span></span><br><span class="line"><span class="built_in">cat</span> -n /etc/passwd|awk <span class="string">&#x27;NR&gt;5&amp;&amp;NR&lt;8&#x27;</span></span><br><span class="line">     6  <span class="built_in">sync</span>:x:5:0:<span class="built_in">sync</span>:/sbin:/bin/sync</span><br><span class="line">     7  shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown</span><br><span class="line"></span><br><span class="line"><span class="comment">#取出第6行和第七行的 第1列和第2列</span></span><br><span class="line">[root@web01 zzz]# <span class="built_in">cat</span> /etc/passwd|awk -F <span class="string">&#x27;[ :]+&#x27;</span> <span class="string">&#x27;NR&gt;5&amp;&amp;NR&lt;8&#123;print $1,$2&#125;&#x27;</span></span><br><span class="line"><span class="built_in">sync</span> x</span><br><span class="line">shutdown x</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="4-字符串对比">4.字符串对比</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">扩展: 字符串比对</span><br><span class="line">[root@db01 ~]# <span class="built_in">cat</span> 1.txt</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">root:hehe:xx</span><br><span class="line">adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line">lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br><span class="line"></span><br><span class="line">[root@db01 ~]# awk -F: <span class="string">&#x27;$NF==&quot;/bin/bash&quot;&#x27;</span> 1.txt</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line"></span><br><span class="line">查找出以ro开头的行</span><br><span class="line">[root@db01 ~]# awk -F: <span class="string">&#x27;/^ro/&#x27;</span> 1.txt</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">root:hehe:xx</span><br><span class="line"></span><br><span class="line"><span class="comment">#匹配第5列是r开头的内容</span></span><br><span class="line">[root@web01 zzz]# awk -F: <span class="string">&#x27;$5 ~ /^r/&#x27;</span> 1.txt </span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line"></span><br><span class="line"><span class="comment">#匹配第5列是t结尾的内容</span></span><br><span class="line">[root@web01 zzz]# awk -F: <span class="string">&#x27;$5 ~ /t$/&#x27;</span> 1.txt </span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line"></span><br><span class="line">数字比较:</span><br><span class="line">[root@db01 ~]# awk -F: <span class="string">&#x27;$3&gt;0&#x27;</span> 1.txt</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line">lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br><span class="line"></span><br><span class="line">[root@db01 ~]# awk -F: <span class="string">&#x27;$3&lt;2&#x27;</span> 1.txt</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line"></span><br><span class="line">[root@db01 ~]# awk -F: <span class="string">&#x27;$3&lt;=2&#x27;</span> 1.txt</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line"></span><br><span class="line">[root@db01 ~]#</span><br><span class="line">成绩单统计:（假定第二列是成绩）</span><br><span class="line">案例。大于等于90的人数</span><br><span class="line">[root@db01 ~]# awk <span class="string">&#x27;$2&gt;=90&#x27;</span> 1.txt|<span class="built_in">wc</span> -l</span><br><span class="line">16</span><br><span class="line">案例. 大于等于80并且小于90的人数</span><br><span class="line">[root@db01 ~]# awk <span class="string">&#x27;$2&gt;=80&amp;&amp;$2&lt;90&#x27;</span> 1.txt |<span class="built_in">wc</span> -l</span><br><span class="line">29</span><br><span class="line">案例.小于60分的人数</span><br><span class="line">[root@db01 ~]# awk <span class="string">&#x27;$2&lt;60&#x27;</span> 1.txt|<span class="built_in">wc</span> -l</span><br></pre></td></tr></table></figure><h4 id="5-awk替换">5.awk替换</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#只替换匹配到以一个内容</span></span><br><span class="line">awk <span class="string">&#x27;&#123; sub(/apple/, &quot;pear&quot;, $1); print &#125;&#x27;</span> file.txt</span><br><span class="line"><span class="comment">#全局替换</span></span><br><span class="line">awk <span class="string">&#x27;&#123; gsub(/apple/, &quot;pear&quot;, $1); print &#125;&#x27;</span> file.txt</span><br><span class="line"><span class="comment">#替换完毕之后保存到新文件</span></span><br><span class="line">awk <span class="string">&#x27;&#123; sub(/apple/, &quot;pear&quot;, $1); print &#125;&#x27;</span> file.txt &gt; new_file.txt</span><br></pre></td></tr></table></figure><h4 id="总结">==总结==</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">1.awk取行</span><br><span class="line">awk <span class="string">&#x27;NR==3&#x27;</span> file</span><br><span class="line">NR==</span><br><span class="line">NR!=</span><br><span class="line">NR&gt;=</span><br><span class="line">NR&lt;=</span><br><span class="line">NR&gt;</span><br><span class="line">NR&lt;</span><br><span class="line">&amp;&amp;</span><br><span class="line">||</span><br><span class="line">2.awk模糊过滤</span><br><span class="line">awk <span class="string">&#x27;/过滤的内容/&#x27;</span> file</span><br><span class="line">awk <span class="string">&#x27;//,//&#x27;</span> file</span><br><span class="line">支持正则</span><br><span class="line">3.awk取列</span><br><span class="line">awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> file</span><br><span class="line">awk <span class="string">&#x27;&#123;print $NF&#125;&#x27;</span> file 最后一列</span><br><span class="line">4.awk指定分隔符</span><br><span class="line">awk -F:</span><br><span class="line">awk -F <span class="string">&quot;:&quot;</span></span><br><span class="line">awk -F <span class="string">&quot;[:/]+&quot;</span></span><br><span class="line">5.awk模式+动作</span><br><span class="line">awk <span class="string">&#x27;NR==6&#123;print $3&#125;&#x27;</span></span><br><span class="line">awk <span class="string">&#x27;//&#123;print $3&#125;&#x27;</span></span><br><span class="line">6.字符串比较</span><br><span class="line">awk <span class="string">&#x27;$3==&quot;root&quot;&#x27;</span> file</span><br><span class="line">awk <span class="string">&#x27;$3!=&quot;root&quot;&#x27;</span> file 不等于</span><br><span class="line">7.awk数值比较</span><br><span class="line">awk <span class="string">&#x27;$3==0&#x27;</span> file</span><br><span class="line">awk <span class="string">&#x27;$3&gt;90&#x27;</span> file</span><br><span class="line">awk <span class="string">&#x27;$3&gt;80&amp;&amp;$3&lt;90&#x27;</span> file</span><br><span class="line">|| 或者</span><br></pre></td></tr></table></figure><h4 id="循环-判断">循环&amp;判断</h4><p><strong>==for循环==</strong></p><blockquote><p>for i in 1 2 3</p><p>do</p><p>echo $i</p><p>done</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#shell编程c语言for循环</span></span><br><span class="line"><span class="keyword">for</span>(i=1;i&lt;10;i++)</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#awk for循环  ,  用来循环每个字段</span></span><br><span class="line"><span class="keyword">for</span>(i=1;i&lt;10;i++)</span><br><span class="line"><span class="built_in">print</span> i</span><br><span class="line"></span><br><span class="line">案例 1+...+100</span><br><span class="line">[root@web01 zzz]# awk <span class="string">&#x27;BEGIN&#123;for(i=1;i&lt;=100;i++)sum+=i;print sum&#125;&#x27;</span></span><br><span class="line">5050</span><br><span class="line"></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;</span></span><br><span class="line"><span class="string">for(i=1;i&lt;=100;i++)</span></span><br><span class="line"><span class="string">  sum+=i;</span></span><br><span class="line"><span class="string">print sum</span></span><br><span class="line"><span class="string">&#125;&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>==if判断==</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#shell if 判断</span></span><br><span class="line"><span class="keyword">if</span> &#123; $? -eq 0 &#125;;<span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;正常&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;命令执行错误&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment">#awk if 判断</span></span><br><span class="line"><span class="keyword">if</span>(条件)</span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;abc&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">print</span> <span class="string">&quot;cc&quot;</span></span><br><span class="line">awk -F: <span class="string">&#x27;&#123; if ($3 &gt; 100) &#123; print &quot;大于100: &quot; $0 &#125; else &#123; print &quot;小于等于100: &quot; $0 &#125; &#125;&#x27;</span> /etc/passwd</span><br></pre></td></tr></table></figure><h4 id="awk正则">awk正则</h4><ul><li>支持扩展正则</li><li>awk可以精确到某一列 ，某一列包含的内容/不包含的内容</li><li>~ 包含</li><li>!~不包含</li></ul><table><thead><tr><th>正则</th><th>awk正则</th></tr></thead><tbody><tr><td>^表示以…开头的行</td><td>某一列开的行 $3~/^root/</td></tr><tr><td>$表示以…结尾的行</td><td>某一列开的行 $3~/bash$/</td></tr><tr><td>^$表示空行</td><td></td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#找出第一列以root开头的行</span></span><br><span class="line">[root@web01 ~]# awk -F: <span class="string">&#x27;$1~/^root/&#x27;</span> /etc/passwd</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line"><span class="comment">#找出第一列以root开头的行，并输出第1列，第3列，第5列</span></span><br><span class="line">[root@web01 ~]# awk -F: <span class="string">&#x27;$1~/root/&#123;print $1,$3,$5&#125;&#x27;</span> /etc/passwd</span><br><span class="line">root 0 root</span><br><span class="line"><span class="comment">#找出第3列以1或者3开头的行，</span></span><br><span class="line">[root@web01 ~]# awk -F: <span class="string">&#x27;$3~/^[13]/&#x27;</span> /etc/passwd</span><br><span class="line">[root@web01 ~]# awk -F: <span class="string">&#x27;$3~/^(1|3)/&#x27;</span> /etc/passwd</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line">operator:x:11:0:operator:/root:/sbin/nologin</span><br></pre></td></tr></table></figure><h4 id="特殊模式BEGIN-END">特殊模式BEGIN{} END{}</h4><table><thead><tr><th>模式</th><th>含义</th><th>应用场景</th></tr></thead><tbody><tr><td>BEGIN{}</td><td>里面内容会在awk<strong>读取文件之前</strong>执行</td><td>1)进行简单统计，不涉及读取文件<br />2)用来处理文件之前，添加个表头<br />3)用来定义awk变量</td></tr><tr><td>END{}</td><td>里面内容会在awk<strong>读取文件之后</strong>执行</td><td>1)awk进行统计，<font color=red>一般过程，先进行计算，最后END里面输出</font>&gt;结果<br />3)awk使用数组，用来输出数组结果</td></tr></tbody></table><table><thead><tr><th>统计方法</th><th>简写</th><th>应用场景</th></tr></thead><tbody><tr><td>i=i+1</td><td>i++</td><td>计数，统计次数</td></tr><tr><td>sum=sum+i</td><td>sum+=i</td><td>求和，累加</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#使用awk统计有多少空行</span></span><br><span class="line">[root@web01 ~]# awk <span class="string">&#x27;/^$/&#123;i++&#125;END&#123;print i&#125;&#x27;</span> /etc/services</span><br><span class="line">17</span><br></pre></td></tr></table></figure><h4 id="awk数组">awk数组</h4><table><thead><tr><th></th><th>shell数组</th><th>awk数组</th></tr></thead><tbody><tr><td>形式</td><td>array[0]=oldboy array[1]=996</td><td>array[0]=oldboy array[1]=996</td></tr><tr><td>使用</td><td>echo $array[0]   $array[1]</td><td>print $array[0]   $array[1]</td></tr><tr><td>批量输出数组内容</td><td>for i in ${array[*]}<br />do<br />  echo $i<br />done</td><td>for(i in array)<br />print array[i]</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">awk数组专用循环，变量获取到的是数组的下标，想要获取数组内容，array[i]</span><br><span class="line">[root@web01 ~]# awk <span class="string">&#x27;BEGIN&#123;a[0]=123;a[1]=&quot;creat&quot;; for(i in a) print i,a[i]&#125;&#x27;</span></span><br><span class="line">0 123</span><br><span class="line">1 creat</span><br><span class="line"></span><br><span class="line">[root@web01 ~]# <span class="built_in">cat</span> 1.txt</span><br><span class="line">http://www.driverzeng.com/index.html</span><br><span class="line">http://www.driverzeng.com/1.html</span><br><span class="line">http://post.driverzeng.com/index.html</span><br><span class="line">http://mp3.driverzeng.com/index.html</span><br><span class="line">http://www.driverzeng.com/3.html</span><br><span class="line">http://post.driverzeng.com/2.html</span><br><span class="line"></span><br><span class="line">[root@web01 ~]# awk -F <span class="string">&#x27;[./]+&#x27;</span> <span class="string">&#x27;&#123;array[$2]++&#125;END&#123;for(i in array)print i,array[i]&#x27;</span> 1.txt </span><br><span class="line">www 3</span><br><span class="line">mp3 1</span><br><span class="line">post 2</span><br><span class="line"><span class="comment">####</span></span><br><span class="line">array[<span class="variable">$2</span>]++  ==&gt;[ ]里是数组想要统计的内容</span><br><span class="line">&#123;<span class="keyword">for</span>(i <span class="keyword">in</span> array) ==&gt;循环数组</span><br><span class="line"><span class="built_in">print</span> i  ==&gt;这里的i是[ ]里的内容</span><br><span class="line">array[i] ==&gt;数组+下标表示的是内容，这里的内容表示的是次数</span><br><span class="line"></span><br><span class="line">[root@web02 ~]# awk <span class="string">&#x27;&#123;array[$10]++&#125;END&#123;for(i in array)print $1,i,array[i]&#125;&#x27;</span> access.log|<span class="built_in">sort</span> -nrk3</span><br><span class="line">115.223.23.182 200 710</span><br><span class="line">115.223.23.182 304 250</span><br><span class="line">115.223.23.182 302 223</span><br><span class="line">115.223.23.182 404 186</span><br><span class="line">115.223.23.182 301 65</span><br><span class="line">115.223.23.182 403 45</span><br><span class="line">115.223.23.182 503 4</span><br></pre></td></tr></table></figure><p><strong>==案例==</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# <span class="built_in">cat</span> 123.txt </span><br><span class="line">Zeng Laoshi       133411023        :110:100:75</span><br><span class="line">Deng Ziqi            44002231        :250:10:88</span><br><span class="line">Zhang Xinyu      877623568      :120:300:200</span><br><span class="line">Gu Linazha         11029987         :120:30:79</span><br><span class="line">Di Lireba             253097001      :220:100:200</span><br><span class="line">Jiang Shuying    535432779       :309:10:2</span><br><span class="line">Ju Jingyi             68005178         :130:280:385</span><br><span class="line">Zhang Yuqi         376788757       :500:290:33</span><br><span class="line">Wen Zhang         259872003      :100:200:300</span><br><span class="line"></span><br><span class="line"><span class="comment">#找出所有姓Zhang的人，显示他们的名字还有第二次捐款数</span></span><br><span class="line">[root@web01 ~]# awk -F <span class="string">&#x27;[ :]+&#x27;</span> <span class="string">&#x27;/^Zhang/&#123;print $1,$2&quot; 第二次捐款：&quot;$5&#125;&#x27;</span> 123.txt </span><br><span class="line">Zhang Xinyu 第二次捐款：300</span><br><span class="line">Zhang Yuqi 第二次捐款：290</span><br><span class="line"></span><br><span class="line"><span class="comment">#找出所有25开头的联系方式，并且输出他们的姓名</span></span><br><span class="line">[root@web01 ~]# awk <span class="string">&#x27;$3~ /^25/&#123;print $1,$2,$3&#125;&#x27;</span> 123.txt </span><br><span class="line">Di Lireba 253097001</span><br><span class="line">Wen Zhang 259872003</span><br><span class="line"></span><br><span class="line"><span class="comment">#显示QQ号是1或3结尾的姓名和QQ号</span></span><br><span class="line">[root@web01 ~]# awk <span class="string">&#x27;$3~ /(1|3)$/&#123;print $1,$2,$3&#125;&#x27;</span> 123.txt </span><br><span class="line">Zeng Laoshi 133411023</span><br><span class="line">Deng Ziqi 44002231</span><br><span class="line">Di Lireba 253097001</span><br><span class="line">Wen Zhang 259872003</span><br><span class="line"></span><br><span class="line"><span class="comment">#捐款数显示以$为分割</span></span><br><span class="line">[root@web01 ~]# awk <span class="string">&#x27;&#123;gsub(&quot;:&quot;,&quot;$&quot;);print $0 &#125;&#x27;</span> 123.txt </span><br><span class="line">Zeng Laoshi       133411023        $110$100<span class="variable">$75</span></span><br><span class="line">Deng Ziqi            44002231        $250$10<span class="variable">$88</span></span><br><span class="line">Zhang Xinyu      877623568      $120$300<span class="variable">$200</span></span><br><span class="line">Gu Linazha         11029987         $120$30<span class="variable">$79</span></span><br><span class="line">Di Lireba             253097001      $220$100<span class="variable">$200</span></span><br><span class="line">Jiang Shuying    535432779       $309$10<span class="variable">$2</span></span><br><span class="line">Ju Jingyi             68005178         $130$280<span class="variable">$385</span></span><br><span class="line">Zhang Yuqi         376788757       $500$290<span class="variable">$33</span></span><br><span class="line">Wen Zhang         259872003      $100$200<span class="variable">$300</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux敲门 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法与外挂标签写法汇总</title>
      <link href="/posts/2013454d.html"/>
      <url>/posts/2013454d.html</url>
      
        <content type="html"><![CDATA[<h1>1.Markdown语法自带格式</h1><div class="note info flat"><p>参考：<a href="https://blog.csdn.net/u014061630/article/details/81359144">Markdown语法图文全面详解(10分钟学会)</a></p></div><div class="note warning flat"><p>注意：此页面偶尔会存在CSS冲突问题!</p></div><h2 id="1-1-代码块">1.1 代码块</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">\```shell</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">VSCode终端</span></span><br><span class="line">hexo clean; hexo s</span><br><span class="line">hexo clean; hexo g; hexo d</span><br><span class="line">git add .; git commit -m &quot;npm publish&quot;; npm version patch; </span><br><span class="line">git push</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Cmder终端</span></span><br><span class="line">hexo clean &amp;&amp; hexo s</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br><span class="line">git add . &amp;&amp; git commit -m &quot;npm publish&quot; &amp;&amp; npm version patch</span><br><span class="line">git push</span><br><span class="line">\```</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">VSCode终端</span></span><br><span class="line">hexo clean; hexo s</span><br><span class="line">hexo clean; hexo g; hexo d</span><br><span class="line">git add .; git commit -m &quot;npm publish&quot;; npm version patch; </span><br><span class="line">git push</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Cmder终端</span></span><br><span class="line">hexo clean &amp;&amp; hexo s</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br><span class="line">git add . &amp;&amp; git commit -m &quot;npm publish&quot; &amp;&amp; npm version patch</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-2-多级标题">1.2 多级标题</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># H1</span></span><br><span class="line"><span class="section">## H2</span></span><br><span class="line"><span class="section">### H3</span></span><br><span class="line"><span class="section">#### H4</span></span><br><span class="line"><span class="section">##### H5</span></span><br><span class="line"><span class="section">###### H6</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>见本文章标题!</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-3-文字样式">1.3 文字样式</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">u</span>&gt;</span></span>下划线演示<span class="language-xml"><span class="tag">&lt;/<span class="name">u</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">文字<span class="strong">**加粗**</span>演示</span><br><span class="line"></span><br><span class="line">文字<span class="emphasis">*斜体*</span>演示</span><br><span class="line"></span><br><span class="line">文本<span class="code">`高亮`</span>演示</span><br><span class="line"></span><br><span class="line">文本~~删除~~线演示</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span> = <span class="string">5</span>&gt;</span></span>5号字<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;黑体&quot;</span>&gt;</span></span>黑体<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">blue</span>&gt;</span></span>蓝色<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">MistyRose</span>&gt;</span></span>这里的背景色是：MistyRosen，此处输入任意想输入的内容<span class="language-xml"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p><u>下划线演示</u></p><p>文字<strong>加粗</strong>演示</p><p>文字<em>斜体</em>演示</p><p>文本<code>高亮</code>演示</p><p>文本<s>删除</s>线演示</p><p><font size = 5>5号字</font><br><font face="黑体">黑体</font><br><font color=blue>蓝色</font></p><table><tr><td bgcolor=MistyRose>这里的背景色是：MistyRosen，此处输入任意想输入的内容</td></tr></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="note info flat"><p>上述要点可参考:<a href="https://blog.csdn.net/qq_43732429/article/details/108034518">【Markdown语法】字体颜色大小及文字底色设置</a></p></div><h2 id="1-4-引用">1.4 引用</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt;  Java</span></span><br><span class="line"><span class="quote">&gt; 二级引用演示</span></span><br><span class="line"><span class="quote">&gt; MySQL</span></span><br><span class="line"><span class="quote">&gt; &gt;外键</span></span><br><span class="line"><span class="quote">&gt; &gt;</span></span><br><span class="line"><span class="quote">&gt; &gt;事务</span></span><br><span class="line"><span class="quote">&gt; &gt;</span></span><br><span class="line"><span class="quote">&gt; &gt;<span class="strong">**行级锁**</span>(引用内部一样可以用格式)</span></span><br><span class="line"><span class="quote">&gt; </span></span><br><span class="line"><span class="quote">&gt; ....</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><blockquote><p>Java<br>二级引用演示<br>MySQL</p><blockquote><p>外键</p><p>事务</p><p><strong>行级锁</strong>(引用内部一样可以用格式)</p></blockquote><p>…</p></blockquote><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-5-分割线">1.5 分割线</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="strong">**<span class="emphasis">*</span></span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><hr><hr><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-6-列表-跟空格都可以">1.6 列表(*,+,-跟空格都可以)</h2><h3 id="1-6-1-无序列表">1.6.1 无序列表</h3><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">*</span> Java</span><br><span class="line"><span class="bullet">*</span> Python</span><br><span class="line"><span class="bullet">*</span> ...</span><br><span class="line"></span><br><span class="line"><span class="bullet">+</span> Java</span><br><span class="line"><span class="bullet">+</span> Python</span><br><span class="line"><span class="bullet">+</span> ...</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> Java</span><br><span class="line"><span class="bullet">-</span> Python</span><br><span class="line"><span class="bullet">-</span> ...</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ul><li>Java</li><li>Python</li><li>…</li></ul><ul><li>Java</li><li>Python</li><li>…</li></ul><ul><li>Java</li><li>Python</li><li>…</li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="1-6-2-有序列表">1.6.2 有序列表</h3><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 注意后面有空格</span></span><br><span class="line"><span class="bullet">1.</span> </span><br><span class="line"><span class="bullet">2.</span> </span><br><span class="line"><span class="bullet">3.</span> </span><br><span class="line"><span class="bullet">4.</span> </span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li></li><li></li><li></li><li></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-7-图片">1.7 图片</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 本地图片</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/assets/pusheencode.webp&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;示例图片&quot;</span> <span class="attr">style</span>=<span class="string">&quot;zoom:50%;&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="section"># 在线图片</span></span><br><span class="line">![<span class="string">code</span>](<span class="link">https://cdn.jsdelivr.net/gh/fomalhaut1998/markdown_pic/img/code.png</span>)</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>本地图片:<br><img src="/assets/pusheencode.webp" alt="示例图片" style="zoom:50%;" /><br>在线图片:<br><img src="https://cdn.jsdelivr.net/gh/fomalhaut1998/markdown_pic/img/code.png" alt="code"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-8-表格">1.8 表格</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| 项目标号 | 资金     | 备注 |</span><br><span class="line">| -------- | -------- | ---- |</span><br><span class="line">| 1        | 100，000 | 无   |</span><br><span class="line">| 2        | 200，000 | 无   |</span><br><span class="line">| 3        | 300,600  | 重要 |</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><table><thead><tr><th>项目标号</th><th>资金</th><th>备注</th></tr></thead><tbody><tr><td>1</td><td>100，000</td><td>无</td></tr><tr><td>2</td><td>200，000</td><td>无</td></tr><tr><td>3</td><td>300,600</td><td>重要</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-9-公式">1.9 公式</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\Gamma(z)=\int<span class="emphasis">_0^\infty t^&#123;z-1&#125;e^&#123;-t&#125;dt.</span></span><br><span class="line"><span class="emphasis">$$</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>$$<br>\Gamma(z)=\int_0^\infty t^{z-1}e^{-t}dt.<br>$$</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1>2.Butterfly外挂标签</h1><div class="note info flat"><p>这部分参考安知鱼:<a href="https://anzhiy.cn/posts/7d58.html">基于Butterfly的外挂标签引入</a></p></div><h2 id="2-1-行内文本样式-text">2.1 行内文本样式 text</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% u 文本内容 %&#125;</span><br><span class="line">&#123;% emp 文本内容 %&#125;</span><br><span class="line">&#123;% wavy 文本内容 %&#125;</span><br><span class="line">&#123;% del 文本内容 %&#125;</span><br><span class="line">&#123;% kbd 文本内容 %&#125;</span><br><span class="line">&#123;% psw 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 带 &#123;% u 下划线 %&#125; 的文本</span><br><span class="line"><span class="bullet">2.</span> 带 &#123;% emp 着重号 %&#125; 的文本</span><br><span class="line"><span class="bullet">3.</span> 带 &#123;% wavy 波浪线 %&#125; 的文本</span><br><span class="line"><span class="bullet">4.</span> 带 &#123;% del 删除线 %&#125; 的文本</span><br><span class="line"><span class="bullet">5.</span> 键盘样式的文本 &#123;% kbd command %&#125; + &#123;% kbd D %&#125;</span><br><span class="line"><span class="bullet">6.</span> 密码样式的文本：&#123;% psw 这里没有验证码 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><ol><li>带 <u>下划线</u> 的文本</li><li>带 <emp>着重号</emp> 的文本</li><li>带 <wavy>波浪线</wavy> 的文本</li><li>带 <del>删除线</del> 的文本</li><li>键盘样式的文本 <kbd>command</kbd> + <kbd>D</kbd></li><li>密码样式的文本：<psw>这里没有验证码</psw></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-2-行内文本-span">2.2 行内文本 span</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% span 样式参数(参数以空格划分), 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>字体</code>: logo, code</li><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>大小</code>: small, h4, h3, h2, h1, large, huge, ultra</li><li><code>对齐方向</code>: left, center, right</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：&#123;% span red, 红色 %&#125;、&#123;% span yellow, 黄色 %&#125;、&#123;% span green, 绿色 %&#125;、&#123;% span cyan, 青色 %&#125;、&#123;% span blue, 蓝色 %&#125;、&#123;% span gray, 灰色 %&#125;。</span><br><span class="line"><span class="bullet">-</span> 超大号文字</span><br><span class="line">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">&#123;% span center logo large, Volantis %&#125;</span><br><span class="line">&#123;% span center small, A Wonderful Theme for Hexo %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<span class='p red'>红色</span>、<span class='p yellow'>黄色</span>、<span class='p green'>绿色</span>、<span class='p cyan'>青色</span>、<span class='p blue'>蓝色</span>、<span class='p gray'>灰色</span>。</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。<br><span class='p center logo large'>Volantis</span><br><span class='p center small'>A Wonderful Theme for Hexo</span></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-3-段落文本-p">2.3 段落文本 p</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% p 样式参数(参数以空格划分), 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>字体</code>: logo, code</li><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>大小</code>: small, h4, h3, h2, h1, large, huge, ultra</li><li><code>对齐方向</code>: left, center, right</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：&#123;% p red, 红色 %&#125;、&#123;% p yellow, 黄色 %&#125;、&#123;% p green, 绿色 %&#125;、&#123;% p cyan, 青色 %&#125;、&#123;% p blue, 蓝色 %&#125;、&#123;% p gray, 灰色 %&#125;。</span><br><span class="line"><span class="bullet">-</span> 超大号文字</span><br><span class="line">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">&#123;% p center logo large, Volantis %&#125;</span><br><span class="line">&#123;% p center small, A Wonderful Theme for Hexo %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<p class='p red'>红色</p>、<p class='p yellow'>黄色</p>、<p class='p green'>绿色</p>、<p class='p cyan'>青色</p>、<p class='p blue'>蓝色</p>、<p class='p gray'>灰色</p>。</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。</li></ul><p class='p center logo large'>Volantis</p><p class='p center small'>A Wonderful Theme for Hexo</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-4-引用note">2.4 引用note</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">通用配置</button></li><li class="tab"><button type="button" data-href="#分栏-2">语法格式</button></li><li class="tab"><button type="button" data-href="#分栏-3">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-4">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-5">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">note:</span><br><span class="line">  # Note tag style values:</span><br><span class="line">  #  - simple    bs-callout old alert style. Default.</span><br><span class="line">  #  - modern    bs-callout new (v2-v3) alert style.</span><br><span class="line">  #  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span><br><span class="line">  #  - disabled  disable all CSS styles import of note tag.</span><br><span class="line">  style: simple</span><br><span class="line">  icons: false</span><br><span class="line">  border<span class="emphasis">_radius: 3</span></span><br><span class="line"><span class="emphasis">  # Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span></span><br><span class="line"><span class="emphasis">  # Offset also applied to label tag variables. This option can work with disabled note tag.</span></span><br><span class="line"><span class="emphasis">  light_</span>bg<span class="emphasis">_offset: 0</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 自带icon</span></span><br><span class="line">&#123;% note [class] [no-icon] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"><span class="section"># 外部icon</span></span><br><span class="line">&#123;% note [color] [icon] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.自带icon</p><table><thead><tr><th>参数</th><th style="text-align:center">用法</th></tr></thead><tbody><tr><td>class</td><td style="text-align:center">【可选】标识，不同的标识有不同的配色 （ default / primary / success / info / warning / danger ）</td></tr><tr><td>no-icon</td><td style="text-align:center">【可选】不显示 icon</td></tr><tr><td>style</td><td style="text-align:center">【可选】可以覆盖配置中的 style （simple/modern/flat/disabled）</td></tr></tbody></table><p>2.外部icon</p><table><thead><tr><th>参数</th><th style="text-align:center">用法</th></tr></thead><tbody><tr><td>class</td><td style="text-align:center">【可选】标识，不同的标识有不同的配色 （ default / blue / pink / red / purple / orange / green ）</td></tr><tr><td>no-icon</td><td style="text-align:center">【可选】可配置自定义 icon (只支持 fontawesome 图标, 也可以配置 no-icon )</td></tr><tr><td>style</td><td style="text-align:center">【可选】可以覆盖配置中的 style （simple/modern/flat/disabled）</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><details class="folding-tag" blue><summary> 1.自带icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note simple %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default simple %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary simple %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success simple %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info simple %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning simple %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger simple %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>2.<code>modern</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note modern %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default modern %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary modern %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success modern %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info modern %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning modern %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger modern %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>3.<code>flat</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note flat %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default flat %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary flat %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success flat %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info flat %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning flat %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger flat %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>4.<code>disabled</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note disabled %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default disabled %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary disabled %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success disabled %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info disabled %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning disabled %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger disabled %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>5.<code>no-icon</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note no-icon %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default no-icon %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary no-icon %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success no-icon %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info no-icon %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning no-icon %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger no-icon %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><details class="folding-tag" blue><summary> 2.外部icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; simple %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; simple %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; simple %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; simple%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; simple %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; simple %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; simple %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>2.<code>modern</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; modern %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; modern %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; modern%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; modern %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; modern %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; modern %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>3.<code>flat</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; flat %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; flat %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; flat %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; flat%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; flat %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; flat %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; flat %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>4.<code>disabled</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; disabled %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; disabled %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; disabled %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; disabled %&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; disabled %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; disabled %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; disabled %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>5.<code>no-icon</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note no-icon %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue no-icon %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink no-icon %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red no-icon %&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange no-icon %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple no-icon %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green no-icon %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-5"><details class="folding-tag" blue><summary> 1.自带icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><div class="note simple"><p>默认 提示块标签</p></div><div class="note default simple"><p>default 提示块标签</p></div><div class="note primary simple"><p>primary 提示块标签</p></div><div class="note success simple"><p>success 提示块标签</p></div><div class="note info simple"><p>info 提示块标签</p></div><div class="note warning simple"><p>warning 提示块标签</p></div><div class="note danger simple"><p>danger 提示块标签</p></div>2.`modern`样式<div class="note modern"><p>默认 提示块标签</p></div><div class="note default modern"><p>default 提示块标签</p></div><div class="note primary modern"><p>primary 提示块标签</p></div><div class="note success modern"><p>success 提示块标签</p></div><div class="note info modern"><p>info 提示块标签</p></div><div class="note warning modern"><p>warning 提示块标签</p></div><div class="note danger modern"><p>danger 提示块标签</p></div><p>3.<code>flat</code>样式</p><div class="note flat"><p>默认 提示块标签</p></div><div class="note default flat"><p>default 提示块标签</p></div><div class="note primary flat"><p>primary 提示块标签</p></div><div class="note success flat"><p>success 提示块标签</p></div><div class="note info flat"><p>info 提示块标签</p></div><div class="note warning flat"><p>warning 提示块标签</p></div><div class="note danger flat"><p>danger 提示块标签</p></div><p>4.<code>disabled</code>样式</p><div class="note disabled"><p>默认 提示块标签</p></div><div class="note default disabled"><p>default 提示块标签</p></div><div class="note primary disabled"><p>primary 提示块标签</p></div><div class="note success disabled"><p>success 提示块标签</p></div><div class="note info disabled"><p>info 提示块标签</p></div><div class="note warning disabled"><p>warning 提示块标签</p></div><div class="note danger disabled"><p>danger 提示块标签</p></div><p>5.<code>no-icon</code>样式</p><div class="note no-icon flat"><p>默认 提示块标签</p></div><div class="note default no-icon flat"><p>default 提示块标签</p></div><div class="note primary no-icon flat"><p>primary 提示块标签</p></div><div class="note success no-icon flat"><p>success 提示块标签</p></div><div class="note info no-icon flat"><p>info 提示块标签</p></div><div class="note warning no-icon flat"><p>warning 提示块标签</p></div><div class="note danger no-icon flat"><p>danger 提示块标签</p></div>              </div>            </details><details class="folding-tag" blue><summary> 2.外部icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><div class="note icon-padding simple"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了…</p></div><div class="note pink icon-padding simple"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding simple"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding simple"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding simple"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding simple"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>2.<code>modern</code>样式</p><div class="note icon-padding modern"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了…</p></div><div class="note pink icon-padding modern"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding modern"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>3.<code>flat</code>样式</p><div class="note icon-padding flat"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了…</p></div><div class="note pink icon-padding flat"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding flat"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding flat"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding flat"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding flat"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>4.<code>disabled</code>样式</p><div class="note icon-padding disabled"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding disabled"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了…</p></div><div class="note pink icon-padding disabled"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding disabled"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding disabled"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding disabled"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding disabled"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>5.<code>no-icon</code>样式</p><div class="note no-icon flat"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue no-icon flat"><p>2021年快到了…</p></div><div class="note pink no-icon flat"><p>小心开车 安全至上</p></div><div class="note red no-icon flat"><p>这是三片呢？还是四片？</p></div><div class="note orange no-icon flat"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple no-icon flat"><p>剪刀石头布</p></div><div class="note green no-icon flat"><p>前端最讨厌的浏览器</p></div>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-5-上标标签-tip">2.5 上标标签 tip</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip [参数，可选] %&#125;文本内容&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>样式</code>: success,error,warning,bolt,ban,home,sync,cogs,key,bell</li><li><code>自定义图标</code>: 支持fontawesome。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip %&#125;default&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip info %&#125;info&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip success %&#125;success&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip error %&#125;error&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip warning %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip bolt %&#125;bolt&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban %&#125;ban&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip home %&#125;home&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip sync %&#125;sync&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip cogs %&#125;cogs&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip key %&#125;key&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip bell %&#125;bell&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip fa-atom %&#125;自定义font awesome图标&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class="tip "><p>default</p></div><div class="tip info"><p>info</p></div><div class="tip success"><p>success</p></div><div class="tip error"><p>error</p></div><div class="tip warning"><p>warning</p></div><div class="tip bolt"><p>bolt</p></div><div class="tip ban"><p>ban</p></div><div class="tip home"><p>home</p></div><div class="tip sync"><p>sync</p></div><div class="tip cogs"><p>cogs</p></div><div class="tip key"><p>key</p></div><div class="tip bell"><p>bell</p></div><div class="tip fa-atom"><p>自定义font awesome图标</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-6-动态标签-anima">2.6 动态标签 anima</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip [参数，可选] %&#125;文本内容&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><div class="note info flat"><ol><li>将所需的CSS类添加到图标（或DOM中的任何元素）。</li><li>对于父级悬停样式，需要给目标元素添加指定CSS类，同时还要给目标元素的父级元素添加CSS类<code>faa-parent animated-hover</code>。（详情见示例及示例源码）<br>You can regulate the speed of the animation by adding the CSS class or . faa-fastfaa-slow</li><li>可以通过给目标元素添加CSS类<code>faa-fast</code>或<code>faa-slow</code>来控制动画快慢。</li></ol></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.On DOM load（当页面加载时显示动画）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><p>2.调整动画速度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated faa-fast %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated faa-slow %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><p>3.On hover（当鼠标悬停时显示动画）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated-hover %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated-hover %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><p>4.On parent hover（当鼠标悬停在父级元素时显示动画）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-parent animated-hover %&#125;<span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;faa-horizontal&quot;</span>&gt;</span></span>warning<span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-parent animated-hover %&#125;<span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;faa-flash&quot;</span>&gt;</span></span>ban<span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.On DOM load（当页面加载时显示动画）</p><div class="tip warning faa-horizontal animated"><p>warning</p></div><div class="tip ban faa-flash animated"><p>ban</p></div>2.调整动画速度<div class="tip warning faa-horizontal animated faa-fast"><p>warning</p></div><div class="tip ban faa-flash animated faa-slow"><p>ban</p></div>3.On hover（当鼠标悬停时显示动画）<div class="tip warning faa-horizontal animated-hover"><p>warning</p></div><div class="tip ban faa-flash animated-hover"><p>ban</p></div>4.On parent hover（当鼠标悬停在父级元素时显示动画）<div class="tip warning faa-parent animated-hover"><p class="faa-horizontal">warning</p></div><div class="tip ban faa-parent animated-hover"><p class="faa-flash">ban</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-7-复选列表-checkbox">2.7 复选列表 checkbox</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% checkbox 样式参数（可选）, 文本（支持简单md） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>样式</code>: plus, minus, times</li><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>选中状态</code>: checked</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% checkbox 纯文本测试 %&#125;</span><br><span class="line">&#123;% checkbox checked, 支持简单的 [<span class="string">markdown</span>](<span class="link">https://guides.github.com/features/mastering-markdown/</span>) 语法 %&#125;</span><br><span class="line">&#123;% checkbox red, 支持自定义颜色 %&#125;</span><br><span class="line">&#123;% checkbox green checked, 绿色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox yellow checked, 黄色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox cyan checked, 青色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox blue checked, 蓝色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox plus green checked, 增加 %&#125;</span><br><span class="line">&#123;% checkbox minus yellow checked, 减少 %&#125;</span><br><span class="line">&#123;% checkbox times red checked, 叉 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class='checkbox'><input type="checkbox" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="checkbox" />            <p>支持自定义颜色</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>绿色 + 默认选中</p>            </div><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>黄色 + 默认选中</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>青色 + 默认选中</p>            </div><div class='checkbox blue checked'><input type="checkbox" checked="checked"/>            <p>蓝色 + 默认选中</p>            </div><div class='checkbox plus green checked'><input type="checkbox" checked="checked"/>            <p>增加</p>            </div><div class='checkbox minus yellow checked'><input type="checkbox" checked="checked"/>            <p>减少</p>            </div><div class='checkbox times red checked'><input type="checkbox" checked="checked"/>            <p>叉</p>            </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-8-单选列表-radio">2.8 单选列表 radio</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% radio 样式参数（可选）, 文本（支持简单md） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>选中状态</code>: checked</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% radio 纯文本测试 %&#125;</span><br><span class="line">&#123;% radio checked, 支持简单的 [<span class="string">markdown</span>](<span class="link">https://guides.github.com/features/mastering-markdown/</span>) 语法 %&#125;</span><br><span class="line">&#123;% radio red, 支持自定义颜色 %&#125;</span><br><span class="line">&#123;% radio green, 绿色 %&#125;</span><br><span class="line">&#123;% radio yellow, 黄色 %&#125;</span><br><span class="line">&#123;% radio cyan, 青色 %&#125;</span><br><span class="line">&#123;% radio blue, 蓝色 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class='checkbox'><input type="radio" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="radio" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="radio" />            <p>支持自定义颜色</p>            </div><div class='checkbox green'><input type="radio" />            <p>绿色</p>            </div><div class='checkbox yellow'><input type="radio" />            <p>黄色</p>            </div><div class='checkbox cyan'><input type="radio" />            <p>青色</p>            </div><div class='checkbox blue'><input type="radio" />            <p>蓝色</p>            </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-9-时间轴-timeline">2.9 时间轴 timeline</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 时间线标题（可选）[,color] %&#125;</span><br><span class="line">&lt;!-- timeline 时间节点（标题） --&gt;</span><br><span class="line">正文内容</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&lt;!-- timeline 时间节点（标题） --&gt;</span><br><span class="line">正文内容</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>title</code>:标题/时间线</li><li><code>color</code>:<code>timeline</code>颜色:default(留空) / blue / pink / red / purple / orange / green</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 时间轴样式,blue %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-07-24 [<span class="string">2.6.6 -&gt; 3.0</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases</span>) --&gt;</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 如果有 <span class="code">`hexo-lazyload-image`</span> 插件，需要删除并重新安装最新版本，设置 <span class="code">`lazyload.isSPA: true`</span>。</span><br><span class="line"><span class="bullet">2.</span> 2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 <span class="code">`use_cdn: true`</span> 则需要删除。</span><br><span class="line"><span class="bullet">3.</span> 2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</span><br><span class="line"><span class="bullet">4.</span> 2.x 版本的置顶 <span class="code">`top: true`</span> 改为了 <span class="code">`pin: true`</span>，并且同样适用于 <span class="code">`layout: page`</span> 的页面。</span><br><span class="line"><span class="bullet">5.</span> 如果使用了 <span class="code">`hexo-offline`</span> 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-05-15 [<span class="string">2.6.3 -&gt; 2.6.6</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6</span>) --&gt;</span><br><span class="line"></span><br><span class="line">不需要额外处理。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-04-20 [<span class="string">2.6.2 -&gt; 2.6.3</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3</span>) --&gt;</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 全局搜索 <span class="code">`seotitle`</span> 并替换为 <span class="code">`seo_title`</span>。</span><br><span class="line"><span class="bullet">2.</span> group 组件的索引规则有变，使用 group 组件的文章内，<span class="code">`group: group_name`</span> 对应的组件名必须是 <span class="code">`group_name`</span>。</span><br><span class="line"><span class="bullet">2.</span> group 组件的列表名优先显示文章的 <span class="code">`short_title`</span> 其次是 <span class="code">`title`</span>。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>时间轴样式</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-07-24 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases">2.6.6 -&gt; 3.0</a></p></div></div><div class='timeline-item-content'><ol><li>如果有 <code>hexo-lazyload-image</code> 插件，需要删除并重新安装最新版本，设置 <code>lazyload.isSPA: true</code>。</li><li>2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 <code>use_cdn: true</code> 则需要删除。</li><li>2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</li><li>2.x 版本的置顶 <code>top: true</code> 改为了 <code>pin: true</code>，并且同样适用于 <code>layout: page</code> 的页面。</li><li>如果使用了 <code>hexo-offline</code> 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</li></ol></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-05-15 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6">2.6.3 -&gt; 2.6.6</a></p></div></div><div class='timeline-item-content'><p>不需要额外处理。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-04-20 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3">2.6.2 -&gt; 2.6.3</a></p></div></div><div class='timeline-item-content'><ol><li>全局搜索 <code>seotitle</code> 并替换为 <code>seo_title</code>。</li><li>group 组件的索引规则有变，使用 group 组件的文章内，<code>group: group_name</code> 对应的组件名必须是 <code>group_name</code>。</li><li>group 组件的列表名优先显示文章的 <code>short_title</code> 其次是 <code>title</code>。</li></ol></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-10-链接卡片-link">2.10 链接卡片 link</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% link 标题, 链接, 图片链接（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% link 糖果屋教程贴, https://akilar.top/posts/615e2dec/, https://cdn.cbd.int/akilar-candyassets@1.0.36/image/siteicon/favicon.ico %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><div class="tag link"><a class="link-card" title="糖果屋教程贴" href="https://akilar.top/posts/615e2dec/"><div class="left"><img src="https://cdn.cbd.int/akilar-candyassets@1.0.36/image/siteicon/favicon.ico"/></div><div class="right"><p class="text">糖果屋教程贴</p><p class="url">https://akilar.top/posts/615e2dec/</p></div></a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-11-按钮-btns">2.11 按钮 btns</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns 样式参数 %&#125;</span><br><span class="line">&#123;% cell 标题, 链接, 图片或者图标 %&#125;</span><br><span class="line">&#123;% cell 标题, 链接, 图片或者图标 %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li>圆角样式：rounded, circle</li><li>增加文字样式：可以在容器内增加 <code>&lt;b&gt;</code>标题<code>&lt;/b&gt;</code>和<code>&lt;p&gt;</code>描述文字<code>&lt;/p&gt;</code></li><li>布局方式：<br>默认为自动宽度，适合视野内只有一两个的情况。</li></ol><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>wide</td><td>宽一点的按钮</td></tr><tr><td>fill</td><td>填充布局，自动铺满至少一行，多了会换行</td></tr><tr><td>center</td><td>居中，按钮之间是固定间距</td></tr><tr><td>around</td><td>居中分散</td></tr><tr><td>grid2</td><td>等宽最多2列，屏幕变窄会适当减少列数</td></tr><tr><td>grid3</td><td>等宽最多3列，屏幕变窄会适当减少列数</td></tr><tr><td>grid4</td><td>等宽最多4列，屏幕变窄会适当减少列数</td></tr><tr><td>grid5</td><td>等宽最多5列，屏幕变窄会适当减少列数</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.如果需要显示类似「团队成员」之类的一组含有头像的链接</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns circle grid5 %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><p>2.或者含有图标的按钮</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns rounded grid5 %&#125;</span><br><span class="line">&#123;% cell 下载源码, /, fas fa-download %&#125;</span><br><span class="line">&#123;% cell 查看文档, /, fas fa-book-open %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><p>3.圆形图标 + 标题 + 描述 + 图片 + 网格5列 + 居中</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns circle center grid5 %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;https://apps.apple.com/cn/app/heart-mate-pro-hrm-utility/id1463348922?ls=1&#x27;</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&#x27;fab fa-apple&#x27;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span>心率管家<span class="language-xml"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line">  &#123;% p red, 专业版 %&#125;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_pro.png&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1&#x27;</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&#x27;fab fa-apple&#x27;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span>心率管家<span class="language-xml"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line">  &#123;% p green, 免费版 %&#125;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_lite.png&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.如果需要显示类似「团队成员」之类的一组含有头像的链接</p><div class="btns circle grid5">            <a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a>          </div>2.或者含有图标的按钮<div class="btns rounded grid5">            <a class="button" href='/' title='下载源码'><i class='fas fa-download'></i>下载源码</a><a class="button" href='/' title='查看文档'><i class='fas fa-book-open'></i>查看文档</a>          </div>3.圆形图标 + 标题 + 描述 + 图片 + 网格5列 + 居中<div class="btns circle center grid5">            <a href='https://apps.apple.com/cn/app/heart-mate-pro-hrm-utility/id1463348922?ls=1'>  <i class='fab fa-apple'></i>  <b>心率管家</b>  <p class='p red'>专业版</p>  <img src='https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_pro.png'></a><a href='https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1'>  <i class='fab fa-apple'></i>  <b>心率管家</b>  <p class='p green'>免费版</p>  <img src='https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_lite.png'></a>          </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-12-github卡片-ghcard">2.12 github卡片 ghcard</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% ghcard 用户名, 其它参数（可选） %&#125;</span><br><span class="line">&#123;% ghcard 用户名/仓库, 其它参数（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>使用<code>,</code>分割各个参数。写法为：<code>参数名=参数值</code><br>以下只写几个常用参数值。</p><table><thead><tr><th><strong>参数名</strong></th><th>取值</th><th>释义</th></tr></thead><tbody><tr><td>hide</td><td>stars,commits,prs,issues,contribs</td><td>隐藏指定统计</td></tr><tr><td>count_private</td><td>true</td><td>将私人项目贡献添加到总提交计数中</td></tr><tr><td>show_icons</td><td>true</td><td>显示图标</td></tr><tr><td>theme</td><td>查阅:<a href="https://github.com/anuraghazra/github-readme-stats/blob/master/themes/README.md">Available Themes</a></td><td>主题</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.用户信息卡片</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| &#123;% ghcard fomalhaut1998 %&#125; | &#123;% ghcard fomalhaut1998, theme=vue %&#125; |</span><br><span class="line">| -- | -- |</span><br><span class="line">| &#123;% ghcard fomalhaut1998, theme=buefy %&#125; | &#123;% ghcard fomalhaut1998, theme=solarized-light %&#125; |</span><br><span class="line">| &#123;% ghcard fomalhaut1998, theme=onedark %&#125; | &#123;% ghcard fomalhaut1998, theme=solarized-dark %&#125; |</span><br><span class="line">| &#123;% ghcard fomalhaut1998, theme=algolia %&#125; | &#123;% ghcard fomalhaut1998, theme=calm %&#125; |</span><br></pre></td></tr></table></figure><p>2.仓库信息卡片</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=vue %&#125; |</span><br><span class="line">| -- | -- |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=buefy %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=solarized-light %&#125; |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=onedark %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=solarized-dark %&#125; |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=algolia %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=calm %&#125; |</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.用户信息卡片</p><table><thead><tr><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&show_owner=true"/></a></th><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=vue&show_owner=true"/></a></th></tr></thead><tbody><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=buefy&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=solarized-light&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=onedark&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=solarized-dark&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=algolia&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=calm&show_owner=true"/></a></td></tr></tbody></table><p>2.仓库信息卡片</p><table><thead><tr><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&show_owner=true"/></a></th><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=vue&show_owner=true"/></a></th></tr></thead><tbody><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=buefy&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=solarized-light&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=onedark&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=solarized-dark&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=algolia&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=calm&show_owner=true"/></a></td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-13-github徽标-ghbdage">2.13 github徽标 ghbdage</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage [right],[left],[logo]||[color],[link],[title]||[option] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>left</code>：徽标左边的信息，必选参数。</li><li><code>right</code>: 徽标右边的信息，必选参数，</li><li><code>logo</code>：徽标图标，图标名称详见<a href="https://simpleicons.org/">simpleicons</a>，可选参数。</li><li><code>color</code>：徽标右边的颜色，可选参数。</li><li><code>link</code>：指向的链接，可选参数。</li><li><code>title</code>：徽标的额外信息，可选参数。主要用于优化SEO，但<code>object</code>标签不会像<code>a</code>标签一样在鼠标悬停显示<code>title</code>信息。</li><li><code>option</code>：自定义参数，支持<a href="https://shields.io/">shields.io</a>的全部API参数支持，具体参数可以参看上文中的拓展写法示例。形式为<code>name1=value2&amp;name2=value2</code>。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.基本参数,定义徽标左右文字和图标</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage Theme,Butterfly %&#125;</span><br><span class="line">&#123;% bdage Frame,Hexo,hexo %&#125;</span><br></pre></td></tr></table></figure><p>2.信息参数，定义徽标右侧内容背景色，指向链接</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage CDN,JsDelivr,jsDelivr||abcdef,https://metroui.org.ua/index.html,本站使用JsDelivr为静态资源提供CDN加速 %&#125;</span><br><span class="line">//如果是跨顺序省略可选参数，仍然需要写个逗号,用作分割</span><br><span class="line">&#123;% bdage Source,GitHub,GitHub||,https://github.com/ %&#125;</span><br></pre></td></tr></table></figure><p>3.拓展参数，支持shields的API的全部参数内容</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage Hosted,Vercel,Vercel||brightgreen,https://vercel.com/,本站采用双线部署，默认线路托管于Vercel||style=social&amp;logoWidth=20 %&#125;</span><br><span class="line">//如果是跨顺序省略可选参数组，仍然需要写双竖线||用作分割</span><br><span class="line">&#123;% bdage Hosted,Vercel,Vercel||||style=social&amp;logoWidth=20&amp;logoColor=violet %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.基本参数,定义徽标左右文字和图标</p><p><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Butterfly-Theme-orange?logo=&color=orange&link=&"></object><br><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Hexo-Frame-orange?logo=hexo&color=orange&link=&"></object></p><p>2.信息参数，定义徽标右侧内容背景色，指向链接</p><p><object class="ghbdage" style="margin-inline:5px" title="本站使用JsDelivr为静态资源提供CDN加速" standby="loading..." data="https://img.shields.io/badge/JsDelivr-CDN-orange?logo=jsDelivr&color=abcdef&link=https://metroui.org.ua/index.html&"></object><br>//如果是跨顺序省略可选参数，仍然需要写个逗号,用作分割<br><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/GitHub-Source-orange?logo=GitHub&color=orange&link=https://github.com/&"></object></p><p>3.拓展参数，支持shields的API的全部参数内容</p><p><object class="ghbdage" style="margin-inline:5px" title="本站采用双线部署，默认线路托管于Vercel" standby="loading..." data="https://img.shields.io/badge/Vercel-Hosted-orange?logo=Vercel&color=brightgreen&link=https://vercel.com/&style=social&logoWidth=20"></object><br>//如果是跨顺序省略可选参数组，仍然需要写双竖线||用作分割<br><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Vercel-Hosted-orange?logo=Vercel&color=orange&link=&style=social&logoWidth=20&logoColor=violet"></object></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-14-网站卡片-sites">2.14 网站卡片 sites</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% sitegroup %&#125;</span><br><span class="line">&#123;% site 标题, url=链接, screenshot=截图链接, avatar=头像链接（可选）, description=描述（可选） %&#125;</span><br><span class="line">&#123;% site 标题, url=链接, screenshot=截图链接, avatar=头像链接（可选）, description=描述（可选） %&#125;</span><br><span class="line">&#123;% endsitegroup %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% sitegroup %&#125;</span><br><span class="line">&#123;% site xaoxuu, url=https://xaoxuu.com, screenshot=https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg, avatar=https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/avatar/avatar.png, description=简约风格 %&#125;</span><br><span class="line">&#123;% site inkss, url=https://inkss.cn, screenshot=https://i.loli.net/2020/08/21/Vzbu3i8fXs6Nh5Y.jpg, avatar=https://cdn.jsdelivr.net/gh/inkss/common@master/static/web/avatar.jpg, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site MHuiG, url=https://blog.mhuig.top, screenshot=https://i.loli.net/2020/08/22/d24zpPlhLYWX6D1.png, avatar=https://cdn.jsdelivr.net/gh/MHuiG/imgbed@master/data/p.png, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site Colsrch, url=https://colsrch.top, screenshot=https://i.loli.net/2020/08/22/dFRWXm52OVu8qfK.png, avatar=https://cdn.jsdelivr.net/gh/Colsrch/images/Colsrch/avatar.jpg, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site Linhk1606, url=https://linhk1606.github.io, screenshot=https://i.loli.net/2020/08/21/3PmGLCKicnfow1x.png, avatar=https://i.loli.net/2020/02/09/PN7I5RJfFtA93r2.png, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% endsitegroup %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><div class="site-card-group"><a class="site-card" href="https://fomalhaut1998.com"><div class="img"><img src="https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/avatar/avatar.png"/><span class="title">fomalhaut1998</span><span class="desc">简约风格</span></div></a><a class="site-card" href="https://inkss.cn"><div class="img"><img src="https://i.loli.net/2020/08/21/Vzbu3i8fXs6Nh5Y.jpg"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/inkss/common@master/static/web/avatar.jpg"/><span class="title">inkss</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://blog.mhuig.top"><div class="img"><img src="https://i.loli.net/2020/08/22/d24zpPlhLYWX6D1.png"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed@master/data/p.png"/><span class="title">MHuiG</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://colsrch.top"><div class="img"><img src="https://i.loli.net/2020/08/22/dFRWXm52OVu8qfK.png"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/Colsrch/images/Colsrch/avatar.jpg"/><span class="title">Colsrch</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://linhk1606.github.io"><div class="img"><img src="https://i.loli.net/2020/08/21/3PmGLCKicnfow1x.png"/></div><div class="info"><img src="https://i.loli.net/2020/02/09/PN7I5RJfFtA93r2.png"/><span class="title">Linhk1606</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-15-行内图片-inlineimage">2.15 行内图片 inlineimage</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% inlineimage 图片链接, height=高度（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>高度</code>：height=20px</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">这是 &#123;% inlineimage https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/0000.gif %&#125; 一段话。</span><br><span class="line"></span><br><span class="line">这又是 &#123;% inlineimage https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/5150.gif, height=40px %&#125; 一段话。</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>这是 <img no-lazy class="inline" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/0000.gif" style="height:1.5em"/> 一段话。</p><p>这又是 <img no-lazy class="inline" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/5150.gif" style="height:40px;"/> 一段话。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-16-单张图片-image">2.16 单张图片 image</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image 链接, width=宽度（可选）, height=高度（可选）, alt=描述（可选）, bg=占位颜色（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li>图片宽度高度：width=300px, height=32px</li><li>图片描述：alt=图片描述（butterfly需要在主题配置文件中开启图片描述）</li><li>占位背景色：bg=#f2f2f2</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.添加描述：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, alt=每天下课回宿舍的路，没有什么故事。 %&#125;</span><br></pre></td></tr></table></figure><p>2.指定宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px %&#125;</span><br></pre></td></tr></table></figure><p>3.指定宽度并添加描述：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px, alt=每天下课回宿舍的路，没有什么故事。 %&#125;</span><br></pre></td></tr></table></figure><p>4.设置占位背景色：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px, bg=#1D0C04, alt=优化不同宽度浏览的观感 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.添加描述：</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="每天下课回宿舍的路，没有什么故事。"/></div><span class="image-caption">每天下课回宿舍的路，没有什么故事。</span></div>2..指定宽度<div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" style="width:400px;"/></div></div>3.指定宽度并添加描述：<div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="每天下课回宿舍的路，没有什么故事。" style="width:400px;"/></div><span class="image-caption">每天下课回宿舍的路，没有什么故事。</span></div>4.设置占位背景色：<div class="img-wrap"><div class="img-bg" style="background:#1D0C04"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="优化不同宽度浏览的观感" style="width:400px;"/></div><span class="image-caption">优化不同宽度浏览的观感</span></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-17-音频-audio">2.17 音频 audio</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% audio 音频链接 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% audio https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><div class="audio"><audio controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-18-视频-video">2.18 视频 video</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% video 视频链接 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>对齐方向</code>：left, center, right</li><li><code>列数</code>：逗号后面直接写列数，支持 1 ～ 4 列。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.100%宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br></pre></td></tr></table></figure><p>2.50%宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% videos, 2 %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% endvideos %&#125;</span><br></pre></td></tr></table></figure><p>3.25%宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% videos, 4 %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% endvideos %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.100%宽度</p><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div>2.50%宽度<div class="videos" col='2'><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div></div>3.25%宽度<div class="videos" col='4'><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-19-相册-gallery">2.19 相册 gallery</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><p>1.gallerygroup 相册图库</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>2.gallery 相册</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">markdown 圖片格式</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ul><li>gallerygroup 相册图库</li></ul><table><thead><tr><th>参数名</th><th>释义</th></tr></thead><tbody><tr><td>name</td><td>图库名字</td></tr><tr><td>description</td><td>图库描述</td></tr><tr><td>link</td><td>链接到对应相册的地址</td></tr><tr><td>img-url</td><td>图库封面</td></tr></tbody></table><ul><li><p>gallery 相册</p><p>区别于旧版的Gallery相册,新的Gallery相册会自动根据图片长度进行排版，书写也更加方便，与markdown格式一样。可根据需要插入到相应的md。无需再自己配置长宽。<strong>建议在粘贴时故意使用长短、大小、横竖不一的图片</strong>，会有更好的效果。（尺寸完全相同的图片只会平铺输出，效果很糟糕）</p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.gallerygroup 相册图库</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% galleryGroup MC 在Rikkaの六花服务器里留下的足迹 &#x27;/gallery/MC/&#x27; https://cdn.cbd.int/akilar-candyassets@1.0.36/image/1.jpg %&#125;</span><br><span class="line">&#123;% galleryGroup Gundam 哦咧哇gundam哒！ &#x27;/gallery/Gundam/&#x27; https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907110508327.png %&#125;</span><br><span class="line">&#123;% galleryGroup I-am-Akilar 某种意义上也算自拍吧 &#x27;/gallery/I-am-Akilar/&#x27; https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907113116651.png %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>2.gallery 相册</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg</span>)</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg</span>)</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.gallerygroup 相册图库</p><div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://cdn.cbd.int/akilar-candyassets@1.0.36/image/1.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">MC</div>  <p>在Rikkaの六花服务器里留下的足迹</p>  <a href='/gallery/MC/'></a>  </figcaption>  </figure>  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907110508327.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">Gundam</div>  <p>哦咧哇gundam哒！</p>  <a href='/gallery/Gundam/'></a>  </figcaption>  </figure>  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907113116651.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">I-am-Akilar</div>  <p>某种意义上也算自拍吧</p>  <a href='/gallery/I-am-Akilar/'></a>  </figcaption>  </figure></div>2.gallery 相册<div class="fj-gallery"><p><img src="https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg" alt=""></p>          </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-20-折叠框-folding">2.20 折叠框 folding</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><p>1.gallerygroup 相册图库</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding 参数（可选）, 标题 %&#125;</span><br><span class="line">![](<span class="link">https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg</span>)</span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure><!-- tab 参数配置 --><ol><li><p><code>颜色</code>：blue, cyan, green, yellow, red</p></li><li><p><code>状态</code>：状态填写 open 代表默认打开。</p></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding 查看图片测试 %&#125;</span><br><span class="line"></span><br><span class="line">![](<span class="link">https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg</span>)</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding cyan open, 查看默认打开的折叠框 %&#125;</span><br><span class="line"></span><br><span class="line">这是一个默认打开的折叠框。</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding green, 查看代码测试 %&#125;</span><br><span class="line">假装这里有代码块（代码块没法嵌套代码块）</span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding yellow, 查看列表测试 %&#125;</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> haha</span><br><span class="line"><span class="bullet">-</span> hehe</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding red, 查看嵌套测试 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding blue, 查看嵌套测试2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding 查看嵌套测试3 %&#125;</span><br><span class="line"></span><br><span class="line">hahaha <span class="language-xml"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png&#x27;</span> <span class="attr">style</span>=<span class="string">&#x27;height:24px&#x27;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><details class="folding-tag" ><summary> 查看图片测试 </summary>              <div class='content'>              <p><img src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg" alt=""></p>              </div>            </details><details class="folding-tag" cyan open><summary> 查看默认打开的折叠框 </summary>              <div class='content'>              <p>这是一个默认打开的折叠框。</p>              </div>            </details><details class="folding-tag" green><summary> 查看代码测试 </summary>              <div class='content'>              <p>假装这里有代码块（代码块没法嵌套代码块）</p>              </div>            </details><details class="folding-tag" yellow><summary> 查看列表测试 </summary>              <div class='content'>              <ul><li>haha</li><li>hehe</li></ul>              </div>            </details><details class="folding-tag" red><summary> 查看嵌套测试 </summary>              <div class='content'>              <details class="folding-tag" blue><summary> 查看嵌套测试2 </summary>              <div class='content'>              <details class="folding-tag" ><summary> 查看嵌套测试3 </summary>              <div class='content'>              <p>hahaha <span><img src='https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png' style='height:24px'></span></p>              </div>            </details>              </div>            </details>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-21-分栏-tab">2.21 分栏 tab</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs Unique name, [index] %&#125;</span><br><span class="line">&lt;!-- tab [Tab caption] [@icon] --&gt;</span><br><span class="line">Any content (support inline tags too).</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><p>Unique name :</p><ul><li><p>选项卡块标签的唯一名称，不带逗号。</p></li><li><p>将在#id中用作每个标签及其索引号的前缀。</p></li><li><p>如果名称中包含空格，则对于生成#id，所有空格将由破折号代替。</p></li><li><p>仅当前帖子/页面的URL必须是唯一的！</p></li></ul></li><li><p>[index]:</p><ul><li><p>活动选项卡的索引号。</p></li><li><p>如果未指定，将选择第一个标签（1）。</p></li><li><p>如果index为-1，则不会选择任何选项卡。</p></li><li><p>可选参数。</p></li></ul></li><li><p>[Tab caption]:</p><ul><li><p>当前选项卡的标题。</p></li><li><p>如果未指定标题，则带有制表符索引后缀的唯一名称将用作制表符的标题。</p></li><li><p>如果未指定标题，但指定了图标，则标题将为空。</p></li><li><p>可选参数。</p></li></ul></li><li><p>[@icon]:</p><ul><li><p>FontAwesome图标名称（全名，看起来像“ fas fa-font”）</p></li><li><p>可以指定带空格或不带空格；</p></li><li><p>例如’Tab caption @icon’ 和 ‘Tab caption@icon’.</p></li><li><p>可选参数。</p></li></ul></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.Demo 1 - 预设选择第一个【默认】</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>2.Demo 2 - 预设选择tabs</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test2, 3 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>3.Demo 3 - 没有预设值</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test3, -1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>4.Demo 4 - 自定义Tab名 + 只有icon + icon和Tab名</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test4 %&#125;</span><br><span class="line">&lt;!-- tab 第一个Tab --&gt;</span><br><span class="line"><span class="strong">**tab名字为第一个Tab**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab @fab fa-apple-pay --&gt;</span><br><span class="line"><span class="strong">**只有图标 没有Tab名字**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 炸弹@fas fa-bomb --&gt;</span><br><span class="line"><span class="strong">**名字+icon**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.Demo 1 - 预设选择第一个【默认】</p><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">test1 1</button></li><li class="tab"><button type="button" data-href="#test1-2">test1 2</button></li><li class="tab"><button type="button" data-href="#test1-3">test1 3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>2.Demo 2 - 预设选择tabs</p><div class="tabs" id="test2"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test2-1">test2 1</button></li><li class="tab"><button type="button" data-href="#test2-2">test2 2</button></li><li class="tab active"><button type="button" data-href="#test2-3">test2 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test2-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test2-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="test2-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>3.Demo 3 - 没有预设值</p><div class="tabs" id="test3"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test3-1">test3 1</button></li><li class="tab"><button type="button" data-href="#test3-2">test3 2</button></li><li class="tab"><button type="button" data-href="#test3-3">test3 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test3-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>4.Demo 4 - 自定义Tab名 + 只有icon + icon和Tab名</p><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">第一个Tab</button></li><li class="tab"><button type="button" data-href="#test4-2"><i class="fab fa-apple-pay" style="text-align: center;"></i></button></li><li class="tab"><button type="button" data-href="#test4-3"><i class="fas fa-bomb"></i>炸弹</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p><strong>tab名字为第一个Tab</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><p><strong>只有图标 没有Tab名字</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><p><strong>名字+icon</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-22-诗词标签-poem">2.22 诗词标签 poem</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><ol><li><code>title</code>：诗词标题</li><li><code>author</code>：作者，可以不写</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;% poem 水调歌头,苏轼 %&#125;</span><br><span class="line">丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。</span><br><span class="line">明月几时有？把酒问青天。</span><br><span class="line">不知天上宫阙，今夕是何年？</span><br><span class="line">我欲乘风归去，又恐琼楼玉宇，高处不胜寒。</span><br><span class="line">起舞弄清影，何似在人间？</span><br><span class="line"></span><br><span class="line">转朱阁，低绮户，照无眠。</span><br><span class="line">不应有恨，何事长向别时圆？</span><br><span class="line">人有悲欢离合，月有阴晴圆缺，此事古难全。</span><br><span class="line">但愿人长久，千里共婵娟。</span><br><span class="line">&#123;% endpoem %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><div class='poem'><div class='poem-title'>水调歌头</div><div class='poem-author'>苏轼</div><p>丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。<br>明月几时有？把酒问青天。<br>不知天上宫阙，今夕是何年？<br>我欲乘风归去，又恐琼楼玉宇，高处不胜寒。<br>起舞弄清影，何似在人间？</p><p>转朱阁，低绮户，照无眠。<br>不应有恨，何事长向别时圆？<br>人有悲欢离合，月有阴晴圆缺，此事古难全。<br>但愿人长久，千里共婵娟。</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-23-阿里图标-icon">2.23 阿里图标 icon</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% icon [icon-xxxx],[font-size] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>icon-xxxx</code>：表示图标<code>font-class</code>,可以在自己的阿里矢量图标库项目的<code>font-class</code>引用方案内查询并复制。</li><li><code>font-size</code>：表示图标大小，直接填写数字即可，单位为<code>em</code>。图标大小默认值为<code>1em</code>。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;% icon icon-rat<span class="emphasis">_zi %&#125;&#123;% icon icon-rat,2 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-ox_</span>chou,3 %&#125;&#123;% icon icon-ox,4 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-tiger<span class="emphasis">_yin,5 %&#125;&#123;% icon icon-tiger,6 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-rabbit_</span>mao,1 %&#125;&#123;% icon icon-rabbit,2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-dragon<span class="emphasis">_chen,3 %&#125;&#123;% icon icon-dragon,4 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-snake_</span>si,5 %&#125;&#123;% icon icon-snake,6 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-horse<span class="emphasis">_wu %&#125;&#123;% icon icon-horse,2 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-goat_</span>wei,3 %&#125;&#123;% icon icon-goat,4 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-monkey<span class="emphasis">_shen,5 %&#125;&#123;% icon icon-monkey,6 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-rooster_</span>you %&#125;&#123;% icon icon-rooster,2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-dog<span class="emphasis">_xu,3 %&#125;&#123;% icon icon-dog,4 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-boar_</span>hai,5 %&#125;&#123;% icon icon-boar,6 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rat_zi"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rat"></use></svg></p><p><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-ox_chou"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-ox"></use></svg></p><p><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-tiger_yin"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-tiger"></use></svg></p><p><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rabbit_mao"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rabbit"></use></svg></p><p><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-dragon_chen"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-dragon"></use></svg></p><p><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-snake_si"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-snake"></use></svg></p><p><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-horse_wu"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-horse"></use></svg></p><p><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-goat_wei"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-goat"></use></svg></p><p><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-monkey_shen"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-monkey"></use></svg></p><p><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rooster_you"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rooster"></use></svg></p><p><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-dog_xu"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-dog"></use></svg></p><p><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-boar_hai"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-boar"></use></svg></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-24-特效标签wow">2.24 特效标签wow</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow [animete],[duration],[delay],[offset],[iteration] %&#125;</span><br><span class="line">内容</span><br><span class="line">&#123;% endwow %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>animate</code>: 动画样式，效果详见<a href="https://animate.style/">animate.css参考文档</a></li><li><code>duration</code>: 选填项，动画持续时间，单位可以是<code>ms</code>也可以是<code>s</code>。例如<code>3s</code>，<code>700ms</code>。</li><li><code>delay</code>: 选填项，动画开始的延迟时间，单位可以是<code>ms</code>也可以是<code>s</code>。例如<code>3s</code>，<code>700ms</code>。</li><li><code>offset</code>: 选填项，开始动画的距离（相对浏览器底部）</li><li><code>iteration</code>: 选填项，动画重复的次数</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.flip动画效果。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__zoomIn,5s,5s,100,10 %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`zoomIn`动画效果，持续`5s`，延时`5s`，离底部`100`距离时启动，重复`10`次</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure><p>2.zoomIn动画效果，持续5s，延时5s，离底部100距离时启动，重复10次</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__zoomIn,5s,5s,100,10 %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`zoomIn`动画效果，持续`5s`，延时`5s`，离底部`100`距离时启动，重复`10`次</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure><p>3.slideInRight动画效果，持续5s，延时5s</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__slideInRight,5s,5s %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note orange &#x27;fas fa-car&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`slideInRight`动画效果，持续`5s`，延时`5s`。</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure><p>4.heartBeat动画效果，延时5s，重复10次。此处注意不用的参数位置要留空，用逗号间隔。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__heartBeat,,5s,,10 %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note red &#x27;fas fa-battery-half&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`heartBeat`动画效果，延时`5s`，重复`10`次。</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.flip动画效果。</p><div class='wow animate__zoomIn' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset='100'  data-wow-iteration='10' ><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p><code>zoomIn</code>动画效果，持续<code>5s</code>，延时<code>5s</code>，离底部<code>100</code>距离时启动，重复<code>10</code>次</p></div></div><p>2.zoomIn动画效果，持续5s，延时5s，离底部100距离时启动，重复10次</p><div class='wow animate__zoomIn' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset='100'  data-wow-iteration='10' ><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p><code>zoomIn</code>动画效果，持续<code>5s</code>，延时<code>5s</code>，离底部<code>100</code>距离时启动，重复<code>10</code>次</p></div></div><p>3.slideInRight动画效果，持续5s，延时5s</p><div class='wow animate__slideInRight' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset=''  data-wow-iteration='' ><div class="note orange icon-padding modern"><i class="note-icon fas fa-car"></i><p><code>slideInRight</code>动画效果，持续<code>5s</code>，延时<code>5s</code>。</p></div></div><p>4.heartBeat动画效果，延时5s，重复10次。此处注意不用的参数位置要留空，用逗号间隔。</p><div class='wow animate__heartBeat' data-wow-duration='' data-wow-delay='5s' data-wow-offset=''  data-wow-iteration='10' ><div class="note red icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p><code>heartBeat</code>动画效果，延时<code>5s</code>，重复<code>10</code>次。</p></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-25-进度条-progress">2.25  进度条 progress</h2><div class="note info flat"><p>进度条标签参考<a href="https://rongbuqiu.com/jdt.html">沂佰孜猫-给HEXO文章添加彩色进度条</a>。<br>源样式提取自<a href="https://zwying0814.gitbook.io/cuteen/">Cuteen</a>主题。</p></div><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-2">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% progress [width] [color] [text] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>width</code>: 0到100的阿拉伯数字</li><li><code>color</code>: 颜色，取值有red,yellow,green,cyan,blue,gray</li><li><code>text</code>:进度条上的文字内容</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% progress 10 red 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 30 yellow 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 50 green 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 70 cyan 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 90 blue 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 100 gray 进度条样式预览 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-red"  style="width: 10%" aria-valuenow="10" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-yellow"  style="width: 30%" aria-valuenow="30" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-green"  style="width: 50%" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-cyan"  style="width: 70%" aria-valuenow="70" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-blue"  style="width: 90%" aria-valuenow="90" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-gray"  style="width: 100%" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-26-注释-notation">2.26 注释 notation</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% nota [label] , [text] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><p><code>label</code>: 注释词汇</p></li><li><p><code>text</code>: 悬停显示的注解内容</p></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% nota 把鼠标移动到我上面试试 ,可以看到注解内容出现在顶栏 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p><span class='nota' data-nota='可以看到注解内容出现在顶栏'>把鼠标移动到我上面试试</span></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-27-气泡注释-bubble">2.27 气泡注释 bubble</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bubble [content] , [notation] ,[background-color] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>content</code>: 注释词汇</li><li><code>notation</code>: 悬停显示的注解内容</li><li><code>background-color</code>: 可选，气泡背景色。默认为“#71a4e3”</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">最近我学到了不少新玩意儿（虽然对很多大佬来说这些已经是旧技术了），比如CSS的&#123;% bubble 兄弟相邻选择器,&quot;例如 h1 + p &#123;margin-top:50px;&#125;&quot; %&#125;，&#123;% bubble flex布局,&quot;Flex 是 Flexible Box 的缩写，意为&quot;弹性布局&quot;，用来为盒状模型提供最大的灵活性&quot;,&quot;#ec5830&quot; %&#125;，&#123;% bubble transform变换,&quot;transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。&quot;,&quot;#1db675&quot; %&#125;，animation的&#123;% bubble 贝塞尔速度曲线,&quot;贝塞尔曲线(Bézier curve)，又称贝兹曲线或贝济埃曲线，是应用于二维图形应用程序的数学曲线。一般的矢量图形软件通过它来精确画出曲线，贝兹曲线由线段与节点组成，节点是可拖动的支点，线段像可伸缩的皮筋&quot;,&quot;#de4489&quot; %&#125;写法，还有今天刚看到的&#123;% bubble clip-path,&quot;clip-path属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。&quot;,&quot;#868fd7&quot; %&#125;属性。这些对我来说很新颖的概念狠狠的冲击着我以前积累起来的设计思路。</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>最近我学到了不少新玩意儿（虽然对很多大佬来说这些已经是旧技术了），比如CSS的<span class="bubble-content">兄弟相邻选择器</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#71a4e3;">例如 h1 + p {margin-top:50px;}</span></span>，<span class="bubble-content">flex布局</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#ec5830;">Flex 是 Flexible Box 的缩写，意为弹性布局&quot;，用来为盒状模型提供最大的灵活性&quot;</span></span>，<span class="bubble-content">transform变换</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#1db675;">transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。</span></span>，animation的<span class="bubble-content">贝塞尔速度曲线</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#de4489;">贝塞尔曲线(Bézier curve)，又称贝兹曲线或贝济埃曲线，是应用于二维图形应用程序的数学曲线。一般的矢量图形软件通过它来精确画出曲线，贝兹曲线由线段与节点组成，节点是可拖动的支点，线段像可伸缩的皮筋</span></span>写法，还有今天刚看到的<span class="bubble-content">clip-path</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#868fd7;">clip-path属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。</span></span>属性。这些对我来说很新颖的概念狠狠的冲击着我以前积累起来的设计思路。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-28-引用文献-reference">2.28 引用文献 reference</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% referto [id] , [literature] %&#125;</span><br><span class="line">&#123;% referfrom [id] , [literature] , [url] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><p>referto 引用上标</p><ul><li><p><code>id</code>: 上标序号内容，需与referfrom标签的id对应才能实现跳转</p></li><li><p><code>literature</code>: 引用的参考文献名称</p></li></ul></li><li><p>referfrom 引用出处</p><ul><li><p><code>id</code>: 序号内容，需与referto标签的id对应才能实现 跳转</p></li><li><p><code>literature</code>: 引用的参考文献名称</p></li><li><p><code>url</code>: 引用的参考文献链接，可省略</p></li></ul></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Akilarの糖果屋(akilar.top)是一个私人性质的博客&#123;% referto &#x27;[1]&#x27;,&#x27;Akilarの糖果屋群聊简介&#x27; %&#125;，从各类教程至生活点滴，无话不谈。建群的目的是提供一个闲聊的场所。博客采用Hexo框架&#123;% referto &#x27;[2]&#x27;,&#x27;Hexo中文文档&#x27; %&#125;，Butterfly主题&#123;% referto &#x27;[3]&#x27;,&#x27;Butterfly 安装文档(一) 快速开始&#x27; %&#125;</span><br><span class="line"></span><br><span class="line">本项目参考了Volantis&#123;% referto &#x27;[4]&#x27;,&#x27;hexo-theme-volantis 标签插件&#x27; %&#125;的标签样式。引入<span class="code">`[tag].js`</span>，并针对<span class="code">`butterfly`</span>主题修改了相应的<span class="code">`[tag].styl`</span>。在此鸣谢<span class="code">`Volantis`</span>主题众开发者。</span><br><span class="line">主要参考内容包括各个volantis的内置标签插件文档&#123;% referto &#x27;[5]&#x27;,&#x27;Volantis文档:内置标签插件&#x27; %&#125;</span><br><span class="line">Butterfly主题的各个衍生魔改&#123;% referto &#x27;[6]&#x27;,&#x27;Butterfly 安装文档:标签外挂（Tag Plugins&#x27; %&#125;&#123;% referto &#x27;[7]&#x27;,&#x27;小弋の生活馆全样式预览&#x27; %&#125;&#123;% referto &#x27;[8]&#x27;,&#x27;l-lin-font-awesome-animation&#x27; %&#125;&#123;% referto &#x27;[9]&#x27;,&#x27;小康的butterfly主题使用文档&#x27; %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% referfrom &#x27;[1]&#x27;,&#x27;Akilarの糖果屋群聊简介&#x27;,&#x27;https://jq.qq.com/?<span class="emphasis">_wv=1027&amp;k=pGLB2C0N&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[2]&#x27;,&#x27;Hexo中文文档&#x27;,&#x27;https://hexo.io/zh-cn/docs/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[3]&#x27;,&#x27;Butterfly 安装文档(一) 快速开始&#x27;,&#x27;https://butterfly.js.org/posts/21cfbf15/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[4]&#x27;,&#x27;hexo-theme-volantis 标签插件&#x27;,&#x27;https://volantis.js.org/v5/tag-plugins/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[5]&#x27;,&#x27;Volantis文档:内置标签插件&#x27;,&#x27;https://volantis.js.org/tag-plugins/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[6]&#x27;,&#x27;Butterfly 安装文档:标签外挂（Tag Plugins&#x27;,&#x27;https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[7]&#x27;,&#x27;小弋の生活馆全样式预览&#x27;,&#x27;https://lovelijunyi.gitee.io/posts/c898.html&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[8]&#x27;,&#x27;l-lin-font-awesome-animation&#x27;,&#x27;https://github.com/l-lin/font-awesome-animation&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[9]&#x27;,&#x27;小康的butterfly主题使用文档&#x27;,&#x27;https://www.antmoe.com/posts/3b43914f/&#x27; %&#125;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>Akilarの糖果屋(akilar.top)是一个私人性质的博客<span class="hidden-anchor" id="referto_[1]"></span><sup class="reference"><a href="#referfrom_[1]">[1]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Akilarの糖果屋群聊简介</span><span class="reference-title">参考资料</span></span></span>，从各类教程至生活点滴，无话不谈。建群的目的是提供一个闲聊的场所。博客采用Hexo框架<span class="hidden-anchor" id="referto_[2]"></span><sup class="reference"><a href="#referfrom_[2]">[2]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Hexo中文文档</span><span class="reference-title">参考资料</span></span></span>，Butterfly主题<span class="hidden-anchor" id="referto_[3]"></span><sup class="reference"><a href="#referfrom_[3]">[3]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Butterfly 安装文档(一) 快速开始</span><span class="reference-title">参考资料</span></span></span></p><p>本项目参考了Volantis<span class="hidden-anchor" id="referto_[4]"></span><sup class="reference"><a href="#referfrom_[4]">[4]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">hexo-theme-volantis 标签插件</span><span class="reference-title">参考资料</span></span></span>的标签样式。引入<code>[tag].js</code>，并针对<code>butterfly</code>主题修改了相应的<code>[tag].styl</code>。在此鸣谢<code>Volantis</code>主题众开发者。<br>主要参考内容包括各个volantis的内置标签插件文档<span class="hidden-anchor" id="referto_[5]"></span><sup class="reference"><a href="#referfrom_[5]">[5]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Volantis文档:内置标签插件</span><span class="reference-title">参考资料</span></span></span><br>Butterfly主题的各个衍生魔改<span class="hidden-anchor" id="referto_[6]"></span><sup class="reference"><a href="#referfrom_[6]">[6]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Butterfly 安装文档:标签外挂（Tag Plugins</span><span class="reference-title">参考资料</span></span></span><span class="hidden-anchor" id="referto_[7]"></span><sup class="reference"><a href="#referfrom_[7]">[7]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">小弋の生活馆全样式预览</span><span class="reference-title">参考资料</span></span></span><span class="hidden-anchor" id="referto_[8]"></span><sup class="reference"><a href="#referfrom_[8]">[8]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">l-lin-font-awesome-animation</span><span class="reference-title">参考资料</span></span></span><span class="hidden-anchor" id="referto_[9]"></span><sup class="reference"><a href="#referfrom_[9]">[9]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">小康的butterfly主题使用文档</span><span class="reference-title">参考资料</span></span></span></p><div class="reference-source"><span class="hidden-anchor" id="referfrom_[1]"></span><a class="reference-anchor" href="#referto_[1]">[1]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://jq.qq.com/?_wv=1027&k=pGLB2C0N">Akilarの糖果屋群聊简介</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[2]"></span><a class="reference-anchor" href="#referto_[2]">[2]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://hexo.io/zh-cn/docs/">Hexo中文文档</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[3]"></span><a class="reference-anchor" href="#referto_[3]">[3]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://butterfly.js.org/posts/21cfbf15/">Butterfly 安装文档(一) 快速开始</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[4]"></span><a class="reference-anchor" href="#referto_[4]">[4]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://volantis.js.org/v5/tag-plugins/">hexo-theme-volantis 标签插件</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[5]"></span><a class="reference-anchor" href="#referto_[5]">[5]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://volantis.js.org/tag-plugins/">Volantis文档:内置标签插件</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[6]"></span><a class="reference-anchor" href="#referto_[6]">[6]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89">Butterfly 安装文档:标签外挂（Tag Plugins</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[7]"></span><a class="reference-anchor" href="#referto_[7]">[7]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://lovelijunyi.gitee.io/posts/c898.html">小弋の生活馆全样式预览</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[8]"></span><a class="reference-anchor" href="#referto_[8]">[8]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://github.com/l-lin/font-awesome-animation">l-lin-font-awesome-animation</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[9]"></span><a class="reference-anchor" href="#referto_[9]">[9]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://www.antmoe.com/posts/3b43914f/">小康的butterfly主题使用文档</a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-29-PDF展示">2.29 PDF展示</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% pdf 文件路径 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>文件路径</code>: 可以是相对路径或者是在线链接</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 1.本地文件:在md文件路径下创建一个同名文件夹，其内放pdf文件名为xxx.pdf的文件</span></span><br><span class="line">&#123;% pdf xxx.pdf %&#125;</span><br><span class="line"><span class="section"># 2.在线链接</span></span><br><span class="line">&#123;% pdf https://cdn.jsdelivr.net/gh/Justlovesmile/CDN/pdf/小作文讲义.pdf %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>2.在线链接(要放到最外层才能起作用)</p><pre><code>&lt;div class=&quot;row&quot;&gt;&lt;embed src=&quot;https://cdn.jsdelivr.net/gh/Justlovesmile/CDN/pdf/小作文讲义.pdf&quot; width=&quot;100%&quot; height=&quot;550&quot; type=&quot;application/pdf&quot;&gt;&lt;/div&gt;</code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-30-Hexo-tag-map-插件">2.30 Hexo-tag-map 插件</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% + 标签值 + 经度 + 纬度 + 文本 + 缩放等级 + 宽 + 高 + 默认图层 + %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><table><thead><tr><th style="text-align:center">地图名</th><th style="text-align:center">标签值 &lt;必填&gt;</th><th style="text-align:center">宽 (默认 100%) / 高 (默认 360px)</th><th style="text-align:center">缩放等级 (默认 14)</th><th style="text-align:center">宽 (默认 100%) / 高 (默认 360px)</th><th style="text-align:center">默认图层 (默认 1)</th></tr></thead><tbody><tr><td style="text-align:center">混合地图</td><td style="text-align:center">map</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 3~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~7</td></tr><tr><td style="text-align:center">谷歌地图</td><td style="text-align:center">googleMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~20</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~3</td></tr><tr><td style="text-align:center">高德地图</td><td style="text-align:center">gaodeMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 3~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~3</td></tr><tr><td style="text-align:center">百度地图</td><td style="text-align:center">baiduMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 4~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~2</td></tr><tr><td style="text-align:center">Geoq 地图</td><td style="text-align:center">geoqMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~5</td></tr><tr><td style="text-align:center">openstreet 地图</td><td style="text-align:center">openstreetMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">不支持此参数</td></tr></tbody></table><ol><li>参数之间，用英文逗号相隔</li><li>参数必须按上述事例顺序输入，不得为空</li><li>同一个页面，同一组经纬度值，只能插入一个相同标签值的地图 (若有需要，可以将第二个地图上，经度或纬度末尾删除一两个数)</li><li>参数取值必须在上述范围内</li><li>默认图层：即地图叠加层的值，默认常规地图还是卫星地图，可按地图显示顺序取值</li><li>缩放等级，数字越大，地图比例尺越小，显示的越精细</li><li>除标签值外，其他参数选填，但 每个参数的左边的参数必填</li><li>谷歌地图需要外网才能加载查看</li></ol><p>坐标获取：<a href="https://lbs.amap.com/tools/picker">高德地图坐标拾取系统</a> 、<a href="https://api.map.baidu.com/lbsapi/getpoint/index.html">百度地图坐标拾取系统</a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% map 120.101101,30.239119 %&#125;</span><br><span class="line">&#123;% googleMap 120.101101,30.239119, 这里是西湖灵隐寺，据说求姻缘很灵验哦！ %&#125;</span><br><span class="line">&#123;% geoqMap 120.101101,30.239119, 这里是西湖灵隐寺，据说求姻缘很灵验哦！, 13, 90%, 320px, 3 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><link rel="stylesheet" href="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.css"><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.js"></script><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet.ChineseTmsProviders@1.0.4.js"></script><div class="map-box" style="margin: 0.8rem 0 1.6rem 0;"><div id="map-120.101101-30.239119" style="max-width:100%; height:360px;display: block;margin:0 auto;z-index:1;border-radius: 5px;"></div></div><script type="text/javascript">var normalm=L.tileLayer.chinaProvider('GaoDe.Normal.Map',{maxZoom:20,minZoom:1,attribution:'高德地图'});var imgm=L.tileLayer.chinaProvider('GaoDe.Satellite.Map',{maxZoom:20,minZoom:1,attribution:'高德地图'});var imga=L.tileLayer.chinaProvider('GaoDe.Satellite.Annotion',{maxZoom:20,minZoom:1,attribution:'高德地图'});var normalMap=L.tileLayer.chinaProvider('Google.Normal.Map',{maxZoom:20,minZoom:1,attribution:'Google Maps'}),satelliteMap=L.tileLayer.chinaProvider('Google.Satellite.Map',{maxZoom:21,minZoom:1,attribution:'Google Maps'});routeMap=L.tileLayer.chinaProvider('Google.Satellite.Annotion',{maxZoom:21,minZoom:1});var normalMap=L.tileLayer.chinaProvider('Google.Normal.Map',{maxZoom:21,minZoom:1,attribution:'Google Maps'}),satelliteMap=L.tileLayer.chinaProvider('Google.Satellite.Map',{maxZoom:21,minZoom:1,attribution:'Google Maps'}),routeMap=L.tileLayer.chinaProvider('Google.Satellite.Annotion',{maxZoom:21,minZoom:1,attribution:'Google Maps'});var normalm1=L.tileLayer.chinaProvider('Geoq.Normal.Map',{maxZoom:21,minZoom:1,attribution:'GeoQ'});var normal=L.layerGroup([normalm]),image=L.layerGroup([imgm,imga]);var baseLayers={"高德地图":normal,"智图地图":normalm1,"谷歌地图":normalMap,"高德卫星地图":imgm,"谷歌卫星地图":satelliteMap,"高德卫星标注":image,"谷歌卫星标注":routeMap};var mymap=L.map('map-120.101101-30.239119',{center:[30.239119,120.101101],zoom:14,layers:[normal],zoomControl:false});L.control.layers(baseLayers,null).addTo(mymap);L.control.zoom({zoomInTitle:'放大',zoomOutTitle:'缩小'}).addTo(mymap);</script><br><link rel="stylesheet" href="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.css"><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.js"></script><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet.ChineseTmsProviders@1.0.4.js"></script><div id="googleMap-120.101101-30.239119" style="max-width:100%; height:360px;display: block;margin:0 auto;z-index:1;border-radius: 5px;"></div><script type="text/javascript">var normalMap=L.tileLayer.chinaProvider('Google.Normal.Map',{maxZoom:22,minZoom:1,attribution:'Google Maps'}),satelliteMap=L.tileLayer.chinaProvider('Google.Satellite.Map',{maxZoom:22,minZoom:1,attribution:'Google Maps'}),routeMap=L.tileLayer.chinaProvider('Google.Satellite.Annotion',{maxZoom:22,minZoom:1,attribution:'Google Maps'});var baseLayers={"谷歌地图":normalMap,"谷歌卫星图":satelliteMap,"谷歌卫星标注": routeMap};var overlayLayers={};var mymap=L.map("googleMap-120.101101-30.239119",{center:[30.239119,120.101101],zoom:14,layers:[normalMap],zoomControl:false});L.control.layers(baseLayers,null).addTo(mymap);L.control.zoom({zoomInTitle:'放大',zoomOutTitle:'缩小'}).addTo(mymap);var marker = L.marker(['30.239119','120.101101']).addTo(mymap);marker.bindPopup("这里是西湖灵隐寺，据说求姻缘很灵验哦！").openPopup();</script><br><link rel="stylesheet" href="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.css"><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.js"></script><script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet.ChineseTmsProviders@1.0.4.js"></script><div id="geoqMap-120.101101-30.239119" style="max-width:90%; height:320px;display: block;margin:0 auto;z-index:1;border-radius: 5px;"></div><script type="text/javascript">var normalm1=L.tileLayer.chinaProvider('Geoq.Normal.Map',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm2=L.tileLayer.chinaProvider('Geoq.Normal.PurplishBlue',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm3=L.tileLayer.chinaProvider('Geoq.Normal.Gray',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm4=L.tileLayer.chinaProvider('Geoq.Normal.Warm',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm5=L.tileLayer.chinaProvider('Geoq.Theme.Hydro',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normal=L.layerGroup([normalm1,normalm2,normalm3,normalm4,normalm5]);var baseLayers={"智图地图":normalm1,"午夜蓝":normalm2,"灰色":normalm3,"暖色":normalm4,"水系":normalm5};var mymap=L.map("geoqMap-120.101101-30.239119",{center:[30.239119,120.101101],zoom:13,layers:[normalm3],zoomControl:false});L.control.layers(baseLayers,null).addTo(mymap);L.control.zoom({zoomInTitle:'放大',zoomOutTitle:'缩小'}).addTo(mymap);var marker = L.marker(['30.239119','120.101101']).addTo(mymap);marker.bindPopup("这里是西湖灵隐寺，据说求姻缘很灵验哦！").openPopup();</script><br><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-31-隐藏块">2.31 隐藏块</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideBlock display,bg,color %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li>content：要隐藏的内容</li><li>display：展示前按钮显示的文字（可选）</li><li>bg：按钮的背景颜色（可选）</li><li>color：按钮显示的文字的颜色（可选）</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideBlock 点我预览, blue %&#125;</span><br><span class="line">这里有张图片：</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://s1.vika.cn/space/2022/10/30/b35fce448bc9404a8d65c3ce1e6e46eb&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;image (1)&quot;</span> <span class="attr">style</span>=<span class="string">&quot;zoom:67%;&quot;</span> /&gt;</span></span></span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class="hide-block"><button type="button" class="hide-button" style="background-color:  blue;">点我预览    </button><div class="hide-content"><p>这里有张图片：<br><img src="https://s1.vika.cn/space/2022/10/30/b35fce448bc9404a8d65c3ce1e6e46eb" alt="image (1)" style="zoom:67%;" /></p></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      <categories>
          
          <category> 演示 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
            <tag> 外挂标签 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
